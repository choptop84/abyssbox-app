{"version":3,"names":["TypePresets","sampleLoadingState","constructor","this","statusTable","urlTable","totalSamples","samplesLoaded","SampleLoadedEvent","Event","samplesFailed","super","SampleLoadEvents","EventTarget","sampleLoadEvents","startLoadingSample","url","chipWaveIndex","presetSettings","rawLoopOptions","customSampleRate","sampleLoaderAudioContext","AudioContext","sampleRate","closedSampleLoaderAudioContext","chipWave","Config","chipWaves","rawChipWave","rawChipWaves","rawRawChipWave","rawRawChipWaves","fetch","then","response","ok","arrayBuffer","Promise","reject","Error","decodeAudioData","audioBuffer","samples","centerWave","Array","from","getChannelData","integratedSamples","performIntegral","length","dispatchEvent","close","catch","error","console","loadScript","resolve","willReloadForCustomSamples","script","document","createElement","src","head","appendChild","addEventListener","event","loadBuiltInSamples","set","defaultIntegratedSamples","defaultSamples","name","expression","isSampled","isPercussion","extraSampleDetune","startIndex","index","integratedChipWave","dictionary","chipWaveSamples","kicksample","snaresample","pianosample","WOWsample","overdrivesample","trumpetsample","saxophonesample","orchhitsample","detatchedviolinsample","synthsample","sonic3snaresample","comeonsample","choirsample","overdrivensample","flutesample","legatoviolinsample","tremoloviolinsample","amenbreaksample","pizzicatoviolinsample","timallengruntsample","tubasample","loopingcymbalsample","kickdrumsample","snaredrumsample","closedhihatsample","foothihatsample","openhihatsample","crashsample","pianoC4sample","liverpadsample","marimbasample","susdotwavsample","wackyboxttssample","peppersteak1","peppersteak2","vinyl","slapbass","hdeboverdrive","sunsoftbass","masculinechoir","femininechoir","southtololoche","harp","panflute","krumhorn","timpani","crowdhey","warioland4brass","warioland4organ","warioland4daow","warioland4hourchime","warioland4tick","kirbykick","kirbysnare","kirbybongo","kirbyclick","funkkick","funksnare","funksnareleft","funksnareright","funktomhigh","funktomlow","funkhihatclosed","funkhihathalfopen","funkhihatopen","funkhihatopentip","funkhihatfoot","funkcrash","funkcrashtip","funkride","chipWaveIndexOffset","chipWaveSample","chronoperc1finalsample","synthkickfmsample","woodclicksample","acousticsnaresample","catpaintboxsample","gameboypaintboxsample","mariopaintboxsample","drumpaintboxsample","yoshipaintboxsample","starpaintboxsample","fireflowerpaintboxsample","dogpaintbox","oinkpaintbox","swanpaintboxsample","facepaintboxsample","log","wave","sum","i","average","push","Float32Array","centerAndNormalizeWave","magn","Math","abs","magnAvg","cumulative","newWave","getPulseWidthRatio","pulseWidth","getDrumWave","inverseRealFourierTransform","scaleElementsByFactor","chipNoises","chipNoiseLength","drumBuffer","newBuffer","random","drawNoiseSpectrum","sqrt","round","ultraboxnewchipnoiserand","pow","clz32","b3","b4","b5","b6","b0","b1","b2","white","lastOut","waveLength","lowOctave","highOctave","lowPower","highPower","overallSlope","lowIndex","highIndex","min","retroWave","combinedAmplitude","lerped","log2","amplitude","radians","PI","cos","sin","generateSquareWave","phaseWidth","sineWaveLength","centerPoint","generateSawWave","inverse","getArpeggioPitchIndex","pitchCount","useFastTwoNoteArp","arpeggio","arpeggioPattern","arpeggioPatterns","toNameMap","array","value","result","effectsIncludeTransition","effects","effectsIncludeChord","effectsIncludePitchShift","effectsIncludeDetune","effectsIncludeVibrato","effectsIncludeNoteFilter","effectsIncludeDistortion","effectsIncludeBitcrusher","effectsIncludePanning","effectsIncludeChorus","effectsIncludeEcho","effectsIncludeReverb","effectsIncludeRM","effectsIncludePhaser","effectsIncludeNoteRange","effectsIncludeInvertWave","thresholdVal","kneeVal","ratioVal","attackVal","releaseVal","jsonFormat","scales","realName","flags","keys","isWhiteKey","basePitch","blackKeyNameParents","tempoMin","tempoMax","octaveMin","octaveMax","echoDelayRange","echoDelayStepTicks","echoSustainRange","echoShelfHz","echoShelfGain","reverbShelfHz","reverbShelfGain","reverbRange","reverbDelayBufferSize","reverbDelayBufferMask","phaserMixRange","phaserFeedbackRange","phaserFreqRange","phaserMinFreq","phaserMaxFreq","phaserMinStages","phaserMaxStages","beatsPerBarMin","beatsPerBarMax","barCountMin","barCountMax","instrumentCountMin","layeredInstrumentCountMax","patternInstrumentCountMax","partsPerBeat","ticksPerPart","ticksPerArpeggio","rhythms","stepsPerBeat","roundUpThresholds","instrumentTypeNames","instrumentTypeHasSpecialInterval","chipBaseExpression","fmBaseExpression","noiseBaseExpression","spectrumBaseExpression","drumsetBaseExpression","harmonicsBaseExpression","pwmBaseExpression","supersawBaseExpression","pickedStringBaseExpression","distortionBaseVolume","bitcrusherBaseVolume","raw","newArray","Object","assign","key","rawChipToIntegrated","firstIndexForSamplesInChipWaveList","pitchFilterMult","isSoft","filterFreqStep","filterFreqRange","filterFreqReferenceSetting","filterFreqReferenceHz","filterFreqMaxHz","filterFreqMinHz","filterGainRange","filterGainCenter","filterGainStep","filterMaxPoints","filterTypeNames","filterMorphCount","filterSimpleCutRange","filterSimplePeakRange","fadeInRange","fadeOutTicks","fadeOutNeutral","drumsetFadeOutTicks","transitions","isSeamless","continues","slides","slideTicks","includeAdjacentPatterns","vibratos","type","delayTicks","vibratoTypes","periodsSeconds","period","arpSpeedScale","unisons","voices","spread","offset","sign","effectNames","effectOrder","noteSizeMax","volumeRange","volumeLogScale","panCenter","panMax","panDelaySecondsMax","chorusRange","ringModRange","ringModHzRange","rmHzOffsetCenter","rmHzOffsetMax","rmHzOffsetMin","chorusPeriodSeconds","chorusDelayRange","chorusDelayOffsets","chorusPhaseOffsets","chorusMaxDelay","concat","reduce","x","y","max","chords","customInterval","arpeggiates","strumParts","singleTone","maxChordSize","operatorCount","maxPitchOrOperatorCount","algorithms","carrierCount","associatedCarrier","modulatedBy","algorithms6Op","operatorCarrierInterval","operatorAmplitudeMax","operatorFrequencies","mult","hzOffset","amplitudeSign","envelopes","speed","feedbacks","indices","feedbacks6Op","spectrumNoiseLength","spectrumBasePitch","spectrumControlPoints","spectrumControlPointsPerOctave","spectrumControlPointBits","spectrumMax","harmonicsControlPoints","harmonicsRendered","harmonicsRenderedForPickedString","harmonicsControlPointBits","harmonicsMax","harmonicsWavelength","pulseWidthRange","pulseWidthStepPower","supersawVoiceCount","supersawDynamismMax","supersawSpreadMax","supersawShapeMax","pitchChannelCountMin","pitchChannelCountMax","noiseChannelCountMin","noiseChannelCountMax","modChannelCountMin","modChannelCountMax","noiseInterval","pitchesPerOctave","drumCount","pitchOctaves","modCount","maxPitch","maximumTonesPerChannel","justIntonationSemitones","map","pitchShiftRange","pitchShiftCenter","detuneCenter","detuneMax","detuneMin","songDetuneMin","songDetuneMax","unisonVoicesMin","unisonVoicesMax","unisonSpreadMin","unisonSpreadMax","unisonOffsetMin","unisonOffsetMax","unisonExpressionMin","unisonExpressionMax","unisonSignMin","unisonSignMax","sineWaveMask","sineWave","generateSineWave","perEnvelopeSpeedIndices","perEnvelopeSpeedToIndices","perEnvelopeBoundMin","perEnvelopeBoundMax","randomEnvelopeSeedMax","randomEnvelopeStepsMax","pickedStringDispersionCenterFreq","pickedStringDispersionFreqScale","pickedStringDispersionFreqMult","pickedStringShelfHz","distortionRange","stringSustainRange","stringDecayRate","enableAcousticSustain","sustainTypeNames","bitcrusherFreqRange","bitcrusherOctaveStep","bitcrusherQuantizationRange","maxEnvelopeCount","defaultAutomationRange","instrumentAutomationTargets","computeIndex","displayName","interleave","isFilter","maxCount","effect","compatibleInstruments","operatorWaves","asin","generateTriWave","drive","generateTrapezoidWave","generateQuasiSineWave","pwmOperatorWaves","barEditorHeight","modulators","pianoName","maxRawVol","newNoteVol","forSong","convertRealFactor","associatedEffect","promptName","promptDesc","ceil","invertSliderIndicator","applyElementArgs","element","args","args_1","__values","args_1_1","next","done","arg","Node","createTextNode","isArray","Symbol","iterator","__spread","Element","_d","e_2","_e","setAttribute","join","warn","tagName","_f","e_3","_g","styleKey","style","setProperty","removeAttribute","svgNS","HTML","_i","arguments","createRange","createContextualFragment","SVG","fragment","createDocumentFragment","svgParser","DOMParser","parseFromString","documentElement","firstChild","importNode","name_1","_c","split","name_2","createElementNS","test","snakeCaseName","replace","ColorConfig","resetColors","colorLookup","clear","getArbitaryChannelColor","channel","usesColorFormula","base","getComputed","noiseChannels","Number","modChannels","pitchChannels","regex","secondaryChannel","exec","primaryChannel","secondaryNote","primaryNote","noiseSecondaryChannelHue","getComputedStyle","_styleElement","getPropertyValue","noiseSecondaryChannelHueScale","noiseSecondaryChannelSat","noiseSecondaryChannelSatScale","noiseSecondaryChannelLum","noiseSecondaryChannelLumScale","noisePrimaryChannelHue","noisePrimaryChannelHueScale","noisePrimaryChannelSat","noisePrimaryChannelSatScale","noisePrimaryChannelLum","noisePrimaryChannelLumScale","noiseSecondaryNoteHue","noiseSecondaryNoteHueScale","noiseSecondaryNoteSat","noiseSecondaryNoteSatScale","noiseSecondaryNoteLum","noiseSecondaryNoteLumScale","noisePrimaryNoteHue","noisePrimaryNoteHueScale","noisePrimaryNoteSat","noisePrimaryNoteSatScale","noisePrimaryNoteLum","noisePrimaryNoteLumScale","newChannelColors","modSecondaryChannelHue","modSecondaryChannelHueScale","modSecondaryChannelSat","modSecondaryChannelSatScale","modSecondaryChannelLum","modSecondaryChannelLumScale","modPrimaryChannelHue","modPrimaryChannelHueScale","modPrimaryChannelSat","modPrimaryChannelSatScale","modPrimaryChannelLum","modPrimaryChannelLumScale","modSecondaryNoteHue","modSecondaryNoteHueScale","modSecondaryNoteSat","modSecondaryNoteSatScale","modSecondaryNoteLum","modSecondaryNoteLumScale","modPrimaryNoteHue","modPrimaryNoteHueScale","modPrimaryNoteSat","modPrimaryNoteSatScale","modPrimaryNoteLum","modPrimaryNoteLumScale","pitchSecondaryChannelHue","pitchSecondaryChannelHueScale","pitchSecondaryChannelSat","pitchSecondaryChannelSatScale","pitchSecondaryChannelLum","pitchSecondaryChannelLumScale","pitchPrimaryChannelHue","pitchPrimaryChannelHueScale","pitchPrimaryChannelSat","pitchPrimaryChannelSatScale","pitchPrimaryChannelLum","pitchPrimaryChannelLumScale","pitchSecondaryNoteHue","pitchSecondaryNoteHueScale","pitchSecondaryNoteSat","pitchSecondaryNoteSatScale","pitchSecondaryNoteLum","pitchSecondaryNoteLumScale","pitchPrimaryNoteHue","pitchPrimaryNoteHueScale","pitchPrimaryNoteSat","pitchPrimaryNoteSatScale","pitchPrimaryNoteLum","pitchPrimaryNoteLumScale","floor","getComputedChannelColor","song","getChannelColor","has","get","pitchChannelCount","c_pitchSecondaryChannelHue","c_pitchSecondaryChannelHueScale","c_pitchSecondaryChannelSat","c_pitchSecondaryChannelSatScale","c_pitchSecondaryChannelLum","c_pitchSecondaryChannelLumScale","c_pitchPrimaryChannelHue","c_pitchPrimaryChannelHueScale","c_pitchPrimaryChannelSat","c_pitchPrimaryChannelSatScale","c_pitchPrimaryChannelLum","c_pitchPrimaryChannelLumScale","c_pitchSecondaryNoteHue","c_pitchSecondaryNoteHueScale","c_pitchSecondaryNoteSat","c_pitchSecondaryNoteSatScale","c_pitchSecondaryNoteLum","c_pitchSecondaryNoteLumScale","c_pitchPrimaryNoteHue","c_pitchPrimaryNoteHueScale","c_pitchPrimaryNoteSat","c_pitchPrimaryNoteSatScale","c_pitchPrimaryNoteLum","c_pitchPrimaryNoteLumScale","noiseChannelCount","c_noiseSecondaryChannelHue","c_noiseSecondaryChannelHueScale","c_noiseSecondaryChannelSat","c_noiseSecondaryChannelSatScale","c_noiseSecondaryChannelLum","c_noiseSecondaryChannelLumScale","c_noisePrimaryChannelHue","c_noisePrimaryChannelHueScale","c_noisePrimaryChannelSat","c_noisePrimaryChannelSatScale","c_noisePrimaryChannelLum","c_noisePrimaryChannelLumScale","c_noiseSecondaryNoteHue","c_noiseSecondaryNoteHueScale","c_noiseSecondaryNoteSat","c_noiseSecondaryNoteSatScale","c_noiseSecondaryNoteLum","c_noiseSecondaryNoteLumScale","c_noisePrimaryNoteHue","c_noisePrimaryNoteHueScale","c_noisePrimaryNoteSat","c_noisePrimaryNoteSatScale","c_noisePrimaryNoteLum","c_noisePrimaryNoteLumScale","c_modSecondaryChannelHue","c_modSecondaryChannelHueScale","c_modSecondaryChannelSat","c_modSecondaryChannelSatScale","c_modSecondaryChannelLum","c_modSecondaryChannelLumScale","c_modPrimaryChannelHue","c_modPrimaryChannelHueScale","c_modPrimaryChannelSat","c_modPrimaryChannelSatScale","c_modPrimaryChannelLum","c_modPrimaryChannelLumScale","c_modSecondaryNoteHue","c_modSecondaryNoteHueScale","c_modSecondaryNoteSat","c_modSecondaryNoteSatScale","c_modSecondaryNoteLum","c_modSecondaryNoteLumScale","c_modPrimaryNoteHue","c_modPrimaryNoteHueScale","c_modPrimaryNoteSat","c_modPrimaryNoteSatScale","c_modPrimaryNoteLum","c_modPrimaryNoteLumScale","setThemeProperty","_a","sheet","cssRules","getThemeProperties","cssText","getFullTheme","textContent","setTheme","theme","themes","undefined","currentSetTheme","themeColor","querySelector","trim","usesPianoScheme","c_invertedText","c_trackEditorBgNoiseDim","c_trackEditorBgNoise","c_trackEditorBgModDim","c_trackEditorBgMod","c_trackEditorBgPitchDim","c_trackEditorBgPitch","Map","Skeuomorphic","woodland","Glyde","AWeebyssBox","Scratch","Undertale","Slushie","forest","canyon","midnight","beachcombing","roe","moonlight","autumn","fruit","sunset","toxic","portal","fusion","nebula","energized","neapolitan","mono","blutonium","zefbox","harrybox","brucebox","shitbox4","nerdbox","nepbox","fogbox","foxbox","wackybox","microbox","paandorasbox","midbox","dogebox2","WeebBox","Protanopia","Tritanopia","Deuteranopia","custom","localStorage","getItem","pageMargin","editorBackground","hoverPreview","playhead","primaryText","secondaryText","invertedText","textSelection","boxSelectionFill","loopAccent","sampleFailed","linkAccent","uiWidgetBackground","uiWidgetFocus","pitchBackground","tonic","fifthNote","thirdNote","dimmedArea","pitch1Background","pitch2Background","pitch3Background","pitch5Background","pitch6Background","pitch8Background","pitch9Background","pitch10Background","pitch11Background","whitePianoKey","blackPianoKey","whitePianoKeyText","blackPianoKeyText","songPlayerMargin","progressBar","useColorFormula","trackEditorBgPitch","trackEditorBgPitchDim","trackEditorBgNoise","trackEditorBgNoiseDim","trackEditorBgMod","trackEditorBgModDim","multiplicativeModSlider","overwritingModSlider","indicatorPrimary","indicatorSecondary","select2OptGroup","inputBoxOutline","muteButtonNormal","muteButtonMod","modLabelPrimary","modLabelSecondaryText","modLabelPrimaryText","disabledNotePrimary","disabledNoteSecondary","scrollbarColor","scrollbarBackground","navigator","userAgent","EditorConfig","valueToPreset","presetValue","categoryIndex","presetIndex","presetCategories","presets","midiProgramToPresetValue","program","category","preset","generalMidi","midiProgram","nameToPresetValue","presetName","instrumentToPreset","instrument","factor","countBits","n","isPowerOf2","fullArrayLength","totalPasses","pass","subStride","midSubStride","stride","radiansIncrement","cosIncrement","sinIncrement","oscillatorMultiplier","startIndexA","midIndexA","startIndexB","midIndexB","stopIndex","realStartA","imagStartB","c","s","cPrev","sPrev","indexA0","indexA1","indexB0","indexB1","real0","real1","imag0","imag1","tempA","tempB","cTemp","sTemp","index1","index2","index3","imag2","imag3","bitCount","finalShift","j","temp","reverseIndexBits","version","versionDisplayName","releaseNotesURL","isOnMac","platform","ctrlSymbol","ctrlName","showSongDetailsAlert","customType","settings","eqFilter","transition","fadeInSeconds","chord","unison","cutoffHz","linearGain","vibrato","isNoise","filterCutoffHz","filterResonance","filterEnvelope","algorithm","feedbackType","feedbackAmplitude","operators","frequency","target","envelope","customChipWave","feedbackEnvelope","eqFilterType","eqSimpleCut","eqSimplePeak","noteFilterType","noteSimpleCut","noteSimplePeak","noteFilter","panDelay","reverb","harmonics","stringSustain","midiSubharmonicOctaves","interval","bitcrusherOctave","bitcrusherQuantization","distortion","dynamism","shape","envelopeSpeed","discreteEnvelope","eqSubFilters0","noteSubFilters0","chorus","spectrum","pulseEnvelope","drums","pitchShiftSemitones","clicklessTransition","fastTwoNoteArp","arpeggioSpeed","vibratoDepth","vibratoDelay","vibratoSpeed","vibratoType","echoSustain","echoDelayBeats","isUsingAdvancedLoopControls","chipWaveLoopStart","chipWaveLoopEnd","chipWaveLoopMode","chipWavePlayBackwards","chipWaveStartOffset","aliases","waveform","customChipWaveIntegral","unisonVoices","unisonSpread","unisonOffset","unisonExpression","unisonSign","detuneCents","noteSubFilters1","eqSubFilters1","decimalOffset","volume","pan","customAlgorithm","mods","customFeedback","phaserMix","phaserFreq","phaserFeedback","phaserStages","ringMod","ringModHz","rmWaveformIndex","rmPulseWidth","Deque","_capacity","_buffer","_mask","_offset","_count","pushFront","_expandCapacity","pushBack","popFront","popBack","peakFront","peakBack","count","remove","oldBuffer","size","events","activeEvents","listeners","raise","eventType","eventData","extraEventData","pop","listen","callback","unlisten","lisen","indexOf","splice","unlistenAll","FilterCoefficients","a","b","order","linearGain0thOrder","lowPass1stOrderButterworth","cornerRadiansPerSample","g","tan","a0","lowPass1stOrderSimplified","highPass1stOrderButterworth","highShelf1stOrder","shelfLinearGain","sqrtGain","allPass1stOrderInvertPhaseAbove","allPass1stOrderFractionalDelay","delay","lowPass2ndOrderButterworth","peakLinearGain","alpha","lowPass2ndOrderSimplified","feedback","highPass2ndOrderButterworth","highShelf2ndOrder","slope","A","Aplus","Aminus","sqrtA2Alpha","peak2ndOrder","bandWidthScale","bandWidth","FrequencyResponse","real","imag","denom","analyze","filter","radiansPerSample","analyzeComplex","realZ1","imagZ1","realNum","imagNum","realDenom","imagDenom","realZ","imagZ","imagTemp","magnitude","angle","atan2","DynamicBiquadFilter","a1","a2","a1Delta","a2Delta","b0Delta","b1Delta","b2Delta","output1","output2","useMultiplicativeInputCoefficients","resetOutput","loadCoefficientsWithGradient","start","end","deltaRate","warpInfinityToNyquist","atan","epsilon","clamp","val","validateRange","parseFloatWithDefault","defaultValue","parseFloat","isNaN","parseIntWithDefault","parseInt","encode32BitNumber","buffer","base64IntToCharCode","decode32BitNumber","compressed","charIndex","base64CharCodeToInt","charCodeAt","encodeUnisonSettings","v","o","e","cleanS","cleanSDivided","cleanO","cleanODivided","cleanE","cleanI","convertLegacyKeyToKeyAndOctave","rawKeyIndex","octave","BitFieldReader","source","_bits","_readIndex","read","readLongTail","minValue","minBits","numBits","readPartDuration","readLegacyPartDuration","readPinCount","readPitchInterval","BitFieldWriter","_index","write","writeLongTail","writePartDuration","writePinCount","writePitchInterval","other","encodeBase64","lengthBase64","makeNotePin","time","Note","pitch","fadeout","pitches","pins","continuesLastPattern","pickMainInterval","longestFlatIntervalDuration","mainInterval","pinIndex","pinA","pinB","duration","loudestSize","pin","clone","newNote","getEndPinIndex","part","endPinIndex","Pattern","notes","instruments","cloneNotes","note","reset","toJsonObject","isModChannel","noteArray","mod","volumeCap","getVolumeCapForSetting","modFilterTypes","pointArray","useVol","tick","rhythm","pitchBend","forMod","noteObject","points","patternObject","patternInstruments","fromJsonObject","importedPartsPerBeat","isNoiseChannel","format","toLowerCase","instrumentCount","getMaxInstrumentsPerPatternForChannel","maxNoteCount","beatsPerBar","k","startInterval","pointObject","lowestPitch","highestPitch","oldMin","newMin","old","Operator","copy","CustomAlgorithm","fromPreset","carriers","modulation","CustomFeedBack","inIndices","SpectrumWave","hash","isHarmonic","markCustomWaveDirty","hashMult","Synth","fittingPowerOfTwo","point","SpectrumWaveState","_hash","getCustomWave","lowestOctave","pitchTweak","controlPointToOctave","value1","value2","octave1","octave2","HarmonicsWave","HarmonicsWaveState","instrumentType","_generatedForType","combinedControlPointAmplitude","harmonicIndex","harmonicFreq","controlValue","normalizedValue","performIntegralOld","FilterControlPoint","freq","gain","freqSetting","gainSetting","getHz","getHzFromSettingValue","getSettingValueFromHz","hz","getRoundedSettingValueFromHz","getLinearGain","peakMult","power","neutral","interpolatedPower","getRoundedSettingValueFromLinearGain","toCoefficients","freqMult","getVolumeCompensationMult","gainPow","freqRelativeTo8khz","warpedFreq","warpedOctave","distanceFromCenter","freqLoudness","FilterSettings","controlPoints","controlPointCount","addPoint","controlPoint","filterArray","filterObject","filtersCanMorph","filterA","filterB","lerpFilters","pos","lerpedFilter","convertLegacySettings","legacyCutoffSetting","legacyResonanceSetting","legacyEnv","legacyFilterMaxRadians","legacyFilterMax","resonant","firstOrder","cutoffAtMax","legacyFilterCutoffRange","envDecays","standardSampleRate","legacyHz","legacyRadians","extraOctaves","targetRadians","curvedHz","finalHz","finalRadians","legacyFilter","legacyFilterGainAtNewRadians","logGain","convertedGain","intendedGain","invertedGain","curvedRadians","legacyFilterGain","convertLegacySettingsForSynth","allowFirstOrder","EnvelopeSettings","envelopeObject","Instrument","chipNoise","eqFilterSimpleCut","eqFilterSimplePeak","noteFilterSimpleCut","noteFilterSimplePeak","eqSubFilters","noteSubFilters","fadeIn","fadeOut","envelopeCount","pitchShift","detune","unisonBuzzes","legacyTieOver","supersawDynamism","supersawSpread","supersawShape","stringSustainType","ringModulation","ringModulationHz","rmHzOffset","bitcrusherFreq","echoDelay","invertWave","algorithm6Op","feedbackType6Op","customFeedbackType","harmonicsWave","drumsetEnvelopes","drumsetSpectrumWaves","modInstruments","invalidModulators","upperNoteLimit","lowerNoteLimit","spectrumWave","wavePrev","setTypeAndReset","legacySettings","forceSimpleFilter","filterCutoff","legacyFilterEnv","legacyPulseEnv","legacyOperatorEnvelopes","operatorEnvelopes","legacyFeedbackEnv","noCarriersControlledByNoteSize","allCarriersControlledByNoteSize","noteSizeControlsSomethingElse","addEnvelope","instrumentObject","getChord","detuneToCents","fadeInSettingToSeconds","fadeOutSettingToTicks","getDrumsetEnvelope","operatorArray","operator","Float64Array","useSlowerRhythm","legacyGlobalReverb","legacyEffectsNames","transitionProperty","binary","seamless","sudden","hard","smooth","soft","slide","secondsToFadeInSetting","ticksToFadeOutSetting","chordProperty","legacyChordNames","harmony","unisonProperty","legacyChorusNames","union","fifths","octaves","potentialPitchShift","centsToDetune","vibratoProperty","legacyVibratoNames","findIndex","legacyEnvelopeNames","steady","getEnvelope","drum","legacyWaveNames","triangle","square","sawtooth","spiky","plateau","modboxWaveNames","sax","guitar","viola","brass","lyre","piccolo","squaretooth","flatline","sandboxWaveNames","euphonium","recorder","contrabass","zefboxWaveNames","squaretal","sawtal","pulse","miscWaveNames","test1","intense","paandorasboxWaveNames","kick","snare","piano1","WOW","overdrive","trumpet","saxophone","orchestrahit","synth","sonic3snare","choir","overdriveguitar","flute","tuba","loopingcymbal","standardkick","standardsnare","closedhihat","foothihat","openhihat","crashcymbal","pianoC4","marimba","susdotwav","wackyboxtts","rawName","table","potentialChipWaveIndex","feedback6Op","synthboxLegacyFeedbacks","synthboxFeedbackType","operatorObject","filterCutoffMaxHz","filterCutoffRange","filterResonanceRange","LN2","legacyToCutoff","legacyToEnvelope","filterNames","oldFilterNames","envelopeArray","tempEnvelope","getLargestControlPointCount","forNoteFilter","largest","frequencyFromPitch","makeEmpty","supportsEnvelopeTarget","envelopeSettings","automationTarget","useControlPointCount","clearInvalidEnvelopeTargets","envelopeIndex","getTransition","getFadeInSeconds","getFadeOutTicks","Channel","patterns","bars","muted","Song","string","scaleCustom","loopType","channels","limitDecay","limitRise","compressionThreshold","limitThreshold","compressionRatio","limitRatio","masterGain","inVolumeCap","outVolumeCap","getNewNoteVolume","isMod","modChannel","modInstrument","vol","tempoIndex","tempo","getVolumeCap","modulator","cap","modSetting","filterType","fromBase64String","initToDefault","getChannelCount","modChannelCount","getMaxInstrumentsPerChannel","layeredInstruments","getMaxInstrumentsPerPattern","channelIndex","getChannelIsNoise","getChannelIsMod","andResetChannels","scale","loopStart","loopLength","barCount","patternsPerChannel","title","author","description","showSongDetails","setSongTheme","pattern","bar","toBase64String","bits","_variant","_latestAbyssBoxVersion","encodedSongTitle","encodeURIComponent","encodedAuthorTitle","encodedDescriptionTitle","encodedSongTheme","encodedChannelName","usingSubFilterBitfield","harmonicsBits","encodedLoopMode","encodedReleaseMode","spectrumBits","neededBits","shapeBits","bitsPerNoteSize","getNeededBits","maxInstrumentsPerPattern","neededInstrumentCountBits","neededInstrumentIndexBits","neededModInstrumentIndexBits","instrumentIndex","modFilter","status","octaveOffset","lastPitch","recentPitches","recentShapes","curPart","shapePart","startPitch","currentPitch","pitchBends","nextPitch","shapeString","String","fromCharCode","apply","shapeIndex","unshift","allPitches","pitchIndex","pitchIter","stringLength","digits","prototype","maxApplyArgs","customSamplesStr","customSamples","slice","_envelopeFromLegacyIndex","legacyIndex","_clearSamples","JSON","parse","substring","variantTest","fromBeepBox","fromJummBox","fromGoldBox","fromUltraBox","fromAbyssBox","_latestBeepboxVersion","_oldestBeepboxVersion","_latestJummBoxVersion","_oldestJummBoxVersion","_latestGoldBoxVersion","_oldestGoldBoxVersion","_latestUltraBoxVersion","_oldestUltraBoxVersion","_oldestAbyssBoxVersion","beforeTwo","beforeThree","beforeFour","beforeFive","beforeSix","beforeSeven","beforeEight","beforeNine","willLoadLegacySamplesForOldSongs","compressed_array","replaceAll","shift","_restoreChipWaveListToDefault","willLoadLegacySamples","willLoadNintariboxSamples","willLoadMarioPaintboxSamples","customSampleUrls","customSamplePresets","parseOldSyntax","_parseAndConfigureCustomSample","customSamplePresetsMap","legacySettingsCache","command","instrumentChannelIterator","instrumentIndexIterator","useSlowerArpSpeed","songNameLength","decodeURIComponent","songAuthorLength","songDescriptionLength","songThemeLength","channelCount","instrumentsPerChannel","instrumentsFlagBits","newRhythm","legacyWaves","chipWaveReal","chipWaveCounter","typeCheck","originalControlPointCount","originalSubfilterControlPointCount","sampleLoopInfoEncodedLength","sampleLoopInfoEncoded","sampleLoopInfo","atob","entry","info","Boolean","URL","pregoldToEnvelope","aa","sustainValue","legacyEffects","legacyEnvelopes","originalValue","unisonSpreadNegative","unisonOffsetNegative","unisonExpressionNegative","unisonSignNegative","nextValue","restoreLimiterDefaults","channelNameLength","carrierCountTemp","tempModArray","chipWaveForCompat","freqToGold3","freqToUltraBox","jummToUltraEnvelope","envTypeIndex","pre3To3g","jummToG","byteCount","subStringLength","bitStringLength","largerChords","recentPitchBitLength","recentPitchLength","bitStringLengthLength","songReverbChannel","songReverbInstrument","songReverbIndex","shouldCorrectTempoMods","jummboxTempoMin","jumfive","detuneScaleNotes","newPattern","newNotes","noteCount","useOldShape","pinCount","initialSize","bendCount","pinObj","intervalIter","noteIsForTempoMod","tempoOffset","isBackwards","restLength","patternIndex","lowestPart","chn","window","location","setTimeout","reload","_isProperUrl","customSampleUrlIndex","urlSliced","isCustomPercussive","customRootKey","presetIsUsingAdvancedLoopControls","presetChipWaveLoopStart","presetChipWaveLoopEnd","presetChipWaveStartOffset","presetChipWaveLoopMode","presetChipWavePlayBackwards","parsedSampleOptions","optionsStartIndex","optionsEndIndex","rawOptions","rawOption","optionCode","charAt","optionData","parsedUrl","alert","sliceForSampleRate","sliceForRootKey","urlWithNamedOptions","namedOptions","pathname","isCustomSampled","rootKey","customSamplePresetSettings","customSamplePreset","enableIntro","loopCount","enableOutro","channelArray","instrumentArray","patternArray","sequenceArray","l","channelObject","sequence","_format","customScale","keyOctave","introBars","loopBars","ticksPerBeat","beatsPerMinute","jsonObject","shouldLoadLegacySamples","instrumentObjects","waveName","names","oldNames","veryOldNames","includes","oldScaleNames","enigma","scaleName","letter","toUpperCase","symbol","C","D","E","F","G","B","maxInstruments","maxPatterns","maxBars","newPitchChannels","newNoiseChannels","newModChannels","getPattern","getBeatsPerMinute","maxValue","PickedString","delayLine","allPassG","allPassGDelta","sustainFilterA1","sustainFilterA1Delta","sustainFilterA2","sustainFilterA2Delta","sustainFilterB0","sustainFilterB0Delta","sustainFilterB1","sustainFilterB1Delta","sustainFilterB2","sustainFilterB2Delta","delayIndex","allPassSample","allPassPrevInput","sustainFilterSample","sustainFilterPrevOutput2","sustainFilterPrevInput1","sustainFilterPrevInput2","fractionalDelaySample","prevDelayLength","delayResetOffset","update","instrumentState","tone","stringIndex","roundedSamplesPerTick","stringDecayStart","stringDecayEnd","sustainType","allPassCenter","samplesPerSecond","phaseDeltaStart","phaseDeltas","phaseDeltaScale","phaseDeltaScales","phaseDeltaEnd","radiansPerSampleStart","radiansPerSampleEnd","centerHarmonicStart","centerHarmonicEnd","allPassRadiansStart","allPassRadiansEnd","shelfRadians","decayCurveStart","decayCurveEnd","register","registerShelfCenter","registerLowpassCenter","decayRateStart","decayRateEnd","expressionDecayStart","expressionDecayEnd","tempFilterStartCoefficients","tempFrequencyResponse","allPassGStart","allPassPhaseDelayStart","tempFilterEndCoefficients","allPassGEnd","allPassPhaseDelayEnd","brightnessType","shelfGainStart","shelfGainEnd","cornerHardness","lowpass1stOrderCutoffRadiansStart","lowpass1stOrderCutoffRadiansEnd","lowpass2ndOrderCutoffRadiansStart","lowpass2ndOrderCutoffRadiansEnd","lowpass2ndOrderGainStart","lowpass2ndOrderGainEnd","sustainFilterA1Start","sustainFilterA2Start","sustainFilterB0Start","sustainFilterB1Start","sustainFilterB2Start","sustainFilterPhaseDelayStart","sustainFilterA1End","sustainFilterA2End","sustainFilterB0End","sustainFilterB1End","sustainFilterB2End","sustainFilterPhaseDelayEnd","periodLengthStart","periodLengthEnd","minBufferLength","delayLength","delayLengthEnd","delayLengthDelta","pitchChanged","reinitializeImpulse","likelyMaximumLength","newDelayLine","oldDelayBufferMask","startCopyingFromIndex","delayBufferMask","startImpulseFrom","startZerosFrom","stopZerosAt","impulseWave","impulseWaveLength","impulsePhaseDelta","fadeDuration","startImpulseFromSample","stopImpulseAt","stopImpulseAtSample","impulsePhase","prevWaveIntegral","impulsePhaseInt","nextWaveIntegral","phaseRatio","sample","combinedFade","curvedFade","EnvelopeComputer","noteSecondsStart","noteSecondsStartUnscaled","noteSecondsEnd","noteSecondsEndUnscaled","noteTicksStart","noteTicksEnd","noteSizeStart","noteSizeEnd","prevNoteSize","nextNoteSize","_noteSizeFinal","prevNoteSecondsStart","prevNoteSecondsStartUnscaled","prevNoteSecondsEnd","prevNoteSecondsEndUnscaled","prevNoteTicksStart","prevNoteTicksEnd","_prevNoteSizeFinal","prevSlideStart","prevSlideEnd","nextSlideStart","nextSlideEnd","prevSlideRatioStart","prevSlideRatioEnd","nextSlideRatioStart","nextSlideRatioEnd","envelopeStarts","envelopeEnds","_modifiedEnvelopeIndices","_modifiedEnvelopeCount","lowpassCutoffDecayVolumeCompensation","computeEnvelopes","currentPart","tickTimeStart","tickTimeStartReal","secondsPerTick","timeScale","secondsPerTickUnscaled","atNoteStart","forceContinueAtStart","tickTimeEnd","tickTimeEndReal","beatsPerTick","beatTimeStart","beatTimeEnd","passedEndOfNote","startPin","endPin","startPinTick","endPinTick","ratioStart","ratioEnd","noteStartTick","noteStartPart","noteEndTick","noteEndPart","maximumSlideTicks","prevNote","nextNote","forceContinueAtEnd","usedNoteSize","targetIndex","envelopeStart","computeEnvelope","envelopeEnd","filterSettings","tmpNoteFilterStart","getLowpassCutoffDecayVolumeCompensation","clearEnvelopes","beats","noteSize","noteSizeToVolumeMult","attack","lin","Tone","fill","chordSize","drumsetPitch","prevNotePitchIndex","nextNotePitchIndex","freshlyAllocated","isOnLastTick","ticksSinceReleased","liveInputSamplesHeld","lastInterval","noiseSample","noiseSampleA","noiseSampleB","stringSustainStart","stringSustainEnd","phases","directions","chipWaveCompletions","chipWavePrevWaves","chipWaveCompletionsLastWave","expressionDelta","operatorExpressions","operatorExpressionDeltas","prevPitchExpressions","prevVibrato","prevStringDecay","pulseWidthDelta","supersawDynamismDelta","supersawUnisonDetunes","supersawShapeDelta","supersawDelayLength","supersawDelayLengthDelta","supersawDelayLine","supersawDelayIndex","supersawPrevPhaseDelta","pickedStrings","noteFilters","noteFilterCount","initialNoteFilterInput1","initialNoteFilterInput2","specialIntervalExpressionMult","feedbackOutputs","feedbackMult","feedbackDelta","stereoVolumeLStart","stereoVolumeRStart","stereoVolumeLDelta","stereoVolumeRDelta","stereoDelayStart","stereoDelayEnd","stereoDelayDelta","customVolumeStart","customVolumeEnd","filterResonanceStart","filterResonanceDelta","isFirstOrder","envelopeComputer","pickedString","InstrumentState","awake","computed","tonesAddedInThisTick","flushingDelayLines","deactivateAfterThisTick","attentuationProgress","flushedSamples","activeTones","activeModTones","releasedTones","liveInputTones","synthesizer","noisePitchFilterMult","volumeScale","arpTime","vibratoTime","nextVibratoTime","envelopeTime","eqFilterVolume","eqFilterVolumeDelta","mixVolume","mixVolumeDelta","delayInputMult","delayInputMultDelta","distortionDelta","distortionDrive","distortionDriveDelta","distortionFractionalInput1","distortionFractionalInput2","distortionFractionalInput3","distortionPrevInput","distortionNextOutput","bitcrusherPrevInput","bitcrusherCurrentOutput","bitcrusherPhase","bitcrusherPhaseDelta","bitcrusherPhaseDeltaScale","bitcrusherScale","bitcrusherScaleScale","bitcrusherFoldLevel","bitcrusherFoldLevelScale","eqFilters","eqFilterCount","initialEqFilterInput1","initialEqFilterInput2","panningDelayLine","panningDelayPos","panningVolumeL","panningVolumeR","panningVolumeDeltaL","panningVolumeDeltaR","panningOffsetL","panningOffsetR","panningOffsetDeltaL","panningOffsetDeltaR","chorusDelayLineL","chorusDelayLineR","chorusDelayLineDirty","chorusDelayPos","chorusPhase","chorusVoiceMult","chorusVoiceMultDelta","chorusCombinedMult","chorusCombinedMultDelta","ringModMix","ringModMixDelta","ringModPhase","ringModPhaseDelta","ringModPhaseDeltaScale","echoDelayLineL","echoDelayLineR","echoDelayLineDirty","echoDelayPos","echoDelayOffsetStart","echoDelayOffsetEnd","echoDelayOffsetRatio","echoDelayOffsetRatioDelta","echoMult","echoMultDelta","echoShelfA1","echoShelfB0","echoShelfB1","echoShelfSampleL","echoShelfSampleR","echoShelfPrevInputL","echoShelfPrevInputR","reverbDelayLine","reverbDelayLineDirty","reverbDelayPos","reverbMult","reverbMultDelta","reverbShelfA1","reverbShelfB0","reverbShelfB1","reverbShelfSample0","reverbShelfSample1","reverbShelfSample2","reverbShelfSample3","reverbShelfPrevInput0","reverbShelfPrevInput1","reverbShelfPrevInput2","reverbShelfPrevInput3","phaserSamples","phaserPrevInputs","phaserFeedbackMult","phaserFeedbackMultDelta","phaserMixDelta","phaserBreakCoef","phaserBreakCoefDelta","phaserStagesDelta","allocateNecessaryBuffers","samplesPerTick","panningDelayBufferSize","chorusDelayBufferSize","safeEchoDelaySteps","safeEchoDelayBufferSize","newDelayLineL","newDelayLineR","oldMask","deactivate","resetAllEffects","compute","getInstrumentSynthFunction","isModActive","getModValue","updateWaves","getTicksIntoBar","getCurrentPart","useEnvelopeSpeed","isInteger","usesDistortion","usesBitcrusher","usesPanning","usesChorus","usesEcho","usesReverb","usesRingModulation","usesPhaser","useDistortionStart","useDistortionEnd","useDistortionEnvelopeStart","useDistortionEnvelopeEnd","distortionSliderStart","distortionSliderEnd","distortionStart","distortionEnd","distortionDriveStart","distortionDriveEnd","freqSettingStart","freqSettingEnd","freqSettingEnvelopeStart","freqSettingEnvelopeEnd","quantizationSettingStart","quantizationSettingEnd","quantizationSettingEnvelopeStart","quantizationSettingEnvelopeEnd","freqStart","freqEnd","scaleStart","scaleEnd","foldLevelStart","foldLevelEnd","eqFilterSettingsStart","eqFilterSettingsEnd","startPoint","startSimpleFreq","startSimpleGain","endSimpleFreq","endSimpleGain","filterChanges","endPoint","eqFilterSettings","tmpEqFilterStart","tmpEqFilterEnd","mainInstrumentVolume","instrumentVolumeToVolumeMult","mixVolumeEnd","startVal","endVal","eqFilterVolumeStart","eqFilterVolumeEnd","delayInputMultStart","delayInputMultEnd","panEnvelopeStart","panEnvelopeEnd","usePanStart","usePanEnd","panStart","panEnd","volumeStartL","volumeStartR","volumeEndL","volumeEndR","maxDelaySamples","usePanDelayStart","usePanDelayEnd","delayStart","delayEnd","delayStartL","delayStartR","delayEndL","delayEndR","chorusEnvelopeStart","chorusEnvelopeEnd","useChorusStart","useChorusEnd","chorusStart","chorusEnd","chorusCombinedMultStart","chorusCombinedMultEnd","useRingModStart","useRingModEnd","useRingModEnvelopeStart","useRingModEnvelopeEnd","useRingModHzStart","useRingModHzEnd","useRingModHzEnvelopeStart","useRingModHzEnvelopeEnd","ringModMinHz","ringModMaxHz","ringModStart","ringModEnd","ringModPhaseDeltaStart","ringModPhaseDeltaEnd","maxEchoMult","averageEchoDelaySeconds","echoSustainEnvelopeStart","echoSustainEnvelopeEnd","useEchoSustainStart","useEchoSustainEnd","echoMultStart","echoMultEnd","useEchoDelayStart","useEchoDelayEnd","ignoreTicks","tmpEchoDelayOffsetStart","tmpEchoDelayOffsetEnd","maxReverbMult","phaserMinFeedback","phaserMaxFeedback","phaserFeedbackMultSlider","phaserFeedbackMultRawStart","phaserFeedbackMultRawEnd","phaserFeedbackMultStart","phaserFeedbackMultEnd","phaserMixSlider","phaserMixStart","phaserMixEnd","phaserBreakFreqSlider","phaserBreakFreqRawStart","phaserBreakFreqRawEnd","phaserBreakFreqRemappedStart","phaserBreakFreqRemappedEnd","phaserBreakFreqStart","phaserBreakFreqStartT","phaserBreakCoefStart","phaserBreakFreqEnd","phaserBreakFreqEndT","phaserBreakCoefEnd","phaserStagesEnvelopeStart","phaserStagesEnvelopeEnd","phaserStagesSlider","phaserStagesStart","phaserStagesEnd","reverbEnvelopeStart","reverbEnvelopeEnd","useReverbStart","useReverbEnd","reverbStart","reverbEnd","totalDelaySamples","attenuationThreshold","halfLifeMult","delayDuration","attenuationPerSecond","averageMult","averageReverbDelaySeconds","progressInTick","progressAtEndOfTick","_drumsetIndexToSpectrumOctave","getDrumsetWave","drumsetIndexReferenceDelta","ChannelState","singleSeamlessInstrument","syncSongState","channelState","initModFilters","tmpNoteFilterEnd","warmUpSynthesizer","getSamplesPerTick","dummyArray","isPlayingSong","synthesize","computeLatestModValues","latestModTimes","latestModInsTimes","modValues","nextModValues","modInsValues","nextModInsValues","heldMods","beat","currentBar","instrumentIdx","latestPinParts","latestPinValues","partsInBar","findPartsInBar","pinIdx","transitionLength","toNextBarLength","deltaVolume","setModValue","usedInstruments","tgtPattern","eqFilterParam","noteFilterParam","modulatorAdjust","tgtInstrument","determineInvalidModulators","tgtInstrumentList","str","operatorAmplitudeCurve","playing","recording","isRecording","playheadInternal","remainder","tickSampleCountdown","isAtStartOfTick","prevBar","getSamplesPerBar","getTotalSamples","loop","startBar","endBar","hasTempoMods","hasNextBarMods","prevTempo","latestTempoPin","latestTempoValue","ended","foundMod","find","sort","getSamplesPerTickSpecificBPM","tickLength","prevPinTempo","currPinTempo","bpmScalar","getTotalBars","useLoopCount","loopRepeatCount","preferLowerLatency","anticipatePoorPerformance","liveInputDuration","liveBassInputDuration","liveInputStarted","liveBassInputStarted","liveInputPitches","liveBassInputPitches","liveInputChannel","liveBassInputChannel","liveInputInstruments","liveBassInputInstruments","oscRefreshEventTimer","oscEnabled","enableMetronome","countInMetronome","renderingSong","wantToSkip","nextBar","isAtEndOfTick","liveInputEndTime","browserAutomaticallyClearsAudioBuffer","tempDrumSetControlPoint","loopBarStart","loopBarEnd","tonePool","tempMatchedPitchTones","startedMetronome","metronomeSamplesRemaining","metronomeAmplitude","metronomePrevAmplitude","metronomeFilter","limit","tempMonoInstrumentSampleBuffer","audioCtx","scriptNode","audioProcessCallback","audioProcessingEvent","outputBuffer","outputDataL","outputDataR","performance","now","deactivateAudio","computeDelayBufferSizes","setSong","panningDelayBufferMask","chorusDelayBufferMask","activateAudio","bufferSize","latencyHint","webkitAudioContext","createScriptProcessor","createJavaScriptNode","onaudioprocess","channelCountMode","channelInterpretation","connect","destination","resume","disconnect","maintainLiveInput","play","pause","startRecording","resetEffects","freeAllTones","volumeStart","volumeEnd","setting","nextVal","isAnyModActive","unsetMod","isFilterModActive","channelIdx","forceHoldMods","found","holdFor","snapToStart","snapToBar","goToBar","jumpIntoLoop","oldBar","goToNextBar","goToPrevBar","getNextBar","skipBar","outputBufferLength","playSong","skippedBars","firstSkippedBufferIndex","bufferIndex","samplesLeftInBuffer","samplesLeftInTick","runLength","runEnd","determineCurrentActiveTones","playModTone","barVisited","determineLiveInputTones","tonesPlayedInThisInstrument","freeReleasedTone","shouldFadeOutFast","computeTone","playTone","effectsSynth","startRatio","endRatio","ticksIntoBar","partTimeTickStart","partTimeTickEnd","partTimeStart","partTimeEnd","useVibratoSpeed","midBeat","periods","samplesPerPeriod","tempAmplitude","sampleL","sampleR","absL","absR","limitRange","limitTarget","limitedVolume","useArpeggioSpeed","isFinite","freeTone","newTone","releaseTone","toneIndex","bassPitches","toneList","toneCount","filteredPitches","filteredBassPitches","moveTonesIntoOrderedTempMatchedList","clearTempMatchedPitchTones","adjacentPatternHasCompatibleInstrumentTransition","otherPattern","otherNote","forceContinue","otherInstrument","otherTransition","adjacentNotesHaveMatchingPitches","firstNote","secondNote","firstNoteInterval","notePitches","currentTick","prevNotes","nextNotes","fillCount","modToneCount","newInstrumentIndex","sourceInstrumentState","destInstrumentState","prevNoteForThisInstrument","nextNoteForThisInstrument","oldTone","partsPerBar","useStrumSpeed","tonesInPrevNote","tonesInNextNote","prevPattern","lastNote","patternForcesContinueAtStart","chordOfCompatibleInstrument","prevPitchesForThisInstrument","nextPattern","nextPatternForcesContinueAtStart","nextPitchesForThisInstrument","strumOffsetParts","prevNoteForThisTone","noteForThisTone","pitchesForThisTone","nextNoteForThisTone","released","modSynth","computeChordExpression","chordExpression","intervalScale","secondsPerPart","sampleTime","beatsPerPart","specialIntervalMult","toneIsOnLastTick","intervalStart","intervalEnd","fadeExpressionStart","fadeExpressionEnd","chordExpressionStart","chordExpressionEnd","expressionReferencePitch","baseExpression","pitchDamping","chipWaveLength","firstOffset","lastOffset","getOperatorWave","startTicksSinceReleased","endTicksSinceReleased","pinStart","pinEnd","noteTicksPassedTickStart","noteTicksPassedTickEnd","pinRatioStart","pinRatioEnd","noteLengthTicks","tmpNoteFilter","noteFilterSettingsStart","noteFilterSettingsEnd","intervalDiff","chordSizeDiff","pitchShiftScalarStart","pitchShiftScalarEnd","modDetuneStart","modDetuneEnd","vibratoAmplitudeStart","vibratoAmplitudeEnd","vibratoStart","POSITIVE_INFINITY","getLFOAmplitude","ticksUntilVibratoStart","vibratoLfoEnd","vibratoDepthEnvelopeEnd","vibratoEnd","ticksUntilVibratoEnd","noteFilterExpression","noteAllFreqsEnvelopeStart","noteAllFreqsEnvelopeEnd","noteFreqEnvelopeStart","noteFreqEnvelopeEnd","notePeakEnvelopeStart","notePeakEnvelopeEnd","noteFilterSettings","drumsetFilterEnvelope","drumsetFilterEnvelopeStart","drumsetFilterEnvelopeEnd","sineExpressionBoost","totalCarrierExpression","arpeggioInterval","associatedCarrierIndex","pitchStart","pitchEnd","baseFreqStart","baseFreqEnd","targetFreqStart","targetFreqEnd","freqEnvelopeStart","freqEnvelopeEnd","amplitudeStart","amplitudeEnd","amplitudeCurveStart","amplitudeCurveEnd","expressionStart","expressionEnd","pitchExpressionStart","pitchExpressionEnd","useFeedbackAmplitudeStart","useFeedbackAmplitudeEnd","feedbackAmplitudeStart","feedbackAmplitudeEnd","feedbackStart","feedbackEnd","freqEndRatio","basePhaseDeltaScale","intervalOffset","endPitch","settingsExpressionMult","basePulseWidth","pulseWidthModStart","pulseWidthModEnd","pulseWidthStart","pulseWidthEnd","decimalOffsetModStart","decimalOffsetStart","useSustainStart","useSustainEnd","startFreq","unisonEnvelopeStart","unisonEnvelopeEnd","unisonAStart","unisonAEnd","unisonBStart","unisonBEnd","supersawExpressionStart","supersawExpressionEnd","minFirstVoiceAmplitude","useDynamismStart","useDynamismEnd","curvedDynamismStart","curvedDynamismEnd","firstVoiceAmplitudeStart","firstVoiceAmplitudeEnd","dynamismStart","dynamismEnd","initializeSupersaw","accumulator","normalizedPhase","zeroCrossingPhase","prevDrop","nextDrop","phaseDelta","distanceToZeroCrossing","swappedIndex","baseSpreadSlider","useSpreadStart","useSpreadEnd","averageSpreadSlider","curvedSpread","baseShape","useShapeStart","useShapeEnd","shapeStart","shapeEnd","delayLengthStart","pulseExpressionRatio","sustainEnvelopeStart","sustainEnvelopeEnd","secondsIntoBar","vibratoPeriodSeconds","fingerprint","fmSynthFunctionCache","synthSource","line","fmSourceTemplate","outputs","operatorLine","operatorSourceTemplate","modulatorNumber","feedbackIndices","wrappedFmSynth","Function","loopableChipSynth","chipSynth","harmonicsSynth","pulseWidthSynth","supersawSynth","pickedStringSynth","noiseSynth","spectrumSynth","drumsetSynth","fm6SynthFunctionCache","wrappedFm6Synth","wrap","data","chipWaveLoopLength","phaseDeltaA","phaseDeltaB","directionA","directionB","chipWaveCompletionA","chipWaveCompletionB","lastWaveA","lastWaveB","chipWaveCompletionFadeLength","phaseDeltaScaleA","phaseDeltaScaleB","phaseA","phaseB","prevWaveIntegralA","prevWaveIntegralB","phaseAInt","phaseBInt","indexA","indexB","phaseRatioA","phaseRatioB","filters","filterCount","initialFilterInput1","initialFilterInput2","applyFilters","prevWaveA","prevWaveB","sampleIndex","wrapped","waveA","waveB","inputSample","completionFadeA","completionFadeB","nextWaveIntegralA","nextWaveIntegralB","pwia","pwib","phaseA_","phaseB_","output","sanitizeFilters","voiceCount","pickedStringFunction","pickedStringFunctionCache","pickedStringSource","sampleList","voice","lines","usesEqFilter","usesInvertWave","signature","effectsFunction","effectsFunctionCache","effectsSource","usesDelays","sawPhaseA","sawPhaseB","sawPhaseC","sawPhaseD","pulseWaveA","pulseWaveB","t","dynamismDelta","unisonDetunes","shapeDelta","phase","supersawSample","detunedPhaseDelta","delaySampleTime","lowerIndex","upperIndex","delayRatio","prevDelaySample","phaseMask","pitchRelativefilterA","pitchRelativefilterB","samplesInPeriod","findRandomZeroCrossing","waveSampleA","waveSampleB","referenceDelta","phaseInt","stereoBufferIndex","dotTarget","lerpEndRatio","indexPrev","attemptsRemaining","indexNext","waveNext","innerIndexNext","innerWaveNext","instrumentVolume","volumeMultToInstrumentVolume","volumeMult","volumeMultToNoteSize","seconds","ticks","lower","upper","cents","beatsPerSecond","partsPerSecond","tickPerSecond","sanitizeDelayLine","lastIndex","mask","input1","input2","SongPlayerLayout","setLayout","layout","_spLayoutMap","layoutLookup","classic","top","boxbeep","piano","vertical","middle","button","div","h1","input","canvas","form","label","h2","svg","circle","rect","path","isMobile","colorTheme","getLocalStorage","setSpLayout","animationRequest","prevHash","id","toString","pauseButtonDisplayed","zoomEnabled","timelineWidth","outVolumeHistoricTimer","outVolumeHistoricCap","oscilascope","_EventUpdateCanvas","directlinkL","directlinkR","ctx","getContext","fillStyle","fillRect","width","height","yl","yr","display","closePrompt","class","_okayButton","_form","layoutContainer","titleText","layoutStuffs","editLink","copyLink","href","shareLink","fullscreenLink","shortenSongLink","draggingPlayhead","playButton","playButtonContainer","loopIcon","d","loopButton","viewBox","volumeIcon","volumeSlider","step","zoomIcon","cx","cy","r","stroke","zoomButton2","zoomButton","timeline","pianoContainer","timelineContainer","visualizationContainer","noteFlashElementsPerBar","currentNoteFlashElements","currentNoteFlashBar","notesFlashWhenPlayed","outVolumeBarBg","outVolumeBar","stop1","stop","stop2","stop3","gradient","linearGradient","gradientUnits","defs","volumeBarContainer","preserveAspectRatio","timelineBarProgress","timelineBar","timelineBarContainer","volumeBarContainerDiv","promptContainer","songPlayerContainer","body","controlCenterId","getElementById","controlCenterRow3","flexDirection","flex","controlCenterRow1","alignItems","justifyContent","setLocalStorage","setItem","removeFromUnorderedArray","lastElement","loadSong","songString","reuseParams","updatedSongString","hashUpdatedExternally","myHash","parameter","equalsIndex","paramName","renderLoopIcon","renderTimeline","pauseIfAnotherPlayerStartsHandle","pauseIfAnotherPlayerStarts","clearInterval","storedPlayerId","onTogglePlay","renderPlayhead","animate","requestAnimationFrame","volumeUpdate","renderPlayButton","useOutVolumeCap","historicOutCap","cancelAnimationFrame","setInterval","onTimelineMouseMove","preventDefault","onTimelineCursorMove","elements","clientY","pageY","clientX","pageX","onTimelineTouchMove","touches","mouseX","boundingRect","getBoundingClientRect","useVertical","useBoxBeep","bottom","right","left","onTimelineCursorUp","setSynthVolume","usePiano","useMiddle","scrollLeft","playheadBar","modPlayhead","noteFlashElementsForThisBar","outsideOfCurrentBar","getAttribute","isInvisible","opacity","kc","children","kf","noteStart","noteEnd","noteBar","p","kf2","dist","innerHTML","timelineHeight","windowOctaves","windowPitchCount","semitoneHeight","targetBeatWidth","transform","minHeight","targetSemitoneHeight","barWidth","partWidth","wavePitchHeight","drumPitchHeight","color","noteFlashColor","noteFlashColorSecondary","pitchHeight","configuredOctaveScroll","offsetY","offsetX","drawNote","noteElement","dflash","noteFlashElement","pianoContainerBoundingRect","kw","kh","pitchNameIndex","renderPiano","radius","classList","add","renderZoomIcon","self","keyCode","shiftKey","visibilityState","nav","clipboard","writeText","prompt","textField","select","succeeded","execCommand","share","open"],"sources":["../../synth/SynthConfig.ts","../../node_modules/imperative-html/src/elements-base.ts","../../node_modules/imperative-html/src/elements-strict.ts","../../editor/ColorConfig.ts","../../editor/EditorConfig.ts","../../synth/FFT.ts","../../synth/Deque.ts","../../global/Events.ts","../../synth/filtering.ts","../../synth/synth.ts","../../player/style.ts","../../player/Layout.ts","../../player/main.ts","../../global/Oscilascope.ts"],"sourcesContent":["/*!\r\nCopyright (c) 2012-2022 John Nesky and contributing authors\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of \r\nthis software and associated documentation files (the \"Software\"), to deal in \r\nthe Software without restriction, including without limitation the rights to \r\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \r\nof the Software, and to permit persons to whom the Software is furnished to do \r\nso, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all \r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, \r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \r\nSOFTWARE.\r\n*/\r\n\r\nexport interface Dictionary<T> {\r\n    [K: string]: T;\r\n}\r\n\r\n// @TODO: Not ideal to make this writable like this.\r\n// export interface DictionaryArray<T> extends ReadonlyArray<T> {\r\nexport interface DictionaryArray<T> extends Array<T> {\r\n    dictionary: Dictionary<T>;\r\n}\r\n\r\nexport const enum FilterType {\r\n    lowPass,\r\n    highPass,\r\n    peak,\r\n    length,\r\n}\r\n\r\nexport const enum SustainType {\r\n\tbright,\r\n\tacoustic,\r\n\tlength,\r\n}\r\n\r\nexport const enum EnvelopeType {\r\n\tnoteSize,\r\n    none,\r\n\tpunch,\r\n\tflare,\r\n\ttwang,\r\n\tswell,\r\n\ttremolo,\r\n\ttremolo2,\r\n    decay,\r\n    wibble,\r\n    hard,\r\n    linear,\r\n    rise,\r\n    blip\r\n}\r\n\r\nexport const enum InstrumentType {\r\n    chip,\r\n    fm,\r\n    noise,\r\n    spectrum,\r\n    drumset,\r\n    harmonics,\r\n    pwm,\r\n    pickedString,\r\n    supersaw,\r\n    customChipWave,\r\n    mod,\r\n\tfm6op,\r\n    length,\r\n}\r\n\r\nexport const TypePresets: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"pulse width\", \"picked string\", \"supersaw\", \"chip (custom)\", \"mod\", \"FM (6-op)\"];\r\n\r\nexport const enum DropdownID {\r\n    Vibrato = 0,\r\n    Pan = 1,\r\n    Chord = 2,\r\n    Transition = 3,\r\n    FM = 4,\r\n    PulseWidth = 5,\r\n    Unison = 6,\r\n    Envelope = 7\r\n}\r\n\r\nexport const enum EffectType {\r\n    reverb,\r\n    chorus,\r\n    panning,\r\n    distortion,\r\n    bitcrusher,\r\n    noteFilter,\r\n    echo,\r\n    pitchShift,\r\n    detune,\r\n    vibrato,\r\n    transition,\r\n    chord,\r\n    ringModulation,\r\n    phaser,\r\n    noteRange,\r\n    invertWave,\r\n    length,\r\n}\r\n\r\nexport const enum EnvelopeComputeIndex {\r\n    noteVolume,\r\n    noteFilterAllFreqs,\r\n    pulseWidth,\r\n    stringSustain,\r\n    unison,\r\n    operatorFrequency0, operatorFrequency1, operatorFrequency2, operatorFrequency3, operatorFrequency4, operatorFrequency5,\r\n    operatorAmplitude0, operatorAmplitude1, operatorAmplitude2, operatorAmplitude3, operatorAmplitude4, operatorAmplitude5,\r\n    feedbackAmplitude,\r\n    pitchShift,\r\n    detune,\r\n    vibratoDepth,\r\n    noteFilterFreq0, noteFilterFreq1, noteFilterFreq2, noteFilterFreq3, noteFilterFreq4, noteFilterFreq5, noteFilterFreq6, noteFilterFreq7,\r\n    noteFilterGain0, noteFilterGain1, noteFilterGain2, noteFilterGain3, noteFilterGain4, noteFilterGain5, noteFilterGain6, noteFilterGain7,\r\n    decimalOffset,\r\n    supersawDynamism,\r\n\tsupersawSpread,\r\n\tsupersawShape,\r\n    phaserFreq,\r\n    phaserMix,\r\n    phaserFeedback,\r\n    phaserStages,\r\n    ringModulation,\r\n    ringModulationHz,\r\n    invertWave,\r\n    distortion,\r\n    bitcrusherQuantization,\r\n    bitcrusherFrequency,\r\n    chorus,\r\n    echoSustain,\r\n    reverb,\r\n    panning,\r\n    arpeggioSpeed,\r\n    length,\r\n}\r\n\r\nexport const enum BaseWaveTypes {\r\n    sine,\r\n    square,\r\n    triangle,\r\n    sawtooth,\r\n    trapezoid,\r\n    steppedSaw,\r\n    steppedTri,\r\n    // ramp,\r\n    length,\r\n}\r\n\r\n/*\r\nexport const enum InstrumentAutomationIndex {\r\n    mixVolume,\r\n    eqFilterAllFreqs,\r\n    eqFilterFreq0, eqFilterFreq1, eqFilterFreq2, eqFilterFreq3, eqFilterFreq4, eqFilterFreq5, eqFilterFreq6, eqFilterFreq7,\r\n    eqFilterGain0, eqFilterGain1, eqFilterGain2, eqFilterGain3, eqFilterGain4, eqFilterGain5, eqFilterGain6, eqFilterGain7,\r\n    distortion,\r\n    bitcrusherQuantization,\r\n    bitcrusherFrequency,\r\n    panning,\r\n    chorus,\r\n    echoSustain,\r\n    //echoDelay, // Wait until tick settings can be computed once for multiple run lengths.\r\n    reverb,\r\n    length,\r\n}\r\n*/\r\n\r\nexport interface BeepBoxOption {\r\n    readonly index: number;\r\n    readonly name: string;\r\n}\r\n\r\nexport interface Scale extends BeepBoxOption {\r\n    readonly flags: ReadonlyArray<boolean>;\r\n    readonly realName: string;\r\n}\r\n\r\nexport interface Key extends BeepBoxOption {\r\n    readonly isWhiteKey: boolean;\r\n    readonly basePitch: number;\r\n}\r\n\r\nexport interface Rhythm extends BeepBoxOption {\r\n    readonly stepsPerBeat: number;\r\n    readonly roundUpThresholds: number[] | null;\r\n}\r\n\r\nexport interface ChipWave extends BeepBoxOption {\r\n    readonly expression: number;\r\n    samples: Float32Array;\r\n    isPercussion?: boolean;\r\n    isCustomSampled?: boolean;\r\n    isSampled?: boolean;\r\n    extraSampleDetune?: number;\r\n    rootKey?: number;\r\n    sampleRate?: number;\r\n}\r\n\r\nexport interface OperatorWave extends BeepBoxOption {\r\n    samples: Float32Array;\r\n}\r\n\r\nexport interface ChipNoise extends BeepBoxOption {\r\n    readonly expression: number;\r\n    readonly basePitch: number;\r\n    readonly pitchFilterMult: number;\r\n    readonly isSoft: boolean;\r\n    samples: Float32Array | null;\r\n}\r\n\r\nexport interface Transition extends BeepBoxOption {\r\n    readonly isSeamless: boolean;\r\n    readonly continues: boolean;\r\n    readonly slides: boolean;\r\n    readonly slideTicks: number;\r\n    readonly includeAdjacentPatterns: boolean;\r\n}\r\n\r\nexport interface Vibrato extends BeepBoxOption {\r\n    readonly amplitude: number;\r\n    readonly type: number;\r\n    readonly delayTicks: number;\r\n}\r\n\r\nexport interface VibratoType extends BeepBoxOption {\r\n    readonly periodsSeconds: number[];\r\n    readonly period: number;\r\n}\r\n\r\nexport interface Unison extends BeepBoxOption {\r\n    readonly voices: number;\r\n    readonly spread: number;\r\n    readonly offset: number;\r\n    readonly expression: number;\r\n    readonly sign: number;\r\n}\r\n\r\nexport interface Modulator extends BeepBoxOption {\r\n    readonly name: string; // name that shows up in song editor UI\r\n    readonly pianoName: string; // short name that shows up in mod piano UI\r\n    readonly maxRawVol: number; // raw\r\n    readonly newNoteVol: number; // raw\r\n    readonly forSong: boolean; // true - setting is song scope\r\n    convertRealFactor: number; // offset that needs to be applied to get a \"real\" number display of value, for UI purposes\r\n    readonly associatedEffect: EffectType; // effect that should be enabled for this modulator to work properly. If unused, set to EffectType.length.\r\n    readonly promptName: string; // long-as-needed name that shows up in tip prompt\r\n    readonly promptDesc: string[]; // paragraph(s) describing how to use this mod\r\n    invertSliderIndicator?: boolean; // for whether or not you want to invert the slider indicator\r\n\r\n}\r\n\r\nexport interface Chord extends BeepBoxOption {\r\n    readonly customInterval: boolean;\r\n    readonly arpeggiates: boolean;\r\n    readonly strumParts: number;\r\n    readonly singleTone: boolean;\r\n}\r\n\r\nexport interface Algorithm extends BeepBoxOption {\r\n    readonly carrierCount: number;\r\n    readonly associatedCarrier: ReadonlyArray<number>;\r\n    readonly modulatedBy: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface OperatorFrequency extends BeepBoxOption {\r\n    readonly mult: number;\r\n    readonly hzOffset: number;\r\n    readonly amplitudeSign: number;\r\n}\r\n\r\nexport interface Feedback extends BeepBoxOption {\r\n    readonly indices: ReadonlyArray<ReadonlyArray<number>>;\r\n}\r\n\r\nexport interface Envelope extends BeepBoxOption {\r\n    readonly type: EnvelopeType;\r\n    readonly speed: number;\r\n}\r\n\r\nexport interface AutomationTarget extends BeepBoxOption {\r\n    readonly computeIndex: EnvelopeComputeIndex /*| InstrumentAutomationIndex*/ | null;\r\n    readonly displayName: string;\r\n    //readonly perNote: boolean; // Whether to compute envelopes on a per-note basis.\r\n    readonly interleave: boolean; // Whether to interleave this target with the next one in the menu (e.g. filter frequency and gain).\r\n\treadonly isFilter: boolean; // Filters are special because the maxCount depends on other instrument settings.\r\n\t//readonly range: number | null; // set if automation is allowed.\r\n    readonly maxCount: number;\r\n    readonly effect: EffectType | null;\r\n    readonly compatibleInstruments: InstrumentType[] | null;\r\n}\r\n\r\nexport const enum SampleLoadingStatus {\r\n    loading,\r\n    loaded,\r\n    error,\r\n}\r\n\r\nexport function getSampleLoadingStatusName(status: SampleLoadingStatus): string {\r\n    switch (status) {\r\n\tcase SampleLoadingStatus.loading: return \"loading\";\r\n\tcase SampleLoadingStatus.loaded: return \"loaded\";\r\n\tcase SampleLoadingStatus.error: return \"error\";\r\n    }\r\n}\r\n\r\nexport class SampleLoadingState {\r\n    public statusTable: Dictionary<SampleLoadingStatus>;\r\n    public urlTable: Dictionary<string>;\r\n    public totalSamples: number;\r\n    public samplesLoaded: number;\r\n    public samplesFailed: number;\r\n\r\n    constructor() {\r\n\tthis.statusTable = {};\r\n\tthis.urlTable = {};\r\n\tthis.totalSamples = 0;\r\n\tthis.samplesLoaded = 0;\r\n    }\r\n}\r\n\r\nexport const sampleLoadingState: SampleLoadingState = new SampleLoadingState();\r\n\r\nexport class SampleLoadedEvent extends Event {\r\n    public readonly totalSamples: number;\r\n    public readonly samplesLoaded: number;\r\n    public readonly samplesFailed: number;\r\n\r\n    constructor(totalSamples: number, samplesLoaded: number, samplesFailed: number) {\r\n\tsuper(\"sampleloaded\");\r\n\tthis.totalSamples = totalSamples;\r\n\tthis.samplesLoaded = samplesLoaded;\r\n    this.samplesFailed = samplesFailed;\r\n    }\r\n}\r\n\r\nexport interface SampleLoadEventMap {\r\n    \"sampleloaded\": SampleLoadedEvent;\r\n}\r\n\r\nexport class SampleLoadEvents extends EventTarget {\r\n    constructor() {\r\n\tsuper();\r\n    }\r\n}\r\n\r\nexport const sampleLoadEvents: SampleLoadEvents = new SampleLoadEvents();\r\n\r\nexport async function startLoadingSample(url: string, chipWaveIndex: number, presetSettings: Dictionary<any>, rawLoopOptions: any, customSampleRate: number): Promise<void> {\r\n    // @TODO: Make parts of the code that expect everything to already be\r\n    // in memory work correctly.\r\n    // It would be easy to only instantiate `SongEditor` and company after\r\n    // everything is loaded, but if dynamic sample loading without a reload\r\n    // is deemed necessary, anything that involves chip waves has to be\r\n    // revisited so as to be able to work with a changing list of chip\r\n    // waves that may or may not be ready to be used.\r\n    const sampleLoaderAudioContext = new AudioContext({ sampleRate: customSampleRate });\r\n    let closedSampleLoaderAudioContext: boolean = false;\r\n    const chipWave = Config.chipWaves[chipWaveIndex];\r\n    const rawChipWave = Config.rawChipWaves[chipWaveIndex];\r\n    const rawRawChipWave = Config.rawRawChipWaves[chipWaveIndex];\r\n    if (OFFLINE) {\r\n        if (url.slice(0, 5) === \"file:\") {\r\n            const dirname = await getDirname();\r\n            const joined = await pathJoin(dirname, url.slice(5));\r\n            url = joined;\r\n        }\r\n    }\r\n    fetch(url).then((response) => {\r\n\tif (!response.ok) {\r\n\t    // @TODO: Be specific with the error handling.\r\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.error;\r\n\t    return Promise.reject(new Error(\"Couldn't load sample\"));\r\n\t}\r\n\treturn response.arrayBuffer();\r\n    }).then((arrayBuffer) => {\r\n\treturn sampleLoaderAudioContext.decodeAudioData(arrayBuffer);\r\n    }).then((audioBuffer) => {\r\n\t// @TODO: Downmix.\r\n\tconst samples = centerWave(Array.from(audioBuffer.getChannelData(0)));\r\n\tconst integratedSamples = performIntegral(samples);\r\n\tchipWave.samples = integratedSamples;\r\n\trawChipWave.samples = samples;\r\n\trawRawChipWave.samples = samples;\r\n\tif (rawLoopOptions[\"isUsingAdvancedLoopControls\"]) {\r\n\t    presetSettings[\"chipWaveLoopStart\"] = rawLoopOptions[\"chipWaveLoopStart\"] != null ? rawLoopOptions[\"chipWaveLoopStart\"] : 0;\r\n\t    presetSettings[\"chipWaveLoopEnd\"] = rawLoopOptions[\"chipWaveLoopEnd\"] != null ? rawLoopOptions[\"chipWaveLoopEnd\"] : samples.length - 1;\r\n\t    presetSettings[\"chipWaveLoopMode\"] = rawLoopOptions[\"chipWaveLoopMode\"] != null ? rawLoopOptions[\"chipWaveLoopMode\"] : 0;\r\n\t    presetSettings[\"chipWavePlayBackwards\"] = rawLoopOptions[\"chipWavePlayBackwards\"];\r\n\t    presetSettings[\"chipWaveStartOffset\"] = rawLoopOptions[\"chipWaveStartOffset\"] != null ? rawLoopOptions[\"chipWaveStartOffset\"] : 0;\r\n\t}\r\n\tsampleLoadingState.samplesLoaded++;\r\n\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\r\n\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n\t    sampleLoadingState.totalSamples,\r\n\t    sampleLoadingState.samplesLoaded,\r\n\t    sampleLoadingState.samplesFailed\r\n\t));\r\n\tif (!closedSampleLoaderAudioContext) {\r\n\t    closedSampleLoaderAudioContext = true;\r\n\t    sampleLoaderAudioContext.close();\r\n\t}\r\n    }).catch((error) => {\r\n\t//console.error(error);\r\n\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.error;\r\n\tsampleLoadingState.samplesFailed++;\r\n    console.error(\"Failed to load \" + url + \":\\n\" + error);\r\n    sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n\t    sampleLoadingState.totalSamples,\r\n\t    sampleLoadingState.samplesLoaded,\r\n\t    sampleLoadingState.samplesFailed\r\n\t));\r\n\tif (!closedSampleLoaderAudioContext) {\r\n\t    closedSampleLoaderAudioContext = true;\r\n\t    sampleLoaderAudioContext.close();\r\n\t}\r\n    });\r\n}\r\n\r\nexport function getLocalStorageItem<T>(key: string, defaultValue: T): T | string {\r\n    let value: T | string | null = localStorage.getItem(key);\r\n    if (value == null || value === \"null\" || value === \"undefined\") {\r\n        value = defaultValue;\r\n    }\r\n    return value;\r\n}\r\n\r\n// @HACK: This just assumes these exist, regardless of whether they actually do\r\n// or not.\r\ndeclare global {\r\n    const OFFLINE: boolean; // for UB offline\r\n    const getDirname: () => Promise<string>; // for UB offline\r\n    const pathJoin: (...parts: string[]) => Promise<string>; // for UB offline\r\n    const kicksample: number[];\r\n    const snaresample: number[];\r\n    const pianosample: number[];\r\n    const WOWsample: number[];\r\n    const overdrivesample: number[];\r\n    const trumpetsample: number[];\r\n    const saxophonesample: number[];\r\n    const orchhitsample: number[];\r\n    const detatchedviolinsample: number[];\r\n    const synthsample: number[];\r\n    const sonic3snaresample: number[];\r\n    const comeonsample: number[];\r\n    const choirsample: number[];\r\n    const overdrivensample: number[];\r\n    const flutesample: number[];\r\n    const legatoviolinsample: number[];\r\n    const tremoloviolinsample: number[];\r\n    const amenbreaksample: number[];\r\n    const pizzicatoviolinsample: number[];\r\n    const timallengruntsample: number[];\r\n    const tubasample: number[];\r\n    const loopingcymbalsample: number[];\r\n    const kickdrumsample: number[];\r\n    const snaredrumsample: number[];\r\n    const closedhihatsample: number[];\r\n    const foothihatsample: number[];\r\n    const openhihatsample: number[];\r\n    const crashsample: number[];\r\n    const pianoC4sample: number[];\r\n    const liverpadsample: number[];\r\n    const marimbasample: number[];\r\n    const susdotwavsample: number[];\r\n    const wackyboxttssample: number[];\r\n    const peppersteak1: number[];\r\n    const peppersteak2: number[];\r\n    const vinyl: number[];\r\n    const slapbass: number[];\r\n    const hdeboverdrive: number[];\r\n    const sunsoftbass: number[];\r\n    const masculinechoir: number[];\r\n    const femininechoir: number[];\r\n    const southtololoche: number[];\r\n    const harp: number[];\r\n    const panflute: number[];\r\n    const krumhorn: number[];\r\n    const timpani: number[];\r\n    const crowdhey: number[];\r\n    const warioland4brass: number[];\r\n    const warioland4organ: number[];\r\n    const warioland4daow: number[];\r\n    const warioland4hourchime: number[];\r\n    const warioland4tick: number[];\r\n    const kirbykick: number[];\r\n    const kirbysnare: number[];\r\n    const kirbybongo: number[];\r\n    const kirbyclick: number[];\r\n    const funkkick: number[];\r\n    const funksnare: number[];\r\n    const funksnareleft: number[];\r\n    const funksnareright: number[];\r\n    const funktomhigh: number[];\r\n    const funktomlow: number[];\r\n    const funkhihatclosed: number[];\r\n    const funkhihathalfopen: number[];\r\n    const funkhihatopen: number[];\r\n    const funkhihatopentip: number[];\r\n    const funkhihatfoot: number[];\r\n    const funkcrash: number[];\r\n    const funkcrashtip: number[];\r\n    const funkride: number[];\r\n    const chronoperc1finalsample: number[];\r\n    const synthkickfmsample: number[];\r\n    const woodclicksample: number[];\r\n    const acousticsnaresample: number[];\r\n    const catpaintboxsample: number[];\r\n    const gameboypaintboxsample: number[];\r\n    const mariopaintboxsample: number[];\r\n    const drumpaintboxsample: number[];\r\n    const yoshipaintboxsample: number[];\r\n    const starpaintboxsample: number[];\r\n    const fireflowerpaintboxsample: number[];\r\n    const dogpaintbox: number[];\r\n    const oinkpaintbox: number[];\r\n    const swanpaintboxsample: number[];\r\n    const facepaintboxsample: number[];\r\n}\r\n\r\nfunction loadScript(url: string): Promise<void> {\r\n    const result: Promise<void> = new Promise((resolve, reject) => {\r\n\tif (!Config.willReloadForCustomSamples) {\r\n\t    const script = document.createElement(\"script\");\r\n\t    script.src = url;\r\n\t    document.head.appendChild(script);\r\n\t    script.addEventListener(\"load\", (event) => {\r\n\t\tresolve();\r\n\t    });\r\n\t} else {\r\n\t    // There's not really any errors that show up if the loading for\r\n\t    // this script is stopped early, but it won't really do anything\r\n\t    // particularly useful either in that case.\r\n\t}\r\n    });\r\n    return result;\r\n}\r\n\r\nexport function loadBuiltInSamples(set: number): void {\r\n    const defaultIndex: number = 0;\r\n    const defaultIntegratedSamples: Float32Array = Config.chipWaves[defaultIndex].samples;\r\n    const defaultSamples: Float32Array = Config.rawRawChipWaves[defaultIndex].samples;\r\n\r\n    if (set == 0) {\r\n\t// Create chip waves with the wrong sound.\r\n\tconst chipWaves = [\r\n\t    { name: \"paandorasbox kick\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox snare\", expression: 3.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox piano1\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 2 },\r\n\t    { name: \"paandorasbox WOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox overdrive\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -2 },\r\n\t    { name: \"paandorasbox trumpet\", expression: 3.0, isSampled: true, isPercussion: false, extraSampleDetune: 1.2 },\r\n\t    { name: \"paandorasbox saxophone\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -5 },\r\n\t    { name: \"paandorasbox orchestrahit\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\r\n\t    { name: \"paandorasbox detatched violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 4.2 },\r\n\t    { name: \"paandorasbox synth\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -0.8 },\r\n\t    { name: \"paandorasbox sonic3snare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox come on\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox choir\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\r\n\t    { name: \"paandorasbox overdriveguitar\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6.2 },\r\n\t    { name: \"paandorasbox flute\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -6 },\r\n\t    { name: \"paandorasbox legato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -28 },\r\n\t    { name: \"paandorasbox tremolo violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -33 },\r\n\t    { name: \"paandorasbox amen break\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -55 },\r\n\t    { name: \"paandorasbox pizzicato violin\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -11 },\r\n\t    { name: \"paandorasbox tim allen grunt\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -20 },\r\n\t    { name: \"paandorasbox tuba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: 44 },\r\n\t    { name: \"paandorasbox loopingcymbal\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17 },\r\n\t    { name: \"paandorasbox standardkick\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -7 },\r\n\t    { name: \"paandorasbox standardsnare\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"paandorasbox closedhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 5 },\r\n\t    { name: \"paandorasbox foothihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: 4 },\r\n\t    { name: \"paandorasbox openhihat\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -31 },\r\n\t    { name: \"paandorasbox crashcymbal\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -43 },\r\n\t    { name: \"paandorasbox pianoC4\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.5 },\r\n\t    { name: \"paandorasbox liver pad\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -22.5 },\r\n\t    { name: \"paandorasbox marimba\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -15.5 },\r\n\t    { name: \"paandorasbox susdotwav\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -24.5 },\r\n\t    { name: \"paandorasbox wackyboxtts\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -17.5 },\r\n\t    { name: \"paandorasbox peppersteak_1\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -42.2 },\r\n\t    { name: \"paandorasbox peppersteak_2\", expression: 2.0, isSampled: true, isPercussion: false, extraSampleDetune: -47 },\r\n\t    { name: \"paandorasbox vinyl_noise\", expression: 2.0, isSampled: true, isPercussion: true, extraSampleDetune: -50 },\r\n\t    { name: \"paandorasbeta slap bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -56 },\r\n\t    { name: \"paandorasbeta HD EB overdrive guitar\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60 },\r\n\t    { name: \"paandorasbeta sunsoft bass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -18.5 },\r\n\t    { name: \"paandorasbeta masculine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\r\n\t    { name: \"paandorasbeta feminine choir\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -60.5 },\r\n\t    { name: \"paandorasbeta tololoche\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -29.5 },\r\n\t    { name: \"paandorasbeta harp\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -54 },\r\n\t    { name: \"paandorasbeta pan flute\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -58 },\r\n\t    { name: \"paandorasbeta krumhorn\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -46 },\r\n\t    { name: \"paandorasbeta timpani\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -50 },\r\n\t    { name: \"paandorasbeta crowd hey\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -29 },\r\n\t    { name: \"paandorasbeta wario land 4 brass\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -68 },\r\n\t    { name: \"paandorasbeta wario land 4 rock organ\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -63 },\r\n\t    { name: \"paandorasbeta wario land 4 DAOW\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -35 },\r\n\t    { name: \"paandorasbeta wario land 4 hour chime\", expression: 1.0, isSampled: true, isPercussion: false, extraSampleDetune: -47.5 },\r\n\t    { name: \"paandorasbeta wario land 4 tick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -12.5 },\r\n\t    { name: \"paandorasbeta kirby kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\r\n\t    { name: \"paandorasbeta kirby snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\r\n\t    { name: \"paandorasbeta kirby bongo\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\r\n\t    { name: \"paandorasbeta kirby click\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46.5 },\r\n\t    { name: \"paandorasbeta sonor kick\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\r\n\t    { name: \"paandorasbeta sonor snare\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28.5 },\r\n\t    { name: \"paandorasbeta sonor snare (left hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\r\n\t    { name: \"paandorasbeta sonor snare (right hand)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -22.5 },\r\n\t    { name: \"paandorasbeta sonor high tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\r\n\t    { name: \"paandorasbeta sonor low tom\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -41.5 },\r\n\t    { name: \"paandorasbeta sonor hihat (closed)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -17 },\r\n\t    { name: \"paandorasbeta sonor hihat (half opened)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -21 },\r\n\t    { name: \"paandorasbeta sonor hihat (open)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -54.5 },\r\n\t    { name: \"paandorasbeta sonor hihat (open tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -43.5 },\r\n\t    { name: \"paandorasbeta sonor hihat (pedal)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -28 },\r\n\t    { name: \"paandorasbeta sonor crash\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -51 },\r\n\t    { name: \"paandorasbeta sonor crash (tip)\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -50.5 },\r\n\t    { name: \"paandorasbeta sonor ride\", expression: 1.0, isSampled: true, isPercussion: true, extraSampleDetune: -46 }\r\n\t];\r\n\r\n\tsampleLoadingState.totalSamples += chipWaves.length;\r\n\r\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\r\n\t// the same number of elements.\r\n\tconst startIndex: number = Config.rawRawChipWaves.length;\r\n\tfor (const chipWave of chipWaves) {\r\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\r\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\r\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\r\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\r\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\r\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\r\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\r\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"legacySamples\";\r\n\t}\r\n\r\n\tloadScript(\"samples.js\")\r\n\t.then(() => loadScript(\"samples2.js\"))\r\n\t.then(() => loadScript(\"samples3.js\"))\r\n\t.then(() => loadScript(\"drumsamples.js\"))\r\n\t.then(() => loadScript(\"wario_samples.js\"))\r\n\t.then(() => loadScript(\"kirby_samples.js\"))\r\n\t.then(() => {\r\n\t    // Now put the right sounds in there after everything\r\n\t    // got loaded.\r\n\t    const chipWaveSamples: Float32Array[] = [\r\n\t\tcenterWave(kicksample),\r\n\t\tcenterWave(snaresample),\r\n\t\tcenterWave(pianosample),\r\n\t\tcenterWave(WOWsample),\r\n\t\tcenterWave(overdrivesample),\r\n\t\tcenterWave(trumpetsample),\r\n\t\tcenterWave(saxophonesample),\r\n\t\tcenterWave(orchhitsample),\r\n\t\tcenterWave(detatchedviolinsample),\r\n\t\tcenterWave(synthsample),\r\n\t\tcenterWave(sonic3snaresample),\r\n\t\tcenterWave(comeonsample),\r\n\t\tcenterWave(choirsample),\r\n\t\tcenterWave(overdrivensample),\r\n\t\tcenterWave(flutesample),\r\n\t\tcenterWave(legatoviolinsample),\r\n\t\tcenterWave(tremoloviolinsample),\r\n\t\tcenterWave(amenbreaksample),\r\n\t\tcenterWave(pizzicatoviolinsample),\r\n\t\tcenterWave(timallengruntsample),\r\n\t\tcenterWave(tubasample),\r\n\t\tcenterWave(loopingcymbalsample),\r\n\t\tcenterWave(kickdrumsample),\r\n\t\tcenterWave(snaredrumsample),\r\n\t\tcenterWave(closedhihatsample),\r\n\t\tcenterWave(foothihatsample),\r\n\t\tcenterWave(openhihatsample),\r\n\t\tcenterWave(crashsample),\r\n\t\tcenterWave(pianoC4sample),\r\n\t\tcenterWave(liverpadsample),\r\n\t\tcenterWave(marimbasample),\r\n\t\tcenterWave(susdotwavsample),\r\n\t\tcenterWave(wackyboxttssample),\r\n\t\tcenterWave(peppersteak1),\r\n\t\tcenterWave(peppersteak2),\r\n\t\tcenterWave(vinyl),\r\n\t\tcenterWave(slapbass),\r\n\t\tcenterWave(hdeboverdrive),\r\n\t\tcenterWave(sunsoftbass),\r\n\t\tcenterWave(masculinechoir),\r\n\t\tcenterWave(femininechoir),\r\n\t\tcenterWave(southtololoche),\r\n\t\tcenterWave(harp),\r\n\t\tcenterWave(panflute),\r\n\t\tcenterWave(krumhorn),\r\n\t\tcenterWave(timpani),\r\n\t\tcenterWave(crowdhey),\r\n\t\tcenterWave(warioland4brass),\r\n\t\tcenterWave(warioland4organ),\r\n\t\tcenterWave(warioland4daow),\r\n\t\tcenterWave(warioland4hourchime),\r\n\t\tcenterWave(warioland4tick),\r\n\t\tcenterWave(kirbykick),\r\n\t\tcenterWave(kirbysnare),\r\n\t\tcenterWave(kirbybongo),\r\n\t\tcenterWave(kirbyclick),\r\n\t\tcenterWave(funkkick),\r\n\t\tcenterWave(funksnare),\r\n\t\tcenterWave(funksnareleft),\r\n\t\tcenterWave(funksnareright),\r\n\t\tcenterWave(funktomhigh),\r\n\t\tcenterWave(funktomlow),\r\n\t\tcenterWave(funkhihatclosed),\r\n\t\tcenterWave(funkhihathalfopen),\r\n\t\tcenterWave(funkhihatopen),\r\n\t\tcenterWave(funkhihatopentip),\r\n\t\tcenterWave(funkhihatfoot),\r\n\t\tcenterWave(funkcrash),\r\n\t\tcenterWave(funkcrashtip),\r\n\t\tcenterWave(funkride)\r\n\t    ];\r\n\t    let chipWaveIndexOffset: number = 0;\r\n\t    for (const chipWaveSample of chipWaveSamples) {\r\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\r\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\r\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\r\n\t\tsampleLoadingState.samplesLoaded++;\r\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n\t\t    sampleLoadingState.totalSamples,\r\n\t\t    sampleLoadingState.samplesLoaded,\r\n            sampleLoadingState.samplesFailed\r\n\t\t));\r\n\t\tchipWaveIndexOffset++;\r\n\t    }\r\n\t});\r\n\t//EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {name: \"Legacy Sample Presets\", presets:  { name: \"Earthbound O. Guitar\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"paandorasbox overdrive\", \"unison\": \"none\", \"envelopes\": [] } }, index: EditorConfig.presetCategories.length,};\r\n    }\r\n    else if (set == 1) {\r\n\t// Create chip waves with the wrong sound.\r\n\tconst chipWaves = [\r\n\t    { name: \"chronoperc1final\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"synthkickfm\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"mcwoodclick1\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 },\r\n\t    { name: \"acoustic snare\", expression: 4.0, isSampled: true, isPercussion: true, extraSampleDetune: 0 }\r\n\t];\r\n\r\n\tsampleLoadingState.totalSamples += chipWaves.length;\r\n\r\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\r\n\t// the same number of elements.\r\n\tconst startIndex: number = Config.rawRawChipWaves.length;\r\n\tfor (const chipWave of chipWaves) {\r\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\r\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\r\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\r\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\r\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\r\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\r\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\r\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"nintariboxSamples\";\r\n\t}\r\n\r\n\tloadScript(\"nintaribox_samples.js\")\r\n\t.then(() => {\r\n\t    // Now put the right sounds in there after everything\r\n\t    // got loaded.\r\n\t    const chipWaveSamples: Float32Array[] = [\r\n\t\tcenterWave(chronoperc1finalsample),\r\n\t\tcenterWave(synthkickfmsample),\r\n\t\tcenterWave(woodclicksample),\r\n\t\tcenterWave(acousticsnaresample)\r\n\t    ];\r\n\t    let chipWaveIndexOffset: number = 0;\r\n\t    for (const chipWaveSample of chipWaveSamples) {\r\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\r\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\r\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\r\n\t\tsampleLoadingState.samplesLoaded++;\r\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n\t\t    sampleLoadingState.totalSamples,\r\n\t\t    sampleLoadingState.samplesLoaded,\r\n            sampleLoadingState.samplesFailed\r\n\t\t));\r\n\t\tchipWaveIndexOffset++;\r\n\t    }\r\n\t});\r\n    }\r\n    else if (set == 2) {\r\n\t// Create chip waves with the wrong sound.\r\n\tconst chipWaves = [\r\n\t    { name: \"cat\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -3 },\r\n\t    { name: \"gameboy\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 7 },\r\n\t    { name: \"mario\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 0 },\r\n\t    { name: \"drum\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 4 },\r\n\t    { name: \"yoshi\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\r\n\t    { name: \"star\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -16 },\r\n\t    { name: \"fire flower\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\r\n\t    { name: \"dog\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -1 },\r\n\t    { name: \"oink\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 3 },\r\n\t    { name: \"swan\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: 1 },\r\n\t    { name: \"face\", expression: 1, isSampled: true, isPercussion: false, extraSampleDetune: -12 }\r\n\t];\r\n\r\n\tsampleLoadingState.totalSamples += chipWaves.length;\r\n\r\n\t// This assumes that Config.rawRawChipWaves and Config.chipWaves have\r\n\t// the same number of elements.\r\n\tconst startIndex: number = Config.rawRawChipWaves.length;\r\n\tfor (const chipWave of chipWaves) {\r\n\t    const chipWaveIndex: number = Config.rawRawChipWaves.length;\r\n\t    const rawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const rawRawChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultSamples };\r\n\t    const integratedChipWave = { index: chipWaveIndex, name: chipWave.name, expression: chipWave.expression, isSampled: chipWave.isSampled, isPercussion: chipWave.isPercussion, extraSampleDetune: chipWave.extraSampleDetune, samples: defaultIntegratedSamples };\r\n\t    Config.rawRawChipWaves[chipWaveIndex] = rawRawChipWave;\r\n\t    Config.rawRawChipWaves.dictionary[chipWave.name] = rawRawChipWave;\r\n\t    Config.rawChipWaves[chipWaveIndex] = rawChipWave;\r\n\t    Config.rawChipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    Config.chipWaves[chipWaveIndex] = integratedChipWave;\r\n\t    Config.chipWaves.dictionary[chipWave.name] = rawChipWave;\r\n\t    sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\r\n\t    sampleLoadingState.urlTable[chipWaveIndex] = \"marioPaintboxSamples\";\r\n\t}\r\n\r\n\tloadScript(\"mario_paintbox_samples.js\")\r\n\t.then(() => {\r\n\t    // Now put the right sounds in there after everything\r\n\t    // got loaded.\r\n\t    const chipWaveSamples: Float32Array[] = [\r\n\t\tcenterWave(catpaintboxsample),\r\n\t\tcenterWave(gameboypaintboxsample),\r\n\t\tcenterWave(mariopaintboxsample),\r\n\t\tcenterWave(drumpaintboxsample),\r\n\t\tcenterWave(yoshipaintboxsample),\r\n\t\tcenterWave(starpaintboxsample),\r\n\t\tcenterWave(fireflowerpaintboxsample),\r\n\t\tcenterWave(dogpaintbox),\r\n\t\tcenterWave(oinkpaintbox),\r\n\t\tcenterWave(swanpaintboxsample),\r\n\t\tcenterWave(facepaintboxsample)\r\n\t    ];\r\n\t    let chipWaveIndexOffset: number = 0;\r\n\t    for (const chipWaveSample of chipWaveSamples) {\r\n\t\tconst chipWaveIndex: number = startIndex + chipWaveIndexOffset;\r\n\t\tConfig.rawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.rawRawChipWaves[chipWaveIndex].samples = chipWaveSample;\r\n\t\tConfig.chipWaves[chipWaveIndex].samples = performIntegral(chipWaveSample);\r\n\t\tsampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loaded;\r\n\t\tsampleLoadingState.samplesLoaded++;\r\n\t\tsampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n\t\t    sampleLoadingState.totalSamples,\r\n\t\t    sampleLoadingState.samplesLoaded,\r\n\t    sampleLoadingState.samplesFailed\r\n\t\t));\r\n\t\tchipWaveIndexOffset++;\r\n\t    }\r\n\t});\r\n    }\r\n    else {\r\n        console.log(\"invalid set of built-in samples\");\r\n    }\r\n}\r\n\r\nexport class Config {\r\n    // Params for post-processing compressor\r\n    public static thresholdVal: number = -10;\r\n    public static kneeVal: number = 40;\r\n    public static ratioVal: number = 12;\r\n    public static attackVal: number = 0;\r\n    public static releaseVal: number = 0.25;\r\n\r\n    public static willReloadForCustomSamples: boolean = false;\r\n\r\n    public static jsonFormat: string = \"AbyssBox\";\r\n    // public static thurmboxImportUrl: string = \"https://file.garden/ZMQ0Om5nmTe-x2hq/PandoraArchive%20Samples/\";\r\n\r\n    public static readonly scales: DictionaryArray<Scale> = toNameMap([\r\n\r\n\t\t//   C     Db      D     Eb      E      F     F#      G     Ab      A     Bb      B      C\r\n\t\t{ name: \"Free\", realName: \"chromatic\", flags: [true, true, true, true, true, true, true, true, true, true, true, true] }, // Free\r\n        { name: \"Major\", realName: \"ionian\", flags: [true, false, true, false, true, true, false, true, false, true, false, true] }, // Major\r\n        { name: \"Minor\", realName: \"aeolian\", flags: [true, false, true, true, false, true, false, true, true, false, true, false] }, // Minor\r\n        { name: \"Mixolydian\", realName: \"mixolydian\", flags: [true, false, true, false, true, true, false, true, false, true, true, false] }, // Mixolydian\r\n        { name: \"Lydian\", realName: \"lydian\", flags: [true, false, true, false, true, false, true, true, false, true, false, true] }, // Lydian\r\n        { name: \"Dorian\", realName: \"dorian\", flags: [true, false, true, true, false, true, false, true, false, true, true, false] }, // Dorian\r\n        { name: \"Phrygian\", realName: \"phrygian\", flags: [true, true, false, true, false, true, false, true, true, false, true, false] }, // Phrygian\r\n        { name: \"Locrian\", realName: \"locrian\", flags: [true, true, false, true, false, true, true, false, true, false, true, false] }, // Locrian\r\n        { name: \"Lydian Dominant\", realName: \"lydian dominant\", flags: [true, false, true, false, true, false, true, true, false, true, true, false] }, // Lydian Dominant\r\n        { name: \"Phrygian Dominant\", realName: \"phrygian dominant\", flags: [true, true, false, false, true, true, false, true, true, false, true, false] }, // Phrygian Dominant\r\n        { name: \"Harmonic Major\", realName: \"harmonic major\", flags: [true, false, true, false, true, true, false, true, true, false, false, true] }, // Harmonic Major\r\n        { name: \"Harmonic Minor\", realName: \"harmonic minor\", flags: [true, false, true, true, false, true, false, true, true, false, false, true] }, // Harmonic Minor\r\n        { name: \"Melodic Minor\", realName: \"melodic minor\", flags: [true, false, true, true, false, true, false, true, false, true, false, true] }, // Melodic Minor\r\n        { name: \"Blues Major\", realName: \"blues major\", flags: [true, false, true, true, true,false, false, true, false, true, false, false] }, // Blues Major\r\n        { name: \"Blues\", realName: \"blues\", flags: [true, false, false, true, false, true, true, true, false, false, true, false] }, // Blues\r\n        { name: \"Altered\", realName: \"altered\", flags: [true, true, false, true, true, false, true, false, true, false, true, false] }, // Altered\r\n        { name: \"Major Pentatonic\", realName: \"major pentatonic\", flags: [true, false, true, false, true, false, false, true, false, true, false, false] }, // Major Pentatonic\r\n        { name: \"Minor Pentatonic\", realName: \"minor pentatonic\", flags: [true, false, false, true, false, true, false, true, false, false, true, false] }, // Minor Pentatonic\r\n        { name: \"Whole Tone\", realName: \"whole tone\", flags: [true, false, true, false, true, false, true, false, true, false, true, false] }, // Whole Tone\r\n        { name: \"Octatonic\", realName: \"octatonic\", flags: [true, false, true, true, false, true, true, false, true, true, false, true] }, // Octatonic\r\n        { name: \"Hexatonic\", realName: \"hexatonic\", flags: [true, false, false, true, true, false, false, true, true, false, false, true] }, // Hexatonic\r\n        { name: \"No Dabbing\", realName: \"no dabbing\", flags:[true, true, false, true, true, true, true, true, true, false, true, false] },\r\n\t//modbox\r\n\t{ name: \"Jacked Toad\", realName: \"jacked toad\", flags: [true, false, true, true, false, true, true, true, true, false, true, true] },\r\n\t{ name: \"Dumb\", realName: \"Originally named, currently named, and will always be named 'dumb.'\", flags: [true, false, false, false, false, true, true, true, true, false, false, true] },\r\n        { name: \"Test Scale\", realName: \"**t\", flags: [true, true, false, false, false, true, true, false, false, true, true, false] },\r\n\t// todbox\r\n\t//{ name: \"die\", realName: \"death\", flags: [true, false, false, false, false, false, false, false, true, false, false, false] },\r\n\t//wackybox\r\n        // { name: \"Rythmic\", realName: \"Pretty straightforward.\", flags: [true, false, false, false, false, false, false, false, false, false, false, false] },\r\n        //todbox\r\n\t{ name: \"Custom\", realName: \"custom\", flags: [true, false, true, true, false, false, false, true, true, false, true, true] }, // Custom? considering allowing this one to be be completely configurable\r\n\t]);\r\n\tpublic static readonly keys: DictionaryArray<Key> = toNameMap([\r\n\t\t{ name: \"C\", isWhiteKey: true, basePitch: 12 }, // C0 has index 12 on the MIDI scale. C7 is 96, and C9 is 120. C10 is barely in the audible range.\r\n\t\t{ name: \"C♯\", isWhiteKey: false, basePitch: 13 },\r\n\t\t{ name: \"D\", isWhiteKey: true, basePitch: 14 },\r\n\t\t{ name: \"D♯\", isWhiteKey: false, basePitch: 15 },\r\n\t\t{ name: \"E\", isWhiteKey: true, basePitch: 16 },\r\n\t\t{ name: \"F\", isWhiteKey: true, basePitch: 17 },\r\n\t\t{ name: \"F♯\", isWhiteKey: false, basePitch: 18 },\r\n\t\t{ name: \"G\", isWhiteKey: true, basePitch: 19 },\r\n\t\t{ name: \"G♯\", isWhiteKey: false, basePitch: 20 },\r\n\t\t{ name: \"A\", isWhiteKey: true, basePitch: 21 },\r\n\t\t{ name: \"A♯\", isWhiteKey: false, basePitch: 22 },\r\n        { name: \"B\", isWhiteKey: true, basePitch: 23 },\r\n\t\t\t\t// { name: \"C+\", isWhiteKey: false, basePitch: 24 },\r\n\t\t//taken from todbox, called \"B#\" for some reason lol\r\n\t\t// { name: \"G- (actually F#-)\", isWhiteKey: false, basePitch: 6 },\r\n        // { name: \"C-\", isWhiteKey: true, basePitch: 0 },\r\n\t    //brucebox\r\n\t\t//g- isn't actually g-???\r\n\t\t// { name: \"oh no (F-)\", isWhiteKey: true, basePitch: 5 },\r\n\t\t//shitbox\r\n\t]);\r\n\tpublic static readonly blackKeyNameParents: ReadonlyArray<number> = [-1, 1, -1, 1, -1, 1, -1, -1, 1, -1, 1, -1];\r\n\tpublic static readonly tempoMin:                    number = 1;\r\n\tpublic static readonly tempoMax:                    number = 500;\r\n\tpublic static readonly octaveMin:                   number = -2;\r\n\tpublic static readonly octaveMax:                   number = 2;\r\n    public static readonly echoDelayRange:              number = 24;\r\n    public static readonly echoDelayStepTicks:          number = 4;\r\n    public static readonly echoSustainRange:            number = 8;\r\n    public static readonly echoShelfHz:                 number = 4000.0; // The cutoff freq of the shelf filter that is used to decay echoes.\r\n    public static readonly echoShelfGain:               number = Math.pow(2.0, -0.5);\r\n    public static readonly reverbShelfHz:               number = 8000.0; // The cutoff freq of the shelf filter that is used to decay reverb.\r\n    public static readonly reverbShelfGain:             number = Math.pow(2.0, -1.5);\r\n\tpublic static readonly reverbRange:                 number = 32;\r\n    public static readonly reverbDelayBufferSize:       number = 16384; // TODO: Compute a buffer size based on sample rate.\r\n    public static readonly reverbDelayBufferMask:       number = Config.reverbDelayBufferSize - 1; // TODO: Compute a buffer size based on sample rate.\r\n    public static readonly phaserMixRange:              number = 32; \r\n    public static readonly phaserFeedbackRange:         number = 32; \r\n    public static readonly phaserFreqRange:             number = 32; \r\n    public static readonly phaserMinFreq:               number = 8.0; \r\n    public static readonly phaserMaxFreq:               number = 20000.0; \r\n    public static readonly phaserMinStages:             number = 0; \r\n    public static readonly phaserMaxStages:             number = 32; \r\n    public static readonly beatsPerBarMin:              number = 1;\r\n\tpublic static readonly beatsPerBarMax:              number = 64;\r\n\tpublic static readonly barCountMin:                 number = 1;\r\n\tpublic static readonly barCountMax:                 number = 1024;\r\n    public static readonly instrumentCountMin:          number = 1;\r\n    public static readonly layeredInstrumentCountMax:   number = 10;\r\n\t//this still hasn't been properly tested...\r\n    public static readonly patternInstrumentCountMax:   number = 10;\r\n\tpublic static readonly partsPerBeat:                number = 24;\r\n\tpublic static readonly ticksPerPart:                number = 2;\r\n\tpublic static readonly ticksPerArpeggio:            number = 3;\r\n\tpublic static readonly arpeggioPatterns: ReadonlyArray<ReadonlyArray<number>> = [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3], [0, 1, 2, 3, 4], [0, 1, 2, 3, 4, 5], [0, 1, 2, 3, 4, 5, 6], [0, 1, 2, 3, 4, 5, 6, 7] ];\r\n\tpublic static readonly rhythms: DictionaryArray<Rhythm> = toNameMap([\r\n\t\t{ name: \"÷1 (whole notes)\", stepsPerBeat: 1, /*ticksPerArpeggio: 6, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]],*/ roundUpThresholds: [3] },\r\n\t\t{ name: \"÷2 (half notes)\", stepsPerBeat: 2, /*ticksPerArpeggio: 5, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1]],*/ roundUpThresholds: [3, 9] },\r\n\t\t{ name: \"÷3 (triplets)\", stepsPerBeat: 3, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 5, /*8*/ 12, /*16*/ 18 /*24*/] },\r\n\t\t{ name: \"÷4 (standard)\", stepsPerBeat: 4, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 0, 1, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: [/*0*/ 3, /*6*/ 9, /*12*/ 17, /*18*/ 21 /*24*/] },\r\n\t\t{ name: \"÷6 (sextuplets)\", stepsPerBeat: 6, /*ticksPerArpeggio: 4, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷8 (32nd notes)\", stepsPerBeat: 8, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"÷12 (doudectuplets)\", stepsPerBeat: 12, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1]]*/ roundUpThresholds: null },\r\n\t\t{ name: \"freehand\", stepsPerBeat: 24, /*ticksPerArpeggio: 3, arpeggioPatterns: [[0], [0, 1], [0, 1, 2, 1], [0, 1, 2, 3]]*/ roundUpThresholds: null },\r\n\t]);\r\n\r\n    public static readonly instrumentTypeNames: ReadonlyArray<string> = [\"chip\", \"FM\", \"noise\", \"spectrum\", \"drumset\", \"harmonics\", \"PWM\", \"Picked String\", \"supersaw\", \"custom chip\", \"mod\", \"FM6op\"];\r\n\tpublic static readonly instrumentTypeHasSpecialInterval: ReadonlyArray<boolean> = [true, true, false, false, false, true, false, false, false, false, false];\r\n    public static readonly chipBaseExpression: number = 0.03375; // Doubled by unison feature, but affected by expression adjustments per unison setting and wave shape.\r\n    public static readonly fmBaseExpression: number = 0.03;\r\n    public static readonly noiseBaseExpression: number = 0.19;\r\n    public static readonly spectrumBaseExpression: number = 0.3; // Spectrum can be in pitch or noise channels, the expression is doubled for noise.\r\n    public static readonly drumsetBaseExpression: number = 0.45; // Drums tend to be loud but brief!\r\n    public static readonly harmonicsBaseExpression: number = 0.025;\r\n    public static readonly pwmBaseExpression: number = 0.04725; // It's actually closer to half of this, the synthesized pulse amplitude range is only .5 to -.5, but also note that the fundamental sine partial amplitude of a square wave is 4/π times the measured square wave amplitude.\r\n    public static readonly supersawBaseExpression:  number = 0.061425; // It's actually closer to half of this, the synthesized sawtooth amplitude range is only .5 to -.5.\r\n    public static readonly pickedStringBaseExpression: number = 0.025; // Same as harmonics.\r\n    public static readonly distortionBaseVolume: number = 0.011; // Distortion is not affected by pitchDamping, which otherwise approximately halves expression for notes around the middle of the range.\r\n    public static readonly bitcrusherBaseVolume: number = 0.010; // Also not affected by pitchDamping, used when bit crushing is maxed out (aka \"1-bit\" output).\r\n\tpublic static rawChipWaves: DictionaryArray<ChipWave> = toNameMap([\r\n        { name: \"rounded\", expression: 0.94, samples: centerWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0, -0.2, -0.4, -0.5, -0.6, -0.7, -0.8, -0.85, -0.9, -0.95, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.95, -0.9, -0.85, -0.8, -0.7, -0.6, -0.5, -0.4, -0.2]) },\r\n        { name: \"triangle\", expression: 1.0, samples: centerWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 7.0 / 15.0, 9.0 / 15.0, 11.0 / 15.0, 13.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 13.0 / 15.0, 11.0 / 15.0, 9.0 / 15.0, 7.0 / 15.0, 5.0 / 15.0, 3.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -3.0 / 15.0, -5.0 / 15.0, -7.0 / 15.0, -9.0 / 15.0, -11.0 / 15.0, -13.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -13.0 / 15.0, -11.0 / 15.0, -9.0 / 15.0, -7.0 / 15.0, -5.0 / 15.0, -3.0 / 15.0, -1.0 / 15.0]) },\r\n        { name: \"square\", expression: 0.5, samples: centerWave([1.0, -1.0]) },\r\n        { name: \"1/4 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0]) },\r\n        { name: \"1/8 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n        { name: \"sawtooth\", expression: 0.65, samples: centerWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n        { name: \"double saw\", expression: 0.5, samples: centerWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n        { name: \"double pulse\", expression: 0.4, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n        { name: \"spiky\", expression: 0.4, samples: centerWave([1.0, -1.0, 1.0, -1.0, 1.0, 0.0]) },\r\n        { name: \"sine\", expression: 0.88, samples: centerAndNormalizeWave([8.0, 9.0, 11.0, 12.0, 13.0, 14.0, 15.0, 15.0, 15.0, 15.0, 14.0, 14.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 2.0, 4.0, 5.0, 6.0]) },\r\n        { name: \"flute\", expression: 0.8, samples: centerAndNormalizeWave([3.0, 4.0, 6.0, 8.0, 10.0, 11.0, 13.0, 14.0, 15.0, 15.0, 14.0, 13.0, 11.0, 8.0, 5.0, 3.0]) },\r\n        { name: \"harp\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 3.0, 3.0, 3.0, 4.0, 5.0, 5.0, 6.0, 7.0, 8.0, 9.0, 11.0, 11.0, 13.0, 13.0, 15.0, 15.0, 14.0, 12.0, 11.0, 10.0, 9.0, 8.0, 7.0, 7.0, 5.0, 4.0, 3.0, 2.0, 1.0, 0.0, 0.0]) },\r\n        { name: \"sharp clarinet\", expression: 0.38, samples: centerAndNormalizeWave([0.0, 0.0, 0.0, 1.0, 1.0, 8.0, 8.0, 9.0, 9.0, 9.0, 8.0, 8.0, 8.0, 8.0, 8.0, 9.0, 9.0, 7.0, 9.0, 9.0, 10.0, 4.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]) },\r\n        { name: \"soft clarinet\", expression: 0.45, samples: centerAndNormalizeWave([0.0, 1.0, 5.0, 8.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 9.0, 11.0, 11.0, 12.0, 13.0, 12.0, 10.0, 9.0, 7.0, 6.0, 4.0, 3.0, 3.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n        { name: \"alto sax\", expression: 0.3, samples: centerAndNormalizeWave([5.0, 5.0, 6.0, 4.0, 3.0, 6.0, 8.0, 7.0, 2.0, 1.0, 5.0, 6.0, 5.0, 4.0, 5.0, 7.0, 9.0, 11.0, 13.0, 14.0, 14.0, 14.0, 14.0, 13.0, 10.0, 8.0, 7.0, 7.0, 4.0, 3.0, 4.0, 2.0]) },\r\n        { name: \"bassoon\", expression: 0.35, samples: centerAndNormalizeWave([9.0, 9.0, 7.0, 6.0, 5.0, 4.0, 4.0, 4.0, 4.0, 5.0, 7.0, 8.0, 9.0, 10.0, 11.0, 13.0, 13.0, 11.0, 10.0, 9.0, 7.0, 6.0, 4.0, 2.0, 1.0, 1.0, 1.0, 2.0, 2.0, 5.0, 11.0, 14.0]) },\r\n        { name: \"trumpet\", expression: 0.22, samples: centerAndNormalizeWave([10.0, 11.0, 8.0, 6.0, 5.0, 5.0, 5.0, 6.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 7.0, 7.0, 7.0, 7.0, 7.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 6.0, 7.0, 8.0, 9.0, 11.0, 14.0]) },\r\n        { name: \"electric guitar\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 12.0, 12.0, 10.0, 6.0, 6.0, 8.0, 0.0, 2.0, 4.0, 8.0, 10.0, 9.0, 10.0, 1.0, 7.0, 11.0, 3.0, 6.0, 6.0, 8.0, 13.0, 14.0, 2.0, 0.0, 12.0, 8.0, 4.0, 13.0, 11.0, 10.0, 13.0]) },\r\n        { name: \"organ\", expression: 0.2, samples: centerAndNormalizeWave([11.0, 10.0, 12.0, 11.0, 14.0, 7.0, 5.0, 5.0, 12.0, 10.0, 10.0, 9.0, 12.0, 6.0, 4.0, 5.0, 13.0, 12.0, 12.0, 10.0, 12.0, 5.0, 2.0, 2.0, 8.0, 6.0, 6.0, 5.0, 8.0, 3.0, 2.0, 1.0]) },\r\n        { name: \"pan flute\", expression: 0.35, samples: centerAndNormalizeWave([1.0, 4.0, 7.0, 6.0, 7.0, 9.0, 7.0, 7.0, 11.0, 12.0, 13.0, 15.0, 13.0, 11.0, 11.0, 12.0, 13.0, 10.0, 7.0, 5.0, 3.0, 6.0, 10.0, 7.0, 3.0, 3.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0]) },\r\n        { name: \"glitch\", expression: 0.5, samples: centerWave([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n        { name: \"trapezoid\", expression: 1.0, samples: centerWave([1.0 / 15.0, 6.0 / 15.0, 10.0 / 15.0, 14.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 15.0 / 15.0, 14.0 / 15.0, 10.0 / 15.0, 6.0 / 15.0, 1.0 / 15.0, -1.0 / 15.0, -6.0 / 15.0, -10.0 / 15.0, -14.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -15.0 / 15.0, -14.0 / 15.0, -10.0 / 15.0, -6.0 / 15.0, -1.0 / 15.0,])},\r\n   \t//normal\r\n{ name: \"modbox 10% pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t{ name: \"modbox sunsoft bass\", expression: 1.0, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, 1.0, 0.6875, 0.5, 0.625, 0.625, 0.5, 0.375, 0.5625, 0.4375, 0.5625, 0.4375, 0.4375, 0.3125, 0.1875, 0.1875, 0.375, 0.5625, 0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\r\n\t{ name: \"modbox loud pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.7, 0.1, 0.1, 0, 0, 0, 0, 0, 0.1, 0.2, 0.15, 0.25, 0.125, 0.215, 0.345, 4.0]) },\r\n\t   { name: \"modbox sax\", expression: 0.5, samples: centerAndNormalizeWave([1.0 / 15.0, 3.0 / 15.0, 5.0 / 15.0, 9.0, 0.06]) },\r\n\t    { name: \"modbox guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.5, 3.5, 3.0, -0.5, -0.25, -1.0]) },\r\n\t  { name: \"modbox sine\", expression: 0.5, samples: centerAndNormalizeWave([0.0, 0.05, 0.125, 0.2, 0.25, 0.3, 0.425, 0.475, 0.525, 0.625, 0.675, 0.725, 0.775, 0.8, 0.825, 0.875, 0.9, 0.925, 0.95, 0.975, 0.98, 0.99, 0.995, 1, 0.995, 0.99, 0.98, 0.975, 0.95, 0.925, 0.9, 0.875, 0.825, 0.8, 0.775, 0.725, 0.675, 0.625, 0.525, 0.475, 0.425, 0.3, 0.25, 0.2, 0.125, 0.05, 0.0, -0.05, -0.125, -0.2, -0.25, -0.3, -0.425, -0.475, -0.525, -0.625, -0.675, -0.725, -0.775, -0.8, -0.825, -0.875, -0.9, -0.925, -0.95, -0.975, -0.98, -0.99, -0.995, -1, -0.995, -0.99, -0.98, -0.975, -0.95, -0.925, -0.9, -0.875, -0.825, -0.8, -0.775, -0.725, -0.675, -0.625, -0.525, -0.475, -0.425, -0.3, -0.25, -0.2, -0.125, -0.05]) },\r\n\t   { name: \"modbox atari bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]) },\r\n\t    { name: \"modbox atari pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]) },\r\n\t  { name: \"modbox 1% pulse\", expression: 0.5, samples: centerAndNormalizeWave},\r\n\t   { name: \"modbox curved sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 1.0 / 2.0, 1.0 / 3.0, 1.0 / 4.0]) },\r\n\t { name: \"modbox viola\", expression: 0.45, samples: centerAndNormalizeWave([-0.9, -1.0, -0.85, -0.775, -0.7, -0.6, -0.5, -0.4, -0.325, -0.225, -0.2, -0.125, -0.1, -0.11, -0.125, -0.15, -0.175, -0.18, -0.2, -0.21, -0.22, -0.21, -0.2, -0.175, -0.15, -0.1, -0.5, 0.75, 0.11, 0.175, 0.2, 0.25, 0.26, 0.275, 0.26, 0.25, 0.225, 0.2, 0.19, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.275, 0.28, 0.29, 0.3, 0.29, 0.28, 0.27, 0.26, 0.25, 0.225, 0.2, 0.175, 0.15, 0.1, 0.075, 0.0, -0.01, -0.025, 0.025, 0.075, 0.2, 0.3, 0.475, 0.6, 0.75, 0.85, 0.85, 1.0, 0.99, 0.95, 0.8, 0.675, 0.475, 0.275, 0.01, -0.15, -0.3, -0.475, -0.5, -0.6, -0.71, -0.81, -0.9, -1.0, -0.9]) },\r\n        { name: \"modbox brass\", expression: 0.45, samples: centerAndNormalizeWave([-1.0, -0.95, -0.975, -0.9, -0.85, -0.8, -0.775, -0.65, -0.6, -0.5, -0.475, -0.35, -0.275, -0.2, -0.125, -0.05, 0.0, 0.075, 0.125, 0.15, 0.20, 0.21, 0.225, 0.25, 0.225, 0.21, 0.20, 0.19, 0.175, 0.125, 0.10, 0.075, 0.06, 0.05, 0.04, 0.025, 0.04, 0.05, 0.10, 0.15, 0.225, 0.325, 0.425, 0.575, 0.70, 0.85, 0.95, 1.0, 0.9, 0.675, 0.375, 0.2, 0.275, 0.4, 0.5, 0.55, 0.6, 0.625, 0.65, 0.65, 0.65, 0.65, 0.64, 0.6, 0.55, 0.5, 0.4, 0.325, 0.25, 0.15, 0.05, -0.05, -0.15, -0.275, -0.35, -0.45, -0.55, -0.65, -0.7, -0.78, -0.825, -0.9, -0.925, -0.95, -0.975]) },\r\n      { name: \"modbox acoustic bass\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.0, 0.1, -0.1, -0.2, -0.4, -0.3, -1.0]) },\r\n\t   { name: \"modbox lyre\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, 4.0, 2.15, 4.13, 5.15, 0.0, -0.05, 1.0]) },\r\n\t { name: \"modbox ramp pulse\", expression: 0.5, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },  \r\n\t  { name: \"modbox piccolo\", expression: 0.5, samples: centerAndNormalizeWave([1, 4, 2, 1, -0.1, -1, -0.12]) },\r\n     { name: \"modbox squaretooth\", expression: 0.5, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\r\n\t  { name: \"modbox flatline\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]) },\r\n\t  { name: \"modbox pnryshk a (u5)\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.0]) },\r\n\t  { name: \"modbox pnryshk b (riff)\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -0.9, 0.8, -0.7, 0.6, -0.5, 0.4, -0.3, 0.2, -0.1, 0.0, -0.1, 0.2, -0.3, 0.4, -0.5, 0.6, -0.7, 0.8, -0.9, 1.0]) },\r\n\t//modbox\r\n\t{ name: \"sandbox shrill lute\", expression: 0.94, samples: centerAndNormalizeWave([1.0, 1.5, 1.25, 1.2, 1.3, 1.5]) },\r\n        { name: \"sandbox bassoon\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0]) },\r\n        { name: \"sandbox shrill bass\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 0, 0, 1, 0, 1, 0, 0, 0]) },\r\n      { name: \"sandbox nes pulse\", expression: 0.4, samples: centerAndNormalizeWave([2.1, -2.2, 1.2, 3]) },\r\n     { name: \"sandbox saw bass\", expression: 0.25, samples: centerAndNormalizeWave([1, 1, 1, 1, 0, 2, 1, 2, 3, 1, -2, 1, 4, 1, 4, 2, 1, 6, -3, 4, 2, 1, 5, 1, 4, 1, 5, 6, 7, 1, 6, 1, 4, 1, 9]) },\r\n        { name: \"sandbox euphonium\", expression: 0.3, samples: centerAndNormalizeWave([0, 1, 2, 1, 2, 1, 4, 2, 5, 0, -2, 1, 5, 1, 2, 1, 2, 4, 5, 1, 5, -2, 5, 10, 1]) },\r\n      { name: \"sandbox shrill pulse\", expression: 0.3, samples: centerAndNormalizeWave([4 -2, 0, 4, 1, 4, 6, 7, 3]) },\r\n      { name: \"sandbox r-sawtooth\", expression: 0.2, samples: centerAndNormalizeWave([6.1, -2.9, 1.4, -2.9]) },\r\n        { name: \"sandbox recorder\", expression: 0.2, samples: centerAndNormalizeWave([5.0, -5.1, 4.0, -4.1, 3.0, -3.1, 2.0, -2.1, 1.0, -1.1, 6.0]) },\r\n        { name: \"sandbox narrow saw\", expression: 1.2, samples: centerAndNormalizeWave([0.1, 0.13 / -0.1 ,0.13 / -0.3 ,0.13 / -0.5 ,0.13 / -0.7 ,0.13 / -0.9 ,0.13 / -0.11 ,0.13 / -0.31 ,0.13 / -0.51 ,0.13 / -0.71 ,0.13 / -0.91 ,0.13 / -0.12 ,0.13 / -0.32 ,0.13 / -0.52 ,0.13 / -0.72 ,0.13 / -0.92 ,0.13 / -0.13 ,0.13 / 0.13 ,0.13 / 0.92 ,0.13 / 0.72 ,0.13 / 0.52 ,0.13 / 0.32 ,0.13 / 0.12 ,0.13 / 0.91 ,0.13 / 0.71 ,0.13 / 0.51 ,0.13 / 0.31 ,0.13 / 0.11 ,0.13 / 0.9 ,0.13 / 0.7 ,0.13 / 0.5 ,0.13 / 0.3 ,0.13]) },\r\n        { name: \"sandbox deep square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 2.25, 1.0, -1.0, -2.25, -1.0]) },\r\n      //cut\r\n\t  { name: \"sandbox ring pulse\", expression: 1.0, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n      { name: \"sandbox double sine\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.8, 1.7, 1.6, 1.5, 1.4, 1.3, 1.2, 1.1, 1.0, 0.0, -1.0, -1.1, -1.2, -1.3, -1.4, -1.5, -1.6, -1.7, -1.8, -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1.0]) },\r\n        { name: \"sandbox contrabass\", expression: 0.5, samples: centerAndNormalizeWave([4.20, 6.9, 1.337, 6.66]) },\r\n       { name: \"sandbox double bass\", expression: 0.4, samples: centerAndNormalizeWave([0.0, 0.1875, 0.3125, 0.5625, 0.5, 0.75, 0.875, 1.0, -1.0, -0.6875, -0.5, -0.625, -0.625, -0.5, -0.375, -0.5625, -0.4375, -0.5625, -0.4375, -0.4375, -0.3125, -0.1875, 0.1875, 0.375, 0.5625, -0.5625, 0.5625, 0.5625, 0.5625, 0.4375, 0.25, 0.0]) },\r\n     //   { name: \"sandbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },     \r\n\t//from sandbox, are these correct????\r\n\t  { name: \"haileybox test1\", expression: 0.5, samples: centerAndNormalizeWave([1.0, 0.5, -1.0]) },\r\n\t  { name: \"brucebox pokey 4bit lfsr\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0]) },\r\n\t{ name: \"brucebox pokey 5step bass\", expression: 0.5,samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0]) },\r\n\t{ name: \"brucebox isolated spiky\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -1.0, 1.0, -1.0, 1.0, -1.0]) },\r\n\t//brucebox\r\n\t{ name: \"nerdbox unnamed 1\", expression: 0.5, samples: centerAndNormalizeWave([0.2 , 0.8 / 0.2, 0.7, -0.4, -1.0, 0.5, -0.5 / 0.6]) },\r\n\t{ name: \"nerdbox unnamed 2\", expression: 0.5, samples: centerAndNormalizeWave([2.0 , 5.0 / 55.0 , -9.0 , 6.5 / 6.5 , -55.0, 18.5 / -26.0]) },\r\n//nerdbox\r\n\t { name: \"zefbox semi-square\", expression: 1.0, samples: centerAndNormalizeWave([1.0, 1.5, 2.0, 2.5, 2.5, 2.5, 2.0, 1.5, 1.0]) },\r\n { name: \"zefbox squaretal\", expression: 0.7, samples: centerAndNormalizeWave([1.5, 1.0, 1.5, -1.5, -1.0, -1.5]) },\r\n//\t{ name: \"zefbox sawtooth\", expression: 0.65, samples: centerAndNormalizeWave([1.0 / 31.0, 3.0 / 31.0, 5.0 / 31.0, 7.0 / 31.0, 9.0 / 31.0, 11.0 / 31.0, 13.0 / 31.0, 15.0 / 31.0, 17.0 / 31.0, 19.0 / 31.0, 21.0 / 31.0, 23.0 / 31.0, 25.0 / 31.0, 27.0 / 31.0, 29.0 / 31.0, 31.0 / 31.0, -31.0 / 31.0, -29.0 / 31.0, -27.0 / 31.0, -25.0 / 31.0, -23.0 / 31.0, -21.0 / 31.0, -19.0 / 31.0, -17.0 / 31.0, -15.0 / 31.0, -13.0 / 31.0, -11.0 / 31.0, -9.0 / 31.0, -7.0 / 31.0, -5.0 / 31.0, -3.0 / 31.0, -1.0 / 31.0]) },\r\n\t { name: \"zefbox saw wide\", expression: 0.65, samples: centerAndNormalizeWave([0.0, -0.4, -0.8, -1.2, -1.6 , -2.0, 0.0, -0.4, -0.8, -1.2, -1.6]) },\r\n\t{ name: \"zefbox saw narrow\", expression: 0.65,samples: centerAndNormalizeWave([1, 0.5, 1, 0.5, 1, 0.5, 1, 2, 1, 2 ,1]) },\r\n\t { name: \"zefbox deep sawtooth\", expression: 0.5, samples: centerAndNormalizeWave([0, 2, 3, 4, 4.5, 5, 5.5, 6, 6.25, 6.5, 6.75, 7, 6.75, 6.5, 6.25, 6, 5.5, 5, 4.5, 4, 3, 2, 1]) },\r\n\t//{ name: \"zefbox double saw\", expression: 0.5, samples: centerAndNormalizeWave([0.0, -0.2, -0.4, -0.6, -0.8, -1.0, 1.0, -0.8, -0.6, -0.4, -0.2, 1.0, 0.8, 0.6, 0.4, 0.2]) },\r\n\t { name: \"zefbox sawtal\", expression: 0.3, samples: centerAndNormalizeWave([1.5, 1.0, 1.25, -0.5, 1.5, -0.5, 0.0, -1.5, 1.5, 0.0, 0.5, -1.5, 0.5, 1.25, -1.0, -1.5]) },\r\n\t{ name: \"zefbox deep sawtal\", expression: 0.7, samples: centerAndNormalizeWave([0.75, 0.25, 0.5, -0.5, 0.5, -0.5, -0.25, -0.75]) },\r\n//\t { name: \"zefbox squaretooth\", expression: 0.25, samples: centerAndNormalizeWave([0.2, 1.0, 2.6, 1.0, 0.0, -2.4]) },\r\n\t//identical to the modbox squaretooth, just louder - this was pre-2.0 ultrabox, but I've added backwards compatibility stuff related to it so yeah\r\n\t{ name: \"zefbox pulse\", expression: 0.5, samples: centerAndNormalizeWave([1.0, -2.0, -2.0, -1.5, -1.5, -1.25, -1.25, -1.0, -1.0]) },\r\n//{ name: \"zefbox double pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n{ name: \"zefbox triple pulse\", expression: 0.4, samples: centerAndNormalizeWave([1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.5, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, 1.5]) },\r\n{ name: \"zefbox high pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, -2, 2, -3, 3, -4, 5, -4, 3, -3, 2, -2, 1]) },\r\n{ name: \"zefbox deep pulse\", expression: 0.2, samples: centerAndNormalizeWave([1, 2, 2, -2, -2, -3, -4, -4, -5, -5, -5, -5, 0, -1, -2]) },\r\n//from zefbox, are these correct????\r\n\t //\"triangle\", \"square\", \"semi-square\", \"deep square\", \"squaretal\", \"sawtooth\", \"saw wide\", \"saw narrow\",  \"deep sawtooth\", \"double saw\", \"sawtal\", \"deep sawtal\", \"squaretooth\", \"pulse\", \"pulse wide\", \"pulse narrow\", \"double pulse\", \"triple pulse\", \"high pulse\", \"deep pulse\",  \"nes pulse\", \"spiky\", \"plateau\", \"sinusoid\"\r\n\t { name: \"wackybox guitar string\", expression: 0.6, samples: centerAndNormalizeWave([0, 63, 63, 63, 63, 19, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 11, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 27, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 63, 34, 63, 63, 63, 63]) },\r\n\t\t{ name: \"wackybox intense\", expression: 0.6, samples: centerAndNormalizeWave([36, 25, 33, 35, 18, 51, 22, 40, 27, 37, 31, 33, 25, 29, 41, 23, 31, 31, 45, 20, 37, 23, 29, 26, 42, 29, 33, 26, 31, 27, 40, 25, 40, 26, 37, 24, 41, 32, 0, 32, 33, 29, 32, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31, 31]) },\r\n\t\t{ name: \"wackybox buzz wave\", expression: 0.6, samples: centerAndNormalizeWave([0, 1, 1, 2, 4, 4, 4, 4, 5, 5, 6, 6, 6, 7, 8, 8, 8, 9, 9, 9, 9, 9, 9, 8, 8, 8, 11, 15, 23, 62, 61, 60, 58, 56, 56, 54, 53, 52, 50, 49, 48, 47, 47, 45, 45, 45, 44, 44, 43, 43, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 43, 43, 53]) },\r\n        //wackybox\r\n\t\t        { name: \"todbox 1/3 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0]) },\r\n        { name: \"todbox 1/5 pulse\", expression: 0.5, samples: centerWave([1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t\t//these WEREN'T in pre-2.0 ultrabox, but I've added backwards compatibility stuff related to it so yeah\r\n\t\t{ name: \"todbox slap bass\", expression: 0.5, samples: centerAndNormalizeWave([1, 0.5, 0, 0.5, 1.25, 0.5, -0.25, 0.1, -0.1, 0.1, 1.1, 2.1, 3, 3.5, 2.9, 3.3, 2.7, 2.9, 2.3, 2, 1.9, 1.8, 1, 0.7, 0.9, 0.8, 0.4, 0.1, 0.0, 0.2, 0.4, 0.6, 0.5, 0.8]) },\r\n\t{ name: \"todbox harsh wave\", expression: 0.45, samples: centerAndNormalizeWave([1.0, -1.0, -1.0, -1.0, 0.5, 0.5, 0.5, 0.7, 0.39, 1.3, 0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0]) },\r\n\t{ name: \"todbox accordian\", expression: 0.5, samples: centerAndNormalizeWave([0, 1, 1, 2, 2, 1.5, 1.5, 0.8, 0, -2, -3.25, -4, -4.5, -5.5, -6, -5.75, -5.5, -5, -5, -5, -6, -6, -6, -5, -4, -3, -2, -1, 0.75, 1, 2, 3, 4, 5, 6, 6.5, 7.5, 8, 7.75, 6, 5.25, 5, 5, 5, 5, 5, 4.25, 3.75, 3.25, 2.75, 1.25, -0.75, -2, -0.75, 1.25, 1.25, 2, 2, 2, 2, 1.5, -1, -2, -1, 1.5, 2,  2.75, 2.75, 2.75, 3, 2.75, -1, -2, -2.5, -2, -1, -2.25, -2.75, -2, -3, -1.75, 1, 2, 3.5, 4, 5.25, 6, 8, 9.75, 10, 9.5, 9, 8.5, 7.5, 6.5, 5.25, 5, 4.5, 4, 4, 4, 3.25, 2.5, 2, 1, -0.5, -2, -3.5, -4, -4, -4, -3.75, -3, -2, -1]) },\r\n    //from todbox\r\n\t{ name: \"todbox beta banana wave\", expression: 0.8, samples: centerAndNormalizeWave([0.0, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 0.85, 0.9, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.95, 0.9, 0.85, 0.8, 0.7, 0.6, 0.5, 0.4, 0.2, 0.0]) },\r\n\t{ name: \"todbox beta test wave\", expression: 0.5, samples: centerAndNormalizeWave([56, 0, -52, 16, 3, 3, 2, -35, 20, 147, -53, 0, 0, 5, -6]) },\r\n\t//I don't like this one.\r\n\t{ name: \"todbox beta real snare\", expression: 1.0, samples: centerAndNormalizeWave([0.00000,-0.01208,-0.02997,-0.04382,-0.06042,-0.07529,-0.09116,-0.10654,-0.12189,-0.13751,-0.15289,-0.16849,-0.18387,-0.19974,-0.21484,-0.23071,-0.24557,-0.26144,-0.27731,-0.29141,-0.30350,-0.32416,-0.34406,-0.32947,-0.31158,-0.33725,-0.37579,-0.39746,-0.40201,-0.40906,-0.44180,-0.47229,-0.47379,-0.47733,-0.45239,-0.33954,-0.22894,-0.22443,-0.32138,-0.46371,-0.57178,-0.61081,-0.59998,-0.61459,-0.62189,-0.43979,-0.19217,-0.12643,-0.17252,-0.20956,-0.20981,-0.19217,-0.22845,-0.34332,-0.50629,-0.64307,-0.72922,-0.81384,-0.87857,-0.90149,-0.88687,-0.86169,-0.87781,-0.80478,-0.52493,-0.31308,-0.33249,-0.39395,-0.39017,-0.30301,-0.19949,-0.13071,-0.02493,0.14307,0.34961,0.52542,0.63223,0.68613,0.74710,0.87305,0.98184,0.98889,0.97052,0.99066,0.99747,0.99344,0.99469,0.99393,0.99570,0.99393,0.99521,0.99469,0.99420,0.99521,0.99420,0.99521,0.99469,0.99469,0.99521,0.99420,0.99545,0.99445,0.99469,0.99493,0.99420,0.99521,0.99393,0.99493,0.99469,0.99445,0.99570,0.99445,0.99521,0.99469,0.99469,0.99521,0.99420,0.99545,0.99445,0.99445,0.99493,0.99420,0.99545,0.99420,0.99493,0.99493,0.99420,0.99545,0.99445,0.99521,0.99469,0.99445,0.99545,0.99368,0.99393,0.99445,0.99268,0.97983,0.97229,0.95944,0.88486,0.76773,0.64481,0.53098,0.39847,0.19318,-0.03827,-0.20325,-0.39319,-0.68765,-0.88461,-0.93448,-0.96069,-0.97681,-0.98715,-0.99042,-0.99142,-0.99091,-0.99142,-0.99219,-0.99091,-0.99219,-0.99066,-0.99142,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99142,-0.99142,-0.99191,-0.99091,-0.99219,-0.99118,-0.99142,-0.99167,-0.99091,-0.99219,-0.99091,-0.99167,-0.99142,-0.99091,-0.99191,-0.99091,-0.99191,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99118,-0.99142,-0.99191,-0.99066,-0.99191,-0.99091,-0.99167,-0.99191,-0.99118,-0.99219,-0.99091,-0.99191,-0.99142,-0.99142,-0.99243,-0.98865,-0.98764,-0.99219,-0.98083,-0.92517,-0.92770,-0.91486,-0.59042,-0.15189,0.02945,0.05667,0.06195,0.00629,-0.18008,-0.56497,-0.88010,-0.92770,-0.92871,-0.97705,-0.99167,-0.98663,-0.99118,-0.99042,-0.99219,-0.99142,-0.99118,-0.98941,-0.99219,-1.00000,-0.97580,-0.95993,-0.99948,-0.98236,-0.84659,-0.74860,-0.70679,-0.59747,-0.48035,-0.41687,-0.36826,-0.29745,-0.18185,-0.06219,0.02164,0.07907,0.13123,0.18033,0.19620,0.15692,0.14053,0.20251,0.27530,0.30905,0.29092,0.27252,0.30402,0.32416,0.32214,0.35239,0.39670,0.43198,0.49420,0.58487,0.64154,0.65967,0.67050,0.67026,0.66522,0.65540,0.66119,0.70627,0.75842,0.78738,0.78940,0.78763,0.80402,0.85944,0.94559,0.98990,0.98160,0.98007,0.99368,0.99393,0.98538,0.97580,0.97101,0.93802,0.81812,0.64633,0.46649,0.28613,0.14685,0.08966,0.12543,0.20325,0.24557,0.18866,0.02795,-0.20175,-0.44205,-0.58713,-0.57629,-0.41385,-0.14255,0.18033,0.47882,0.68311,0.72314,0.62064,0.48309,0.43073,0.53577,0.72794,0.90250,0.97354,0.97000,0.98083,0.99191,0.99319,0.99493,0.99393,0.99521,0.99393,0.99545,0.99420,0.99493,0.99493,0.99445,0.99545,0.99420,0.99545,0.99243,0.98917,0.98386,0.97781,0.95844,0.89066,0.81561,0.78134,0.77277,0.75995,0.73022,0.67126,0.57178,0.47000,0.38361,0.29419,0.20703,0.14734,0.15866,0.25162,0.35818,0.45062,0.56750,0.69748,0.81232,0.89697,0.95062,0.97656,0.98615,0.99191,0.99219,0.99243,0.99368,0.99368,0.97028,0.95566,0.94559,0.82617,0.59973,0.38361,0.23901,0.15338,0.12921,0.11206,0.04382,-0.12946,-0.43552,-0.72644,-0.89847,-0.95465,-0.95541,-0.97229,-0.99268,-0.99319,-0.98840,-0.99142,-0.99167,-0.99091,-0.98840,-0.98965,-0.99368,-0.97455,-0.95010,-0.94684,-0.96219,-0.98514,-0.99243,-0.98889,-0.98917,-0.99142,-0.99219,-0.99091,-0.99191,-0.99142,-0.99142,-0.99191,-0.99066,-0.99167,-0.99091,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99167,-0.99091,-0.99219,-0.99091,-0.99191,-0.99142,-0.99118,-0.99191,-0.99066,-0.99191,-0.99091,-0.99118,-0.99243,-0.98941,-0.98462,-0.96976,-0.96320,-0.96194,-0.87305,-0.66196,-0.44809,-0.29495,-0.18085,-0.11813,-0.11334,-0.18564,-0.34885,-0.58237,-0.80450,-0.93726,-0.97806,-0.97354,-0.97531,-0.98990,-0.99368,-0.98941,-0.99219,-0.99091,-0.99142,-0.99167,-0.99091,-0.99191,-0.99118,-0.99219,-0.98236,-0.97781,-0.97656,-0.95135,-0.87204,-0.71335,-0.52139,-0.34232,-0.17783,-0.00906,0.14886,0.30450,0.48889,0.67404,0.84030,0.94128,0.97681,0.98462,0.98337,0.99142,0.99521,0.99493,0.99420,0.99445,0.99521,0.99393,0.99545,0.99445,0.99521,0.99521,0.99445,0.99570,0.99445,0.99521,0.99469,0.99445,0.99521,0.99420,0.99521,0.99445,0.99445,0.99521,0.99445,0.99545,0.99445,0.99469,0.99493,0.99393,0.99493,0.99445,0.99393,0.98285,0.97781,0.97479,0.92844,0.82114,0.66095,0.52417,0.46826,0.46722,0.47934,0.47379,0.47076,0.48209,0.42014,0.25439,0.10074,-0.00302,-0.08966,-0.16068,-0.21436,-0.22040,-0.15137,-0.00476,0.18536,0.37631,0.52292,0.62164,0.70425,0.74835,0.72366,0.63928,0.52567,0.40805,0.35666,0.42896,0.60175,0.80200,0.92743,0.96548,0.97632,0.98337,0.99066,0.99521,0.99420,0.99368,0.99292,0.98840,0.98083,0.96774,0.93323,0.85440,0.69470,0.47202,0.20425,-0.08890,-0.36423,-0.60025,-0.77481,-0.90173,-0.96017,-0.97028,-0.98108,-0.98840,-0.99219,-0.98990,-0.99219,-0.99142,-0.99142,-0.99219,-0.99091,-0.99243,-0.99066,-0.99142,-0.99142,-0.99118,-0.99191,-0.99066,-0.99167,-0.99142,-0.99142,-0.99219,-0.99091,-0.99191,-0.99118,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99191,-0.99118,-0.99219,-0.99091,-0.99167,-0.99142,-0.99142,-0.99219,-0.99091,-0.99191,-0.99142,-0.99118,-0.98917,-0.99042,-0.99445,-0.97330,-0.95590,-0.96219,-0.89670,-0.72241,-0.55112,-0.44809,-0.39319,-0.37833,-0.35641,-0.26270,-0.14230,-0.11282,-0.13525,-0.11536,-0.09671,-0.11511,-0.18060,-0.26874,-0.33374,-0.42215,-0.51358,-0.44785,-0.30450,-0.28613,-0.30527,-0.25037,-0.15390,-0.08286,-0.11157,-0.12592,-0.00327,0.13803,0.19141,0.12820,0.01788,-0.03952,-0.12592,-0.26773,-0.34634,-0.31384,-0.18060,-0.01080,0.13574,0.26120,0.36975,0.46573,0.55087,0.63626,0.73022,0.83072,0.92014,0.97177,0.98587,0.98413,0.99167,0.99445,0.99292,0.99219,0.98740,0.98007,0.96472,0.92239,0.82166,0.69067,0.57959,0.54962,0.59695,0.64255,0.64633,0.60629,0.55942,0.54910,0.58966,0.61887,0.56952,0.54181,0.59518,0.63248,0.63876,0.65463,0.73398,0.88312,0.96927,0.97101,0.97958,0.99344,0.99420,0.99268,0.99493,0.99469,0.99445,0.99521,0.99445,0.99545,0.99420,0.99493,0.99493,0.99420,0.99545,0.99420,0.99493,0.99420,0.99393,0.99420,0.98840,0.98309,0.98309,0.96069,0.88461,0.79370,0.72064,0.65765,0.59998,0.53247,0.49268,0.48615,0.44205,0.38034,0.36447,0.38715,0.39294,0.32645,0.19595,0.07782,-0.05893,-0.27832,-0.48309,-0.62619,-0.72995,-0.79999,-0.84583,-0.82166,-0.73575,-0.67227,-0.65491,-0.64960,-0.66397,-0.70175,-0.72894,-0.74658,-0.76724,-0.79520,-0.82846,-0.86523,-0.90527,-0.94382,-0.89948,-0.69849,-0.47479,-0.31662,-0.15414,-0.00729,0.07077,0.08237,0.04431,-0.02292,-0.11761,-0.24307,-0.36926,-0.45087,-0.46170,-0.40250,-0.30679,-0.17529,0.00000,0.14331,0.24179,0.36774,0.49545,0.56522,0.57907,0.56775,0.53851,0.51132,0.48688,0.41913,0.26044,0.00955,-0.26297,-0.46396,-0.62341,-0.82214,-0.94684,-0.96774,-0.97531,-0.98413,-0.99017,-0.98990,-0.99219,-0.99066,-0.99142,-0.99167,-0.99118,-0.99219,-0.98990,-0.99118,-0.99368,-0.99142,-0.97757,-0.97403,-0.98007,-0.96170,-0.86826,-0.67783,-0.52719,-0.48788,-0.45490,-0.43146,-0.47681,-0.54105,-0.57983,-0.60904,-0.62317,-0.59949,-0.55566,-0.52063,-0.52115,-0.55112,-0.56244,-0.58337,-0.65540,-0.73373,-0.77228,-0.74759,-0.68890,-0.64609,-0.61887,-0.58060,-0.50351,-0.40729,-0.33929,-0.35110,-0.42944,-0.47028,-0.42267,-0.32718,-0.20224,-0.05640,0.04556,0.10529,0.17630,0.26169,0.33197,0.32138,0.23776,0.20956,0.23148,0.20352,0.23325,0.39267,0.52719,0.58438,0.62289,0.66345,0.70023,0.66296,0.54330,0.42618,0.33475,0.24533,0.14105,0.03851,0.01358,0.09143,0.22845,0.34961,0.41711,0.48740,0.58914,0.69519,0.78186,0.84357,0.89822,0.95389,0.98135,0.98615,0.99167,0.99243,0.99445,0.99420,0.99469,0.99493,0.99393,0.99545,0.99445,0.99521,0.99469,0.99445,0.99521,0.99420,0.99469,0.98965,0.98715,0.98563,0.96295,0.91736,0.86624,0.82367,0.77554,0.68411,0.53549,0.38916,0.26120,0.11435,-0.04053,-0.18161,-0.23172,-0.19394,-0.15237,-0.10730,-0.02997,0.08588,0.22620,0.34305,0.44104,0.55740,0.65765,0.71259,0.69217,0.65363,0.69748,0.79572,0.89368,0.95514,0.97733,0.98413,0.98816,0.99243,0.99445,0.99243,0.97302,0.96674,0.97983,0.90378,0.71005,0.51056,0.40451,0.40982,0.41559,0.32996,0.24356,0.18866,0.11411,0.05365,0.01157,-0.03247,-0.09216,-0.16095,-0.23248,-0.31662,-0.39771,-0.48663,-0.59647,-0.71536,-0.82013,-0.85287,-0.82947,-0.84937,-0.92215,-0.97177,-0.98663,-0.98816,-0.98438,-0.99091,-0.99219,-0.99091,-0.99191,-0.99042,-0.99191,-0.99091,-0.99142,-0.99191,-0.99091,-0.99191,-0.99091,-0.99167,-0.99142]) },\r\n\t//from todbox beta (obviously)\r\n\t\r\n\t//{ name: \"ultrabox nes 12.5%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 0, 0, 0, 0, 0, 0]) },\r\n\t//{ name: \"ultrabox nes 25%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 1, 0, 0, 0, 0, 0]) },\r\n//\t{ name: \"ultrabox nes 50%\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([0, 1, 1, 1, 1, 0, 0, 0]) },\r\n//\t{ name: \"ultrabox nes 25% negated\", expression: 0.5, isSampled: false, samples: centerAndNormalizeWave([1, 0, 0, 1, 1, 1, 1, 1]) },\r\n\t//{ name: \"ultrabox nes triangle\", expression: 0.5, isSampled: true, isPercussion: false, extraSampleDetune: 63.28, samples: centerAndNormalizeWave([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]) },\r\n\t//{ name: \"ultrabox gameboy kirby triangle\", expression: 1.0, isSampled: false, samples: centerAndNormalizeWave([2,5,7,1,0,2,2,3,2,5,5,9,3,4,8,9,5,4,8,1,3,1,3,5,9,8,9,2,1,6,9,0,7,9,6,8,1,6]) },\r\n\t//{ name: \"ultrabox gameboy kirby bass\", expression: 1.0, isSampled: false, samples: centerAndNormalizeWave([4,5,7,2,6,8,3,3,0,8,1,4,2,1,1,4,8,6,7,3,7,8,3,8,7,7,7,5,7,4,3,9,8,7,8,7,0,7]) },\r\n\t\r\n\t\r\n\t{ name: \"ultrabox shortened od guitar\", expression: 0.5, samples: centerAndNormalizeWave([-0.82785,-0.67621,-0.40268,-0.43817,-0.45468,-0.22531,-0.18329,0.24750,0.71246,0.52155,0.56082,0.48395,0.33990,0.46957,0.27744,0.42313,0.47104,0.18796,0.12930,-0.13901,-0.07431,-0.16348,-0.74857,-0.73206,-0.35181,-0.26227,-0.41882,-0.27786,-0.19806,-0.19867,0.18643,0.24808,0.08847,-0.06964,0.06912,0.20474,-0.05304,0.29416,0.31967,0.14243,0.27521,-0.23932,-0.14752,0.12360,-0.26123,-0.26111,0.06616,0.26520,0.08090,0.15240,0.16254,-0.12061,0.04562,0.00131,0.04050,0.08182,-0.21729,-0.17041,-0.16312,-0.08563,0.06390,0.05099,0.05627,0.02728,0.00726,-0.13028,-0.05673,-0.14969,-0.17645,0.35492,0.16766,-0.00897,0.24326,-0.00461,-0.04456,0.01776,-0.04950,-0.01221,0.02039,0.07684,0.13397,0.39850,0.35962,0.13754,0.42310,0.27161,-0.17609,0.03659,0.10635,-0.21909,-0.22046,-0.20258,-0.40973,-0.40280,-0.40521,-0.66284]) },\r\n\t//based off an old mp3 in #modded-beepbox where someone tried to shorten the overdrive guitar into the size of other chip waves \r\n\t//search \"normie alert\" in beepcord\r\n]); \r\n\tpublic static chipWaves: DictionaryArray<ChipWave> = rawChipToIntegrated(Config.rawChipWaves);\r\n\tpublic static rawRawChipWaves: DictionaryArray<ChipWave> = Config.rawChipWaves;\r\n\r\n\tpublic static firstIndexForSamplesInChipWaveList: number = Config.chipWaves.length;\r\n  \r\n\t// Noise waves have too many samples to write by hand, they're generated on-demand by getDrumWave instead.\r\n\tpublic static readonly chipNoises: DictionaryArray<ChipNoise> = toNameMap([\r\n\t\t{ name: \"retro\", expression: 0.25, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"white\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t// The \"clang\" and \"buzz\" noises are based on similar noises in the modded beepbox! :D\r\n\t\t{ name: \"clang\", expression: 0.4, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"buzz\", expression: 0.3, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"hollow\", expression: 1.5, basePitch: 96, pitchFilterMult: 1.0, isSoft: true, samples: null },\r\n\t\t{ name: \"shine\", expression: 1.0, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"deep\", expression: 1.5, basePitch: 120, pitchFilterMult: 1024.0, isSoft: true, samples: null },\r\n\t\t{ name: \"cutter\", expression: 0.005, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"metallic\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n        { name: \"static\", expression: 1.0, basePitch: 96, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t// technically these are from the pandorasbox beta but whatever\r\n\t\t{ name: \"1-bit white\", expression: 0.5, basePitch: 74.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"1-bit metallic\", expression: 0.5, basePitch: 86.41, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t// ultrabox noises\r\n\t\t{ name: \"crackling\", expression: 0.9, basePitch: 69, pitchFilterMult: 1024.0, isSoft: false, samples: null },\r\n\t\t{ name: \"pink\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t\t{ name: \"brownian\", expression: 1.0, basePitch: 69, pitchFilterMult: 8.0, isSoft: true, samples: null },\r\n\t]);\r\n\t\r\n    public static readonly filterFreqStep: number = 1.0 / 4.0;\r\n    public static readonly filterFreqRange: number = 34;\r\n    public static readonly filterFreqReferenceSetting: number = 28;\r\n    public static readonly filterFreqReferenceHz: number = 8000.0;\r\n    public static readonly filterFreqMaxHz: number = Config.filterFreqReferenceHz * Math.pow(2.0, Config.filterFreqStep * (Config.filterFreqRange - 1 - Config.filterFreqReferenceSetting)); // ~19khz\r\n    public static readonly filterFreqMinHz: number = 8.0;\r\n    public static readonly filterGainRange: number = 15;\r\n    public static readonly filterGainCenter: number = 7;\r\n    public static readonly filterGainStep: number = 1.0 / 2.0;\r\n    public static readonly filterMaxPoints: number = 8;\r\n    public static readonly filterTypeNames: ReadonlyArray<string> = [\"low-pass\", \"high-pass\", \"peak\"]; // See FilterType enum above.\r\n    public static readonly filterMorphCount: number = 10; // Number of filter shapes allowed for modulating between. Counts the 0/default position.\r\n\r\n    public static readonly filterSimpleCutRange: number = 11;\r\n    public static readonly filterSimplePeakRange: number = 8;\r\n\r\n    public static readonly fadeInRange: number = 10;\r\n    public static readonly fadeOutTicks: ReadonlyArray<number> = [-24, -12, -6, -3, -1, 6, 12, 24, 48, 72, 96];\r\n    public static readonly fadeOutNeutral: number = 4;\r\n    public static readonly drumsetFadeOutTicks: number = 48;\r\n\tpublic static readonly transitions: DictionaryArray<Transition> = toNameMap([\r\n        { name: \"normal\", isSeamless: false, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: false },\r\n        { name: \"interrupt\", isSeamless: true, continues: false, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\r\n        { name: \"continue\", isSeamless: true, continues: true, slides: false, slideTicks: 3, includeAdjacentPatterns: true },\r\n        { name: \"slide\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: true },\r\n        { name: \"slide in pattern\", isSeamless: true, continues: false, slides: true, slideTicks: 3, includeAdjacentPatterns: false }\r\n\t]);\r\n\tpublic static readonly vibratos: DictionaryArray<Vibrato> = toNameMap([\r\n        { name: \"none\", amplitude: 0.0, type: 0, delayTicks: 0 },\r\n        { name: \"light\", amplitude: 0.15, type: 0, delayTicks: 0 },\r\n        { name: \"delayed\", amplitude: 0.3, type: 0, delayTicks: 37 }, // It will fade in over the previous two ticks.\r\n        { name: \"heavy\", amplitude: 0.45, type: 0, delayTicks: 0 },\r\n        { name: \"shaky\", amplitude: 0.1, type: 1, delayTicks: 0 },\r\n\t\t\t//    { name: \"very shaky\", amplitude: 1, type: 0, delayTicks: 0 },\r\n\t//{ name: \"insane\", amplitude: 10, type: 1, delayTicks: 0 },\r\n\t    //todbox vibratos\r\n\t//\t{ name: \"super insane\", amplitude: 30, type: 1, delayTicks: 1 },\r\n\t\t//wackybox\r\n\t//\t { name: \"quiver\", amplitude: 0.001, type: 0, delayTicks: 0 },\r\n      //  { name: \"wub-wub\", amplitude: 10.0, type: 0, delayTicks: 0 },\r\n   //     { name: \"quiver delayed\", amplitude: 0.001, type: 0, delayTicks: 18 },\r\n      //  { name: \"vibrate\", amplitude: 0.08, type: 0, delayTicks: 0 },\r\n    //    { name: \"too much wub\", amplitude: 30.0, type: 0, delayTicks: 18 },\r\n\t //too much wub breaks things just a little bit at it's original amplitude\r\n\t\t//sandbox\r\n\t]);\r\n\tpublic static readonly vibratoTypes: DictionaryArray<VibratoType> = toNameMap([\r\n\t\t{ name: \"normal\", periodsSeconds: [0.14], period: 0.14 },\r\n\t\t{ name: \"shaky\", periodsSeconds: [0.11, 1.618 * 0.11, 3 * 0.11], period: 266.97 }, // LCM of all periods\r\n\t]);\r\n\t// This array is more or less a linear step by 0.1 but there's a bit of range added at the start to hit specific ratios, and the end starts to grow faster.\r\n\t//                                                             0       1      2    3     4      5    6    7      8     9   10   11 12   13   14   15   16   17   18   19   20   21 22   23   24   25   26   27   28   29   30   31 32   33   34   35   36   37   38    39  40   41 42    43   44   45   46 47   48 49 50\r\n\tpublic static readonly arpSpeedScale: ReadonlyArray<number> = [0, 0.0625, 0.125, 0.2, 0.25, 1 / 3, 0.4, 0.5, 2 / 3, 0.75, 0.8, 0.9, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4, 4.15, 4.3, 4.5, 4.8, 5, 5.5, 6, 8];\r\n\tpublic static readonly unisons: DictionaryArray<Unison> = toNameMap([\r\n        { name: \"none\", voices: 1, spread: 0.0, offset: 0.0, expression: 1.4, sign: 1.0 },\r\n        { name: \"shimmer\", voices: 2, spread: 0.018, offset: 0.0, expression: 0.8, sign: 1.0 },\r\n        { name: \"hum\", voices: 2, spread: 0.045, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n        { name: \"honky tonk\", voices: 2, spread: 0.09, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n        { name: \"dissonant\", voices: 2, spread: 0.25, offset: 0.0, expression: 0.9, sign: 1.0 },\r\n        { name: \"fifth\", voices: 2, spread: 3.5, offset: 3.5, expression: 0.9, sign: 1.0 },\r\n        { name: \"octave\", voices: 2, spread: 6.0, offset: 6.0, expression: 0.8, sign: 1.0 },\r\n        { name: \"bowed\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: -1.0 },\r\n        { name: \"piano\", voices: 2, spread: 0.01, offset: 0.0, expression: 1.0, sign: 0.7 },\r\n        { name: \"warbled\", voices: 2, spread: 0.25, offset: 0.05, expression: 0.9, sign: -0.8 },\r\n        { name: \"hecking gosh\", voices: 2, spread: 6.25, offset: -6.0, expression: 0.8, sign: -0.7 },\r\n\t\t{ name: \"spinner\", voices: 2, spread: 0.02, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"detune\", voices: 1, spread: 0.0, offset: 0.25, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"rising\", voices: 2, spread: 1.0, offset: 0.7, expression: 0.95, sign: 1.0 },\r\n\t\t{ name: \"vibrate\", voices: 2, spread: 3.5, offset: 7, expression: 0.975, sign: 1.0 },\r\n\t\t{ name: \"fourths\", voices: 2, spread: 4, offset: 4, expression: 0.95, sign: 1.0 },\r\n\t\t{ name: \"bass\", voices: 1, spread: 0, offset: -7, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"dirty\", voices: 2, spread: 0, offset: 0.1, expression: 0.975, sign: 1.0 },\r\n\t\t{ name: \"stationary\", voices: 2, spread: 3.5, offset: 0.0, expression: 0.9, sign: 1.0 },\r\n\t\t{ name: \"recurve\", voices: 2, spread: 0.005, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"voiced\", voices: 2, spread: 9.5, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"fluctuate\", voices: 2, spread: 12, offset: 0.0, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"thin\", voices: 1, spread: 0.0, offset: 50.0, expression: 1.0, sign: 1.0 },\r\n\t\t{ name: \"inject\", voices: 2, spread: 6.0, offset: 0.4, expression: 1.0, sign: 1.0 },\r\n\t    { name: \"askewed\", voices: 2, spread: 0.0, offset: 0.42, expression: 0.7, sign: 1.0 },\r\n        { name: \"resonance\", voices: 2, spread: 0.0025, offset: 0.1, expression: 0.8, sign: -1.5 },\r\n\t\t{ name: \"FART\", voices: 2, spread: 13, offset: -5, expression: 1.0, sign: -3 },\r\n\t\t\r\n\t //for modbox; voices = riffapp, spread = intervals, offset = offsets, expression = volume, and sign = signs\r\n\t]);\r\n    public static readonly effectNames: ReadonlyArray<string> = [\"reverb\", \"chorus\", \"panning\", \"distortion\", \"bitcrusher\", \"note filter\", \"echo\", \"pitch shift\", \"detune\", \"vibrato\", \"transition type\", \"chord type\", \"ring modulation\", \"phaser\", \"note range\", \"invert wave\"];\r\n    public static readonly effectOrder: ReadonlyArray<EffectType> = [EffectType.panning, EffectType.transition, EffectType.chord, EffectType.pitchShift, EffectType.detune, EffectType.vibrato, EffectType.noteFilter, EffectType.distortion, EffectType.bitcrusher, EffectType.chorus, EffectType.echo, EffectType.reverb, EffectType.ringModulation, EffectType.phaser, EffectType.noteRange, EffectType.invertWave];\r\n    public static readonly noteSizeMax: number = 6;\r\n\tpublic static readonly volumeRange: number = 50;\r\n\t// Beepbox's old volume scale used factor -0.5 and was [0~7] had roughly value 6 = 0.125 power. This new value is chosen to have -21 be the same,\r\n\t// given that the new scale is [-25~25]. This is such that conversion between the scales is roughly equivalent by satisfying (0.5*6 = 0.1428*21)\r\n\tpublic static readonly volumeLogScale: number = 0.1428;\r\n\tpublic static readonly panCenter: number = 50;\r\n\tpublic static readonly panMax: number = Config.panCenter * 2;\r\n\tpublic static readonly panDelaySecondsMax: number = 0.001;\r\n    public static readonly chorusRange: number = 8;\r\n    public static readonly ringModRange: number = 8;\r\n    public static readonly ringModHzRange: number = 64;\r\n    public static readonly rmHzOffsetCenter: number = 200;\r\n    public static readonly rmHzOffsetMax: number = 400;\r\n    public static readonly rmHzOffsetMin: number = 0;\r\n    public static readonly chorusPeriodSeconds: number = 2.0;\r\n    public static readonly chorusDelayRange: number = 0.0034;\r\n    public static readonly chorusDelayOffsets: ReadonlyArray<ReadonlyArray<number>> = [[1.51, 2.10, 3.35], [1.47, 2.15, 3.25]];\r\n    public static readonly chorusPhaseOffsets: ReadonlyArray<ReadonlyArray<number>> = [[0.0, 2.1, 4.2], [3.2, 5.3, 1.0]];\r\n    public static readonly chorusMaxDelay: number = Config.chorusDelayRange * (1.0 + Config.chorusDelayOffsets[0].concat(Config.chorusDelayOffsets[1]).reduce((x, y) => Math.max(x, y)));\r\n\tpublic static readonly chords: DictionaryArray<Chord> = toNameMap([\r\n        { name: \"simultaneous\", customInterval: false, arpeggiates: false, strumParts: 0, singleTone: false },\r\n        { name: \"strum\", customInterval: false, arpeggiates: false, strumParts: 1, singleTone: false },\r\n        { name: \"arpeggio\", customInterval: false, arpeggiates: true, strumParts: 0, singleTone: true },\r\n        { name: \"custom interval\", customInterval: true, arpeggiates: false, strumParts: 0, singleTone: true },\r\n    ]);\r\n    public static readonly maxChordSize: number = 9;\r\n    public static readonly operatorCount: number = 4;\r\n\tpublic static readonly maxPitchOrOperatorCount: number = Math.max(Config.maxChordSize, Config.operatorCount+2);\r\n    public static readonly algorithms: DictionaryArray<Algorithm> = toNameMap([\r\n        { name: \"1←(2 3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], []] },\r\n        { name: \"1←(2 3←4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [], [4], []] },\r\n        { name: \"1←2←(3 4)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3, 4], [], []] },\r\n        { name: \"1←(2 3)←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2, 3], [4], [4], []] },\r\n        { name: \"1←2←3←4\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1], modulatedBy: [[2], [3], [4], []] },\r\n        { name: \"1←3 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[3], [4], [], []] },\r\n        { name: \"1 2←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3, 4], [], []] },\r\n        { name: \"1 2←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[], [3], [4], []] },\r\n        { name: \"(1 2)←3←4\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3], [3], [4], []] },\r\n        { name: \"(1 2)←(3 4)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2], modulatedBy: [[3, 4], [3, 4], [], []] },\r\n        { name: \"1 2 3←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[], [], [4], []] },\r\n        { name: \"(1 2 3)←4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[4], [4], [4], []] },\r\n        { name: \"1 2 3 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4], modulatedBy: [[], [], [], []] },\r\n        { name: \"1←(2 3) 2←4\", carrierCount: 2, associatedCarrier: [1, 2, 1, 2], modulatedBy: [[2, 3], [4], [], []] },\r\n        { name: \"1←(2 (3 (4\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3], modulatedBy: [[2, 3, 4], [3, 4], [4], []] },\r\n    ]);\r\n    public static readonly algorithms6Op: DictionaryArray<Algorithm> = toNameMap([\r\n        //placeholder makes life easier for later\r\n        { name: \"Custom\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\r\n        //yoinked from SynthBox\r\n        //algortihm Section 1\r\n        { name: \"1←2←3←4←5←6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2], [3], [4], [5], [6], []] },\r\n        { name: \"1←3 2←4←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5], [6], []] },\r\n        { name: \"1←3←4 2←5←6\", carrierCount: 2, associatedCarrier: [1, 1, 1, 2, 2, 2], modulatedBy: [[3], [5], [4], [], [6], []] },\r\n        { name: \"1←4 2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [5], [6], [], [], []] },\r\n        //Algorithm Section 2\r\n        { name: \"1←3 2←(4 5←6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [], [6], []] },\r\n        { name: \"1←(3 4) 2←5←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [5], [], [], [6], []] },\r\n        { name: \"1←3 2←(4 5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5, 6], [], [], [], []] },\r\n        { name: \"1←3 2←(4 5)←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4, 5], [], [6], [6], []] },\r\n        { name: \"1←3 2←4←(5 6)\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3], [4], [], [5, 6], [], []] },\r\n        { name: \"1←(2 3 4 5 6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [], [], [], [], []] },\r\n        { name: \"1←(2 3←5 4←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [5], [6], [], []] },\r\n        { name: \"1←(2 3 4←5←6)\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4], [], [], [5], [6], []] },\r\n        //Algorithm Section 3\r\n        { name: \"1←4←5 (2 3)←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [6], [6], [5], [], []] },\r\n        { name: \"1←(3 4)←5 2←6\", carrierCount: 2, associatedCarrier: [1, 2, 2, 2, 2, 2], modulatedBy: [[3, 4], [6], [5], [5], [], []] },\r\n        { name: \"(1 2)←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4], [4], [5, 6], [], [], []] },\r\n        { name: \"(1 2)←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [5], [6], [6], [], []] },\r\n        { name: \"(1 2 3)←(4 5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[4, 5, 6], [4, 5, 6], [4, 5, 6], [], [], []] },\r\n        { name: \"1←5 (2 3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[5], [6], [6], [6], [], []] },\r\n        { name: \"1 2←5 (3 4)←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [5], [6], [6], [], []] },\r\n        { name: \"1 2 (3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [6], [6], [6], []] },\r\n        { name: \"1 2 3 (4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [6], [6], []] },\r\n        //Algorithm Section 3\r\n        { name: \"1 2←4 3←(5 6)\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3], modulatedBy: [[], [4], [5, 6], [], [], []] },\r\n        { name: \"1←4 2←(5 6) 3\", carrierCount: 3, associatedCarrier: [1, 2, 3, 3, 3, 3,], modulatedBy: [[4], [5, 6], [], [], [], []] },\r\n        { name: \"1 2 3←5 4←6\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5], [6], [], []] },\r\n        { name: \"1 (2 3)←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4,], modulatedBy: [[], [5], [5], [], [6], []] },\r\n        { name: \"1 2 3←5←6 4\", carrierCount: 4, associatedCarrier: [1, 2, 3, 4, 4, 4], modulatedBy: [[], [], [5, 6], [], [], []] },\r\n        { name: \"(1 2 3 4 5)←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[6], [6], [6], [6], [6], []] },\r\n        { name: \"1 2 3 4 5←6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[], [], [], [], [6], []] },\r\n        { name: \"1 2 3 4 5 6\", carrierCount: 6, associatedCarrier: [1, 2, 3, 4, 5, 6], modulatedBy: [[], [], [], [], [], []] },\r\n        //Section 4 where we take our own previous ones for 4op and it gets weird\r\n        { name: \"1←(2 (3 (4 (5 (6\", carrierCount: 5, associatedCarrier: [1, 2, 3, 4, 5, 5], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\r\n        { name: \"1←(2(3(4(5(6\", carrierCount: 1, associatedCarrier: [1, 1, 1, 1, 1, 1], modulatedBy: [[2, 3, 4, 5, 6], [3, 4, 5, 6], [4, 5, 6], [5, 6], [6], []] },\r\n        { name: \"1←4(2←5(3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [3, 5], [6], [], [], []] },\r\n        { name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] },\r\n    ]);\r\n    public static readonly operatorCarrierInterval: ReadonlyArray<number> = [0.0, 0.04, -0.073, 0.091, 0.061, 0.024];\r\n\tpublic static readonly operatorAmplitudeMax: number = 15;\r\n    public static readonly operatorFrequencies: DictionaryArray<OperatorFrequency> = toNameMap([\r\n        { name: \"0.12×\", mult: 0.125, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.25×\", mult: 0.25, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.5×\", mult: 0.5, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"0.75×\", mult: 0.75, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"1×\", mult: 1.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"~1×\", mult: 1.0, hzOffset: 1.5, amplitudeSign: -1.0 },\r\n        { name: \"2×\", mult: 2.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"~2×\", mult: 2.0, hzOffset: -1.3, amplitudeSign: -1.0 },\r\n        { name: \"3×\", mult: 3.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"3.5×\", mult: 3.5, hzOffset: -0.05, amplitudeSign: 1.0 },\r\n        { name: \"4×\", mult: 4.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"~4×\", mult: 4.0, hzOffset: -2.4, amplitudeSign: -1.0 },\r\n        { name: \"5×\", mult: 5.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"6×\", mult: 6.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"7×\", mult: 7.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"8×\", mult: 8.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"9×\", mult: 9.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"10×\", mult: 10.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"11×\", mult: 11.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"12×\", mult: 12.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"13×\", mult: 13.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n        { name: \"14×\", mult: 14.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t    \t\t{ name: \"15×\", mult: 15.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t//ultrabox\r\n        { name: \"16×\", mult: 16.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t    \t\t{ name: \"17×\", mult: 17.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t//ultrabox\r\n        { name: \"18×\", mult: 18.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t    \t\t{ name: \"19×\", mult: 19.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t\t//ultrabox\r\n        { name: \"20×\", mult: 20.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t    \t{ name: \"~20×\", mult: 20.0, hzOffset: -5.0, amplitudeSign: -1.0 },\r\n\t    // dogebox (maybe another mod also adds this? I got it from dogebox)\r\n\t\t{ name: \"25×\", mult: 25.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t{ name: \"50×\", mult: 50.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t{ name: \"75×\", mult: 75.0, hzOffset: 0.0, amplitudeSign: 1.0 },\r\n\t{ name: \"100×\", mult: 100.0, hzOffset: 0.0, amplitudeSign: 1.0 }\r\n\t    //50 and 100 are from dogebox\r\n    ]);\r\n\r\n    public static readonly envelopes: DictionaryArray<Envelope> = toNameMap([\r\n        { name: \"none\", type: EnvelopeType.none, speed: 0.0 },\r\n        { name: \"note size\", type: EnvelopeType.noteSize, speed: 0.0 },\r\n        { name: \"punch\", type: EnvelopeType.punch, speed: 0.0 },\r\n        { name: \"flare -1\", type: EnvelopeType.flare, speed: 128.0 },\r\n        { name: \"flare 1\", type: EnvelopeType.flare, speed: 32.0 },\r\n        { name: \"flare 2\", type: EnvelopeType.flare, speed: 8.0 },\r\n        { name: \"flare 3\", type: EnvelopeType.flare, speed: 2.0 },\r\n        { name: \"twang -1\", type: EnvelopeType.twang, speed: 128.0 },\r\n        { name: \"twang 1\", type: EnvelopeType.twang, speed: 32.0 },\r\n        { name: \"twang 2\", type: EnvelopeType.twang, speed: 8.0 },\r\n        { name: \"twang 3\", type: EnvelopeType.twang, speed: 2.0 },\r\n        { name: \"swell -1\", type: EnvelopeType.swell, speed: 128.0 },\r\n        { name: \"swell 1\", type: EnvelopeType.swell, speed: 32.0 },\r\n        { name: \"swell 2\", type: EnvelopeType.swell, speed: 8.0 },\r\n        { name: \"swell 3\", type: EnvelopeType.swell, speed: 2.0 },\r\n        { name: \"tremolo0\", type: EnvelopeType.tremolo, speed: 8.0 },\r\n        { name: \"tremolo1\", type: EnvelopeType.tremolo, speed: 4.0 },\r\n        { name: \"tremolo2\", type: EnvelopeType.tremolo, speed: 2.0 },\r\n        { name: \"tremolo3\", type: EnvelopeType.tremolo, speed: 1.0 },\r\n        { name: \"tremolo4\", type: EnvelopeType.tremolo2, speed: 4.0 },\r\n        { name: \"tremolo5\", type: EnvelopeType.tremolo2, speed: 2.0 },\r\n        { name: \"tremolo6\", type: EnvelopeType.tremolo2, speed: 1.0 },\r\n        { name: \"decay -1\", type: EnvelopeType.decay, speed: 40.0 },\r\n        { name: \"decay 1\", type: EnvelopeType.decay, speed: 10.0 },\r\n        { name: \"decay 2\", type: EnvelopeType.decay, speed: 7.0 },\r\n        { name: \"decay 3\", type: EnvelopeType.decay, speed: 4.0 },\r\n        { name: \"wibble-1\", type: EnvelopeType.wibble, speed: 96.0 },\r\n        { name: \"wibble 1\", type: EnvelopeType.wibble, speed: 24.0 },\r\n        { name: \"wibble 2\", type: EnvelopeType.wibble, speed: 12.0 },\r\n        { name: \"wibble 3\", type: EnvelopeType.wibble, speed: 4.0 },\r\n        { name: \"linear-2\", type: EnvelopeType.linear, speed: 256.0 },\r\n        { name: \"linear-1\", type: EnvelopeType.linear, speed: 128.0 },\r\n        { name: \"linear 1\", type: EnvelopeType.linear, speed: 32.0 },\r\n        { name: \"linear 2\", type: EnvelopeType.linear, speed: 8.0 },\r\n        { name: \"linear 3\", type: EnvelopeType.linear, speed: 2.0 },\r\n        { name: \"rise -2\", type: EnvelopeType.rise, speed: 256.0 },\r\n        { name: \"rise -1\", type: EnvelopeType.rise, speed: 128.0 },\r\n        { name: \"rise 1\", type: EnvelopeType.rise, speed: 32.0 },\r\n        { name: \"rise 2\", type: EnvelopeType.rise, speed: 8.0 },\r\n        { name: \"rise 3\", type: EnvelopeType.rise, speed: 2.0 },\r\n\t    //modbox\r\n        { name: \"flute 1\", type: 9, speed: 16.0 },\r\n\t\t{ name: \"flute 2\", type: 9, speed: 8.0 },\r\n\t\t{ name: \"flute 3\", type: 9, speed: 4.0 },\r\n        // sandbox\r\n\t\t{ name: \"tripolo1\", type: 6, speed: 9.0 },\r\n        { name: \"tripolo2\", type: 6, speed: 6.0 },\r\n        { name: \"tripolo3\", type: 6, speed: 3.0 },\r\n        { name: \"tripolo4\", type: 7, speed: 9.0 },\r\n        { name: \"tripolo5\", type: 7, speed: 6.0 },\r\n        { name: \"tripolo6\", type: 7, speed: 3.0 },\r\n        { name: \"pentolo1\", type: 6, speed: 10.0 },\r\n        { name: \"pentolo2\", type: 6, speed: 5.0 },\r\n        { name: \"pentolo3\", type: 6, speed: 2.5 },\r\n        { name: \"pentolo4\", type: 7, speed: 10.0 },\r\n        { name: \"pentolo5\", type: 7, speed: 5.0 },\r\n        { name: \"pentolo6\", type: 7, speed: 2.5 },\t\r\n        // todbox\r\n\t    { name: \"flutter 1\", type: 6, speed: 14.0 },\r\n        { name: \"flutter 2\", type: 7, speed: 11.0 },\r\n        { name: \"water-y flutter\", type: 6, speed: 9.0 },\r\n\t    // new jummbox\r\n        { name: \"blip 1\", type: EnvelopeType.blip, speed: 6.0 },\r\n        { name: \"blip 2\", type: EnvelopeType.blip, speed: 16.0 },\r\n        { name: \"blip 3\", type: EnvelopeType.blip, speed: 32.0 },\r\n    ]);\r\n\r\n\tpublic static readonly feedbacks: DictionaryArray<Feedback> = toNameMap([\r\n\t\t{ name: \"1⟲\", indices: [[1], [], [], []] },\r\n\t\t{ name: \"2⟲\", indices: [[], [2], [], []] },\r\n\t\t{ name: \"3⟲\", indices: [[], [], [3], []] },\r\n\t\t{ name: \"4⟲\", indices: [[], [], [], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲\", indices: [[1], [2], [], []] },\r\n\t\t{ name: \"3⟲ 4⟲\", indices: [[], [], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], []] },\r\n\t\t{ name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4]] },\r\n\t\t{ name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4]] },\r\n\t\t{ name: \"1→2\", indices: [[], [1], [], []] },\r\n\t\t{ name: \"1→3\", indices: [[], [], [1], []] },\r\n\t\t{ name: \"1→4\", indices: [[], [], [], [1]] },\r\n\t\t{ name: \"2→3\", indices: [[], [], [2], []] },\r\n\t\t{ name: \"2→4\", indices: [[], [], [], [2]] },\r\n\t\t{ name: \"3→4\", indices: [[], [], [], [3]] },\r\n\t\t{ name: \"1→3 2→4\", indices: [[], [], [1], [2]] },\r\n\t\t{ name: \"1→4 2→3\", indices: [[], [], [2], [1]] },\r\n        { name: \"1→2→3→4\", indices: [[], [1], [2], [3]] },\r\n        { name: \"1↔2 3↔4\", indices: [[2], [1], [4], [3]] },\r\n        { name: \"1↔4 2↔3\", indices: [[4], [3], [2], [1]] },\r\n        { name: \"2→1→4→3→2\", indices: [[2], [3], [4], [1]] },\r\n        { name: \"1→2→3→4→1\", indices: [[4], [1], [2], [3]] },\r\n        { name: \"(1 2 3)→4\", indices: [[], [], [], [1, 2, 3]] },\r\n        { name: \"ALL\", indices: [[1,2,3,4], [1,2,3,4], [1,2,3,4], [1, 2, 3,4]] },\r\n    ]);\r\n    public static readonly feedbacks6Op: DictionaryArray<Feedback> = toNameMap([\r\n        //placeholder makes life easier for later\r\n        { name: \"Custom\", indices: [[2, 3, 4, 5, 6], [], [], [], [], []] },\r\n\r\n        { name: \"1⟲\", indices: [[1], [], [], [], [], []] },\r\n        { name: \"2⟲\", indices: [[], [2], [], [], [], []] },\r\n        { name: \"3⟲\", indices: [[], [], [3], [], [], []] },\r\n        { name: \"4⟲\", indices: [[], [], [], [4], [], []] },\r\n        { name: \"5⟲\", indices: [[], [], [], [], [5], []] },\r\n        { name: \"6⟲\", indices: [[], [], [], [], [], [6]] },\r\n        { name: \"1⟲ 2⟲\", indices: [[1], [2], [], [], [], []] },\r\n        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\r\n        { name: \"1⟲ 2⟲ 3⟲\", indices: [[1], [2], [3], [], [], []] },\r\n        { name: \"2⟲ 3⟲ 4⟲\", indices: [[], [2], [3], [4], [], []] },\r\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲\", indices: [[1], [2], [3], [4], [], []] },\r\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲\", indices: [[1], [2], [3], [4], [5], []] },\r\n        { name: \"1⟲ 2⟲ 3⟲ 4⟲ 5⟲ 6⟲\", indices: [[1], [2], [3], [4], [5], [6]] },\r\n        { name: \"1→2\", indices: [[], [1], [], [], [], []] },\r\n        { name: \"1→3\", indices: [[], [], [1], [], [], []] },\r\n        { name: \"1→4\", indices: [[], [], [], [1], [], []] },\r\n        { name: \"1→5\", indices: [[], [], [], [], [1], []] },\r\n        { name: \"1→6\", indices: [[], [], [], [], [], [1]] },\r\n        { name: \"2→3\", indices: [[], [], [2], [], [], []] },\r\n        { name: \"2→4\", indices: [[], [], [], [2], [], []] },\r\n        { name: \"3→4\", indices: [[], [], [], [3], [], []] },\r\n        { name: \"4→5\", indices: [[], [], [], [], [4], []] },\r\n        { name: \"1→4 2→5 3→6\", indices: [[], [], [], [1], [2], [3]] },\r\n        { name: \"1→5 2→6 3→4\", indices: [[], [], [], [3], [1], [2]] },\r\n        { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\r\n        { name: \"2→1→6→5→4→3→2\", indices: [[2], [3], [4], [5], [6], [1]] },\r\n        { name: \"1→2→3→4→5→6→1\", indices: [[6], [1], [2], [3], [4], [5]] },\r\n        { name: \"1↔2 3↔4 5↔6\", indices: [[2], [1], [4], [3], [6], [5]] },\r\n        { name: \"1↔4 2↔5 3↔6\", indices: [[4], [5], [6], [1], [2], [3]] },\r\n        { name: \"(1,2,3,4,5)→6\", indices: [[], [], [], [], [], [1, 2, 3, 4, 5]] },\r\n        { name: \"ALL\", indices: [[1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5, 6]] },\r\n    ]);\r\n    public static readonly chipNoiseLength: number = 1 << 15; // 32768\r\n    public static readonly spectrumNoiseLength: number = 1 << 15; // 32768\r\n    public static readonly spectrumBasePitch: number = 24;\r\n    public static readonly spectrumControlPoints: number = 30;\r\n    public static readonly spectrumControlPointsPerOctave: number = 7;\r\n    public static readonly spectrumControlPointBits: number = 3;\r\n    public static readonly spectrumMax: number = (1 << Config.spectrumControlPointBits) - 1;\r\n    public static readonly harmonicsControlPoints: number = 28;\r\n    public static readonly harmonicsRendered: number = 64;\r\n    public static readonly harmonicsRenderedForPickedString: number = 1 << 8; // 256\r\n    public static readonly harmonicsControlPointBits: number = 3;\r\n    public static readonly harmonicsMax: number = (1 << Config.harmonicsControlPointBits) - 1;\r\n    public static readonly harmonicsWavelength: number = 1 << 11; // 2048\r\n    public static readonly pulseWidthRange: number = 100;\r\n    public static readonly pulseWidthStepPower: number = 0.5;\r\n    public static readonly supersawVoiceCount: number = 7;\r\n\tpublic static readonly supersawDynamismMax: number = 6;\r\n\tpublic static readonly supersawSpreadMax: number = 12;\r\n\tpublic static readonly supersawShapeMax: number = 6;\r\n    public static readonly pitchChannelCountMin: number = 1;\r\n    public static readonly pitchChannelCountMax: number = 60;\r\n    public static readonly noiseChannelCountMin: number = 0;\r\n    public static readonly noiseChannelCountMax: number = 60;\r\n    public static readonly modChannelCountMin: number = 0;\r\n    public static readonly modChannelCountMax: number = 60;\r\n    public static readonly noiseInterval: number = 6;\r\n    public static readonly pitchesPerOctave: number = 12; // TODO: Use this for converting pitch to frequency.\r\n    public static readonly drumCount: number = 12;\r\n    public static readonly pitchOctaves: number = 8;\r\n    public static readonly modCount: number = 6;\r\n    public static readonly maxPitch: number = Config.pitchOctaves * Config.pitchesPerOctave;\r\n    public static readonly maximumTonesPerChannel: number = Config.maxChordSize * 2;\r\n    public static readonly justIntonationSemitones: number[] = [1.0 / 2.0, 8.0 / 15.0, 9.0 / 16.0, 3.0 / 5.0, 5.0 / 8.0, 2.0 / 3.0, 32.0 / 45.0, 3.0 / 4.0, 4.0 / 5.0, 5.0 / 6.0, 8.0 / 9.0, 15.0 / 16.0, 1.0, 16.0 / 15.0, 9.0 / 8.0, 6.0 / 5.0, 5.0 / 4.0, 4.0 / 3.0, 45.0 / 32.0, 3.0 / 2.0, 8.0 / 5.0, 5.0 / 3.0, 16.0 / 9.0, 15.0 / 8.0, 2.0].map(x => Math.log2(x) * Config.pitchesPerOctave);\r\n    public static readonly pitchShiftRange: number = Config.justIntonationSemitones.length;\r\n    public static readonly pitchShiftCenter: number = Config.pitchShiftRange >> 1;\r\n    public static readonly detuneCenter: number = 200;\r\n    public static readonly detuneMax: number = 400;\r\n    public static readonly detuneMin: number = 0;\r\n    public static readonly songDetuneMin: number = 0;\r\n    public static readonly songDetuneMax: number = 500;\r\n    public static readonly unisonVoicesMin: number = 1;\r\n    public static readonly unisonVoicesMax: number = 2;\r\n    public static readonly unisonSpreadMin: number = -96;\r\n    public static readonly unisonSpreadMax: number = 96; \r\n    public static readonly unisonOffsetMin: number = -96;\r\n    public static readonly unisonOffsetMax: number = 96; \r\n    public static readonly unisonExpressionMin: number = -2;\r\n    public static readonly unisonExpressionMax: number = 2; \r\n    public static readonly unisonSignMin: number = -2;\r\n    public static readonly unisonSignMax: number = 2; \r\n    public static readonly sineWaveLength: number = 1 << 8; // 256\r\n    public static readonly sineWaveMask: number = Config.sineWaveLength - 1;\r\n    public static readonly sineWave: Float32Array = generateSineWave();\r\n\r\n    public static readonly perEnvelopeSpeedIndices: number[] = [0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.2, 0.25, 0.3, 0.3333, 0.4, 0.5, 0.6, 0.6667, 0.7, 0.75, 0.8, 0.9, 1, 1.25, 1.3333, 1.5, 1.6667, 1.75, 2, 2.25, 2.5, 2.75, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 32, 40, 64, 128, 256];\r\n    public static readonly perEnvelopeSpeedToIndices: Dictionary<number> = {\r\n        0: 0,\r\n        0.01: 1,\r\n        0.02: 2,\r\n        0.03: 3,\r\n        0.04: 4,\r\n        0.05: 5,\r\n        0.06: 6,\r\n        0.07: 7,\r\n        0.08: 8,\r\n        0.09: 9,\r\n        0.1: 10,\r\n        0.2: 11,\r\n        0.25: 12,\r\n        0.3: 13,\r\n        0.3333: 14,\r\n        0.4: 15,\r\n        0.5: 16,\r\n        0.6: 17,\r\n        0.6667: 18,\r\n        0.7: 19,\r\n        0.75: 20,\r\n        0.8: 21,\r\n        0.9: 22,\r\n        1: 23,\r\n        1.25: 24,\r\n        1.3333: 25,\r\n        1.5: 26,\r\n        1.6667: 27,\r\n        1.75: 28,\r\n        2: 29,\r\n        2.25: 30,\r\n        2.5: 31,\r\n        2.75: 32,\r\n        3: 33,\r\n        3.5: 34,\r\n        4: 35,\r\n        4.5: 36,\r\n        5: 37,\r\n        5.5: 38,\r\n        6: 39,\r\n        6.5: 40,\r\n        7: 41,\r\n        7.5: 42,\r\n        8: 43,\r\n        8.5: 44,\r\n        9: 45,\r\n        9.5: 46,\r\n        10: 47,\r\n        11: 48,\r\n        12: 49,\r\n        13: 50,\r\n        14: 51,\r\n        15: 52,\r\n        16: 53,\r\n        17: 54,\r\n        18: 55,\r\n        19: 56,\r\n        20: 57,\r\n        24: 58,\r\n        32: 59,\r\n        40: 60,\r\n        64: 61,\r\n        128: 62,\r\n        256: 63,\r\n    }\r\n\r\n    public static readonly perEnvelopeBoundMin: number = 0;\r\n    public static readonly perEnvelopeBoundMax: number = 2;\r\n    public static readonly randomEnvelopeSeedMax: number = 63; //if you increase this you'll need to update the url to support it\r\n    public static readonly randomEnvelopeStepsMax: number = 24;\r\n\r\n    // Picked strings have an all-pass filter with a corner frequency based on the tone fundamental frequency, in order to add a slight inharmonicity. (Which is important for distortion.)\r\n    public static readonly pickedStringDispersionCenterFreq: number = 6000.0; // The tone fundamental freq is pulled toward this freq for computing the all-pass corner freq.\r\n    public static readonly pickedStringDispersionFreqScale: number = 0.3; // The tone fundamental freq freq moves this much toward the center freq for computing the all-pass corner freq.\r\n    public static readonly pickedStringDispersionFreqMult: number = 4.0; // The all-pass corner freq is based on this times the adjusted tone fundamental freq.\r\n    public static readonly pickedStringShelfHz: number = 4000.0; // The cutoff freq of the shelf filter that is used to decay the high frequency energy in the picked string.\r\n\r\n    public static readonly distortionRange: number = 8;\r\n    public static readonly stringSustainRange: number = 15;\r\n    public static readonly stringDecayRate: number = 0.12;\r\n    public static readonly enableAcousticSustain: boolean = false;\r\n\tpublic static readonly sustainTypeNames: ReadonlyArray<string> = [\"bright\", \"acoustic\"]; // See SustainType enum above.\r\n\r\n    public static readonly bitcrusherFreqRange: number = 14;\r\n    public static readonly bitcrusherOctaveStep: number = 0.5;\r\n    public static readonly bitcrusherQuantizationRange: number = 8;\r\n\r\n    public static readonly maxEnvelopeCount: number = 16;\r\n    public static readonly defaultAutomationRange: number = 13;\r\n    public static readonly instrumentAutomationTargets: DictionaryArray<AutomationTarget> = toNameMap([\r\n        { name: \"none\",                   computeIndex: null,                                           displayName: \"none\",                interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: null },\r\n        { name: \"noteVolume\",             computeIndex: EnvelopeComputeIndex.noteVolume,                displayName: \"note volume\",         interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: null },\r\n        { name: \"pulseWidth\",             computeIndex: EnvelopeComputeIndex.pulseWidth,                displayName: \"pulse width\",         interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.pwm, InstrumentType.supersaw] },\r\n        { name: \"stringSustain\",          computeIndex: EnvelopeComputeIndex.stringSustain,             displayName: \"sustain\",             interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.pickedString] },\r\n        { name: \"unison\",                 computeIndex: EnvelopeComputeIndex.unison,                    displayName: \"unison\",              interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.chip, InstrumentType.harmonics, InstrumentType.pickedString, InstrumentType.customChipWave, InstrumentType.pwm, InstrumentType.noise, InstrumentType.spectrum] },\r\n        { name: \"operatorFrequency\",      computeIndex: EnvelopeComputeIndex.operatorFrequency0,        displayName: \"fm# freq\",            interleave: true,   isFilter: false,    maxCount: Config.operatorCount+2,   effect: null,                       compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\r\n        { name: \"operatorAmplitude\",      computeIndex: EnvelopeComputeIndex.operatorAmplitude0,        displayName: \"fm# volume\",          interleave: false,  isFilter: false,    maxCount: Config.operatorCount+2,   effect: null,                       compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\r\n        { name: \"feedbackAmplitude\",      computeIndex: EnvelopeComputeIndex.feedbackAmplitude,         displayName: \"fm feedback\",         interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.fm, InstrumentType.fm6op] },\r\n        { name: \"pitchShift\",             computeIndex: EnvelopeComputeIndex.pitchShift,                displayName: \"pitch shift\",         interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.pitchShift,      compatibleInstruments: null },\r\n        { name: \"detune\",                 computeIndex: EnvelopeComputeIndex.detune,                    displayName: \"detune\",              interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.detune,          compatibleInstruments: null },\r\n        { name: \"vibratoDepth\",           computeIndex: EnvelopeComputeIndex.vibratoDepth,              displayName: \"vibrato range\",       interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.vibrato,         compatibleInstruments: null },\r\n        { name: \"noteFilterAllFreqs\",     computeIndex: EnvelopeComputeIndex.noteFilterAllFreqs,        displayName: \"n. filter freqs\",     interleave: false,  isFilter: true,     maxCount: 1,                        effect: EffectType.noteFilter,      compatibleInstruments: null },\r\n        { name: \"noteFilterFreq\",         computeIndex: EnvelopeComputeIndex.noteFilterFreq0,           displayName: \"n. filter # freq\",    interleave: false,  isFilter: true,     maxCount: Config.filterMaxPoints,   effect: EffectType.noteFilter,      compatibleInstruments: null },\r\n        { name: \"decimalOffset\",          computeIndex: EnvelopeComputeIndex.decimalOffset,             displayName: \"decimal offset\",      interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.pwm, InstrumentType.supersaw] },\r\n        { name: \"supersawDynamism\",       computeIndex: EnvelopeComputeIndex.supersawDynamism,          displayName: \"dynamism\",            interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.supersaw]},\r\n\t\t{ name: \"supersawSpread\",         computeIndex: EnvelopeComputeIndex.supersawSpread,            displayName: \"spread\",              interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.supersaw]},\r\n\t\t{ name: \"supersawShape\",          computeIndex: EnvelopeComputeIndex.supersawShape,             displayName: \"saw↔pulse\",           interleave: false,  isFilter: false,    maxCount: 1,                        effect: null,                       compatibleInstruments: [InstrumentType.supersaw]},    \r\n        { name: \"phaserFreq\",             computeIndex: EnvelopeComputeIndex.phaserFreq,                displayName: \"phaser freq\",         interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.phaser,          compatibleInstruments: null },\r\n        { name: \"phaserMix\",              computeIndex: EnvelopeComputeIndex.phaserMix,                 displayName: \"phaser\",              interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.phaser,          compatibleInstruments: null },\r\n        { name: \"phaserFeedback\",         computeIndex: EnvelopeComputeIndex.phaserFeedback,            displayName: \"phaser feedback\",     interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.phaser,          compatibleInstruments: null },\r\n        { name: \"phaserStages\",           computeIndex: EnvelopeComputeIndex.phaserStages,              displayName: \"phaser stages\",       interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.phaser,          compatibleInstruments: null },\r\n        { name: \"ringModulation\",         computeIndex: EnvelopeComputeIndex.ringModulation,            displayName: \"ring mod\",            interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.ringModulation,  compatibleInstruments: null },\r\n        { name: \"ringModulationHz\",       computeIndex: EnvelopeComputeIndex.ringModulationHz,          displayName: \"ring mod hz\",         interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.ringModulation,  compatibleInstruments: null },\r\n        { name: \"distortion\",             computeIndex: EnvelopeComputeIndex.distortion,                displayName: \"distortion\",          interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.distortion,      compatibleInstruments: null },\r\n        { name: \"bitcrusherQuantization\", computeIndex: EnvelopeComputeIndex.bitcrusherQuantization,    displayName: \"bitcrush\",            interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.bitcrusher,      compatibleInstruments: null},\r\n        { name: \"bitcrusherFrequency\",    computeIndex: EnvelopeComputeIndex.bitcrusherFrequency,       displayName: \"freq crush\",          interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.bitcrusher,      compatibleInstruments: null},\r\n        { name: \"chorus\",                 computeIndex: EnvelopeComputeIndex.chorus,                    displayName: \"chorus\",              interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.chorus,          compatibleInstruments: null},\r\n        { name: \"echoSustain\",            computeIndex: EnvelopeComputeIndex.echoSustain,               displayName: \"echo sustain\",        interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.echo,            compatibleInstruments: null},\r\n        { name: \"reverb\",                 computeIndex: EnvelopeComputeIndex.reverb,                    displayName: \"reverb\",              interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.reverb,          compatibleInstruments: null},\r\n        { name: \"panning\",                computeIndex: EnvelopeComputeIndex.panning,                   displayName: \"panning\",             interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.panning,         compatibleInstruments: null},\r\n        { name: \"arpeggioSpeed\",          computeIndex: EnvelopeComputeIndex.arpeggioSpeed,             displayName: \"arpeggio speed\",      interleave: false,  isFilter: false,    maxCount: 1,                        effect: EffectType.chord,           compatibleInstruments: null },\r\n        // Controlling filter gain is less obvious and intuitive than controlling filter freq, so to avoid confusion I've disabled it for now...\r\n        //{name: \"noteFilterGain\",         computeIndex:       EnvelopeComputeIndex.noteFilterGain0,        displayName: \"n. filter # vol\",  /*perNote:  true,*/ interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: EffectType.noteFilter, compatibleInstruments: null},\r\n        /*\r\n        {name: \"eqFilterAllFreqs\",       computeIndex: InstrumentAutomationIndex.eqFilterAllFreqs,       displayName: \"eq filter freqs\",  perNote: false, interleave: false, isFilter:  true, range: null,                               maxCount: 1,    effect: null,                    compatibleInstruments: null},\r\n        {name: \"eqFilterFreq\",           computeIndex: InstrumentAutomationIndex.eqFilterFreq0,          displayName: \"eq filter # freq\", perNote: false, interleave:  true, isFilter:  true, range: Config.filterFreqRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\r\n        {name: \"eqFilterGain\",           computeIndex: InstrumentAutomationIndex.eqFilterGain0,          displayName: \"eq filter # vol\",  perNote: false, interleave: false, isFilter:  true, range: Config.filterGainRange,             maxCount: Config.filterMaxPoints, effect: null,  compatibleInstruments: null},\r\n        {name: \"echoDelay\",              computeIndex: InstrumentAutomationIndex.echoDelay,              displayName: \"echo delay\",       perNote: false, interleave: false, isFilter: false, range: Config.echoDelayRange,              maxCount: 1,    effect: EffectType.echo,         compatibleInstruments: null}, // wait until after we're computing a tick's settings for multiple run lengths.\r\n        {name: \"mixVolume\",              computeIndex: InstrumentAutomationIndex.mixVolume,              displayName: \"mix volume\",       perNote: false, interleave: false, isFilter: false, range: Config.volumeRange,                 maxCount: 1,    effect: null,                    compatibleInstruments: null},\r\n        {name: \"envelope#\",              computeIndex: null,                                             displayName: \"envelope\",         perNote: false, interleave: false, isFilter: false, range: Config.defaultAutomationRange,      maxCount: Config.maxEnvelopeCount, effect: null, compatibleInstruments: null}, // maxCount special case for envelopes to be allowed to target earlier ones.\r\n        */\r\n    ]);\r\n    public static readonly operatorWaves: DictionaryArray<OperatorWave> = toNameMap([\r\n\t\t{ name: \"sine\", samples: Config.sineWave },\r\n\t\t{ name: \"triangle\", samples: generateTriWave() },\r\n\t\t{ name: \"pulse width\", samples: generateSquareWave() },\r\n\t\t{ name: \"sawtooth\", samples: generateSawWave() },\r\n\t\t{ name: \"ramp\", samples: generateSawWave(true) },\r\n\t\t{ name: \"trapezoid\", samples: generateTrapezoidWave(2) },\r\n\t    { name: \"quasi-sine\", samples: generateQuasiSineWave() },\r\n\t\t//{ name: \"white noise\", samples: generateWhiteNoiseFmWave() },\r\n\t\t//{ name: \"1-bit white noise\", samples: generateOneBitWhiteNoiseFmWave() },\r\n    ]);\r\n    public static readonly pwmOperatorWaves: DictionaryArray<OperatorWave> = toNameMap([\r\n        { name: \"1%\", samples: generateSquareWave(0.01) },\r\n        { name: \"5%\", samples: generateSquareWave(0.05) },\r\n        { name: \"12.5%\", samples: generateSquareWave(0.125) },\r\n        { name: \"25%\", samples: generateSquareWave(0.25) },\r\n        { name: \"33%\", samples: generateSquareWave(1 / 3) },\r\n        { name: \"50%\", samples: generateSquareWave(0.5) },\r\n        { name: \"66%\", samples: generateSquareWave(2 / 3) },\r\n        { name: \"75%\", samples: generateSquareWave(0.75) },\r\n        { name: \"87.5%\", samples: generateSquareWave(0.875) },\r\n        { name: \"95%\", samples: generateSquareWave(0.95) },\r\n        { name: \"99%\", samples: generateSquareWave(0.99) },\r\n    ]);\r\n\r\n\r\n    // Height of the small editor column for inserting/deleting rows, in pixels.\r\n    public static readonly barEditorHeight: number = 10;\r\n\r\n    // Careful about changing index ordering for this. Index is stored in URL/JSON etc.\r\n    public static readonly modulators: DictionaryArray<Modulator> = toNameMap([\r\n        { name: \"none\", \r\n            pianoName: \"None\", \r\n            maxRawVol: 6, newNoteVol: 6, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"No Mod Setting\", \r\n            promptDesc: [ \"No setting has been chosen yet, so this modulator will have no effect. Try choosing a setting with the dropdown, then click this '?' again for more info.\", \"[$LO - $HI]\" ] },\r\n        { name: \"song volume\", \r\n            pianoName: \"Volume\", \r\n            maxRawVol: 100, newNoteVol: 100, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Song Volume\", \r\n            promptDesc: [ \"This setting affects the overall volume of the song, just like the main volume slider.\", \"At $HI, the volume will be unchanged from default, and it will get gradually quieter down to $LO.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"tempo\", \r\n            pianoName: \"Tempo\", \r\n            maxRawVol: Config.tempoMax - Config.tempoMin, newNoteVol: Math.ceil((Config.tempoMax - Config.tempoMin) / 2), forSong: true, convertRealFactor: Config.tempoMin, associatedEffect: EffectType.length,\r\n            promptName: \"Song Tempo\", \r\n            promptDesc: [ \"This setting controls the speed your song plays at, just like the tempo slider.\", \"When you first make a note for this setting, it will default to your current tempo. Raising it speeds up the song, up to $HI BPM, and lowering it slows it down, to a minimum of $LO BPM.\", \"Note that you can make a 'swing' effect by rapidly changing between two tempo values.\", \"[OVERWRITING] [$LO - $HI] [BPM]\" ] },\r\n        { name: \"song reverb\", \r\n            pianoName: \"Reverb\", \r\n            maxRawVol: Config.reverbRange * 2, newNoteVol: Config.reverbRange, forSong: true, convertRealFactor: -Config.reverbRange, associatedEffect: EffectType.length,\r\n            promptName: \"Song Reverb\", \r\n            promptDesc: [ \"This setting affects the overall reverb of your song. It works by multiplying existing reverb for instruments, so those with no reverb set will be unaffected.\", \"At $MID, all instruments' reverb will be unchanged from default. This increases up to double the reverb value at $HI, or down to no reverb at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"next bar\", \r\n            pianoName: \"Next Bar\", \r\n            maxRawVol: 1, newNoteVol: 1, forSong: true, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Go To Next Bar\", \r\n            promptDesc: [ \"This setting functions a little different from most. Wherever a note is placed, the song will jump immediately to the next bar when it is encountered.\", \"This jump happens at the very start of the note, so the length of a next-bar note is irrelevant. Also, the note can be value 0 or 1, but the value is also irrelevant - wherever you place a note, the song will jump.\", \"You can make mixed-meter songs or intro sections by cutting off unneeded beats with a next-bar modulator.\", \"[$LO - $HI]\" ] },\r\n        { name: \"note volume\", \r\n            pianoName: \"Note Vol.\", \r\n            maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\r\n            promptName: \"Note Volume\", \r\n            promptDesc: [ \"This setting affects the volume of your instrument as if its note size had been scaled.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"This setting was the default for volume modulation in JummBox for a long time. Due to some new effects like distortion and bitcrush, note volume doesn't always allow fine volume control. Also, this modulator affects the value of FM modulator waves instead of just carriers. This can distort the sound which may be useful, but also may be undesirable. In those cases, use the 'mix volume' modulator instead, which will always just scale the volume with no added effects.\", \"For display purposes, this mod will show up on the instrument volume slider, as long as there is not also an active 'mix volume' modulator anyhow. However, as mentioned, it works more like changing note volume.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"pan\", \r\n            pianoName: \"Pan\", \r\n            maxRawVol: Config.panMax, newNoteVol: Math.ceil(Config.panMax / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\r\n            promptName: \"Instrument Panning\", \r\n            promptDesc: [ \"This setting controls the panning of your instrument, just like the panning slider.\", \"At $LO, your instrument will sound like it is coming fully from the left-ear side. At $MID it will be right in the middle, and at $HI, it will sound like it's on the right.\", \"[OVERWRITING] [$LO - $HI] [L-R]\" ] },\r\n        { name: \"reverb\", \r\n            pianoName: \"Reverb\", \r\n            maxRawVol: Config.reverbRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.reverb,\r\n            promptName: \"Instrument Reverb\", \r\n            promptDesc: [ \"This setting controls the reverb of your insturment, just like the reverb slider.\", \"At $LO, your instrument will have no reverb. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"distortion\", \r\n            pianoName: \"Distortion\", \r\n            maxRawVol: Config.distortionRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.distortion,\r\n            promptName: \"Instrument Distortion\", \r\n            promptDesc: [ \"This setting controls the amount of distortion for your instrument, just like the distortion slider.\", \"At $LO, your instrument will have no distortion. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\" ] },\r\n        { name: \"fm slider 1\", \r\n            pianoName: \"FM 1\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 1\", \r\n            promptDesc: [ \"This setting affects the strength of the first FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"fm slider 2\", \r\n            pianoName: \"FM 2\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 2\", \r\n            promptDesc: [\"This setting affects the strength of the second FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"fm slider 3\", \r\n            pianoName: \"FM 3\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 3\", \r\n            promptDesc: [\"This setting affects the strength of the third FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\" ] },\r\n        { name: \"fm slider 4\", \r\n            pianoName: \"FM 4\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 4\", \r\n            promptDesc: [\"This setting affects the strength of the fourth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"fm feedback\", \r\n            pianoName: \"FM Feedback\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Feedback\", \r\n            promptDesc: [\"This setting affects the strength of the FM feedback slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"pulse width\", \r\n            pianoName: \"Pulse Width\", \r\n            maxRawVol: Config.pulseWidthRange, newNoteVol: Config.pulseWidthRange, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Pulse Width\",\r\n            promptDesc: [\"This setting controls the width of this instrument's pulse wave, just like the pulse width slider.\", \"At $HI, your instrument will sound like a pure square wave (on 50% of the time). It will gradually sound narrower down to $LO, where it will be inaudible (as it is on 0% of the time).\", \"Changing pulse width randomly between a few values is a common strategy in chiptune music to lend some personality to a lead instrument.\", \"[OVERWRITING] [$LO - $HI] [%Duty]\"] },\r\n        { name: \"detune\", \r\n            pianoName: \"Detune\", \r\n            maxRawVol: Config.detuneMax - Config.detuneMin, newNoteVol: Config.detuneCenter, forSong: false, convertRealFactor: -Config.detuneCenter, associatedEffect: EffectType.detune,\r\n            promptName: \"Instrument Detune\", \r\n            promptDesc: [\"This setting controls the detune for this instrument, just like the detune slider.\", \"At $MID, your instrument will have no detune applied. Each tick corresponds to one cent, or one-hundredth of a pitch. Thus, each change of 100 ticks corresponds to one half-step of detune, up to two half-steps up at $HI, or two half-steps down at $LO.\", \"[OVERWRITING] [$LO - $HI] [cents]\"] },\r\n        { name: \"vibrato depth\", \r\n            pianoName: \"Vibrato Depth\", \r\n            maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\r\n            promptName: \"Vibrato Depth\", \r\n            promptDesc: [\"This setting controls the amount that your pitch moves up and down by during vibrato, just like the vibrato depth slider.\", \"At $LO, your instrument will have no vibrato depth so its vibrato would be inaudible. This increases up to $HI, where an extreme pitch change will be noticeable.\", \"[OVERWRITING] [$LO - $HI] [pitch ÷25]\"] },\r\n        { name: \"song detune\", \r\n            pianoName: \"Detune\", \r\n            maxRawVol: Config.songDetuneMax - Config.songDetuneMin, newNoteVol: Math.ceil((Config.songDetuneMax - Config.songDetuneMin) / 2), forSong: true, convertRealFactor: -250, associatedEffect: EffectType.length,\r\n            promptName: \"Song Detune\", \r\n            promptDesc: [\"This setting controls the overall detune of the entire song. There is no associated slider.\", \"At $MID, your song will have no extra detune applied and sound unchanged from default. Each tick corresponds to four cents, or four hundredths of a pitch. Thus, each change of 25 ticks corresponds to one half-step of detune, up to 10 half-steps up at $HI, or 10 half-steps down at $LO.\", \"[ADDITIVE] [$LO - $HI] [cents x4]\"] },\r\n        { name: \"vibrato speed\", \r\n            pianoName: \"Vibrato Speed\", \r\n            maxRawVol: 30, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\r\n            promptName: \"Vibrato Speed\", \r\n            promptDesc: [\"This setting controls the speed your instrument will vibrato at, just like the slider.\", \"A setting of $LO means there will be no oscillation, and vibrato will be disabled. Higher settings will increase the speed, up to a dramatic trill at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"vibrato delay\", \r\n            pianoName: \"Vibrato Delay\", \r\n            maxRawVol: 50, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.vibrato,\r\n            promptName: \"Vibrato Delay\", \r\n            promptDesc: [\"This setting controls the amount of time vibrato will be held off for before triggering for every new note, just like the slider.\", \"A setting of $LO means there will be no delay. A setting of 24 corresponds to one full beat of delay. As a sole exception to this scale, setting delay to $HI will completely disable vibrato (as if it had infinite delay).\", \"[OVERWRITING] [$LO - $HI] [beats ÷24]\"] },\r\n        { name: \"arp speed\", \r\n            pianoName: \"Arp Speed\", \r\n            maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\r\n            promptName: \"Arpeggio Speed\", \r\n            promptDesc: [\"This setting controls the speed at which your instrument's chords arpeggiate, just like the arpeggio speed slider.\", \"Each setting corresponds to a different speed, from the slowest to the fastest. The speeds are listed below.\",\r\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"pan delay\", \r\n            pianoName: \"Pan Delay\", \r\n            maxRawVol: 20, newNoteVol: 10, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.panning,\r\n            promptName: \"Panning Delay\", \r\n            promptDesc: [\"This setting controls the delay applied to panning for your instrument, just like the pan delay slider.\", \"With more delay, the panning effect will generally be more pronounced. $MID is the default value, whereas $LO will remove any delay at all. No delay can be desirable for chiptune songs.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"reset arp\", \r\n            pianoName: \"Reset Arp\", \r\n            maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chord,\r\n            promptName: \"Reset Arpeggio\", \r\n            promptDesc: [\"This setting functions a little different from most. Wherever a note is placed, the arpeggio of this instrument will reset at the very start of that note. This is most noticeable with lower arpeggio speeds. The lengths and values of notes for this setting don't matter, just the note start times.\", \"This mod can be used to sync up your apreggios so that they always sound the same, even if you are using an odd-ratio arpeggio speed or modulating arpeggio speed.\", \"[$LO - $HI]\"] },\r\n        { name: \"eq filter\", \r\n            pianoName: \"EQFlt\", \r\n            maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"EQ Filter\", \r\n            promptDesc: [\"This setting controls a few separate things for your instrument's EQ filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your EQ filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"note filter\", \r\n            pianoName: \"N.Flt\", \r\n            maxRawVol: 10, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\r\n            promptName: \"Note Filter\", \r\n            promptDesc: [\"This setting controls a few separate things for your instrument's note filter.\", \"When the option 'morph' is selected, your modulator values will indicate a sub-filter index of your note filter to 'morph' to over time. For example, a change from 0 to 1 means your main filter (default) will morph to sub-filter 1 over the specified duration. You can shape the main filter and sub-filters in the large filter editor ('+' button). If your two filters' number, type, and order of filter dots all match up, the morph will happen smoothly and you'll be able to hear them changing. If they do not match up, the filters will simply jump between each other.\", \"Note that filters will morph based on endpoints in the pattern editor. So, if you specify a morph from sub-filter 1 to 4 but do not specifically drag in new endpoints for 2 and 3, it will morph directly between 1 and 4 without going through the others.\", \"If you target Dot X or Dot Y, you can finely tune the coordinates of a single dot for your filter. The number of available dots to choose is dependent on your main filter's dot count.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"bit crush\", \r\n            pianoName: \"Bitcrush\", \r\n            maxRawVol: Config.bitcrusherQuantizationRange-1, newNoteVol: Math.round(Config.bitcrusherQuantizationRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\r\n            promptName: \"Instrument Bit Crush\", \r\n            promptDesc: [\"This setting controls the bit crush of your instrument, just like the bit crush slider.\", \"At a value of $LO, no bit crush will be applied. This increases and the bit crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"freq crush\", \r\n            pianoName: \"Freq Crush\", \r\n            maxRawVol: Config.bitcrusherFreqRange-1, newNoteVol: Math.round(Config.bitcrusherFreqRange / 2), forSong: false, convertRealFactor: 0, associatedEffect: EffectType.bitcrusher,\r\n            promptName: \"Instrument Frequency Crush\", \r\n            promptDesc: [\"This setting controls the frequency crush of your instrument, just like the freq crush slider.\", \"At a value of $LO, no frequency crush will be applied. This increases and the frequency crush effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"echo\", \r\n            pianoName: \"Echo\", \r\n            maxRawVol: Config.echoSustainRange-1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.echo,\r\n            promptName: \"Instrument Echo Sustain\", \r\n            promptDesc: [\"This setting controls the echo sustain (echo loudness) of your instrument, just like the echo slider.\", \"At $LO, your instrument will have no echo sustain and echo will not be audible. Echo sustain increases and the echo effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"echo delay\", \r\n            pianoName: \"Echo Delay\", \r\n            maxRawVol: Config.echoDelayRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Instrument Echo Delay\",\r\n            promptDesc: [\"This setting controls the echo delay of your instrument, just like the echo delay slider.\", \"At $LO, your instrument will have very little echo delay, and this increases up to 2 beats of delay at $HI.\", \"[OVERWRITING] [$LO - $HI] [~beats ÷12]\" ]\r\n        }, // Disabled via associatedEffect and manually in list build in SongEditor, enable and set back to echo after fixing bugginess!\r\n        { name: \"chorus\", \r\n            pianoName: \"Chorus\", \r\n            maxRawVol: Config.chorusRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.chorus,\r\n            promptName: \"Instrument Chorus\", \r\n            promptDesc: [\"This setting controls the chorus strength of your instrument, just like the chorus slider.\", \"At $LO, the chorus effect will be disabled. The strength of the chorus effect increases up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"eq filt cut\", \r\n            pianoName: \"EQFlt Cut\", \r\n            maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"EQ Filter Cutoff Frequency\", \r\n            promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"eq filt peak\", \r\n            pianoName: \"EQFlt Peak\", \r\n            maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"EQ Filter Peak Gain\", \r\n            promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"note filt cut\", \r\n            pianoName: \"N.Flt Cut\", \r\n            maxRawVol: Config.filterSimpleCutRange - 1, newNoteVol: Config.filterSimpleCutRange - 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\r\n            promptName: \"Note Filter Cutoff Frequency\", \r\n            promptDesc: [\"This setting controls the filter cut position of your instrument, just like the filter cut slider.\", \"This setting is roughly analagous to the horizontal position of a single low-pass dot on the advanced filter editor. At lower values, a wider range of frequencies is cut off.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"note filt peak\", \r\n            pianoName: \"N.Flt Peak\", \r\n            maxRawVol: Config.filterSimplePeakRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.noteFilter,\r\n            promptName: \"Note Filter Peak Gain\", \r\n            promptDesc: [\"This setting controls the filter peak position of your instrument, just like the filter peak slider.\", \"This setting is roughly analagous to the vertical position of a single low-pass dot on the advanced filter editor. At lower values, the cutoff frequency will not be emphasized, and at higher values you will hear emphasis on the cutoff frequency.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"pitch shift\", \r\n            pianoName: \"Pitch Shift\", \r\n            maxRawVol: Config.pitchShiftRange - 1, newNoteVol: Config.pitchShiftCenter, forSong: false, convertRealFactor: -Config.pitchShiftCenter, associatedEffect: EffectType.pitchShift,\r\n            promptName: \"Pitch Shift\", \r\n            promptDesc: [\"This setting controls the pitch offset of your instrument, just like the pitch shift slider.\", \"At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.\", \"[OVERWRITING] [$LO - $HI] [pitch]\"] },\r\n        { name: \"sustain\", \r\n            pianoName: \"Sustain\", \r\n            maxRawVol: Config.stringSustainRange - 1, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Picked String Sustain\", \r\n            promptDesc: [\"This setting controls the sustain of your picked string instrument, just like the sustain slider.\", \"At $LO, your instrument will have minimum sustain and sound 'plucky'. This increases to a more held sound as your modulator approaches the maximum, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"mix volume\", \r\n            pianoName: \"Mix Vol.\", \r\n            maxRawVol: Config.volumeRange, newNoteVol: Math.ceil(Config.volumeRange / 2), forSong: false, convertRealFactor: Math.ceil(-Config.volumeRange / 2.0), associatedEffect: EffectType.length,\r\n            promptName: \"Mix Volume\", \r\n            promptDesc: [\"This setting affects the volume of your instrument as if its volume slider had been moved.\", \"At $MID, an instrument's volume will be unchanged from default. This means you can still use the volume sliders to mix the base volume of instruments, since this setting and the default value work multiplicatively. The volume gradually increases up to $HI, or decreases down to mute at $LO.\", \"Unlike the 'note volume' setting, mix volume is very straightforward and simply affects the resultant instrument volume after all effects are applied.\", \"[MULTIPLICATIVE] [$LO - $HI]\"] },\r\n        { name: \"fm slider 5\", \r\n            pianoName: \"FM 5\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 5\", \r\n            promptDesc: [\"This setting affects the strength of the fifth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"fm slider 6\", \r\n            pianoName: \"FM 6\", \r\n            maxRawVol: 15, newNoteVol: 15, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"FM Slider 6\",\r\n            promptDesc: [\"This setting affects the strength of the sixth FM slider, just like the corresponding slider on your instrument.\", \"It works in a multiplicative way, so at $HI your slider will sound the same is its default value, and at $LO it will sound like it has been moved all the way to the left.\", \"For the full range of control with this mod, move your underlying slider all the way to the right.\", \"[MULTIPLICATIVE] [$LO - $HI] [%]\"] },\r\n        { name: \"decimal offset\", \r\n            pianoName: \"Decimal Offset\", \r\n            maxRawVol: 99, newNoteVol: 0, forSong: false, convertRealFactor: 0, invertSliderIndicator: true, associatedEffect: EffectType.length,\r\n            promptName: \"Decimal Offset\", \r\n            promptDesc: [\"This setting controls the decimal offset that is subtracted from the pulse width; use this for creating values like 12.5 or 6.25.\", \"[$LO - $HI]\"] },\r\n        { name: \"envelope speed\", \r\n            pianoName: \"EnvelopeSpd\", \r\n            maxRawVol: 50, newNoteVol: 12, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Envelope Speed\", \r\n            promptDesc: [\"This setting controls how fast all of the envelopes for the instrument play.\", \"At $LO, your instrument's envelopes will be frozen, and at values near there they will change very slowly. At 12, the envelopes will work as usual, performing at normal speed. This increases up to $HI, where the envelopes will change very quickly. The speeds are given below:\",\r\n                \"[0-4]: x0, x1/16, x⅛, x⅕, x¼,\", \"[5-9]: x⅓, x⅖, x½, x⅔, x¾,\", \"[10-14]: x⅘, x0.9, x1, x1.1, x1.2,\", \"[15-19]: x1.3, x1.4, x1.5, x1.6, x1.7,\", \"[20-24]: x1.8, x1.9, x2, x2.1, x2.2,\", \"[25-29]: x2.3, x2.4, x2.5, x2.6, x2.7,\", \"[30-34]: x2.8, x2.9, x3, x3.1, x3.2,\", \"[35-39]: x3.3, x3.4, x3.5, x3.6, x3.7,\" ,\"[40-44]: x3.8, x3.9, x4, x4.15, x4.3,\", \"[45-50]: x4.5, x4.8, x5, x5.5, x6, x8\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"dynamism\", \r\n            pianoName: \"Dynamism\", \r\n            maxRawVol: Config.supersawDynamismMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Supersaw Dynamism\", \r\n            promptDesc: [\"This setting controls the supersaw dynamism of your instrument, just like the dynamism slider.\", \"At $LO, your instrument will have only a single pulse contributing. Increasing this will raise the contribution of other waves which is similar to a chorus effect. The effect gets more noticeable up to the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"spread\", \r\n            pianoName: \"Spread\", \r\n            maxRawVol: Config.supersawSpreadMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Supersaw Spread\", \r\n            promptDesc: [\"This setting controls the supersaw spread of your instrument, just like the spread slider.\", \"At $LO, all the pulses in your supersaw will be at the same frequency. Increasing this value raises the frequency spread of the contributing waves, up to a dissonant spread at the max value, $HI.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"saw shape\", \r\n            pianoName: \"Saw Shape\", \r\n            maxRawVol: Config.supersawShapeMax, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Supersaw Shape\", \r\n            promptDesc: [\"This setting controls the supersaw shape of your instrument, just like the Saw↔Pulse slider.\", \"As the slider's name implies, this effect will give you a sawtooth wave at $LO, and a full pulse width wave at $HI. Values in between will be a blend of the two.\", \"[OVERWRITING] [$LO - $HI] [%]\"] },\r\n        { name: \"song bitcrush\", \r\n            pianoName: \"Song Bit crush\", \r\n            maxRawVol: Config.bitcrusherQuantizationRange*2, newNoteVol: Config.bitcrusherQuantizationRange, forSong: true, convertRealFactor: -Config.bitcrusherQuantizationRange, associatedEffect: EffectType.length,\r\n            promptName: \"Song Bit crush\", \r\n            promptDesc: [ \"This setting affects the overall bitcrush of your song. It works by multiplying existing bitcrush for instruments, so those with no bitcrush set will be unaffected.\", \"At $MID, all instruments' bitcrush will be unchanged from default. This increases up to double the set bitcrush value at $HI, or down to no bitcrush at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"song freqcrush\", \r\n            pianoName: \"Song freqcrush\", \r\n            maxRawVol: Config.bitcrusherFreqRange*2, newNoteVol: Config.bitcrusherFreqRange, forSong: true, convertRealFactor: -Config.bitcrusherFreqRange, associatedEffect: EffectType.length,\r\n            promptName: \"Song Freq crush\", \r\n            promptDesc: [ \"This setting affects the overall frequency crush of your song. It works by multiplying existing freq crush for instruments, so those with no bitcrush or freq crush set will be unaffected.\", \"At $MID, all instruments' bitcrush will be unchanged from default. This increases up to double the set bitcrush value at $HI, or down to no bitcrush at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"song panning\", \r\n            pianoName: \"Song Panning\", \r\n            maxRawVol: Config.panMax*2, newNoteVol: Config.panMax, forSong: true, convertRealFactor: -Config.panMax, associatedEffect: EffectType.panning,\r\n            promptName: \"Song Panning\", \r\n            promptDesc: [ \"This setting affects the overall panning of your song. It works by adding to existing pan for instruments, so those with no panning set will be unaffected.\", \"At $MID, nothing will be added to the songs panning. At $HI, all instruments will have 100+ panning added, which would max out the panning. At $LO, -100+ panning added to it, which would make the panning as low as possible.\", \"[ADDITIVE] [$LO - $HI]\" ] },\r\n        { name: \"song chorus\", \r\n            pianoName: \"Song Chorus\", \r\n            maxRawVol: Config.chorusRange*2, newNoteVol: Config.chorusRange, forSong: true, convertRealFactor: -Config.chorusRange, associatedEffect: EffectType.length,\r\n            promptName: \"Song Chorus\", \r\n            promptDesc: [ \"This setting affects the overall chorus of your song. It works by multiplying existing chorus for instruments, so those with no chorus set will be unaffected.\", \"At $MID, all instruments' chorus will be unchanged from default. This increases up to double the set chorus value at $HI, or down to no chorus at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"song distortion\", \r\n            pianoName: \"Song Distortion\", \r\n            maxRawVol: Config.distortionRange*2, newNoteVol: Config.distortionRange, forSong: true, convertRealFactor: -Config.distortionRange, associatedEffect: EffectType.length,\r\n            promptName: \"Song Distortion\", \r\n            promptDesc: [ \"This setting affects the overall distortion of your song. It works by multiplying existing distortion for instruments, so those with no distortion set will be unaffected.\", \"At $MID, all instruments' distortion will be unchanged from default. This increases up to double the set distortion value at $HI, or down to no distortion at $LO.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"ring modulation\", \r\n            pianoName: \"Ring Modulation\", \r\n            maxRawVol: Config.ringModRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Ring Modulation\", \r\n            promptDesc: [ \"This setting controls the Ring Modulation effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\" ] },\r\n        { name: \"song ring modulation\", \r\n            pianoName: \"Songwide Ring Modulation\", \r\n            maxRawVol: Config.ringModRange*2, newNoteVol: Config.ringModRange, forSong: true, convertRealFactor: -Config.ringModRange, associatedEffect: EffectType.length,\r\n            promptName: \"Songwide Ring Modulation\", \r\n            promptDesc: [ \"This setting multiplies the Ring Modulation effect across all instruments.\", \"[MULTIPLICATIVE] [$LO - $HI]\" ] },\r\n        { name: \"ring mod hertz\", \r\n            pianoName: \"Ring Modulation (Hertz)\", \r\n            maxRawVol: Config.ringModHzRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Ring Modulation (Hertz)\", \r\n            promptDesc: [ \"This setting controls the Hertz (Hz) used in the Ring Modulation effect in your instrument.\", \"[OVERWRITING] [$LO - $HI]\" ] },\r\n        { name: \"phaser\", \r\n            pianoName: \"Phaser\", \r\n            maxRawVol: Config.phaserMixRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.phaser,\r\n            promptName: \"Instrument Phaser\", \r\n            promptDesc: [ \"This setting controls the Phaser Mix of your insturment, just like the Phaser slider.\", \"At $LO, your instrument will have no phaser. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },\r\n        { name: \"phaser frequency\", \r\n            pianoName: \"Phaser Frequency\", \r\n            maxRawVol: Config.phaserFreqRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.phaser,\r\n            promptName: \"Phaser Frequency\", \r\n            promptDesc: [ \"This setting controls the phaser frequency of your insturment, just like the phaser freq slider.\", \"At $LO, your instrument will have no phaser freq. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] }, \r\n        { name: \"phaser feedback\", \r\n            pianoName: \"Phaser Feedback\", \r\n            maxRawVol: Config.phaserFeedbackRange, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.phaser,\r\n            promptName: \"Phaser Feedback\", \r\n            promptDesc: [ \"This setting controls the phaser feedback of your insturment, just like the phaser feedback slider.\", \"At $LO, your instrument will have no phaser feedback. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },     \r\n        { name: \"phaser stages\", \r\n            pianoName: \"Phaser Stages\", \r\n            maxRawVol: Config.phaserMaxStages, newNoteVol: 0, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.phaser,\r\n            promptName: \"Phaser Stages\", \r\n            promptDesc: [ \"This setting controls the number of phaser stages in your insturment, just like the phaser stages slider.\", \"At $LO, your instrument will have no phaser stages. At $HI, it will be at maximum.\", \"[OVERWRITING] [$LO - $HI]\"] },                       \r\n        { name: \"song pitch shift\", \r\n            pianoName: \"Song Pitch Shift\", \r\n            maxRawVol: (Config.pitchShiftRange*2)-2, newNoteVol: Config.pitchShiftRange, forSong: true, convertRealFactor: -Config.pitchShiftRange+1, associatedEffect: EffectType.pitchShift,\r\n            promptName: \"Songwide Pitch Shift\", \r\n            promptDesc: [\"This setting controls the pitch offset of all instruments regardless of whether or not the instrument has the effect itself, just like the pitch shift slider.\", \"At $MID your instrument will have no pitch shift. This increases as you decrease toward $LO pitches (half-steps) at the low end, or increases towards +$HI pitches at the high end.\", \"[ADDITIVE] [$LO - $HI] [pitch]\"] },\r\n        { name: \"individual envelope speed\", \r\n            pianoName: \"IndvEnvSpd\", \r\n            maxRawVol: 63, newNoteVol: 23, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.length,\r\n            promptName: \"Individual Envelope Speed\", \r\n            promptDesc: [\"This setting controls how fast the specified envelope of the instrument will play.\", \"At $LO, your the envelope will be frozen, and at values near there they will change very slowly. At 23, the envelope will work as usual, performing at normal speed. This increases up to $HI, where the envelope will change very quickly. The speeds are given below:\",\"[0-4]: x0, x0.01, x0.02, x0.03, x0.04,\", \"[5-9]: x0.05, x0.06, x0.07, x0.08, x0.09,\", \"[10-14]: x0.1, x0.2, x0.25, x0.3, x0.33,\", \"[15-19]: x0.4, x0.5, x0.6, x0.6667, x0.7,\", \"[20-24]: x0.75, x0.8, x0.9, x1, x1.25,\", \"[25-29]: x1.3333, x1.5, x1.6667, x1.75, x2,\", \"[30-34]: x2.25, x2.5, x2.75, x3, x3.5,\", \"[35-39]: x4, x4.5, x5, x5.5, x6,\", \"[40-44]: x6.5, x7, x7.5, x8, x8.5,\", \"[45-49]: x9, x9.5, x10, x11, x12\", \"[50-54]: x13, x14, x15, x16, x17\", \"[55-59]: x18, x19, x20, x24, x32\", \"[60-63]: x40, x64, x128, x256\", \"[OVERWRITING] [$LO - $HI]\"]},\r\n        { name: \"invert wave\", \r\n            pianoName: \"Invert Wave\", \r\n            maxRawVol: 1, newNoteVol: 1, forSong: false, convertRealFactor: 0, associatedEffect: EffectType.invertWave,\r\n            promptName: \"Invert Wave\", \r\n            promptDesc: [ \"Allows you to toggle the Invert Wave effect on instruments. Value must be exactly 1 for this to take effect.\", \"[$LO - $HI]\" ] },\r\n        \r\n        ]);\r\n}\r\n\r\nfunction centerWave(wave: Array<number>): Float32Array {\r\n    let sum: number = 0.0;\r\n    for (let i: number = 0; i < wave.length; i++) sum += wave[i];\r\n    const average: number = sum / wave.length;\r\n    for (let i: number = 0; i < wave.length; i++) wave[i] -= average;\r\n    performIntegral(wave);\r\n    // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n    wave.push(0);\r\n    return new Float32Array(wave);\r\n}\r\nfunction centerAndNormalizeWave(wave: Array<number>): Float32Array {\r\n    let magn: number = 0.0;\r\n\r\n    centerWave(wave);\r\n\r\n    // Going to length-1 because an extra 0 sample is added on the end as part of centerWave, which shouldn't impact magnitude calculation.\r\n    for (let i: number = 0; i < wave.length - 1; i++) {\r\n        magn += Math.abs(wave[i]);\r\n    }\r\n    const magnAvg: number = magn / (wave.length - 1);\r\n\r\n    for (let i: number = 0; i < wave.length - 1; i++) {\r\n        wave[i] = wave[i] / magnAvg;\r\n    }\r\n\r\n    return new Float32Array(wave);\r\n\r\n}\r\nexport function performIntegral(wave: { length: number, [index: number]: number }): Float32Array {\r\n    // Perform the integral on the wave. The synth function will perform the derivative to get the original wave back but with antialiasing.\r\n    let cumulative: number = 0.0;\r\n    let newWave: Float32Array = new Float32Array(wave.length);\r\n    for (let i: number = 0; i < wave.length; i++) {\r\n        newWave[i] = cumulative;\r\n        cumulative += wave[i];\r\n    }\r\n\r\n    return newWave;\r\n}\r\nexport function performIntegralOld(wave: { length: number, [index: number]: number }): void {\r\n\t// Old ver used in harmonics/picked string instruments, manipulates wave in place.\r\n\tlet cumulative: number = 0.0;\r\n\tfor (let i: number = 0; i < wave.length; i++) {\r\n\t\tconst temp = wave[i];\r\n\t\twave[i] = cumulative;\r\n\t\tcumulative += temp;\r\n\t}\r\n}\r\n\r\nexport function getPulseWidthRatio(pulseWidth: number): number {\r\n    // BeepBox formula for reference\r\n    //return Math.pow(0.5, (Config.pulseWidthRange - 1 - pulseWidth) * Config.pulseWidthStepPower) * 0.5;\r\n\r\n    return pulseWidth / (Config.pulseWidthRange);\r\n}\r\n\r\n\r\n// The function arguments will be defined in FFT.ts, but I want\r\n// SynthConfig.ts to be at the top of the compiled JS so I won't directly\r\n// depend on FFT here. synth.ts will take care of importing FFT.ts.\r\n//function inverseRealFourierTransform(array: {length: number, [index: number]: number}, fullArrayLength: number): void;\r\n//function scaleElementsByFactor(array: {length: number, [index: number]: number}, factor: number): void;\r\nexport function getDrumWave(index: number, inverseRealFourierTransform: Function | null, scaleElementsByFactor: Function | null): Float32Array {\r\n    let wave: Float32Array | null = Config.chipNoises[index].samples;\r\n    if (wave == null) {\r\n        wave = new Float32Array(Config.chipNoiseLength + 1);\r\n        Config.chipNoises[index].samples = wave;\r\n\r\n\t\tif (index == 0) {\r\n\t\t\t// The \"retro\" drum uses a \"Linear Feedback Shift Register\" similar to the NES noise channel.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 1 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 1) {\r\n\t\t\t// White noise is just random values for each sample.\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = Math.random() * 2.0 - 1.0;\r\n\t\t\t}\r\n\t\t} else if (index == 2) {\r\n\t\t\t// The \"clang\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 2 << 14;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 3) {\r\n\t\t\t// The \"buzz\" noise wave is based on a similar noise wave in the modded beepbox made by DAzombieRE.\r\n\t\t\tlet drumBuffer: number = 1;\r\n\t\t\tfor (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tlet newBuffer: number = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 4) {\r\n\t\t\t// \"hollow\" drums, designed in frequency space and then converted via FFT:\r\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 10, 11, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 11, 14, .6578, .6578, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 5) {\r\n\t\t\t// \"Shine\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 2.0 - 1.0;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 6) {\r\n\t\t\t// \"Deep\" drums from modbox!\r\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 1, 10, 1, 1, 0);\r\n\t\t\tdrawNoiseSpectrum(wave, Config.chipNoiseLength, 20, 14, -2, -2, 0);\r\n\t\t\tinverseRealFourierTransform!(wave, Config.chipNoiseLength);\r\n\t\t\tscaleElementsByFactor!(wave, 1.0 / Math.sqrt(Config.chipNoiseLength));\r\n\t\t} else if (index == 7) {\r\n\t\t\t// \"Cutter\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) * 4.0 * (Math.random() * 14 + 1) - 8.0;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer += 15 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n\t\t\t}\r\n\t\t} else if (index == 8) {\r\n\t\t\t// \"Metallic\" drums from modbox!\r\n\t\t\tvar drumBuffer = 1;\r\n\t\t\tfor (var i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\twave[i] = (drumBuffer & 1) / 2.0 - 0.5;\r\n\t\t\t\tvar newBuffer = drumBuffer >> 1;\r\n\t\t\t\tif (((drumBuffer + newBuffer) & 1) == 1) {\r\n\t\t\t\t\tnewBuffer -= 10 << 2;\r\n\t\t\t\t}\r\n\t\t\t\tdrumBuffer = newBuffer;\r\n            }\r\n        } else if (index == 9) {\r\n            // a noise more like old static than white noise\r\n            let drumBuffer: number = 1;\r\n            for (let i: number = 0; i < Config.chipNoiseLength; i++) {\r\n                wave[i] = (drumBuffer & 1) * 2.0 - 1.1;\r\n                let newBuffer: number = drumBuffer >> 1;\r\n                if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                    newBuffer += 8 ^ 2 << 16;\r\n                }\r\n                drumBuffer = newBuffer;\r\n            }\r\n\t\t}\r\n\t\t\t\t\telse if (index == 10) {\r\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\r\n                    wave[i] = Math.round(Math.random());\r\n                }\r\n            }\r\n\t\t\t else if (index == 11) {\r\n                var drumBuffer = 1;\r\n                for (var i = 0; i < Config.chipNoiseLength; i++) {\r\n                    wave[i] = Math.round((drumBuffer & 1));\r\n                    var newBuffer = drumBuffer >> 1;\r\n                    if (((drumBuffer + newBuffer) & 1) == 1) {\r\n                        newBuffer -= 10 << 2;\r\n                    }\r\n                    drumBuffer = newBuffer;\r\n                }\r\n            }\r\n\t\t\telse if (index == 12) {\r\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\r\n                   var ultraboxnewchipnoiserand = Math.random();\r\n\t\t\t\t   wave[i] = Math.pow(ultraboxnewchipnoiserand, Math.clz32(ultraboxnewchipnoiserand));\r\n                }\r\n            }\r\n\t\t\telse if (index == 13) {\r\n\t\t\t\tvar b0 = 0, b1 = 0, b2 = 0, b3, b4, b5, b6;\r\n\t\t\t\tb0 = b1 = b2 = b3 = b4 = b5 = b6 = 0.0;\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\r\n\t\t\t\t\tb0 = 0.99886 * b0 + white * 0.0555179;\r\n\t\t\t\t\tb1 = 0.99332 * b1 + white * 0.0750759;\r\n\t\t\t\t\tb2 = 0.96900 * b2 + white * 0.1538520;\r\n\t\t\t\t\tb3 = 0.86650 * b3 + white * 0.3104856;\r\n\t\t\t\t\tb4 = 0.55000 * b4 + white * 0.5329522;\r\n\t\t\t\t\tb5 = -0.7616 * b5 - white * 0.0168980;\r\n\t\t\t\t\twave[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\r\n\t\t\t\t\twave[i] *= 0.44;\r\n\t\t\t\t\tb6 = white * 0.115926;\r\n\t\t\t\t\t// from https://github.com/zacharydenton/noise.js, MIT license soooo\r\n                }\r\n            }\r\n\t\t\telse if (index == 14) {\r\n\t\t\t\tvar lastOut = 0.0;\r\n\t\t\t\t\r\n                for (let i = 0; i < Config.chipNoiseLength; i++) {\r\n\t\t\t\t\tvar white = Math.random() * 2 - 1;\r\n\t\t\t\t\twave[i] = (lastOut + (0.02 * white)) / 1.02;\r\n\t\t\t\t\tlastOut = wave[i];\r\n\t\t\t\t\twave[i] *= 14;\r\n\t\t\t\t\t// this is also from noise.js\r\n                }\r\n            }\r\n\t\t\r\n\t\telse {\r\n\t\t\tthrow new Error(\"Unrecognized drum index: \" + index);\r\n\t\t}\r\n\r\n        wave[Config.chipNoiseLength] = wave[0];\r\n    }\r\n\r\n    return wave;\r\n}\r\n\r\nexport function drawNoiseSpectrum(wave: Float32Array, waveLength: number, lowOctave: number, highOctave: number, lowPower: number, highPower: number, overallSlope: number): number {\r\n    const referenceOctave: number = 11;\r\n    const referenceIndex: number = 1 << referenceOctave;\r\n    const lowIndex: number = Math.pow(2, lowOctave) | 0;\r\n    const highIndex: number = Math.min(waveLength >> 1, Math.pow(2, highOctave) | 0);\r\n    const retroWave: Float32Array = getDrumWave(0, null, null);\r\n    let combinedAmplitude: number = 0.0;\r\n    for (let i: number = lowIndex; i < highIndex; i++) {\r\n\r\n        let lerped: number = lowPower + (highPower - lowPower) * (Math.log2(i) - lowOctave) / (highOctave - lowOctave);\r\n        let amplitude: number = Math.pow(2, (lerped - 1) * 7 + 1) * lerped;\r\n\r\n        amplitude *= Math.pow(i / referenceIndex, overallSlope);\r\n\r\n        combinedAmplitude += amplitude;\r\n\r\n        // Add two different sources of psuedo-randomness to the noise\r\n        // (individually they aren't random enough) but in a deterministic\r\n        // way so that live spectrum editing doesn't result in audible pops.\r\n        // Multiply all the sine wave amplitudes by 1 or -1 based on the\r\n        // LFSR retro wave (effectively random), and also rotate the phase\r\n        // of each sine wave based on the golden angle to disrupt the symmetry.\r\n        amplitude *= retroWave[i];\r\n        const radians: number = 0.61803398875 * i * i * Math.PI * 2.0;\r\n\r\n        wave[i] = Math.cos(radians) * amplitude;\r\n        wave[waveLength - i] = Math.sin(radians) * amplitude;\r\n    }\r\n\r\n    return combinedAmplitude;\r\n}\r\n\r\nfunction generateSineWave(): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength);\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateTriWave(): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) / (Math.PI / 2);\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateTrapezoidWave(drive: number = 2): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = Math.max(-1.0, Math.min(1.0, Math.asin(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength)) * drive));\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSquareWave(phaseWidth: number = 0): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    const centerPoint: number = Config.sineWaveLength / 4;\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = +((Math.abs(i - centerPoint) < phaseWidth * Config.sineWaveLength / 2)\r\n            || ((Math.abs(i - Config.sineWaveLength - centerPoint) < phaseWidth * Config.sineWaveLength / 2))) * 2 - 1;\r\n    }\r\n    return wave;\r\n}\r\n\r\nfunction generateSawWave(inverse: boolean = false): Float32Array {\r\n    const wave: Float32Array = new Float32Array(Config.sineWaveLength + 1);\r\n    for (let i: number = 0; i < Config.sineWaveLength + 1; i++) {\r\n        wave[i] = ((i + (Config.sineWaveLength / 4.0)) * 2.0 / Config.sineWaveLength) % 2 - 1;\r\n        wave[i] = inverse ? -wave[i] : wave[i];\r\n    }\r\n    return wave;\r\n}\r\n\r\n\t// function generateWhiteNoiseFmWave() {\r\n        // const wave = new Float32Array(Config.sineWaveLength + 1);\r\n        // for (let i = 0; i < Config.sineWaveLength + 1; i++) {\r\n            // wave[i] = Math.random() * 2.0 - 1.0;\r\n        // }\r\n        // return wave;\r\n    // }\r\n\t// function generateOneBitWhiteNoiseFmWave() {\r\n        // const wave = new Float32Array(Config.sineWaveLength + 1);\r\n        // for (let i = 0; i < Config.sineWaveLength + 1; i++) {\r\n            // wave[i] = Math.round(Math.random());\r\n        // }\r\n        // return wave;\r\n    // }\r\n\tfunction generateQuasiSineWave() {\r\n        const wave = new Float32Array(Config.sineWaveLength + 1);\r\n        for (let i = 0; i < Config.sineWaveLength + 1; i++) {\r\n            wave[i] = Math.round(Math.sin(i * Math.PI * 2.0 / Config.sineWaveLength));\r\n        }\r\n        return wave;\r\n\t}\r\n\r\nexport function getArpeggioPitchIndex(pitchCount: number, useFastTwoNoteArp: boolean, arpeggio: number): number {\r\n    let arpeggioPattern: ReadonlyArray<number> = Config.arpeggioPatterns[pitchCount - 1];\r\n    if (arpeggioPattern != null) {\r\n        if (pitchCount == 2 && useFastTwoNoteArp == false) {\r\n            arpeggioPattern = [0, 0, 1, 1];\r\n        }\r\n        return arpeggioPattern[arpeggio % arpeggioPattern.length];\r\n    } else {\r\n        return arpeggio % pitchCount;\r\n    }\r\n}\r\n\r\n// Pardon the messy type casting. This allows accessing array members by numerical index or string name.\r\nexport function toNameMap<T extends BeepBoxOption>(array: Array<Pick<T, Exclude<keyof T, \"index\">>>): DictionaryArray<T> {\r\n    const dictionary: Dictionary<T> = {};\r\n    for (let i: number = 0; i < array.length; i++) {\r\n        const value: any = array[i];\r\n        value.index = i;\r\n        dictionary[value.name] = <T>value;\r\n    }\r\n    const result: DictionaryArray<T> = <DictionaryArray<T>><any>array;\r\n    result.dictionary = dictionary;\r\n    return result;\r\n}\r\n\r\nexport function effectsIncludeTransition(effects: number): boolean {\r\n    return (effects & (1 << EffectType.transition)) != 0;\r\n}\r\nexport function effectsIncludeChord(effects: number): boolean {\r\n    return (effects & (1 << EffectType.chord)) != 0;\r\n}\r\nexport function effectsIncludePitchShift(effects: number): boolean {\r\n    return (effects & (1 << EffectType.pitchShift)) != 0;\r\n}\r\nexport function effectsIncludeDetune(effects: number): boolean {\r\n    return (effects & (1 << EffectType.detune)) != 0;\r\n}\r\nexport function effectsIncludeVibrato(effects: number): boolean {\r\n    return (effects & (1 << EffectType.vibrato)) != 0;\r\n}\r\nexport function effectsIncludeNoteFilter(effects: number): boolean {\r\n    return (effects & (1 << EffectType.noteFilter)) != 0;\r\n}\r\nexport function effectsIncludeDistortion(effects: number): boolean {\r\n    return (effects & (1 << EffectType.distortion)) != 0;\r\n}\r\nexport function effectsIncludeBitcrusher(effects: number): boolean {\r\n    return (effects & (1 << EffectType.bitcrusher)) != 0;\r\n}\r\nexport function effectsIncludePanning(effects: number): boolean {\r\n    return (effects & (1 << EffectType.panning)) != 0;\r\n}\r\nexport function effectsIncludeChorus(effects: number): boolean {\r\n    return (effects & (1 << EffectType.chorus)) != 0;\r\n}\r\nexport function effectsIncludeEcho(effects: number): boolean {\r\n    return (effects & (1 << EffectType.echo)) != 0;\r\n}\r\nexport function effectsIncludeReverb(effects: number): boolean {\r\n    return (effects & (1 << EffectType.reverb)) != 0;\r\n}\r\nexport function effectsIncludeRM(effects: number): boolean {\r\n    return (effects & (1 << EffectType.ringModulation)) != 0;\r\n}\r\nexport function effectsIncludePhaser(effects: number): boolean {\r\n    return (effects & (1 << EffectType.phaser)) != 0;\r\n}\r\nexport function effectsIncludeNoteRange(effects: number): boolean {\r\n    return (effects & (1 << EffectType.noteRange)) != 0;\r\n}\r\nexport function effectsIncludeInvertWave(effects: number): boolean {\r\n    return (effects & (1 << EffectType.invertWave)) != 0;\r\n}\r\nexport function rawChipToIntegrated(raw: DictionaryArray<ChipWave>): DictionaryArray<ChipWave> {\r\n    const newArray: Array<ChipWave> = new Array<ChipWave>(raw.length);\r\n    const dictionary: Dictionary<ChipWave> = {};\r\n    for (let i: number = 0; i < newArray.length; i++) {\r\n        newArray[i] = Object.assign([], raw[i]);\r\n        const value: any = newArray[i];\r\n        value.index = i;\r\n        dictionary[value.name] = <ChipWave>value;\r\n    }\r\n    for (let key in dictionary) {\r\n        dictionary[key].samples = performIntegral(dictionary[key].samples);\r\n    }\r\n    const result: DictionaryArray<ChipWave> = <DictionaryArray<ChipWave>><any>newArray;\r\n    result.dictionary = dictionary;\r\n    return result;\r\n}","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nexport function applyElementArgs<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, args: Array<any>): T {\n\tfor (const arg of args) {\n\t\tif (arg instanceof Node) {\n\t\t\telement.appendChild(arg);\n\t\t} else if (typeof arg === \"string\") {\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t} else if (typeof arg === \"function\") {\n\t\t\tapplyElementArgs(element, [arg()]);\n\t\t} else if (Array.isArray(arg)) {\n\t\t\tapplyElementArgs(element, arg);\n\t\t} else if (arg && typeof Symbol !== \"undefined\" && typeof arg[Symbol.iterator] === \"function\") {\n\t\t\tapplyElementArgs(element, [...arg]);\n\t\t} else if (arg && arg.constructor === Object && element instanceof Element) {\n\t\t\t// If the argument is a literal {} Object\n\t\t\tfor (const key of Object.keys(arg)) {\n\t\t\t\tconst value = arg[key];\n\t\t\t\t/*if (key === \"classList\") {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.classList.add(...value.split(\" \"));\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.classList.add(...value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid classList value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else*/ if (key === \"class\" /* || key === \"className\" */) {\n\t\t\t\t\tif (typeof value === \"string\") {\n\t\t\t\t\t\telement.setAttribute(\"class\", value);\n\t\t\t\t\t} else if (Array.isArray(arg) || (value && typeof Symbol !== \"undefined\" && typeof value[Symbol.iterator] === \"function\")) {\n\t\t\t\t\t\telement.setAttribute(\"class\", [...value].join(\" \"));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn(\"Invalid \" + key + \" value \\\"\" + value + \"\\\" on \" + element.tagName + \" element.\");\n\t\t\t\t\t}\n\t\t\t\t} else if (key === \"style\") {\n\t\t\t\t\tif (value && value.constructor === Object) {\n\t\t\t\t\t\tfor (const styleKey of Object.keys(value)) {\n\t\t\t\t\t\t\tif (styleKey in (<HTMLElement | SVGElement>element).style) {\n\t\t\t\t\t\t\t\t// In practice, camelCase and kebab-case properties both work as properties on CSSStyleDeclaration objects.\n\t\t\t\t\t\t\t\t(<any> element).style[styleKey] = value[styleKey];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// CSS variables start with -- and must be set with setProperty.\n\t\t\t\t\t\t\t\t(<HTMLElement | SVGElement>element).style.setProperty(styleKey, value[styleKey]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t\t}\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\t// If value is a callback, set as a property instead trying to coerce to string.\n\t\t\t\t\t(<any>element)[key] = value;\n\t\t\t\t} else if (typeof(value) === \"boolean\") {\n\t\t\t\t\t// If value is boolean, set attribute if true, remove if false.\n\t\t\t\t\tif (value) element.setAttribute(key, \"\");\n\t\t\t\t\telse element.removeAttribute(key);\n\t\t\t\t} else {\n\t\t\t\t\t// Default to setting attribute, as if writing html directly.\n\t\t\t\t\telement.setAttribute(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Just convert unrecognized objects to text and append them.\n\t\t\telement.appendChild(document.createTextNode(arg));\n\t\t}\n\t}\n\treturn element;\n}\n\nexport const svgNS: string = \"http://www.w3.org/2000/svg\";\n\nexport function parseHTML(...args: Array<any>): DocumentFragment {\n\treturn document.createRange().createContextualFragment(args.join());\n}\n\n//let svgParser: SVGSVGElement | null = null;\nexport function parseSVG(...args: Array<any>): DocumentFragment {\n\tconst fragment: DocumentFragment = document.createDocumentFragment();\n\t\n\t// Internet Explorer doesn't support the first method here, so I commented it out and used a slightly more complex one involving DOMParser below.\n\t/*\n\tif (svgParser === null) svgParser = <SVGSVGElement>document.createElementNS(svgNS, \"svg\");\n\tsvgParser.innerHTML = args.join();\n\twhile (svgParser.firstChild !== null) fragment.appendChild(svgParser.firstChild);\n\t*/\n\tconst svgParser: Element = new DOMParser().parseFromString(\"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\">\" + args.join() + \"</svg>\", \"image/svg+xml\").documentElement;\n\twhile (svgParser.firstChild !== null) {\n\t\tdocument.importNode(svgParser.firstChild, true);\n\t\tfragment.appendChild(svgParser.firstChild);\n\t}\n\t\n\treturn fragment;\n}\n\nexport function replaceScriptWith(...args: Array<any>): void {\n\tlet currentScript: HTMLScriptElement | SVGScriptElement | null = document.currentScript;\n\tif (currentScript == null) { // double-equals to intentionally include undefined in Internet Explorer.\n\t\t\n\t\t// Internet Explorer doens't support currentScript, try this method instead:\n\t\tif (document.readyState === \"loading\") {\n\t\t\tconst scripts: HTMLCollectionOf<HTMLScriptElement> = document.getElementsByTagName(\"script\");\n\t\t\tcurrentScript = scripts[scripts.length - 1];\n\t\t}\n\t\t\n\t\tif (currentScript == null) {\n\t\t\tconsole.warn(\"Couldn't replace script because no script is currently being parsed and executed, maybe this is happening in a callback function or event handler instead?\");\n\t\t\treturn;\n\t\t}\n\t}\n\tif (currentScript.parentNode === null) {\n\t\tconsole.warn(\"Couldn't replace script element because it is not attached to a parent anymore, did you try to replace the same script more than once?\");\n\t\treturn;\n\t}\n\tcurrentScript.parentNode.replaceChild(applyElementArgs(document.createDocumentFragment(), args), currentScript);\n}\n\nexport function applyToElement<T extends HTMLElement | SVGElement | DocumentFragment>(element: T, ...args: Array<any>): T {\n\tif (!(element instanceof Element || element instanceof DocumentFragment)) {\n\t\tconsole.warn(\"Couldn't apply to provided argument because it's not an element or DocumentFragment.\");\n\t\treturn element;\n\t}\n\treturn applyElementArgs(element, args);\n}\n","// Copyright (C) 2020 John Nesky, distributed under the MIT license.\n\nimport {applyElementArgs, svgNS, parseHTML, parseSVG, replaceScriptWith, applyToElement} from \"./elements-base\";\nexport {replaceScriptWith, applyToElement};\n\ninterface HTMLElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => HTMLElement;\n\ta(...args: Array<any>): HTMLAnchorElement;\n\tabbr(...args: Array<any>): HTMLElement;\n\taddress(...args: Array<any>): HTMLElement;\n\tarea(...args: Array<any>): HTMLAreaElement;\n\tarticle(...args: Array<any>): HTMLElement;\n\taside(...args: Array<any>): HTMLElement;\n\taudio(...args: Array<any>): HTMLAudioElement;\n\tb(...args: Array<any>): HTMLElement;\n\tbase(...args: Array<any>): HTMLBaseElement;\n\tbdi(...args: Array<any>): HTMLElement;\n\tbdo(...args: Array<any>): HTMLElement;\n\tblockquote(...args: Array<any>): HTMLQuoteElement;\n\tbr(...args: Array<any>): HTMLBRElement;\n\tbutton(...args: Array<any>): HTMLButtonElement;\n\tcanvas(...args: Array<any>): HTMLCanvasElement;\n\tcaption(...args: Array<any>): HTMLTableCaptionElement;\n\tcite(...args: Array<any>): HTMLElement;\n\tcode(...args: Array<any>): HTMLElement;\n\tcol(...args: Array<any>): HTMLTableColElement;\n\tcolgroup(...args: Array<any>): HTMLTableColElement;\n\tdatalist(...args: Array<any>): HTMLDataListElement;\n\tdd(...args: Array<any>): HTMLElement;\n\tdel(...args: Array<any>): HTMLModElement;\n\tdetails(...args: Array<any>): HTMLDetailsElement;\n\tdfn(...args: Array<any>): HTMLElement;\n\tdialog(...args: Array<any>): HTMLDialogElement;\n\tdiv(...args: Array<any>): HTMLDivElement;\n\tdl(...args: Array<any>): HTMLDListElement;\n\tdt(...args: Array<any>): HTMLElement;\n\tem(...args: Array<any>): HTMLElement;\n\tembed(...args: Array<any>): HTMLEmbedElement;\n\tfieldset(...args: Array<any>): HTMLFieldSetElement;\n\tfigcaption(...args: Array<any>): HTMLElement;\n\tfigure(...args: Array<any>): HTMLElement;\n\tfooter(...args: Array<any>): HTMLElement;\n\tform(...args: Array<any>): HTMLFormElement;\n\th1(...args: Array<any>): HTMLHeadingElement;\n\th2(...args: Array<any>): HTMLHeadingElement;\n\th3(...args: Array<any>): HTMLHeadingElement;\n\th4(...args: Array<any>): HTMLHeadingElement;\n\th5(...args: Array<any>): HTMLHeadingElement;\n\th6(...args: Array<any>): HTMLHeadingElement;\n\theader(...args: Array<any>): HTMLElement;\n\thr(...args: Array<any>): HTMLHRElement;\n\ti(...args: Array<any>): HTMLElement;\n\tiframe(...args: Array<any>): HTMLIFrameElement;\n\timg(...args: Array<any>): HTMLImageElement;\n\tinput(...args: Array<any>): HTMLInputElement;\n\tins(...args: Array<any>): HTMLModElement;\n\tkbd(...args: Array<any>): HTMLElement;\n\tlabel(...args: Array<any>): HTMLLabelElement;\n\tlegend(...args: Array<any>): HTMLLegendElement;\n\tli(...args: Array<any>): HTMLLIElement;\n\tlink(...args: Array<any>): HTMLLinkElement;\n\tmain(...args: Array<any>): HTMLElement;\n\tmap(...args: Array<any>): HTMLMapElement;\n\tmark(...args: Array<any>): HTMLElement;\n\tmenu(...args: Array<any>): HTMLMenuElement;\n\tmenuitem(...args: Array<any>): HTMLUnknownElement;\n\tmeta(...args: Array<any>): HTMLMetaElement;\n\tmeter(...args: Array<any>): HTMLMeterElement;\n\tnav(...args: Array<any>): HTMLElement;\n\tnoscript(...args: Array<any>): HTMLElement;\n\tobject(...args: Array<any>): HTMLObjectElement;\n\tol(...args: Array<any>): HTMLOListElement;\n\toptgroup(...args: Array<any>): HTMLOptGroupElement;\n\toption(...args: Array<any>): HTMLOptionElement;\n\toutput(...args: Array<any>): HTMLOutputElement;\n\tp(...args: Array<any>): HTMLParagraphElement;\n\tparam(...args: Array<any>): HTMLParamElement;\n\tpicture(...args: Array<any>): HTMLPictureElement;\n\tpre(...args: Array<any>): HTMLPreElement;\n\tprogress(...args: Array<any>): HTMLProgressElement;\n\tq(...args: Array<any>): HTMLQuoteElement;\n\trp(...args: Array<any>): HTMLElement;\n\trt(...args: Array<any>): HTMLElement;\n\truby(...args: Array<any>): HTMLElement;\n\ts(...args: Array<any>): HTMLElement;\n\tsamp(...args: Array<any>): HTMLElement;\n\tscript(...args: Array<any>): HTMLScriptElement;\n\tsection(...args: Array<any>): HTMLElement;\n\tselect(...args: Array<any>): HTMLSelectElement;\n\tsmall(...args: Array<any>): HTMLElement;\n\tsource(...args: Array<any>): HTMLSourceElement;\n\tspan(...args: Array<any>): HTMLSpanElement;\n\tstrong(...args: Array<any>): HTMLElement;\n\tstyle(...args: Array<any>): HTMLStyleElement;\n\tsub(...args: Array<any>): HTMLElement;\n\tsummary(...args: Array<any>): HTMLElement;\n\tsup(...args: Array<any>): HTMLElement;\n\ttable(...args: Array<any>): HTMLTableElement;\n\ttbody(...args: Array<any>): HTMLTableSectionElement;\n\ttd(...args: Array<any>): HTMLTableCellElement;\n\ttemplate(...args: Array<any>): HTMLTemplateElement;\n\ttextarea(...args: Array<any>): HTMLTextAreaElement;\n\ttfoot(...args: Array<any>): HTMLTableSectionElement;\n\tth(...args: Array<any>): HTMLTableCellElement;\n\tthead(...args: Array<any>): HTMLTableSectionElement;\n\ttime(...args: Array<any>): HTMLTimeElement;\n\ttitle(...args: Array<any>): HTMLTitleElement;\n\ttr(...args: Array<any>): HTMLTableRowElement;\n\ttrack(...args: Array<any>): HTMLTrackElement;\n\tu(...args: Array<any>): HTMLElement;\n\tul(...args: Array<any>): HTMLUListElement;\n\tvar(...args: Array<any>): HTMLElement;\n\tvideo(...args: Array<any>): HTMLVideoElement;\n\twbr(...args: Array<any>): HTMLElement;\n}\n\ninterface SVGElementFactory {\n\t(...args: Array<string>): DocumentFragment;\n\t//readonly [key: string]: (...args: Array<any>) => SVGElement;\n\ta(...args: Array<any>): SVGAElement;\n\taltGlyph(...args: Array<any>): SVGElement;\n\taltGlyphDef(...args: Array<any>): SVGElement;\n\taltGlyphItem(...args: Array<any>): SVGElement;\n\tanimate(...args: Array<any>): SVGAnimateElement;\n\tanimateMotion(...args: Array<any>): SVGAnimateMotionElement;\n\tanimateTransform(...args: Array<any>): SVGAnimateTransformElement;\n\tcircle(...args: Array<any>): SVGCircleElement;\n\tclipPath(...args: Array<any>): SVGClipPathElement;\n\t\"color-profile\"(...args: Array<any>): SVGElement;\n\tcolor_profile(...args: Array<any>): SVGElement;\n\tcursor(...args: Array<any>): SVGElement;\n\tdefs(...args: Array<any>): SVGDefsElement;\n\tdesc(...args: Array<any>): SVGDescElement;\n\tdiscard(...args: Array<any>): SVGElement;\n\tellipse(...args: Array<any>): SVGEllipseElement;\n\tfeBlend(...args: Array<any>): SVGFEBlendElement;\n\tfeColorMatrix(...args: Array<any>): SVGFEColorMatrixElement;\n\tfeComponentTransfer(...args: Array<any>): SVGFEComponentTransferElement;\n\tfeComposite(...args: Array<any>): SVGFECompositeElement;\n\tfeConvolveMatrix(...args: Array<any>): SVGFEConvolveMatrixElement;\n\tfeDiffuseLighting(...args: Array<any>): SVGFEDiffuseLightingElement;\n\tfeDisplacementMap(...args: Array<any>): SVGFEDisplacementMapElement;\n\tfeDistantLight(...args: Array<any>): SVGFEDistantLightElement;\n\tfeDropShadow(...args: Array<any>): SVGElement;\n\tfeFlood(...args: Array<any>): SVGFEFloodElement;\n\tfeFuncA(...args: Array<any>): SVGFEFuncAElement;\n\tfeFuncB(...args: Array<any>): SVGFEFuncBElement;\n\tfeFuncG(...args: Array<any>): SVGFEFuncGElement;\n\tfeFuncR(...args: Array<any>): SVGFEFuncRElement;\n\tfeGaussianBlur(...args: Array<any>): SVGFEGaussianBlurElement;\n\tfeImage(...args: Array<any>): SVGFEImageElement;\n\tfeMerge(...args: Array<any>): SVGFEMergeElement;\n\tfeMergeNode(...args: Array<any>): SVGFEMergeNodeElement;\n\tfeMorphology(...args: Array<any>): SVGFEMorphologyElement;\n\tfeOffset(...args: Array<any>): SVGFEOffsetElement;\n\tfePointLight(...args: Array<any>): SVGFEPointLightElement;\n\tfeSpecularLighting(...args: Array<any>): SVGFESpecularLightingElement;\n\tfeSpotLight(...args: Array<any>): SVGFESpotLightElement;\n\tfeTile(...args: Array<any>): SVGFETileElement;\n\tfeTurbulence(...args: Array<any>): SVGFETurbulenceElement;\n\tfilter(...args: Array<any>): SVGFilterElement;\n\tfont(...args: Array<any>): SVGElement;\n\t\"font-face\"(...args: Array<any>): SVGElement;\n\tfont_face(...args: Array<any>): SVGElement;\n\t\"font-face-format\"(...args: Array<any>): SVGElement;\n\tfont_face_format(...args: Array<any>): SVGElement;\n\t\"font-face-name\"(...args: Array<any>): SVGElement;\n\tfont_face_name(...args: Array<any>): SVGElement;\n\t\"font-face-src\"(...args: Array<any>): SVGElement;\n\tfont_face_src(...args: Array<any>): SVGElement;\n\t\"font-face-uri\"(...args: Array<any>): SVGElement;\n\tfont_face_uri(...args: Array<any>): SVGElement;\n\tforeignObject(...args: Array<any>): SVGForeignObjectElement;\n\tg(...args: Array<any>): SVGGElement;\n\tglyph(...args: Array<any>): SVGElement;\n\tglyphRef(...args: Array<any>): SVGElement;\n\thkern(...args: Array<any>): SVGElement;\n\timage(...args: Array<any>): SVGImageElement;\n\tline(...args: Array<any>): SVGLineElement;\n\tlinearGradient(...args: Array<any>): SVGLinearGradientElement;\n\tmarker(...args: Array<any>): SVGMarkerElement;\n\tmask(...args: Array<any>): SVGMaskElement;\n\tmetadata(...args: Array<any>): SVGMetadataElement;\n\t\"missing-glyph\"(...args: Array<any>): SVGElement;\n\tmissing_glyph(...args: Array<any>): SVGElement;\n\tmpath(...args: Array<any>): SVGElement;\n\tpath(...args: Array<any>): SVGPathElement;\n\tpattern(...args: Array<any>): SVGPatternElement;\n\tpolygon(...args: Array<any>): SVGPolygonElement;\n\tpolyline(...args: Array<any>): SVGPolylineElement;\n\tradialGradient(...args: Array<any>): SVGRadialGradientElement;\n\trect(...args: Array<any>): SVGRectElement;\n\tscript(...args: Array<any>): SVGScriptElement;\n\tset(...args: Array<any>): SVGElement;\n\tstop(...args: Array<any>): SVGStopElement;\n\tstyle(...args: Array<any>): SVGStyleElement;\n\tsvg(...args: Array<any>): SVGSVGElement;\n\tswitch(...args: Array<any>): SVGSwitchElement;\n\tsymbol(...args: Array<any>): SVGSymbolElement;\n\ttext(...args: Array<any>): SVGTextElement;\n\ttextPath(...args: Array<any>): SVGTextPathElement;\n\ttitle(...args: Array<any>): SVGTitleElement;\n\ttref(...args: Array<any>): SVGElement;\n\ttspan(...args: Array<any>): SVGTSpanElement;\n\tuse(...args: Array<any>): SVGUseElement;\n\tview(...args: Array<any>): SVGViewElement;\n\tvkern(...args: Array<any>): SVGElement;\n}\n\nexport const HTML: HTMLElementFactory = <HTMLElementFactory> <unknown> parseHTML;\nexport const SVG: SVGElementFactory = <SVGElementFactory> <unknown> parseSVG;\n\nfor (const name of \"a abbr address area article aside audio b base bdi bdo blockquote br button canvas caption cite code col colgroup datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 header hr i iframe img input ins kbd label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td template textarea tfoot th thead time title tr track u ul var video wbr\".split(\" \")) {\n\t(<any>HTML)[name] = (...args: Array<any>) => applyElementArgs(document.createElement(name), args);\n}\nfor (const name of \"a altGlyph altGlyphDef altGlyphItem animate animateMotion animateTransform circle clipPath color-profile cursor defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font font-face font-face-format font-face-name font-face-src font-face-uri foreignObject g glyph glyphRef hkern image line linearGradient marker mask metadata missing-glyph mpath path pattern polygon polyline radialGradient rect script set stop style svg switch symbol text textPath title tref tspan use view vkern\".split(\" \")) {\n\t(<any>SVG)[name] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\tif (/-/.test(name)) {\n\t\tconst snakeCaseName = name.replace(/-/g, \"_\");\n\t\t(<any>SVG)[snakeCaseName] = (...args: Array<any>) => applyElementArgs(<SVGElement> document.createElementNS(svgNS, name), args);\n\t}\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { BeepBoxOption, DictionaryArray, toNameMap, Config } from \"../synth/SynthConfig\";\r\nimport { Song } from \"../synth/synth\";\r\nimport { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nexport interface ChannelColors extends BeepBoxOption {\r\n    readonly secondaryChannel: string;\r\n    readonly primaryChannel: string;\r\n    readonly secondaryNote: string;\r\n    readonly primaryNote: string;\r\n}\r\n\r\nexport class ColorConfig {\r\n    public static colorLookup: Map<number, ChannelColors> = new Map<number, ChannelColors>();\r\n\tpublic static usesColorFormula: boolean = false;\r\n\tpublic static usesPianoScheme: boolean = false;\r\n\tpublic static currentSetTheme: string = \"AbyssBox Classic\";\r\n    public static readonly themes: { [name: string]: string } = {\r\n      \"AbyssBox Classic\": `\r\n\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #1e0915; \t\t\r\n\t\t\t--editor-background: #1e0915; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ffcedd; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #1e0915; \t\t\r\n\t\t\t--loop-accent: #873a51; \t\t\r\n\t\t\t--link-accent: #df88ff; \t\t\r\n\t\t\t--ui-widget-background: #581b3e; \t\t\r\n\t\t\t--ui-widget-focus: #762b4c; \t\t\r\n\t\t\t--pitch-background: #381d24; \t\t\r\n\t\t\t--tonic: #873a51; \t\t\r\n\t\t\t--fifth-note: #75001e; \t\r\n\t\t\t--third-note: #75002c;\t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\r\n\t\t\t--track-editor-bg-noise: #571131; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\r\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--mod-title: #bf2c5d;\r\n\t\t\t--progress-bar: #bf2c5d;\r\n\t\t\t--empty-sample-bar: #260b1b;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \t\r\n\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\r\n\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\r\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\r\n\r\n\t\t\t--scrollbar-color: #bf2c5d;\r\n\t\t\t\t}\r\n\t\t* {\r\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto;\r\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\r\n\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\r\n\t\t}\r\n\t\t\r\n\t\t\t\r\n\r\n\t\t\t/* sets background image */\r\n\t\t\tbody {\r\n\t\t\tbackground-image: url(\"./image_assets/stripesbg.gif\") !important;\r\n\t\t\tbackground-position: center;\r\n\t\t\tbackground-repeat: repeat;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\r\n\t\t\t/*#Hotdog {\r\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/abclassic_hotdog.png\");\r\n\t\t\t} */\r\n\r\n\t\t\t#text-content {\r\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch; \r\n    \t\t\t\tpadding: 12px; \r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch;\r\n    \t\t\t\tpadding: 12px;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\t\t\t.beepboxEditor button,\r\n\t\t\tbutton.mobilePatternButton,\r\n\t\t\tbutton.mobileTrackButton,\r\n\t\t\tbutton.mobileSettingsButton,\r\n\t\t\tbutton.mobilePlayButton,\r\n\t\t\tbutton.mobilePauseButton,\r\n\t\t\tbutton.mobileNextBarButton,\r\n\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\tbutton.playButton,\r\n\t\t\tbutton.pauseButton, \r\n\t\t\tbutton.recordButton, \r\n\t\t\tbutton.stopButton,\r\n\t\t\tbutton.nextBarButton, \r\n\t\t\tbutton.prevBarButton, \r\n\t\t\tbutton.copyButton, \r\n\t\t\tbutton.pasteButton, \r\n\t\t\tbutton.exportInstrumentButton, \r\n\t\t\tbutton.importInstrumentButton, \r\n\t\t\t.beepboxEditor select, \r\n\t\t\t.beepboxEditor .select2-selection__rendered {\r\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border.png\") !important;\r\n    \t\t\t\tborder-image-slice: 4 fill !important; \r\n   \t\t\t\tborder-image-width: 4px !important; \r\n\t\t\t\tborder-image-repeat: stretch !important;\r\n    \t\t\t\t\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t}\r\n\r\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: #1e0915 !important;\r\n\t\t\t\tborder-image-source:none !important;\r\n\t\t\t}\r\n\r\n\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType_small\";\r\n\t\t   src:\r\n \t\t   url(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\r\n\t\t\t\r\n\r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.selectRow span {\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\t`,\r\n  \"AbyssBox Competitive\": `\r\n\t\t\t:root { \t\t\r\n\t\t\t--page-margin: #000000; \t\t\r\n\t\t\t--editor-background: #000000; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ffcedd; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #bf2c5d; \t\t\r\n\t\t\t--loop-accent: #873a51; \t\t\r\n\t\t\t--link-accent: #df88ff; \t\t\r\n\t\t\t--ui-widget-background: #581b3e; \t\t\r\n\t\t\t--ui-widget-focus: #000000; \t\t\r\n\t\t\t--pitch-background: #240f15; \t\t\r\n\t\t\t--tonic: #a34b65; \t\t\r\n\t\t\t--fifth-note: #75001e; \t\r\n\t\t\t--third-note: #75002c;\t\t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\r\n\t\t\t--track-editor-bg-noise: #571131; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\r\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--mod-title: #bf2c5d;\r\n\t\t\t--progress-bar: #bf2c5d;\r\n\t\t\t--empty-sample-bar: #0d0d0d;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \r\n\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\r\n\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\r\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\r\n\r\n\t\t\t--scrollbar-color: #bf2c5d;\r\n\t\t\t\t}\t\t\r\n\t\t/* sets cursor */ \r\n\t\t* {\r\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\r\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\r\n\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\r\n\t\t}\r\n\t\t\r\n\t\t\t\r\n\r\n\t\t\t\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType_small\";\r\n\t\t   src:\r\n \t\t   url(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor button,\r\n\t\t\tbutton.mobilePatternButton,\r\n\t\t\tbutton.mobileTrackButton,\r\n\t\t\tbutton.mobileSettingsButton,\r\n\t\t\tbutton.mobilePlayButton,\r\n\t\t\tbutton.mobilePauseButton,\r\n\t\t\tbutton.cancelButton,\r\n\t\t\tbutton.mobileNextBarButton,\r\n\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\tbutton.insertChannelButton,\r\n\t\t\tbutton.playButton,\r\n\t\t\tbutton.pauseButton, \r\n\t\t\tbutton.recordButton, \r\n\t\t\tbutton.stopButton,\r\n\t\t\tbutton.nextBarButton,\r\n\t\t\tbutton.prevBarButton,\r\n\t\t\tbutton.copyButton, \r\n\t\t\tbutton.pasteButton, \r\n\t\t\tbutton.exportInstrumentButton, \r\n\t\t\tbutton.importInstrumentButton,\r\n\t\t\tbutton.okayButton, \r\n\t\t\tbutton.songLoopButton,\r\n\t\t\t.beepboxEditor select, \r\n\t\t\t.beepboxEditor .select2-selection__rendered {\r\n\t\t\t\t\tborder-style: double !important;\r\n\t\t\t\t\tborder-radius: 0px !important;\r\n\t\t\t\t\t--ui-widget-background: black;\r\n\t\t\t}\r\n\r\n\t\t\tbutton.add-envelope::before,\r\n\t\t\tbutton.notesDownButton::before,\r\n\t\t\tbutton.notesUpButton::before,\r\n\t\t\tbutton.copyPatternButton::before,\r\n\t\t\tbutton.pastePatternButton::before,\r\n\t\t\tbutton.insertChannelButton::before,\r\n\t\t\tbutton.undoButton::before,\r\n\t\t\tbutton.redoButton::before,\r\n\t\t\tbutton.loopBarButton::before,\r\n\t\t\tbutton.duplicateButton::before,\r\n\t\t\tbutton.selectAllButton::before,\r\n\t\t\tbutton.deleteChannelButton::before, \r\n\t\t\tbutton.insertRowButton::before,\r\n\t\t\tbutton.okayButton::before, \r\n\t\t\tbutton.songLoopButton::before,\r\n\t\t\t.delete-envelope::before {\r\n\t\t\t\tleft: -3px !important;\r\n\t\t\t\ttop: -3px !important;\r\n\t\t\t}\r\n\r\n\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\tborder-image-source: none !important;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: black !important;\r\n\t\t\t\tborder-image-source:none !important;\r\n\t\t\t\tborder-style: none !important;\r\n\t\t\t}\r\n\r\n\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t\tborder-style: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   font-family: 'AbyssType';\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.selectRow span {\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\t`,\r\n  \"AbyssBox Light\": `\r\n\t\t\t:root { \t\t\r\n\t\t\t--page-margin: #e0adbc; \t\t\r\n\t\t\t--editor-background: #e0adbc; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: #6110d9; \t\t\r\n\t\t\t--secondary-text: #cc1338;\t\t\r\n\t\t\t--inverted-text:  #e8bcc9;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #bf2c5d; \t\t\r\n\t\t\t--loop-accent: #8c346a; \t\t\r\n\t\t\t--link-accent: #8c346a; \t\t\r\n\t\t\t--ui-widget-background: #f5e9f0;\t\t\r\n\t\t\t--ui-widget-focus: #f5e9f0; \t\t\r\n\t\t\t--pitch-background: #eddadf; \t\t\r\n\t\t\t--tonic: #f5f0f1; \t\t\r\n\t\t\t--fifth-note: #ffb5c9; \t\r\n\t\t\t--third-note: #ffa6f0;\t\t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #edbecc;\t\r\n\t\t\t--track-editor-bg-pitch-dim: #e0adbc; \t\t\r\n\t\t\t--track-editor-bg-noise: #edbecc;\t\t\r\n\t\t\t--track-editor-bg-noise-dim: #e0adbc;\t\t\r\n\t\t\t--track-editor-bg-mod: #edbecc; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #e0adbc;\t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--mod-title: #cc1338;\r\n\t\t\t--progress-bar: #cc1338;\r\n\t\t\t--empty-sample-bar: #d9a0b1;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 255; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 30; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 255; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 255; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 30; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 255; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 60; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 255; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 30; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 255; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 60; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 255; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 30; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 255; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 255; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 30; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 255; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 60; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 255; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 30; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 255; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 60; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \t\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\r\n\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\r\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\r\n\r\n\t\t\t--scrollbar-color: #bf2c5d;\r\n\t\t\t}\r\n\r\n\t\t\t\t.promptContainerBG::before {\r\n\t\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* sets background image */\r\n\t\t\t\tbody {\r\n\t\t\t\tbackground-image: url(\"./image_assets/stripesbg_light.gif\") !important;\r\n\t\t\t\tbackground-position: center;\r\n\t\t\t\tbackground-repeat: repeat;\r\n\t\r\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t}\t\t\r\n\t\t\t#text-content {\r\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border_light.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch; \r\n    \t\t\t\tpadding: 12px; \r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border_light.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch;\r\n    \t\t\t\tpadding: 12px;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor button,\r\n\t\t\t\tbutton.mobilePatternButton,\r\n\t\t\t\tbutton.mobileTrackButton,\r\n\t\t\t\tbutton.mobileSettingsButton,\r\n\t\t\t\tbutton.mobilePlayButton,\r\n\t\t\t\tbutton.mobilePauseButton,\r\n\t\t\t\tbutton.mobileNextBarButton,\r\n\t\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\t\tbutton.playButton,\r\n\t\t\t\tbutton.pauseButton, \r\n\t\t\t\tbutton.recordButton, \r\n\t\t\t\tbutton.stopButton,\r\n\t\t\t\tbutton.nextBarButton, \r\n\t\t\t\tbutton.prevBarButton, \r\n\t\t\t\tbutton.copyButton, \r\n\t\t\t\tbutton.pasteButton, \r\n\t\t\t\tbutton.exportInstrumentButton, \r\n\t\t\t\tbutton.importInstrumentButton, \r\n\t\t\t\t.beepboxEditor select, \r\n\t\t\t\t.beepboxEditor .select2-selection__rendered {\r\n\t\t\t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border_light.png\") !important;\r\n\t\t\t\t\t\tborder-image-slice: 4 fill !important; \r\n\t\t\t\t\t   border-image-width: 4px !important; \r\n\t\t\t\t\tborder-image-repeat: stretch !important;\r\n\t\t\t\t\t\t\r\n\t\r\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\r\n\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\tborder-image-source:none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t/* sets cursor */ \r\n\t\t* {\r\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\r\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\r\n\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\r\n\t\t}\r\n\t\t\r\n\t\t\t\r\n\r\n\t\t\t\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType_small\";\r\n\t\t   src:\r\n \t\t   url(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\tborder-image-source: none !important;\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   font-family: 'AbyssType';\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.selectRow span {\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\t`,\r\n\t\"AbyssBox 0.8\": `\r\n\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #1e0915; \t\t\r\n\t\t\t--editor-background: #1e0915; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ffcedd; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #1e0915; \t\t\r\n\t\t\t--loop-accent: #873a51; \t\t\r\n\t\t\t--link-accent: #df88ff; \t\t\r\n\t\t\t--ui-widget-background: #581b3e; \t\t\r\n\t\t\t--ui-widget-focus: #762b4c; \t\t\r\n\t\t\t--pitch-background: #381d24; \t\t\r\n\t\t\t--tonic: #873a51; \t\t\r\n\t\t\t--fifth-note: #75001e;\r\n\t\t\t--third-note: #75002c;\t \t\t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\r\n\t\t\t--track-editor-bg-noise: #571131; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\r\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \t\r\n\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\t\t\t--empty-sample-bar: #260b1b;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"AbyssBox Piano\": ` \r\n\t\t\t\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #450320; \t\t\r\n\t\t\t--editor-background: #450320; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ffcedd; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #1e0915; \t\t\r\n\t\t\t--loop-accent: #873a51; \t\t\r\n\t\t\t--link-accent: #df88ff; \t\t\r\n\t\t\t--ui-widget-background: #581b3e; \t\t\r\n\t\t\t--ui-widget-focus: #762b4c;\r\n            --pitch-background: #5e2233;  \t\r\n            --use-piano-scheme: true;\t\r\n            --pitch-black-key: #4d1a28; \t\t\t\t\r\n            --pitch-white-key: #5e2233; \r\n            --tonic: #eb2859; \t\r\n\t\t\t--white-tonic: #873a51; \t\r\n            --black-tonic: #410019;\t\r\n\t\t\t--white-fifth-note: #aa002b; \t\r\n            --fifth-note: #aa002b; \r\n            --black-fifth-note: #550015; \t\r\n\t\t\t--white-third-note: #a80644;\t\r\n            --third-note: #a80644;\t\r\n            --black-third-note: #4e0014; \t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #57103c; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #300404; \t\t\r\n\t\t\t--track-editor-bg-noise: #530729; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #3a042b; \t\t\r\n\t\t\t--track-editor-bg-mod: #740250; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #55023b; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--mod-title: #bf2c5d;\r\n\t\t\t--progress-bar: #bf2c5d;\r\n\t\t\t--empty-sample-bar: #38021a;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \t\r\n\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\r\n\t\t\t--oscilloscope-line-R: var(--ui-widget-background);\r\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\r\n\r\n\t\t\t--scrollbar-color: #bf2c5d;\r\n\t\t\t\t}\r\n\t\t* {\r\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto;\r\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\r\n\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\r\n\t\t}\r\n\t\t\r\n\t\t\t\r\n\r\n\t\t\t/* sets background image */\r\n\t\t\tbody {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stripespianobg.gif\") !important;\r\n\t\t\tbackground-position: center;\r\n\t\t\tbackground-repeat: repeat;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\r\n\t\t\t/*#Hotdog {\r\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/abclassic_hotdog.png\");\r\n\t\t\t} */\r\n\r\n\t\t\t#text-content {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/abyssbox_border_piano.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch; \r\n    \t\t\t\tpadding: 12px; \r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/abyssbox_border_piano.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch;\r\n    \t\t\t\tpadding: 12px;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\t\t\t.beepboxEditor button,\r\n\t\t\tbutton.mobilePatternButton,\r\n\t\t\tbutton.mobileTrackButton,\r\n\t\t\tbutton.mobileSettingsButton,\r\n\t\t\tbutton.mobilePlayButton,\r\n\t\t\tbutton.mobilePauseButton,\r\n\t\t\tbutton.mobileNextBarButton,\r\n\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\tbutton.playButton,\r\n\t\t\tbutton.pauseButton, \r\n\t\t\tbutton.recordButton, \r\n\t\t\tbutton.stopButton,\r\n\t\t\tbutton.nextBarButton, \r\n\t\t\tbutton.prevBarButton, \r\n\t\t\tbutton.copyButton, \r\n\t\t\tbutton.pasteButton, \r\n\t\t\tbutton.exportInstrumentButton, \r\n\t\t\tbutton.importInstrumentButton, \r\n\t\t\t.beepboxEditor select, \r\n\t\t\t.beepboxEditor .select2-selection__rendered {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/abyssbox_border_piano.png\") !important;\r\n    \t\t\t\tborder-image-slice: 4 fill !important; \r\n   \t\t\t\tborder-image-width: 4px !important; \r\n\t\t\t\tborder-image-repeat: stretch !important;\r\n    \t\t\t\t\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t}\r\n\r\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: #450320 !important;\r\n\t\t\t\tborder-image-source:none !important;\r\n\t\t\t}\r\n\r\n\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType_small\";\r\n\t\t   src:\r\n \t\t   url(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\r\n\t\t\t\r\n\r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t \r\n\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t{\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.selectRow span {\r\n\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t}\r\n\t\t\t`,\r\n\t\"Frutiger Aero\": `\r\n\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #fff; \t\t\r\n\t\t\t--editor-background: #2e538c;\t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ceddff;\t\t\r\n\t\t\t--inverted-text: white;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #0a091e; \t\t\r\n\t\t\t--loop-accent: #6fafe8; \t\t\r\n\t\t\t--link-accent: #a2b0ff; \t\t\r\n\t\t\t--ui-widget-background: #84aef0; \t\t\r\n\t\t\t--ui-widget-focus: #2b5376; \t\t\r\n\t\t\t--pitch-background: #4671b5; \t\t\r\n\t\t\t--tonic: #fff; \t\t\r\n\t\t\t--fifth-note: #620297; \r\n\t\t\t--third-note: #bf2c78;\t\t\r\n\t\t\t--white-piano-key: #dbe5ec;\t\t\r\n\t\t\t--black-piano-key: #2f3a40;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t\t\t\t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: linear-gradient(#2782b0,#0c2b3e); \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: linear-gradient(#0c2b3e70,#05151fc4); \t\t\r\n\t\t\t--track-editor-bg-noise: linear-gradient(#2d4aa1,#08204f); \t\t\r\n\t\t\t--track-editor-bg-noise-dim: linear-gradient(#08204f70, #031029c4); \t\t\r\n\t\t\t--track-editor-bg-mod: linear-gradient(#46299e, #26145e); \t\t\r\n\t\t\t--track-editor-bg-mod-dim: linear-gradient(#26145e70,#110630c4); \t\t\r\n\t\t\t--multiplicative-mod-slider: #60769f; \t\t\r\n\t\t\t--overwriting-mod-slider: #343b9e; \t\t\r\n\t\t\t--indicator-primary: #499ab3; \t\t\r\n\t\t\t--indicator-secondary: #9db9c4; \t\t\r\n\t\t\t--select2-opt-group: #185f8a; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #97d4f9; \t\t\r\n\t\t\t--mute-button-mod: #8a5fff;\t\t\r\n\t\t\t--mod-label-primary: #341a7b; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(86, 93, 120);\r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--progress-bar: #84aef0;\r\n\t\t\t--empty-sample-bar: #26477a;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: 110; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 63; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 50; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: 120; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: 110; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 63.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 55; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: 120; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 90; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 80; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 90; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 60; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 80; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 62; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \t\r\n\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\t\t\t--sample-failed: #bf2c78;\r\n\r\n\t\t}\r\n\r\n\t\t* {\r\n\t\t/*cursor: url(\"abyssbox_cursor.png\"), auto !important;*/\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIconMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIcon.png\");\r\n\t\t}\r\n\t\r\n\r\n\t\t/* Frutiger Aero Icons */\r\n\r\n\t\tdiv.promptContainerBG {\r\n\t\t\tbackground-color: var(--editor-background) !important;\r\n\t\t\tbackdrop-filter: unset !important;\r\n\t\t\topacity: 0 !important;\r\n\t\t}\r\n\r\n\t\tdiv.mute-button::before {\r\n\t\t\tbackground: #fff0 !important;\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIcon.png\") !important;\r\n\t\t\tbackground-size: 18px !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tmask-size: 800px !important;\r\n\t\t\tcolor: #fff0;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\tdiv.mute-button.muted::before {\r\n\t\t\tbackground: #fff0 !important;\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIconMuted.png\") !important;\r\n\t\t\tbackground-size: 18px !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tmask-size: 800px !important;\r\n\t\t\tcolor: #fff0;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\t#text-content > section > h1 > font {\r\n\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t\t#text-content > section > h1 {\r\n\t\t\tmargin: auto;\r\n\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxFrutigerAeroThemeLogo.png\");\r\n\t\t\t}\r\n\r\n\t\tbutton.mobileEffectsButton.deactivated {\r\n\t\tbox-shadow: none !important;\r\n\t\t}\r\n\r\n\t\tbutton.mobileInstButton.deactivated {\r\n\t\tbox-shadow: none !important;\r\n\t\t}\r\n\r\n\t\tbutton.mobileEnvelopesButton.deactivated {\r\n\t\tbox-shadow: none !important;\r\n\t\t}\r\n\r\n\t\tselect.trackSelectBox {\r\n\t\t\tborder-image: none !important;\r\n\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"Frutiger\";\r\n\t\t   src:\r\n \t\t   url(\"https://choptop84.github.io/choptop84s-image-repository/FrutigerLight.ttf\") format(\"truetype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\tcanvas#oscilascopeAll {\r\n\t\t\t\tbackground: #2e538c !important; \r\n\t\t\t\tborder: 2px solid #84aef000 !important;\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor .play-pause-area div:last-child {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\twidth: 144px;\r\n\t\t\t\theight: 32px;\r\n\t\t\t  }\r\n\t\t\t  .beepboxEditor .play-pause-area div:last-child::before {\r\n\t\t\t\tcontent: \"\";\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: calc(144px + 4px);\r\n\t\t\t\theight: calc(32px + 4px);\r\n\t\t\t\tbox-shadow: 0px -1px 1px 0px rgba(0, 0, 0, 0.5), inset 0px 1px 2px 0px rgba(0, 0, 0, 0.5), inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t  }\r\n\r\n\t\t\tdiv.prompt.noSelection{\r\n\t\t\t\tbackground: linear-gradient(#84aef080, #2a3d6a80) !important; \r\n\t\t\t\topacity: 77;\r\n\t\t\t\tbackdrop-filter: blur(14px);\r\n\t\t\t}  \r\n\r\n\t\t\tsvg#firstImage {\r\n\t\t\t\topacity: 50%;\r\n\t\t\t\t--editor-background: #84aef0;\r\n\t\t\t}\r\n\r\n\t\t\t/* sets background image */\r\n\t\t\tbody {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/frutigerbg3.jpg\") !important;\r\n\t\t\tbackground-position: top;\r\n\t\t\tbackground-attachment: fixed;\r\n\t\t\tbackground-repeat: no-repeat;\r\n\t\t\tbackground-size: cover;\r\n\t\t\timage-rendering: optimizeQuality !important;             /* IE */ \r\n\t\t\t\t}\r\n\r\n\t\t\t#beepboxEditorContainer {\r\n\t\t\t\tbackground: linear-gradient(#eef3ff80, #395eb380) !important;\r\n\t\t\t\tborder-style: solid;\r\n  \t\t\t\tborder-color: lightblue;\r\n\t\t\t\tpadding-bottom: 5px;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\tbackdrop-filter: blur(14px);\r\n\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t\t}\r\n\t\t\t#text-content {\r\n\t\t\t\tbackground: linear-gradient(#395eb380, #03112f80);\r\n\t\t\t\tborder-style: solid;\r\n  \t\t\t\tborder-color: lightblue;\r\n\t\t\t\t  backdrop-filter: blur(14px);\r\n\t\t\t\t  box-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t\t}\r\n\r\n\t\t\t\tdiv.playback-bar-controls button.playButton, \r\n\t\t\t\tdiv.playback-bar-controls button.pauseButton, \r\n\t\t\t\tdiv.playback-bar-controls button.recordButton, \r\n\t\t\t\tdiv.playback-bar-controls button.stopButton, \r\n\t\t\t\tdiv.playback-bar-controls button.prevBarButton, \r\n\t\t\t\tdiv.playback-bar-controls button.nextBarButton, \r\n\t\t\t\tdiv.selectRow button.copyButton, \r\n\t\t\t\tdiv.selectRow button.pasteButton, \r\n\t\t\t\tdiv.editor-controls button.exportInstrumentButton, \r\n\t\t\t\tdiv.editor-controls button.importInstrumentButton,\r\n\t\t\t\tdiv.editor-controls div button.add-envelope,\r\n\t\t\t\tdiv.editor-controls div button.delete-envelope, \r\n\t\t\t\t.beepboxEditor .select2-selection__rendered,\r\n\t\t\t\t.beepboxEditor .instrument-bar button,\r\n\t\t\t\t.beepboxEditor .eq-filter-type-bar button .deactivated,\r\n\t\t\t\t.beepboxEditor .note-filter-type-bar button .deactivated,\r\n\t\t\t\t.beepboxEditor select  { \r\n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -7px 4px 0px rgba(79, 99, 204, 0.71), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2), inset 0px 1px 2px 1px #ffffff54;\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#b6cfffcc, #628ef2cc) !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor select:focus\r\n\t\t\t\t{\r\n\t\t\t\t\tborder-image-source: none;\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#2a3d6a, #2a3d6a) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 10px 20px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor button, button\r\n\t\t\t\t{\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#84aef0, #2a3d6a) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .select2-container--open .select2-selection__rendered,\r\n\t\t\t\t.beepboxEditor button:focus,\r\n\t\t\t\tbutton:focus,\r\n\t\t\t\t.beepboxEditor .instrument-bar .selected-instrument,\r\n\t\t\t\t.beepboxEditor .eq-filter-type-bar button:not(.deactivated),\r\n\t\t\t\t.beepboxEditor .note-filter-type-bar button:not(.deactivated)\r\n\t\t\t\t{\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#333, #444) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor .filterEditor svg,\r\n\t\t\t\t.beepboxEditor .fadeInOut svg,\r\n\t\t\t\t.beepboxEditor .harmonics svg,\r\n\t\t\t\t.beepboxEditor .spectrum svg\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.3) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t\tborder-radius: 4px;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t\tborder-radius: 4px;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\theight: 16px !important;\r\n\t\t\t\t\twidth: 16px !important;\r\n\t\t\t\t\tborder-radius: 40px !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t\tborder-radius: 4px;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t\t{\r\n\t\t\t\t\tborder: none !important;\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t\t{\r\n\t\t\t\t\tappearance: none;\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.3);\r\n\t\t\t\t\tcolor: currentColor;\r\n\t\t\t\t\tborder-radius: 1px;\r\n\t\t\t\t\twidth: 1em !important;\r\n\t\t\t\t\theight: 1em !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t\t{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: 1em;\r\n\t\t\t\t\theight: 1em;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t\tfont-size: 0.8em;\r\n\t\t\t\t\tcontent: \"✓\";\r\n\t\t\t\t\tcolor: currentColor;\r\n\t\t\t\t\ttext-shadow: 0px 0px 2px rgba(255, 255, 255, 0.5);\r\n\t\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   \tfont-family: 'Frutiger';\r\n\t\t\t}\r\n\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'Frutiger' !important;\r\n\t\t\t}\r\n\r\n\t\t\t\t/* Use this code down here when you have transparent backgrounds!!! */\r\n\r\n\t\t   div.beepboxEditor.load {\r\n\t\t\tbackground: none !important;\r\n\t\t   }\r\n\r\n\t\t   div.noSelection {\r\n\t\t\tbackground: none !important;\r\n\t\t   }\r\n\r\n\t\t   .beepboxEditor .loopEditor {\r\n\t\t\tbackground: none !important;\r\n\t\t   }\r\n\r\n\t\t   .beepboxEditor .muteEditor {\r\n\t\t\tbackground: linear-gradient(#c4f0d1, #83c139) !important;\r\n\t\t\tborder-radius: 5px;\r\n\t\t\tbox-shadow: 0px 1px 1px 0px rgb(0, 0, 0), inset 0px 3px 14px 0px rgba(0, 0, 0, 0.1), inset 0px -4px 0px 0px rgba(0, 0, 0, 0.1);\r\n\t\t\topacity: 65%;\r\n\t\t   }\r\n\r\n\t\t   div.muteEditor div {\r\n\t\t\tbackground: none !important;\r\n\t\t\t--track-editor-bg-pitch: #1b4079;\r\n\t\t\t--track-editor-bg-noise: #213779;\r\n\t\t\t--track-editor-bg-mod: #46299e;\r\n\t\r\n\t\t\t--track-editor-bg-pitch-dim: #0c2b3e; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #08204f; \t\t\t\r\n\t\t\t--track-editor-bg-mod-dim: #26145e; \r\n\r\n\t\t   }\r\n\r\n\t\t   div.channelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\t\t  div.curChannelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\r\n\t\t\t`,\r\n\t\"Frutiger Aero Night\": `\r\n\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #fff; \t\t\r\n\t\t\t--editor-background: #290f37;\t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #d7ceff;\t\t\r\n\t\t\t--inverted-text: #140111;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #0a091e; \t\t\r\n\t\t\t--loop-accent: #ab6fe8; \t\t\r\n\t\t\t--link-accent: #eba2ff; \t\t\r\n\t\t\t--ui-widget-background: #c03ed2; \t\t\r\n\t\t\t--ui-widget-focus: #582b76; \t\t\r\n\t\t\t--pitch-background: #26032b; \t\t\r\n\t\t\t--tonic: #8d46b5; \t\t\r\n\t\t\t--fifth-note: #0e0297; \r\n\t\t\t--third-note: #bf2c78;\t\t\r\n\t\t\t--white-piano-key: #dbe5ec;\t\t\r\n\t\t\t--black-piano-key: #2f3a40;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t\t\t\t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: linear-gradient(#7227b0,#2c0c3e); \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: linear-gradient(#260c3e70,#16051fc4); \t\t\r\n\t\t\t--track-editor-bg-noise: linear-gradient(#932da1,#47084f); \t\t\r\n\t\t\t--track-editor-bg-noise-dim: linear-gradient(#43084f70, #260329c4); \t\t\r\n\t\t\t--track-editor-bg-mod: linear-gradient(#9e2950, #5e143d); \t\t\r\n\t\t\t--track-editor-bg-mod-dim: linear-gradient(#5e143f70,#300616c4); \t\t\t\r\n\t\t\t--multiplicative-mod-slider: #60769f; \t\t\r\n\t\t\t--overwriting-mod-slider: #7d349e; \t\t\r\n\t\t\t--indicator-primary: #9149b3; \t\t\r\n\t\t\t--indicator-secondary: #b39dc4; \t\t\r\n\t\t\t--select2-opt-group: #185f8a; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #c597f9; \t\t\r\n\t\t\t--mute-button-mod: #da5fff;\t\t\r\n\t\t\t--mod-label-primary: #6b1a7b; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(86, 93, 120);\r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--progress-bar: #ec84f0;\r\n\t\t\t--empty-sample-bar: #1d092f;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: 110; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 63; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 50; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: 120; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: 110; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 63.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 55; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: 120; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 90; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 80; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 90; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 60; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 80; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 62; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \t\r\n\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\t\t\t--sample-failed: #bf2c78;\r\n\r\n\t\t}\r\n\r\n\t\t* {\r\n\t\t/*cursor: url(\"abyssbox_cursor.png\"), auto !important;*/\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIconMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIcon.png\");\r\n\t\t}\r\n\t\r\n\r\n\t\t/* Frutiger Aero Icons */\r\n\r\n\t\tdiv.promptContainerBG {\r\n\t\t\tbackground-color: var(--editor-background) !important;\r\n\t\t\tbackdrop-filter: unset !important;\r\n\t\t\topacity: 0 !important;\r\n\t\t}\r\n\r\n\t\tdiv.mute-button::before {\r\n\t\t\tbackground: #fff0 !important;\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIcon.png\") !important;\r\n\t\t\tbackground-size: 18px !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tmask-size: 800px !important;\r\n\t\t\tcolor: #fff0;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\tdiv.mute-button.muted::before {\r\n\t\t\tbackground: #fff0 !important;\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/vistaSpeakerIconMuted.png\") !important;\r\n\t\t\tbackground-size: 18px !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tmask-size: 800px !important;\r\n\t\t\tcolor: #fff0;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\t#text-content > section > h1 > font {\r\n\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t\t#text-content > section > h1 {\r\n\t\t\tmargin: auto;\r\n\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxFrutigerAeroThemeLogo.png\");\r\n\t\t\t}\r\n\r\n\t\tbutton.mobileEffectsButton.deactivated {\r\n\t\tbox-shadow: none !important;\r\n\t\t}\r\n\r\n\t\tbutton.mobileInstButton.deactivated {\r\n\t\tbox-shadow: none !important;\r\n\t\t}\r\n\r\n\t\tbutton.mobileEnvelopesButton.deactivated {\r\n\t\tbox-shadow: none !important;\r\n\t\t}\r\n\r\n\t\tselect.trackSelectBox {\r\n\t\t\tborder-image: none !important;\r\n\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"Frutiger\";\r\n\t\t   src:\r\n \t\t   url(\"https://choptop84.github.io/choptop84s-image-repository/FrutigerLight.ttf\") format(\"truetype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\tcanvas#oscilascopeAll {\r\n\t\t\t\tbackground: #2e538c !important; \r\n\t\t\t\tborder: 2px solid #84aef000 !important;\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor .play-pause-area div:last-child {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\twidth: 144px;\r\n\t\t\t\theight: 32px;\r\n\t\t\t  }\r\n\t\t\t  .beepboxEditor .play-pause-area div:last-child::before {\r\n\t\t\t\tcontent: \"\";\r\n\t\t\t\tdisplay: block;\r\n\t\t\t\twidth: calc(144px + 4px);\r\n\t\t\t\theight: calc(32px + 4px);\r\n\t\t\t\tbox-shadow: 0px -1px 1px 0px rgba(0, 0, 0, 0.5), inset 0px 1px 2px 0px rgba(0, 0, 0, 0.5), inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tz-index: 1;\r\n\t\t\t  }\r\n\r\n\t\t\tdiv.prompt.noSelection{\r\n\t\t\t\tbackground: linear-gradient(#84aef080, #2a3d6a80) !important; \r\n\t\t\t\topacity: 77;\r\n\t\t\t\tbackdrop-filter: blur(14px);\r\n\t\t\t}  \r\n\r\n\t\t\tsvg#firstImage {\r\n\t\t\t\topacity: 50%;\r\n\t\t\t\t--editor-background: #000000;\r\n\t\t\t}\r\n\r\n\t\t\t/* sets background image */\r\n\t\t\tbody {\r\n\t\t\tbackground-image: url(\"image_assets/frutigerbg3.png\") !important;\r\n\t\t\tbackground-position: top;\r\n\t\t\tbackground-attachment: fixed;\r\n\t\t\tbackground-repeat: no-repeat;\r\n\t\t\tbackground-size: 145%;\r\n\t\t\timage-rendering: optimizeQuality !important;             /* IE */ \r\n\t\t\t\t}\r\n\r\n\t\t\t#beepboxEditorContainer {\r\n\t\t\t\tbackground: linear-gradient(#f5abfb80, #4839b380) !important;\r\n\t\t\t\tborder-style: solid;\r\n  \t\t\t\tborder-color: #050428;\r\n\t\t\t\tpadding-bottom: 5px;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\tbackdrop-filter: blur(14px);\r\n\t\t\t\tbox-shadow: inset 0 0 2000px rgba(0, 0, 0, 0.5)\r\n\t\t\t}\r\n\t\t\t#text-content {\r\n\t\t\t\tbackground: linear-gradient(#4839b380, #22032f80);\r\n\t\t\t\tborder-style: solid;\r\n  \t\t\t\tborder-color: #050428;\r\n\t\t\t\t  backdrop-filter: blur(14px);\r\n\t\t\t\t  box-shadow: inset 0 0 2000px rgba(0, 0, 0, 0.5)\r\n\t\t\t}\r\n\r\n\t\t\t\tdiv.playback-bar-controls button.playButton, \r\n\t\t\t\tdiv.playback-bar-controls button.pauseButton, \r\n\t\t\t\tdiv.playback-bar-controls button.recordButton, \r\n\t\t\t\tdiv.playback-bar-controls button.stopButton, \r\n\t\t\t\tdiv.playback-bar-controls button.prevBarButton, \r\n\t\t\t\tdiv.playback-bar-controls button.nextBarButton, \r\n\t\t\t\tdiv.selectRow button.copyButton, \r\n\t\t\t\tdiv.selectRow button.pasteButton, \r\n\t\t\t\tdiv.editor-controls button.exportInstrumentButton, \r\n\t\t\t\tdiv.editor-controls button.importInstrumentButton,\r\n\t\t\t\tdiv.editor-controls div button.add-envelope,\r\n\t\t\t\tdiv.editor-controls div button.delete-envelope, \r\n\t\t\t\t.beepboxEditor .select2-selection__rendered,\r\n\t\t\t\t.beepboxEditor .instrument-bar button,\r\n\t\t\t\t.beepboxEditor .eq-filter-type-bar button .deactivated,\r\n\t\t\t\t.beepboxEditor .note-filter-type-bar button .deactivated,\r\n\t\t\t\t.beepboxEditor select  { \r\n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -7px 4px 0px rgba(140, 47, 202, 0.71), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2), inset 0px 1px 2px 1px #ffffff54;\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#db7aeecc, #8f62f2cc) !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor select:focus\r\n\t\t\t\t{\r\n\t\t\t\t\tborder-image-source: none;\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#db7aeecc, #8f62f2cc) !important;\r\n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -7px 4px 0px rgba(140, 47, 202, 0.71), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2), inset 0px 1px 2px 1px #ffffff54\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor button, button\r\n\t\t\t\t{\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#db7aeecc, #8f62f2cc) !important;\r\n\t\t\t\t\tbox-shadow: 0px 1px 3px 0px rgb(0, 0, 0), inset 0px -12px 14px 0px rgba(0, 0, 0, 0.3), inset 0px -7px 4px 0px rgba(140, 47, 202, 0.71), inset 0px -15px 0px 0px rgba(0, 0, 0, 0.2), inset 0px 1px 2px 1px #ffffff54\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .select2-container--open .select2-selection__rendered,\r\n\t\t\t\t.beepboxEditor button:focus,\r\n\t\t\t\tbutton:focus,\r\n\t\t\t\t.beepboxEditor .instrument-bar .selected-instrument,\r\n\t\t\t\t.beepboxEditor .eq-filter-type-bar button:not(.deactivated),\r\n\t\t\t\t.beepboxEditor .note-filter-type-bar button:not(.deactivated)\r\n\t\t\t\t{\r\n\t\t\t\t\t--ui-widget-background: linear-gradient(#333, #444) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor .filterEditor svg,\r\n\t\t\t\t.beepboxEditor .fadeInOut svg,\r\n\t\t\t\t.beepboxEditor .harmonics svg,\r\n\t\t\t\t.beepboxEditor .spectrum svg\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.3) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t\tborder-radius: 4px;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t\tborder-radius: 4px;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\theight: 16px !important;\r\n\t\t\t\t\twidth: 16px !important;\r\n\t\t\t\t\tborder-radius: 40px !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t\tborder-radius: 4px;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t\t{\r\n\t\t\t\t\tborder: none !important;\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\t0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t\t{\r\n\t\t\t\t\tappearance: none;\r\n\t\t\t\t\tbackground: rgba(0, 0, 0, 0.3);\r\n\t\t\t\t\tcolor: currentColor;\r\n\t\t\t\t\tborder-radius: 1px;\r\n\t\t\t\t\twidth: 1em !important;\r\n\t\t\t\t\theight: 1em !important;\r\n\t\t\t\t\tbox-shadow:\r\n\t\t\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t\t\t;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t\t{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: 1em;\r\n\t\t\t\t\theight: 1em;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t\tfont-size: 0.8em;\r\n\t\t\t\t\tcontent: \"✓\";\r\n\t\t\t\t\tcolor: currentColor;\r\n\t\t\t\t\ttext-shadow: 0px 0px 2px rgba(255, 255, 255, 0.5);\r\n\t\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   \tfont-family: 'Frutiger';\r\n\t\t\t}\r\n\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'Frutiger' !important;\r\n\t\t\t}\r\n\r\n\t\t\t\t/* Use this code down here when you have transparent backgrounds!!! */\r\n\r\n\t\t   div.beepboxEditor.load {\r\n\t\t\tbackground: none !important;\r\n\t\t   }\r\n\r\n\t\t   div.noSelection {\r\n\t\t\tbackground: none !important;\r\n\t\t   }\r\n\r\n\t\t   .beepboxEditor .loopEditor {\r\n\t\t\tbackground: none !important;\r\n\t\t   }\r\n\r\n\t\t   .beepboxEditor .muteEditor {\r\n\t\t\tbackground: linear-gradient(#9a76aa, #3d2448) !important;\r\n\t\t\tborder-radius: 5px;\r\n\t\t\tbox-shadow: 0px 1px 1px 0px rgb(0, 0, 0), inset 0px 3px 14px 0px rgba(0, 0, 0, 0.1), inset 0px -4px 0px 0px rgba(0, 0, 0, 0.1);\r\n\t\t\topacity: 65%;\r\n\t\t   }\r\n\r\n\t\t   div.muteEditor div {\r\n\t\t\tbackground: none !important;\r\n\t\t\t--track-editor-bg-pitch: #5f8fd6;\r\n\t\t\t--track-editor-bg-noise: #5f8fd6;\r\n\t\t\t--track-editor-bg-mod: #8a76c5;\r\n\t\r\n\t\t\t--track-editor-bg-pitch-dim: #2472a1; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #2472a1; \t\t\t\r\n\t\t\t--track-editor-bg-mod-dim: #4222a0; \r\n\r\n\t\t   }\r\n\r\n\t\t   div.channelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\t\t  div.curChannelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\r\n\t\t\t`,\r\n\t\t\"Skeuomorphic\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #020202;\r\n\t\t\t--editor-background: #1e1e1e;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #848484;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t--loop-accent: #74f;\r\n\t\t\t--link-accent: #98f;\r\n\t\t\t--ui-widget-background: #444;\r\n\t\t\t--ui-widget-focus: #555;\r\n\t\t\t--pitch-background: #393e4f;\r\n\t\t\t--tonic: #725491;\r\n\t\t\t--fifth-note: #54547a;\r\n\t\t\t--third-note: #3b4b71;\r\n\t\t\t--white-piano-key: #eee;\r\n\t\t\t--black-piano-key: #666;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: linear-gradient(#4b5164, #3e3f48);\r\n\t\t\t--track-editor-bg-pitch-dim: linear-gradient(#3e3f48, #212530);\r\n\t\t\t--track-editor-bg-noise: linear-gradient(#3d3535,#161313);\r\n\t\t\t--track-editor-bg-noise-dim: linear-gradient(#161313,#0e0c0c);\r\n\t\t\t--track-editor-bg-mod: linear-gradient(#283560,#0a101f);\r\n\t\t\t--track-editor-bg-mod-dim: linear-gradient(#05080f,#0a101f);\r\n\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t--select2-opt-group: #333;\r\n\t\t\t--input-box-outline: #222;\r\n\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t--mod-label-primary: #282840;\r\n\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t--mod-label-primary-text: white;\r\n\r\n\t\t\t--pitch1-secondary-channel: #bb1111;\r\n\t\t\t--pitch1-primary-channel:   #ff5959;\r\n\t\t\t--pitch1-secondary-note:    #7c0404;\r\n\t\t\t--pitch1-primary-note:      #ffb6b6;\r\n\t\t\r\n\t\t\t--pitch2-secondary-channel: #bb5b11;\r\n\t\t\t--pitch2-primary-channel:   #ffa159;\r\n\t\t\t--pitch2-secondary-note:    #7c3804;\r\n\t\t\t--pitch2-primary-note:      #ffd5b6;\r\n\t\t\r\n\t\t\t--pitch3-secondary-channel: #bba411;\r\n\t\t\t--pitch3-primary-channel:   #ffe959;\r\n\t\t\t--pitch3-secondary-note:    #7c6c04;\r\n\t\t\t--pitch3-primary-note:      #fff5b6;\r\n\t\t\r\n\t\t\t--pitch4-secondary-channel: #88bb11;\r\n\t\t\t--pitch4-primary-channel:   #cdff59;\r\n\t\t\t--pitch4-secondary-note:    #587c04;\r\n\t\t\t--pitch4-primary-note:      #e9ffb6;\r\n\t\t\r\n\t\t\t--pitch5-secondary-channel: #3ebb11;\r\n\t\t\t--pitch5-primary-channel:   #85ff59;\r\n\t\t\t--pitch5-secondary-note:    #247c04;\r\n\t\t\t--pitch5-primary-note:      #c9ffb6;\r\n\t\t\r\n\t\t\t--pitch6-secondary-channel: #11bb2e;\r\n\t\t\t--pitch6-primary-channel:   #59ff75;\r\n\t\t\t--pitch6-secondary-note:    #047c18;\r\n\t\t\t--pitch6-primary-note:      #b6ffc2;\r\n\t\t\r\n\t\t\t--pitch7-secondary-channel: #11bb77;\r\n\t\t\t--pitch7-primary-channel:   #59ffbd;\r\n\t\t\t--pitch7-secondary-note:    #047c4c;\r\n\t\t\t--pitch7-primary-note:      #b6ffe2;\r\n\t\t\r\n\t\t\t--pitch8-secondary-channel: #11b5bb;\r\n\t\t\t--pitch8-primary-channel:   #59f9ff;\r\n\t\t\t--pitch8-secondary-note:    #04777c;\r\n\t\t\t--pitch8-primary-note:      #b6fcff;\r\n\t\t\r\n\t\t\t--pitch9-secondary-channel: #116bbb;\r\n\t\t\t--pitch9-primary-channel:   #59b1ff;\r\n\t\t\t--pitch9-secondary-note:    #04437c;\r\n\t\t\t--pitch9-primary-note:      #b6dcff;\r\n\t\t\r\n\t\t\t--pitch10-secondary-channel:#1826aa;\r\n\t\t\t--pitch10-primary-channel:  #5161f6;\r\n\t\t\t--pitch10-secondary-note:   #091370;\r\n\t\t\t--pitch10-primary-note:     #adb4fd;\r\n\t\t\r\n\t\t\t--pitch11-secondary-channel:#4918aa;\r\n\t\t\t--pitch11-primary-channel:  #8951f6;\r\n\t\t\t--pitch11-secondary-note:   #2c0970;\r\n\t\t\t--pitch11-primary-note:     #c8adfd;\r\n\t\t\r\n\t\t\t--pitch12-secondary-channel:#8818aa;\r\n\t\t\t--pitch12-primary-channel:  #d051f6;\r\n\t\t\t--pitch12-secondary-note:   #580970;\r\n\t\t\t--pitch12-primary-note:     #ebadfd;\r\n\t\t\r\n\t\t\t--pitch13-secondary-channel:#aa188c;\r\n\t\t\t--pitch13-primary-channel:  #f651d4;\r\n\t\t\t--pitch13-secondary-note:   #70095b;\r\n\t\t\t--pitch13-primary-note:     #fdadec;\r\n\t\t\r\n\t\t\t--pitch14-secondary-channel:#aa184d;\r\n\t\t\t--pitch14-primary-channel:  #f6518d;\r\n\t\t\t--pitch14-secondary-note:   #70092e;\r\n\t\t\t--pitch14-primary-note:     #fdadca; \r\n\t\t\r\n\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t--disabled-note-primary:    #91879f;\r\n\t\t\t--disabled-note-secondary:  #6a677a;\r\n\t\t}\r\n\t\t \r\n\t\t.channelBox {\r\n\t\t\t--pitch1-primary-channel:  linear-gradient(#ff7777, #ff5959);\r\n\t\t\t--pitch2-primary-channel:  linear-gradient(#ffaf71, #ffa159);\r\n\t\t\t--pitch3-primary-channel:  linear-gradient(#ffee7c, #ffe959);\r\n\t\t\t--pitch4-primary-channel:  linear-gradient(#d3fa7a, #cdff59);\r\n\t\t\t--pitch5-primary-channel:  linear-gradient(#a4ff83, #85ff59);\r\n\t\t\t--pitch6-primary-channel:  linear-gradient(#8aff9e, #59ff75);\r\n\t\t\t--pitch7-primary-channel:  linear-gradient(#81ffcc, #59ffbd);\r\n\t\t\t--pitch8-primary-channel:  linear-gradient(#59f9ff, #59f9ff);\r\n\t\t\t--pitch9-primary-channel:  linear-gradient(#87c7ff, #59b1ff);\r\n\t\t\t--pitch10-primary-channel: linear-gradient(#7a87ff, #5161f6);\r\n\t\t\t--pitch11-primary-channel: linear-gradient(#a476ff, #8951f6);\r\n\t\t\t--pitch12-primary-channel: linear-gradient(#df75ff, #d051f6);\r\n\t\t\t--pitch13-primary-channel: linear-gradient(#ff75e3, #f651d4);\r\n\t\t\t--pitch14-primary-channel: linear-gradient(#ff71a5, #f6518d);\r\n\t\t\r\n\t\t\tborder-radius: 5px;\r\n\t\t\tbox-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.2), 0px 0px 1px 1px rgba(0, 0, 0, 0.7), inset 0px -10px 20px 1px rgba(0, 0, 0, 0.1), inset 0px 1px 0px 0px rgba(255, 255, 255, 0.1);\r\n\t\t}\r\n\t\t.channelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t\tbox-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.2), 0px 0px 1px 1px rgba(0, 0, 0, 0.7), inset 0px -10px 20px 1px rgba(0, 0, 0, 0.1), inset 0px 1px 0px 0px rgba(255, 255, 255, 0.1);\r\n\t\t}\r\n\t\t\r\n\t\t.channelBoxLabel {\r\n\t\t\t--pitch1-primary-channel:   #ff5959;\r\n\t\t\t--pitch2-primary-channel:   #ffa159;\r\n\t\t\t--pitch3-primary-channel:   #ffe959;\r\n\t\t\t--pitch4-primary-channel:   #cdff59;\r\n\t\t\t--pitch5-primary-channel:   #85ff59;\r\n\t\t\t--pitch6-primary-channel:   #59ff75;\r\n\t\t\t--pitch7-primary-channel:   #59ffbd;\r\n\t\t\t--pitch8-primary-channel:   #59f9ff;\r\n\t\t\t--pitch9-primary-channel:   #59b1ff;\r\n\t\t\t--pitch10-primary-channel:  #5161f6;\r\n\t\t\t--pitch11-primary-channel:  #8951f6;\r\n\t\t\t--pitch12-primary-channel:  #d051f6;\r\n\t\t\t--pitch13-primary-channel:  #f651d4;\r\n\t\t\t--pitch14-primary-channel:  #f6518d;\r\n\t\t}\r\n\t\t\r\n\t\tbody {\r\n\t\t\tbackground-image: url('https://github.com/choptop84/choptop84s-image-repository/blob/main/skeuobg.png?raw=true') !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tbackground-size: contain;\r\n\t\t\tfont-family: Arial, Helvetica, sans-serif;\r\n\t\t}\r\n\t\t\r\n\t\t#beepboxEditorContainer, .track-area, .beepboxEditor, #text-content, div.noSelection {\r\n\t\t\tbackground-color: #fff0 !important;\r\n\t\t} \r\n\t\t\r\n\t\t#pitchEditorBackground {\r\n\t\t\topacity: 0.5 !important;\r\n\t\t\tfilter: brightness(150%);\r\n\t\t}\r\n\t\t\r\n\t\tsvg#firstImage {\r\n\t\t\tbackground-image: url('https://github.com/choptop84/choptop84s-image-repository/blob/main/skeuobg2.png?raw=true') !important;\r\n\t\t}\r\n\t\t\r\n\t\t#oscilascopeAll {\r\n\t\t\tmargin-left: auto;\r\n\t\t\tmargin-right: auto;\r\n\t\t\tposition: static;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor,\r\n\t\t.beepboxEditor select\r\n\t\t{\r\n\t\t\ttext-shadow: 0px -1px 0px rgba(0, 0, 0, 0.5);\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .piano-button {\r\n\t\t\ttext-shadow: none;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .prompt\r\n\t\t{\r\n\t\t\tbackground: radial-gradient(farthest-corner at 50% 0px, #2a2a2a, #1a1a1a) !important;\r\n\t\t}\r\n\t\t \r\n\t\t#beepboxEditorContainer {\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\ttext-shadow: none;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .loopEditor\r\n\t\t{\r\n\t\t\t--editor-background: rgba(0, 0, 0, 0.0) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .muteEditor\r\n\t\t{\r\n\t\t\t--editor-background: #1e1e1e !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .pattern-area\r\n\t\t{\r\n\t\t\t--editor-background: rgba(0, 0, 0, 1) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .trackContainer svg\r\n\t\t{\r\n\t\t\t--editor-background: #111 !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .muteEditor > :last-child {\r\n\t\t\t--editor-background: rgba(0, 0, 0, 0) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor #octaveScrollBarContainer {\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0.3);\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor {\r\n\t\t\t--track-editor-bg-pitch-dim: #1e1f28;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .muteButtonText {\r\n\t\t\ttransform: translate(0px, 1px) !important;\r\n\t\t\tcolor: #777 !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar {\r\n\t\t\t--text-color-lit: #eee;\r\n\t\t\t--text-color-dim: #777;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\tcolor: rgba(255, 255, 255, 1) !important;\r\n\t\t\ttext-shadow: 0px 0px 4px var(--text-color-lit);\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar .deactivated {\r\n\t\t\tcolor: rgba(0, 0, 0, 1) !important;\r\n\t\t\ttext-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar > :not(.last-button) {\r\n\t\t\tborder-color: var(--background-color-lit) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\tborder-color: rgba(255, 255, 255, 1) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor select\r\n\t\t{\r\n\t\t\tbackground: #444 !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px -10px 20px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor select:focus\r\n\t\t{\r\n\t\t\tbackground: #333 !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 10px 20px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .select2-selection__rendered,\r\n\t\t.beepboxEditor button,\r\n\t\t.beepboxEditor .instrument-bar button,\r\n\t\t.beepboxEditor .eq-filter-type-bar button .deactivated,\r\n\t\t.beepboxEditor .note-filter-type-bar button .deactivated\r\n\t\t{\r\n\t\t\tbackground: linear-gradient(#444, #333) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .select2-container--open .select2-selection__rendered,\r\n\t\t.beepboxEditor button:focus,\r\n\t\t.beepboxEditor .instrument-bar .selected-instrument,\r\n\t\t.beepboxEditor .eq-filter-type-bar button:not(.deactivated),\r\n\t\t.beepboxEditor .note-filter-type-bar button:not(.deactivated)\r\n\t\t{\r\n\t\t\tbackground: linear-gradient(#333, #444) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .filterEditor svg,\r\n\t\t.beepboxEditor .fadeInOut svg,\r\n\t\t.beepboxEditor .harmonics svg,\r\n\t\t.beepboxEditor .spectrum svg\r\n\t\t{\r\n\t\t\tbackground: rgba(0, 0, 0, 0.3) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t{\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t{\r\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t\tborder-radius: 4px;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t{\r\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t{\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t{\r\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t\tborder-radius: 4px;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t{\r\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t{\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 255, 255, 1),\r\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t{\r\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t\tborder-radius: 4px;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t{\r\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t{\r\n\t\t\tborder: none !important;\r\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t{\r\n\t\t\tappearance: none;\r\n\t\t\tbackground: rgba(0, 0, 0, 0.3);\r\n\t\t\tcolor: currentColor;\r\n\t\t\tborder-radius: 1px;\r\n\t\t\twidth: 1em !important;\r\n\t\t\theight: 1em !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 255, 255, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t{\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t{\r\n\t\t\twidth: 1em;\r\n\t\t\theight: 1em;\r\n\t\t\ttext-align: center;\r\n\t\t\tfont-size: 0.8em;\r\n\t\t\tcontent: \"✓\";\r\n\t\t\tcolor: currentColor;\r\n\t\t\ttext-shadow: 0px 0px 2px rgba(255, 255, 255, 0.5);\r\n\t\t}\r\n\t\t`,\t\t\t\t\r\n\t\t\"woodland\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #1d1b16;\r\n\t\t\t--editor-background: #1d1b16;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t--primary-text: #ffe6d1;\r\n\t\t\t--secondary-text: #f0c4a1;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #c58f1cfc;\r\n\t\t\t--box-selection-fill: #942d04;\r\n\t\t\t--loop-accent: #a69186;\r\n\t\t\t--link-accent: #c4b044;\r\n\t\t\t--ui-widget-background: #3c3931;\r\n\t\t\t--ui-widget-focus: #514240;\r\n\t\t\t--pitch-background: #342e29;\r\n\t\t\t--tonic: #514129;\r\n\t\t\t--fifth-note: #735346;\r\n\t\t\t--third-note: #593439;\r\n\t\t\t--white-piano-key: #a69186;\r\n\t\t\t--black-piano-key: #423a34;\r\n\t\t\t--white-piano-key-text: #1f0d03;\r\n\t\t\t--black-piano-key-text: #ffe6d1;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: linear-gradient(#644b4b, #483e3e);\r\n\t\t\t--track-editor-bg-pitch-dim: linear-gradient(#483e3e, #302121);\r\n\t\t\t--track-editor-bg-noise: linear-gradient(#3d3535,#161313);\r\n\t\t\t--track-editor-bg-noise-dim: linear-gradient(#161313,#0e0c0c);\r\n\t\t\t--track-editor-bg-mod: linear-gradient(#603e28,#1f100a);\r\n\t\t\t--track-editor-bg-mod-dim: linear-gradient(#0f0705,#1f0d0a);\r\n\t\t\t--multiplicative-mod-slider: #966d3f;\r\n\t\t\t--overwriting-mod-slider: #b58650;\r\n\t\t\t--indicator-primary: #b58650;\r\n\t\t\t--indicator-secondary: #4f4139;\r\n\t\t\t--select2-opt-group: #3b0000;\r\n\t\t\t--input-box-outline: #200000;\r\n\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t--mute-button-mod: #adae6e;\r\n\t\t\t--mod-label-primary: #422a0f;\r\n\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--octave-scrollbar: #281f1a;\r\n\r\n\t\t\t--pitch1-secondary-channel: #bb1111;\r\n\t\t\t--pitch1-primary-channel:   #ff5959;\r\n\t\t\t--pitch1-secondary-note:    #7c0404;\r\n\t\t\t--pitch1-primary-note:      #ffb6b6;\r\n\t\t\r\n\t\t\t--pitch2-secondary-channel: #bb5b11;\r\n\t\t\t--pitch2-primary-channel:   #ffa159;\r\n\t\t\t--pitch2-secondary-note:    #7c3804;\r\n\t\t\t--pitch2-primary-note:      #ffd5b6;\r\n\t\t\r\n\t\t\t--pitch3-secondary-channel: #bba411;\r\n\t\t\t--pitch3-primary-channel:   #ffe959;\r\n\t\t\t--pitch3-secondary-note:    #7c6c04;\r\n\t\t\t--pitch3-primary-note:      #fff5b6;\r\n\t\t\r\n\t\t\t--pitch4-secondary-channel: #88bb11;\r\n\t\t\t--pitch4-primary-channel:   #cdff59;\r\n\t\t\t--pitch4-secondary-note:    #587c04;\r\n\t\t\t--pitch4-primary-note:      #e9ffb6;\r\n\t\t\r\n\t\t\t--pitch5-secondary-channel: #3ebb11;\r\n\t\t\t--pitch5-primary-channel:   #85ff59;\r\n\t\t\t--pitch5-secondary-note:    #247c04;\r\n\t\t\t--pitch5-primary-note:      #c9ffb6;\r\n\t\t\r\n\t\t\t--pitch6-secondary-channel: #11bb2e;\r\n\t\t\t--pitch6-primary-channel:   #59ff75;\r\n\t\t\t--pitch6-secondary-note:    #047c18;\r\n\t\t\t--pitch6-primary-note:      #b6ffc2;\r\n\t\t\r\n\t\t\t--pitch7-secondary-channel: #11bb77;\r\n\t\t\t--pitch7-primary-channel:   #59ffbd;\r\n\t\t\t--pitch7-secondary-note:    #047c4c;\r\n\t\t\t--pitch7-primary-note:      #b6ffe2;\r\n\t\t\r\n\t\t\t--pitch8-secondary-channel: #11b5bb;\r\n\t\t\t--pitch8-primary-channel:   #59f9ff;\r\n\t\t\t--pitch8-secondary-note:    #04777c;\r\n\t\t\t--pitch8-primary-note:      #b6fcff;\r\n\t\t\r\n\t\t\t--pitch9-secondary-channel: #116bbb;\r\n\t\t\t--pitch9-primary-channel:   #59b1ff;\r\n\t\t\t--pitch9-secondary-note:    #04437c;\r\n\t\t\t--pitch9-primary-note:      #b6dcff;\r\n\t\t\r\n\t\t\t--pitch10-secondary-channel:#1826aa;\r\n\t\t\t--pitch10-primary-channel:  #5161f6;\r\n\t\t\t--pitch10-secondary-note:   #091370;\r\n\t\t\t--pitch10-primary-note:     #adb4fd;\r\n\t\t\r\n\t\t\t--pitch11-secondary-channel:#4918aa;\r\n\t\t\t--pitch11-primary-channel:  #8951f6;\r\n\t\t\t--pitch11-secondary-note:   #2c0970;\r\n\t\t\t--pitch11-primary-note:     #c8adfd;\r\n\t\t\r\n\t\t\t--pitch12-secondary-channel:#8818aa;\r\n\t\t\t--pitch12-primary-channel:  #d051f6;\r\n\t\t\t--pitch12-secondary-note:   #580970;\r\n\t\t\t--pitch12-primary-note:     #ebadfd;\r\n\t\t\r\n\t\t\t--pitch13-secondary-channel:#aa188c;\r\n\t\t\t--pitch13-primary-channel:  #f651d4;\r\n\t\t\t--pitch13-secondary-note:   #70095b;\r\n\t\t\t--pitch13-primary-note:     #fdadec;\r\n\t\t\r\n\t\t\t--pitch14-secondary-channel:#aa184d;\r\n\t\t\t--pitch14-primary-channel:  #f6518d;\r\n\t\t\t--pitch14-secondary-note:   #70092e;\r\n\t\t\t--pitch14-primary-note:     #fdadca; \r\n\t\t\r\n\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t--disabled-note-primary:    #91879f;\r\n\t\t\t--disabled-note-secondary:  #6a677a;\r\n\t\t}\r\n\t\t \r\n\t\t.channelBox {\r\n\t\t\t--pitch1-primary-channel:  linear-gradient(#ff7777, #ff5959);\r\n\t\t\t--pitch2-primary-channel:  linear-gradient(#ffaf71, #ffa159);\r\n\t\t\t--pitch3-primary-channel:  linear-gradient(#ffee7c, #ffe959);\r\n\t\t\t--pitch4-primary-channel:  linear-gradient(#d3fa7a, #cdff59);\r\n\t\t\t--pitch5-primary-channel:  linear-gradient(#a4ff83, #85ff59);\r\n\t\t\t--pitch6-primary-channel:  linear-gradient(#8aff9e, #59ff75);\r\n\t\t\t--pitch7-primary-channel:  linear-gradient(#81ffcc, #59ffbd);\r\n\t\t\t--pitch8-primary-channel:  linear-gradient(#59f9ff, #59f9ff);\r\n\t\t\t--pitch9-primary-channel:  linear-gradient(#87c7ff, #59b1ff);\r\n\t\t\t--pitch10-primary-channel: linear-gradient(#7a87ff, #5161f6);\r\n\t\t\t--pitch11-primary-channel: linear-gradient(#a476ff, #8951f6);\r\n\t\t\t--pitch12-primary-channel: linear-gradient(#df75ff, #d051f6);\r\n\t\t\t--pitch13-primary-channel: linear-gradient(#ff75e3, #f651d4);\r\n\t\t\t--pitch14-primary-channel: linear-gradient(#ff71a5, #f6518d);\r\n\t\t\r\n\t\t\tborder-radius: 5px;\r\n\t\t\tbox-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.2), 0px 0px 1px 1px rgba(0, 0, 0, 0.7), inset 0px -10px 20px 1px rgba(0, 0, 0, 0.1), inset 0px 1px 0px 0px rgba(255, 255, 255, 0.1);\r\n\t\t}\r\n\t\t.channelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t\tbox-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.2), 0px 0px 1px 1px rgba(0, 0, 0, 0.7), inset 0px -10px 20px 1px rgba(0, 0, 0, 0.1), inset 0px 1px 0px 0px rgba(255, 255, 255, 0.1);\r\n\t\t}\r\n\t\t\r\n\t\t.channelBoxLabel {\r\n\t\t\t--pitch1-primary-channel:   #ff5959;\r\n\t\t\t--pitch2-primary-channel:   #ffa159;\r\n\t\t\t--pitch3-primary-channel:   #ffe959;\r\n\t\t\t--pitch4-primary-channel:   #cdff59;\r\n\t\t\t--pitch5-primary-channel:   #85ff59;\r\n\t\t\t--pitch6-primary-channel:   #59ff75;\r\n\t\t\t--pitch7-primary-channel:   #59ffbd;\r\n\t\t\t--pitch8-primary-channel:   #59f9ff;\r\n\t\t\t--pitch9-primary-channel:   #59b1ff;\r\n\t\t\t--pitch10-primary-channel:  #5161f6;\r\n\t\t\t--pitch11-primary-channel:  #8951f6;\r\n\t\t\t--pitch12-primary-channel:  #d051f6;\r\n\t\t\t--pitch13-primary-channel:  #f651d4;\r\n\t\t\t--pitch14-primary-channel:  #f6518d;\r\n\t\t}\r\n\t\t\r\n\t\tbody {\r\n\t\t\tfont-family: Arial, Helvetica, sans-serif;\r\n\t\t}\r\n\t\t\r\n\t\t#beepboxEditorContainer, .track-area, .beepboxEditor, #text-content, div.noSelection {\r\n\t\t\tbackground-color: #fff0 !important;\r\n\t\t} \r\n\t\t\r\n\t\t#pitchEditorBackground {\r\n\t\t\topacity: 0.5 !important;\r\n\t\t\tfilter: brightness(150%);\r\n\t\t}\r\n\t\t\r\n\t\t#oscilascopeAll {\r\n\t\t\tmargin-left: auto;\r\n\t\t\tmargin-right: auto;\r\n\t\t\tposition: static;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor,\r\n\t\t.beepboxEditor select\r\n\t\t{\r\n\t\t\ttext-shadow: 0px -1px 0px rgba(0, 0, 0, 0.5);\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .piano-button {\r\n\t\t\ttext-shadow: none;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .prompt\r\n\t\t{\r\n\t\t\tbackground: radial-gradient(farthest-corner at 50% 0px, #1d0700, #110400) !important;\r\n\t\t}\r\n\t\t \r\n\t\t#beepboxEditorContainer {\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .trackAndMuteContainer {\r\n\t\t\ttext-shadow: none;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .loopEditor\r\n\t\t{\r\n\t\t\t--editor-background: rgba(0, 0, 0, 0.0) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .pattern-area\r\n\t\t{\r\n\t\t\t--editor-background: rgba(0, 0, 0, 1) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .trackContainer svg\r\n\t\t{\r\n\t\t\t--editor-background: #33190a !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .muteEditor > :last-child {\r\n\t\t\t--editor-background: rgba(0, 0, 0, 0) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor #octaveScrollBarContainer {\r\n\t\t\tbackground-color: rgba(0, 0, 0, 0.3);\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor {\r\n\t\t\t--track-editor-bg-pitch-dim: #1e1f28;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .muteButtonText {\r\n\t\t\ttransform: translate(0px, 1px) !important;\r\n\t\t\tcolor: #777 !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar {\r\n\t\t\t--text-color-lit: #eee;\r\n\t\t\t--text-color-dim: #777;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\tcolor: rgba(255, 255, 255, 1) !important;\r\n\t\t\ttext-shadow: 0px 0px 4px var(--text-color-lit);\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar .deactivated {\r\n\t\t\tcolor: rgba(0, 0, 0, 1) !important;\r\n\t\t\ttext-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar > :not(.last-button) {\r\n\t\t\tborder-color: var(--background-color-lit) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\tborder-color: rgba(255, 255, 255, 1) !important;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor select\r\n\t\t{\r\n\t\t\tbackground: #3c3931 !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px -10px 20px 1px rgba(31, 11, 2, 0.4),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 183, 162, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor select:focus\r\n\t\t{\r\n\t\t\tbackground: #201e1b !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 10px 20px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .select2-selection__rendered,\r\n\t\t.beepboxEditor button,\r\n\t\t.beepboxEditor .instrument-bar button,\r\n\t\t.beepboxEditor .eq-filter-type-bar button .deactivated,\r\n\t\t.beepboxEditor .note-filter-type-bar button .deactivated\r\n\t\t{\r\n\t\t\tbackground: linear-gradient(#3c3931, #201e1b) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 183, 162, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .select2-container--open .select2-selection__rendered,\r\n\t\t.beepboxEditor button:focus,\r\n\t\t.beepboxEditor .instrument-bar .selected-instrument,\r\n\t\t.beepboxEditor .eq-filter-type-bar button:not(.deactivated),\r\n\t\t.beepboxEditor .note-filter-type-bar button:not(.deactivated)\r\n\t\t{\r\n\t\t\tbackground: linear-gradient(#201e1b, #3c3931) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor .filterEditor svg,\r\n\t\t.beepboxEditor .fadeInOut svg,\r\n\t\t.beepboxEditor .harmonics svg,\r\n\t\t.beepboxEditor .spectrum svg\r\n\t\t{\r\n\t\t\tbackground: rgba(0, 0, 0, 0.3) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t{\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 183, 162, 0.3),\r\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t{\r\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\r\n\t\t\t;\r\n\t\t\tborder-radius: 4px;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t{\r\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t{\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 183, 162, 1),\r\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t{\r\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\r\n\t\t\t;\r\n\t\t\tborder-radius: 4px;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t{\r\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t{\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 2px 2px 1px rgba(0, 0, 0, 0.4),\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px 1px 0px 0px rgba(255, 183, 162, 1),\r\n\t\t\t\tinset 0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -8px 3px rgba(0, 0, 0, 0.2)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t{\r\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\r\n\t\t\t;\r\n\t\t\tborder-radius: 4px;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t{\r\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t{\r\n\t\t\tborder: none !important;\r\n\t\t\tbackground: rgba(0, 0, 0, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\t0px -1px 1px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px 1px 2px 0px rgba(0, 0, 0, 0.5),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t{\r\n\t\t\tappearance: none;\r\n\t\t\tbackground: rgba(0, 0, 0, 0.3);\r\n\t\t\tcolor: currentColor;\r\n\t\t\tborder-radius: 1px;\r\n\t\t\twidth: 1em !important;\r\n\t\t\theight: 1em !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t\tinset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t\tinset 0px -1px 0px 0px rgba(255, 183, 162, 0.3)\r\n\t\t\t;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t{\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t}\r\n\t\t \r\n\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t{\r\n\t\t\twidth: 1em;\r\n\t\t\theight: 1em;\r\n\t\t\ttext-align: center;\r\n\t\t\tfont-size: 0.8em;\r\n\t\t\tcontent: \"✓\";\r\n\t\t\tcolor: currentColor;\r\n\t\t\ttext-shadow: 0px 0px 2px rgba(255, 255, 255, 0.5);\r\n\t\t}\r\n\t\t`,\t\t\t\t\r\n      \"Glyde\": `\r\n\t  :root { \r\n\t\t--page-margin: #000000; \r\n\t\t--song-player-margin: #000;\r\n\t\t--editor-background: #472434a8; \r\n\t\t--hover-preview: white; \r\n\t\t--playhead: rgba(255, 255, 255, 0.9); \r\n\t\t--primary-text: #ffe5c2; \r\n\t\t--secondary-text: #ffcedd; \r\n\t\t--inverted-text: black; \r\n\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t--box-selection-fill: #1e0915; \r\n\t\t--loop-accent: #ffdeaf; \r\n\t\t--link-accent: #df88ff; \r\n\t\t--ui-widget-background: #8a516e9e; \r\n\t\t--ui-widget-focus: #4f152b; \r\n\t\t--pitch-background: #00000038; \r\n\t\t--tonic: #ff9db9; \r\n\t\t--fifth-note: #ffe1b88c; \r\n\t\t--third-note: #8e2f9b8c;\r\n\t\t--white-piano-key: #ffb6ce; \r\n\t\t--black-piano-key: #ff7ba7; \r\n\t\t--use-color-formula: true; \r\n\t\t--track-editor-bg-pitch: #751e40; \r\n\t\t--track-editor-bg-pitch-dim: #4f152b; \r\n\t\t--track-editor-bg-noise: #751e30; \r\n\t\t--track-editor-bg-noise-dim: #4f152b; \r\n\t\t--track-editor-bg-mod: #751e29; \r\n\t\t--track-editor-bg-mod-dim: #4f152b; \r\n\t\t--multiplicative-mod-slider: #ea7d7d; \r\n\t\t--overwriting-mod-slider: #ffebd5; \r\n\t\t--indicator-primary: #ffebd5; \r\n\t\t--indicator-secondary: #4f152b; \r\n\t\t--select2-opt-group: #ffebd5; \r\n\t\t--input-box-outline: #a33e67; \r\n\t\t--mute-button-normal: #b63448; \r\n\t\t--mute-button-mod: #6d0f1d; \r\n\t\t--mod-label-primary: #2b080d; \r\n\t\t--mod-label-secondary-text: #421a20; \r\n\t\t--mod-label-primary-text: #ffc6cf; \r\n\t\t--progress-bar: #ffc9ff;\r\n\t\t--pitch-secondary-channel-hue: 60; \r\n\t\t--pitch-secondary-channel-sat: 23; \r\n\t\t--pitch-secondary-channel-sat-scale: 0.1; \r\n\t\t--pitch-secondary-channel-lum: 50; \r\n\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t--pitch-primary-channel-hue: 60; \r\n\t\t--pitch-primary-channel-hue-scale: 6.1; \r\n\t\t--pitch-primary-channel-sat: 75; \r\n\t\t--pitch-primary-channel-sat-scale: 0.1; \r\n\t\t--pitch-primary-channel-lum: 87.5; \r\n\t\t--pitch-primary-channel-lum-scale: 0.05; \r\n\t\t--pitch-secondary-note-hue: 60; \r\n\t\t--pitch-secondary-note-hue-scale: 6.1; \r\n\t\t--pitch-secondary-note-sat: 53.9; \r\n\t\t--pitch-secondary-note-sat-scale: 0.1; \r\n\t\t--pitch-secondary-note-lum: 65; \r\n\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t--pitch-primary-note-hue: 60; \r\n\t\t--pitch-primary-note-hue-scale: 6.1; \r\n\t\t--pitch-primary-note-sat: 100; \r\n\t\t--pitch-primary-note-sat-scale: 0.05; \r\n\t\t--pitch-primary-note-lum: 95.6; \r\n\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t--noise-secondary-channel-hue: 0; \r\n\t\t--noise-secondary-channel-hue-scale: 2; \r\n\t\t--noise-secondary-channel-sat: 65; \r\n\t\t--noise-secondary-channel-sat-scale: 0; \r\n\t\t--noise-secondary-channel-lum: 72; \r\n\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t--noise-primary-channel-hue: 0; \r\n\t\t--noise-primary-channel-hue-scale: 1; \r\n\t\t--noise-primary-channel-sat: 100; \r\n\t\t--noise-primary-channel-sat-scale: 1; \r\n\t\t--noise-primary-channel-lum: 93.5; \r\n\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t--noise-secondary-note-hue: 24; \r\n\t\t--noise-secondary-note-hue-scale: 2; \r\n\t\t--noise-secondary-note-sat: 100; \r\n\t\t--noise-secondary-note-sat-scale: 0; \r\n\t\t--noise-secondary-note-lum: 75; \r\n\t\t--noise-secondary-note-lum-scale: 0; \r\n\t\t--noise-primary-note-hue: 24; \r\n\t\t--noise-primary-note-hue-scale: 2; \r\n\t\t--noise-primary-note-sat: 100; \r\n\t\t--noise-primary-note-sat-scale: 1; \r\n\t\t--noise-primary-note-lum: 90; \r\n\t\t--noise-primary-note-lum-scale: 1; \r\n\t\t--mod-secondary-channel-hue: 55; \r\n\t\t--mod-secondary-channel-hue-scale: 1.5; \r\n\t\t--mod-secondary-channel-sat: 100; \r\n\t\t--mod-secondary-channel-sat-scale: 0; \r\n\t\t--mod-secondary-channel-lum: 70; \r\n\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t--mod-primary-channel-hue: 55; \r\n\t\t--mod-primary-channel-hue-scale: 1.5; \r\n\t\t--mod-primary-channel-sat: 96; \r\n\t\t--mod-primary-channel-sat-scale: 0; \r\n\t\t--mod-primary-channel-lum: 95; \r\n\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t--mod-secondary-note-hue: 55; \r\n\t\t--mod-secondary-note-hue-scale: 1.5; \r\n\t\t--mod-secondary-note-sat: 92; \r\n\t\t--mod-secondary-note-sat-scale: 0; \r\n\t\t--mod-secondary-note-lum: 75; \r\n\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t--mod-primary-note-hue: 55; \r\n\t\t--mod-primary-note-hue-scale: 1.5; \r\n\t\t--mod-primary-note-sat: 96; \r\n\t\t--mod-primary-note-sat-scale: 0; \r\n\t\t--mod-primary-note-lum: 95; \r\n\t\t--mod-primary-note-lum-scale: 0; \r\n\t\t--note-flash: #fff; \r\n\t\t--note-flash-secondary: #ffffff54; }\r\n\t\t* {\r\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\r\n\t\t}\r\n\t\t\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"Varela\";\r\n\t\t   src:\r\n \t\t   url(\"./image_assets/Varela.ttf\") format(\"truetype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t/* sets background image */\r\n\t\t\tbody {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/glydebg.png\") !important;\r\n\t\t\tbackground-position: top right;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\r\n\t\t\tdiv#beepboxEditorContainer {\r\n\t\t\t\tborder-style: solid;\r\n\t\t\t\tborder-width: 8px;\r\n\t\t\t\tborder-color: #4f152b;\r\n\t\t\t\tpadding-bottom: 5px;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t#text-content {\r\n\t\t\t\tborder-style: solid;\r\n\t\t\t\tborder-width: 8px;\r\n\t\t\t\tborder-color: #4f152b;\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   \tfont-family: 'Varela';\r\n\t\t\t}\r\n\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'Varela' !important;\r\n\t\t\t}\r\n\r\n\t\t\t#firstImage {\r\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/slushiepfp.PNG\") !important;\r\n\t\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\t\tbackground-size: 100% 100% !important;\r\n\t\t\t}\r\n\r\n\t\t\t#text-content > section > h1 > font {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t#text-content > section > h1 {\r\n\t\t\t\tmargin: auto;\r\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxGlydeThemeLogo.png\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiv.beepboxEditor.load {\r\n\t\t\t\t\tbackground: none !important;\r\n\t\t\t\t   }\r\n\t\t\r\n\t\t\t\t   div.noSelection {\r\n\t\t\t\t\tbackground: none !important;\r\n\t\t\t\t   }\r\n\t\t\r\n\t\t\t\t   .beepboxEditor .loopEditor {\r\n\t\t\t\t\tbackground: none !important;\r\n\t\t\t\t   }\r\n\t\t\r\n\t\t\t\t   .beepboxEditor .muteEditor {\r\n\t\t\t\t\tbackground: none !important;\r\n\t\t\t\t   }\r\n\t\t\r\n\t\t\t\t   div.muteEditor div {\r\n\t\t\t\t\tbackground: none !important;\r\n\t\t\t\t   }\r\n\r\n\r\n\t\t\t`,\r\n\t\t\t\"starry studio\": `\r\n\t\t\t:root {     \r\n\t\t\t\t--page-margin: black;     \r\n\t\t\t\t--editor-background: rgba(0, 0, 0, 0.65);     \r\n\t\t\t\t--hover-preview: #f8f8f8;     \r\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.8);     \r\n\t\t\t\t--primary-text: #f8f8f8;     \r\n\t\t\t\t--secondary-text: #b8b4e8;     \r\n\t\t\t\t--inverted-text: #3b2655;     \r\n\t\t\t\t--text-selection: rgba(124, 91, 173, 0.9);     \r\n\t\t\t\t--box-selection-fill: #b8b4e8;     \r\n\t\t\t\t--loop-accent: #a80a61;     \r\n\t\t\t\t--link-accent: #a286d7;     \r\n\t\t\t\t--ui-widget-background: #31253f;     \r\n\t\t\t\t--ui-widget-focus: #7c5bad;     \r\n\t\t\t\t--pitch-background: rgba(40, 40, 44, 0.5);     \r\n\t\t\t\t--tonic: rgba(83, 81, 95, 0.5);     \r\n\t\t\t\t--fifth-note: rgba(59, 38, 85, 0.5);   \r\n\t\t\t\t--third-note: #2a422282;  \r\n\t\t\t\t--white-piano-key: rgb(155, 151, 166);     \r\n\t\t\t\t--black-piano-key: #39363e;     \r\n\t\t\t\t--white-piano-key-text: #39363e;     \r\n\t\t\t\t--black-piano-key-text: #9b97a6;     \r\n\t\t\t\t--use-color-formula: true;     \r\n\t\t\t\t--track-editor-bg-pitch: #423174;     \r\n\t\t\t\t--track-editor-bg-pitch-dim: #252335;     \r\n\t\t\t\t--track-editor-bg-noise: #39363e;     \r\n\t\t\t\t--track-editor-bg-noise-dim: #28282c;     \r\n\t\t\t\t--track-editor-bg-mod: #3b2655;     \r\n\t\t\t\t--track-editor-bg-mod-dim: #252335;     \r\n\t\t\t\t--multiplicative-mod-slider: #168ee4;     \r\n\t\t\t\t--overwriting-mod-slider: #2457c6;     \r\n\t\t\t\t--indicator-primary: #f8f8f8;     \r\n\t\t\t\t--indicator-secondary: #423174;     \r\n\t\t\t\t--select2-opt-group: #423174;     \r\n\t\t\t\t--input-box-outline: #3b2655;     \r\n\t\t\t\t--mute-button-normal: #00b176;     \r\n\t\t\t\t--mute-button-mod: #e6a418;     \r\n\t\t\t\t--mod-label-primary: #3b2655;     \r\n\t\t\t\t--mod-label-secondary-text: rgb(124 91 173);     \r\n\t\t\t\t--mod-label-primary-text: #b8b4e8;     \r\n\t\t\t\t--pitch-secondary-channel-hue: 0;     \r\n\t\t\t\t--pitch-secondary-channel-hue-scale: 6.5;     \r\n\t\t\t\t--pitch-secondary-channel-sat: 83.3;     \r\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;     \r\n\t\t\t\t--pitch-secondary-channel-lum: 40;     \r\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;     \r\n\t\t\t\t--pitch-primary-channel-hue: 0;     \r\n\t\t\t\t--pitch-primary-channel-hue-scale: 6.5;     \r\n\t\t\t\t--pitch-primary-channel-sat: 100;     \r\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;     \r\n\t\t\t\t--pitch-primary-channel-lum: 67.5;     \r\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;     \r\n\t\t\t\t--pitch-secondary-note-hue: 0;     \r\n\t\t\t\t--pitch-secondary-note-hue-scale: 6.5;     \r\n\t\t\t\t--pitch-secondary-note-sat: 93.9;     \r\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;     \r\n\t\t\t\t--pitch-secondary-note-lum: 25;     \r\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;     \r\n\t\t\t\t--pitch-primary-note-hue: 0;     \r\n\t\t\t\t--pitch-primary-note-hue-scale: 6.5;     \r\n\t\t\t\t--pitch-primary-note-sat: 100;     \r\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;     \r\n\t\t\t\t--pitch-primary-note-lum: 85.6;     \r\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;     \r\n\t\t\t\t--noise-secondary-channel-hue: 0;     \r\n\t\t\t\t--noise-secondary-channel-hue-scale: 2;     \r\n\t\t\t\t--noise-secondary-channel-sat: 25;     \r\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;     \r\n\t\t\t\t--noise-secondary-channel-lum: 42;     \r\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;     \r\n\t\t\t\t--noise-primary-channel-hue: 0;     \r\n\t\t\t\t--noise-primary-channel-hue-scale: 2;     \r\n\t\t\t\t--noise-primary-channel-sat: 33;     \r\n\t\t\t\t--noise-primary-channel-sat-scale: 0;     \r\n\t\t\t\t--noise-primary-channel-lum: 63.5;     \r\n\t\t\t\t--noise-primary-channel-lum-scale: 0;     \r\n\t\t\t\t--noise-secondary-note-hue: 0;     \r\n\t\t\t\t--noise-secondary-note-hue-scale: 2;     \r\n\t\t\t\t--noise-secondary-note-sat: 33.5;     \r\n\t\t\t\t--noise-secondary-note-sat-scale: 0;     \r\n\t\t\t\t--noise-secondary-note-lum: 55;     \r\n\t\t\t\t--noise-secondary-note-lum-scale: 0;     \r\n\t\t\t\t--noise-primary-note-hue: 0;     \r\n\t\t\t\t--noise-primary-note-hue-scale: 2;     \r\n\t\t\t\t--noise-primary-note-sat: 46.5;     \r\n\t\t\t\t--noise-primary-note-sat-scale: 0;     \r\n\t\t\t\t--noise-primary-note-lum: 74;     \r\n\t\t\t\t--noise-primary-note-lum-scale: 0;     \r\n\t\t\t\t--mod-secondary-channel-hue: 192;     \r\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;     \r\n\t\t\t\t--mod-secondary-channel-sat: 88;     \r\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;     \r\n\t\t\t\t--mod-secondary-channel-lum: 50;     \r\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;     \r\n\t\t\t\t--mod-primary-channel-hue: 192;     \r\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5;     \r\n\t\t\t\t--mod-primary-channel-sat: 96;     \r\n\t\t\t\t--mod-primary-channel-sat-scale: 0;     \r\n\t\t\t\t--mod-primary-channel-lum: 80;     \r\n\t\t\t\t--mod-primary-channel-lum-scale: 0;     \r\n\t\t\t\t--mod-secondary-note-hue: 192;     \r\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5;     \r\n\t\t\t\t--mod-secondary-note-sat: 92;     \r\n\t\t\t\t--mod-secondary-note-sat-scale: 0;     \r\n\t\t\t\t--mod-secondary-note-lum: 45;     \r\n\t\t\t\t--mod-secondary-note-lum-scale: 0;     \r\n\t\t\t\t--mod-primary-note-hue: 192;     \r\n\t\t\t\t--mod-primary-note-hue-scale: 1.5;     \r\n\t\t\t\t--mod-primary-note-sat: 96;     \r\n\t\t\t\t--mod-primary-note-sat-scale: 0;     \r\n\t\t\t\t--mod-primary-note-lum: 85;     \r\n\t\t\t\t--mod-primary-note-lum-scale: 0;     \r\n\t\t\t\t--disabled-note-primary: #252a46;     \r\n\t\t\t\t--disabled-note-secondary: #181c34; }\r\n\r\n\t\t\t\t/* sets background image */\r\n\t\t\t.beepboxEditor load {\r\n\t\t\t\tbackground: #fff0 !important;\r\n\t\t\t\t}\r\n\r\n\t\t\tbody {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stars.gif\") !important;\r\n\t\t\tbackground-repeat: repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t`,\t\t\t\r\n\t\t\"AWeebyssBox\": `\r\n\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #1e0915; \t\t\r\n\t\t\t--editor-background: #1e0915; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ffcedd; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #1e0915; \t\t\r\n\t\t\t--loop-accent: #873a51; \t\t\r\n\t\t\t--link-accent: #df88ff; \t\t\r\n\t\t\t--ui-widget-background: #581b3e; \t\t\r\n\t\t\t--ui-widget-focus: #762b4c; \t\t\r\n\t\t\t--pitch-background: #381d2455; \t\t\r\n\t\t\t--tonic: #873a51; \t\t\r\n\t\t\t--fifth-note: #75001e; \t\r\n\t\t\t--third-note: #75002c;\t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f; \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #571c40; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #290d0d; \t\t\r\n\t\t\t--track-editor-bg-noise: #571131; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #330a28; \t\t\r\n\t\t\t--track-editor-bg-mod: #54083c; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #360426; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--progress-bar: #bf2c5d;\r\n\t\t\t--empty-sample-bar: #260b1b;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\t\r\n\t\t\t\t}\r\n\t\t* {\r\n\t\tcursor: url(\"abyssbox_cursor.png\"), auto !important;\r\n\t\t}\r\n\r\n\t\t\t\r\n\r\n\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\tborder-image-source: none !important;\r\n\t\t\t}\r\n\r\n\t\t\t#text-content {\r\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch; \r\n    \t\t\t\tpadding: 12px; \r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 8px; \r\n\t\t\t\tborder-image-repeat: stretch;\r\n    \t\t\t\tpadding: 12px;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\r\n\t\t\t\t}\r\n\t\t\t .beepboxEditor button, .beepboxEditor select, .beepboxEditor .select2-selection__rendered {\r\n    \t\t\t\tborder-image-source: url(\"./image_assets/abyssbox_border.png\") !important;\r\n    \t\t\t\tborder-image-slice: 4 fill !important; \r\n   \t\t\t\tborder-image-width: 4px !important; \r\n\t\t\t\tborder-image-repeat: stretch !important;\r\n    \t\t\t\t\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t#firstImage {\r\n\t\t\t\t\tbackground-image: url(\"./image_assets/viviandbelle.png\") !important;\r\n\t\t\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\t\t\tbackground-size: 100% 100% !important;\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType_small\";\r\n\t\t   src:\r\n \t\t   url(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t\r\n\r\n\t\t\t\r\n\r\n\t\t   \r\n\r\n\t\t\t`,\r\n\t\t\"Half-Life\": `\r\n\t\t\t:root { \t\t\r\n\t\t\t--page-margin: #0c1012; \t\t\r\n\t\t\t--editor-background: #0c1012; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: #ffee00; \t\t\r\n\t\t\t--secondary-text: #ffee00; \t\t\r\n\t\t\t--inverted-text:  #000000;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #ff6f00; \t\t\r\n\t\t\t--loop-accent: #ff6f00; \t\t\r\n\t\t\t--link-accent: #ff6f00; \t\t\r\n\t\t\t--ui-widget-background: #36454F;\t\t\r\n\t\t\t--ui-widget-focus: #36454F; \t\t\r\n\t\t\t--pitch-background: #5e2103; \t\t\r\n\t\t\t--tonic: #ff6f00; \t\t\r\n\t\t\t--fifth-note: #963c00; \t\t\r\n\t\t\t--third-note: #b76f23;\r\n\t\t\t--white-piano-key: #ccbca5; \t\t\r\n\t\t\t--black-piano-key: #40382f; \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #7d5100; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #3b2c10; \t\t\r\n\t\t\t--track-editor-bg-noise: #730a00; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #360e0b; \t\t\r\n\t\t\t--track-editor-bg-mod: #856f00; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #3b3205; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f8460; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e7534; \t\t\r\n\t\t\t--indicator-primary: #b38949; \t\t\r\n\t\t\t--indicator-secondary: #543d1d; \t\t\r\n\t\t\t--select2-opt-group: #4f3b19; \t\t\r\n\t\t\t--input-box-outline: #1a0b04; \t\t\r\n\t\t\t--mute-button-normal: #ddac5d;\t \t\t\r\n\t\t\t--mute-button-mod: #ba3d36; \t\t\r\n\t\t\t--mod-label-primary: #542f16; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--progress-bar: #ff6f00;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: 154; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: 154; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 20; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: 154; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 65; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 60; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 60; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 25; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 75; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\t\r\n\t\t\t\t}\r\n\t\t/* replaces hotdog (in a hacky way) with an image of gordon freeman but really wide*/\r\n\t\t#Hotdog {\r\n\t\tdisplay: none;\r\n\t\t}\r\n\t\t.instructions-column > section:first-of-type > p:first-of-type:after {\r\n\t\tdisplay: block;\r\n\t\tcontent: url(\"./image_assets/wide-gordon.png\");\r\n\t\twidth: inherit;\r\n\t\theight: contain;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 25px;\r\n\t\t}\r\n\t\t/* sets background image */\r\n\t\tbody {\r\n\t\tbackground-image: url(\"./image_assets/lambda.png\") !important;\r\n\t\tbackground-size: cover !important;\r\n\t\tbackground-position: center !important;\r\n\t\tbackground-repeat: no-repeat !important;\r\n\t\t\t}\r\n\t\t\t/* make editor background transparent */\r\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\r\n\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"trebuc\";\r\n\t\t   src:\r\n \t\t   url(\"./image_assets/trebuc.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   font-family: 'trebuc';\r\n\t\t\t}\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'trebuc' !important;\r\n\t\t\t}\r\n\r\n\t\t\t#modTitle::before {\r\n\t\t\t\tcontent: \"λbyssBox\" !important;\r\n\t\t\t}\r\n\r\n\t\t\t`,\r\n\t\t\t\"Half-Life: Source\": `\r\n\t\t\t:root { \t\t\r\n\t\t\t--page-margin: #0c1012; \t\t\r\n\t\t\t--editor-background: #0c1012; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: #ffee00; \t\t\r\n\t\t\t--secondary-text: #ffee00; \t\t\r\n\t\t\t--inverted-text:  #000000;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #ff6f00; \t\t\r\n\t\t\t--loop-accent: #ff6f00; \t\t\r\n\t\t\t--link-accent: #ff6f00; \t\t\r\n\t\t\t--ui-widget-background: #36454F;\t\t\r\n\t\t\t--ui-widget-focus: #36454F; \t\t\r\n\t\t\t--pitch-background: #5e2103; \t\t\r\n\t\t\t--tonic: #ff6f00; \t\t\r\n\t\t\t--fifth-note: #963c00; \t\r\n\t\t\t--third-note: #b76f23;\t\r\n\t\t\t--white-piano-key: #ccbca5; \t\t\r\n\t\t\t--black-piano-key: #40382f; \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #7d5100; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #3b2c10; \t\t\r\n\t\t\t--track-editor-bg-noise: #730a00; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #360e0b; \t\t\r\n\t\t\t--track-editor-bg-mod: #856f00; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #3b3205; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f8460; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e7534; \t\t\r\n\t\t\t--indicator-primary: #b38949; \t\t\r\n\t\t\t--indicator-secondary: #543d1d; \t\t\r\n\t\t\t--select2-opt-group: #4f3b19; \t\t\r\n\t\t\t--input-box-outline: #1a0b04; \t\t\r\n\t\t\t--mute-button-normal: #ddac5d;\t \t\t\r\n\t\t\t--mute-button-mod: #ba3d36; \t\t\r\n\t\t\t--mod-label-primary: #542f16; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--progress-bar: #ff6f00;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: 154; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: 154; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 20; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: 154; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 65; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 60; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 60; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 25; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 75; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\t\r\n\t\t\t\t}\r\n\t\t/* replaces hotdog (in a hacky way) with an image of gordon freeman but really wide*/\r\n\t\t#Hotdog {\r\n\t\tdisplay: none;\r\n\t\t}\r\n\t\t.instructions-column > section:first-of-type > p:first-of-type:after {\r\n\t\tdisplay: block;\r\n\t\tcontent: url(\"./image_assets/wide-gordon.png\");\r\n\t\twidth: inherit;\r\n\t\theight: contain;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 25px;\r\n\t\t}\r\n\t\t/* sets background image */\r\n\t\tbody {\r\n\t\tbackground-image: url(\"./image_assets/lambda.png\") !important;\r\n\t\tbackground-position: center;\r\n\t\tbackground-repeat: repeat;\r\n\t\t\t}\r\n\t\t\t/* make editor background transparent */\r\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\r\n\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"trebuc\";\r\n\t\t   src:\r\n \t\t   url(\"trebuc.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\tdiv.prompt.noSelection {\r\n\t\t\t\tleft: 636px !important;\r\n\t\t\t}\r\n\r\n\t\t\t#beepboxEditorContainer {\r\n\t\t\t\tpadding-top: 20px;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.beepboxEditor.load {\r\n\t\t\t\twidth: 50%;\r\n\t\t\t}\r\n\r\n\t\t\t#text-content {\r\n\t\t\t\toverflow: visible;\r\n\t\t\t\twidth: 20% !important;\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   font-family: 'trebuc';\r\n\t\t\t}\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'trebuc' !important;\r\n\t\t\t}\r\n\r\n\t\t\t#modTitle::before {\r\n\t\t\t\tcontent: \"λbyssBox: Source\" !important;\r\n\t\t\t}\r\n\r\n\t\t\t`,\r\n\t\t\"Scratch\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #4d97ff40;\r\n\t\t\t--editor-background: #f6e5fa;\r\n\t\t\t--hover-preview: #ff9900;\r\n\t\t\t--playhead: #4cbf56;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #000;\r\n\t\t\t--inverted-text: #fff;\r\n\t\t\t--text-selection: rgba(255, 255, 255, 0.99);\r\n\t\t\t--box-selection-fill: #7725ff;\r\n\t\t\t--loop-accent: #ffab19;\r\n\t\t\t--link-accent: #ff9900;\r\n\t\t\t--ui-widget-background: #855cd6;\r\n\t\t\t--ui-widget-focus: #ff661a;\r\n\t\t\t--pitch-background: #fff;\r\n\t\t\t--tonic: #855cd6;\r\n\t\t\t--fifth-note: #7e7e7e;\r\n\t\t\t--third-note: #d2bddd;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #fff;\r\n\t\t\t--track-editor-bg-pitch-dim: #c7c7c7;\r\n\t\t\t--track-editor-bg-noise: #4d97ff40;\r\n\t\t\t--track-editor-bg-noise-dim: #1c54a3b0;\r\n\t\t\t--track-editor-bg-mod: #855cd6;\r\n\t\t\t--track-editor-bg-mod-dim: #503389;\r\n\t\t\t--multiplicative-mod-slider: #ff6680;\r\n\t\t\t--overwriting-mod-slider: #ff3355;\r\n\t\t\t--indicator-primary: #855cd6;\r\n\t\t\t--indicator-secondary: #cecece;\r\n\t\t\t--select2-opt-group: #5a3b98;\r\n\t\t\t--input-box-outline: #626262;\r\n\t\t\t--mute-button-normal: #cf63cf;\r\n\t\t\t--mute-button-mod: #cf63cf;\r\n\t\t\t--mod-label-primary: #ff3355;\r\n\t\t\t--white-piano-key: #fff;\r\n\t\t\t--black-piano-key: #000;\r\n\t\t\t--white-piano-key-text: #000;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--note-flash: #4cbf56;\r\n\t\t\t--note-flash-secondary: #b84848;\r\n\t\t\t--oscilloscope-line-L: #d587e6;\r\n\t\t\t--oscilloscope-line-R: #b11cc7;\r\n\t\t\t--pitch1-secondary-channel: #3373cc;\r\n\t\t\t--pitch1-primary-channel: #4c97ff;\r\n\t\t\t--pitch1-secondary-note: #3373cc;\r\n\t\t\t--pitch1-primary-note: #4c97ff;\r\n\t\t\t--pitch2-secondary-channel: #774dcb;\r\n\t\t\t--pitch2-primary-channel: #9966ff;\r\n\t\t\t--pitch2-secondary-note: #774dcb;\r\n\t\t\t--pitch2-primary-note: #9966ff;\r\n\t\t\t--pitch3-secondary-channel: #bd42bd;\r\n\t\t\t--pitch3-primary-channel: #cf63cf;\r\n\t\t\t--pitch3-secondary-note: #bd42bd;\r\n\t\t\t--pitch3-primary-note: #cf63cf;\r\n\t\t\t--pitch4-secondary-channel: #cc9900;\r\n\t\t\t--pitch4-primary-channel: #ffbf00;\r\n\t\t\t--pitch4-secondary-note: #cc9900;\r\n\t\t\t--pitch4-primary-note: #ffbf00;\r\n\t\t\t--pitch5-secondary-channel: #cf8b17;\r\n\t\t\t--pitch5-primary-channel: #ffab19;\r\n\t\t\t--pitch5-secondary-note: #cf8b17;\r\n\t\t\t--pitch5-primary-note: #ffab19;\r\n\t\t\t--pitch6-secondary-channel: #2e8eb8;\r\n\t\t\t--pitch6-primary-channel: #5cb1d6;\r\n\t\t\t--pitch6-secondary-note: #2e8eb8;\r\n\t\t\t--pitch6-primary-note: #5cb1d6;\r\n\t\t\t--pitch7-secondary-channel: #389438;\r\n\t\t\t--pitch7-primary-channel: #59c059;\r\n\t\t\t--pitch7-secondary-note: #389438;\r\n\t\t\t--pitch7-primary-note: #59c059;\r\n\t\t\t--pitch8-secondary-channel: #db6e00;\r\n\t\t\t--pitch8-primary-channel: #ff8c1a;\r\n\t\t\t--pitch8-secondary-note: #db6e00;\r\n\t\t\t--pitch8-primary-note: #ff8c1a;\r\n\t\t\t--pitch9-secondary-channel: #ff3355;\r\n\t\t\t--pitch9-primary-channel: #ff6680;\r\n\t\t\t--pitch9-secondary-note: #ff3355;\r\n\t\t\t--pitch9-primary-note: #ff6680;\r\n\t\t\t--pitch10-secondary-channel: #0b8e69;\r\n\t\t\t--pitch10-primary-channel: #0fbd8c;\r\n\t\t\t--pitch10-secondary-note: #0b8e69;\r\n\t\t\t--pitch10-primary-note: #0fbd8c;\r\n\t\t\t--noise1-secondary-channel: #ef3d23;\r\n\t\t\t--noise1-primary-channel: #fcf9ce;\r\n\t\t\t--noise1-secondary-note: #ef3d23;\r\n\t\t\t--noise1-primary-note: #fcf9ce;\r\n\t\t\t--noise2-secondary-channel: #dd002b;\r\n\t\t\t--noise2-primary-channel: #f73d61;\r\n\t\t\t--noise2-secondary-note: #dd002b;\r\n\t\t\t--noise2-primary-note: #f73d61;\r\n\t\t\t--noise3-secondary-channel: #d0e9ea;\r\n\t\t\t--noise3-primary-channel: #f3ffff;\r\n\t\t\t--noise3-secondary-note: #d0e9ea;\r\n\t\t\t--noise3-primary-note: #f3ffff;\r\n\t\t\t--noise4-secondary-channel: #ed9b24;\r\n\t\t\t--noise4-primary-channel: #ffc941;\r\n\t\t\t--noise4-secondary-note: #ed9b24;\r\n\t\t\t--noise4-primary-note: #ffc941;\r\n\t\t\t--noise5-secondary-channel: #663b00;\r\n\t\t\t--noise5-primary-channel: #ffe9cc;\r\n\t\t\t--noise5-secondary-note: #663b00;\r\n\t\t\t--noise5-primary-note: #ffe9cc;\r\n\t\t\t--mod1-secondary-channel: #001026;\r\n\t\t\t--mod1-primary-channel: #ffab19;\r\n\t\t\t--mod1-secondary-note: #001026;\r\n\t\t\t--mod1-primary-note: #ffab19;\r\n\t\t\t--mod2-secondary-channel: #603813;\r\n\t\t\t--mod2-primary-channel: #ffc93e;\r\n\t\t\t--mod2-secondary-note: #603813;\r\n\t\t\t--mod2-primary-note: #ffc93e;\r\n\t\t\t--mod3-secondary-channel: #1b75bb;\r\n\t\t\t--mod3-primary-channel: #e6e7e8;\r\n\t\t\t--mod3-secondary-note: #1b75bb;\r\n\t\t\t--mod3-primary-note: #e6e7e8;\r\n\t\t\t--mod4-secondary-channel: #404041;\r\n\t\t\t--mod4-primary-channel: #f05a28;\r\n\t\t\t--mod4-secondary-note: #404041;\r\n\t\t\t--mod4-primary-note: #f05a28;\r\n\t\t\t--disabled-note-primary: #ff6680;\r\n\t\t\t--disabled-note-secondary: #ff3355;\r\n\t\t  }\r\n\t\t  * {\r\n\t\t  --play-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\");\r\n\t\t  --pause-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\");\r\n\t\t  --stop-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\");\r\n\t\t  }\r\n\r\n\t\tdiv.promptContainerBG {\r\n\t\t\tbackground-color: var(--editor-background) !important;\r\n\t\t\tbackdrop-filter: unset !important;\r\n\t\t\topacity: 0.5 !important;\r\n\t\t}\r\n\r\n\t\t  button.playButton::before {\r\n\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\") !important;\r\n\t\t\tbackground-size: 18px !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tmask-size: 800px;\r\n\t\t\tcolor: #fff0;\r\n\t\t\t/* Hold on, before you start asking: \"WHAT THE? WHY IS THE ICON SO LARGE!!!\" Let me tell ya that this method removes all the filtering issues on the png and it looks incredibly seemless so shush */\r\n\r\n\t\t}\r\n\r\n\t\tbutton.pauseButton::before {\r\n\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\") !important;\r\n\t\t\tbackground-size: 18px !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tmask-size: 800px;\r\n\t\t\tcolor: #fff0;\r\n\t\t}\r\n\r\n\t\tbutton.stopButton::before {\r\n\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\") !important;\r\n\t\t\tbackground-size: 18px !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\tmask-size: 800px;\r\n\t\t\tcolor: #fff0;\r\n\t\t}\r\n\r\n\t\t  #text-content > section > h1 {\r\n\t\t\tmargin: auto;\r\n\t\t\tcontent: url(\"https://file.garden/ZMQ0Om5nmTe-x2hq/AbyssBox%20Scratch%20Logo3.png\");\r\n\t\t  }\r\n\t\t  .beepboxEditor,\r\n\t\t  #beepboxEditorContainer {\r\n\t\t\tbackground-color: rgb(255, 255, 255) !important;\r\n\t\t\tborder-radius: 6px;\r\n\t\t\tbox-shadow: 0px 0px 0px 4px rgba(158, 158, 158, 0.91);\r\n\t\t  }\r\n\t\t  .beepboxEditor .loopEditor {\r\n\t\t\t--editor-background: #4d97ff40 !important;\r\n\t\t\tborder-radius: 3px;\r\n\t\t  }\r\n\t\t  .beepboxEditor .muteEditor {\r\n\t\t\t--editor-background: #4d97ff40 !important;\r\n\t\t\tborder-radius: 0px;\r\n\t\t\theight: 158px;\r\n\t\t  }\r\n\t\t  .beepboxEditor .pattern-area {\r\n\t\t\t--editor-background: #4d97ff40 !important;\r\n\t\t\tborder-radius: 3px;\r\n\t\t  }\r\n\t\t  .beepboxEditor .trackContainer svg {\r\n\t\t\t--editor-background: #3100ff !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor .muteEditor > :last-child {\r\n\t\t\t--editor-background: #4d97ff40 !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor #octaveScrollBarContainer {\r\n\t\t\tbackground-color: #4d97ff40;\r\n\t\t  }\r\n\t\t  .beepboxEditor .muteButtonText {\r\n\t\t\ttransform: translate(0px, 1px) !important;\r\n\t\t\tcolor: #777 !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor .instrument-bar {\r\n\t\t\t--text-color-lit: #fff !important;\r\n\t\t\t--text-color-dim: #4c4c4c !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\tcolor: rgb(0, 0, 0) !important;\r\n\t\t\ttext-shadow: 0px 0px 4px var(--text-color-lit);\r\n\t\t  }\r\n\t\t  .beepboxEditor .instrument-bar .deactivated {\r\n\t\t\tcolor: rgba(0, 0, 0, 1) !important;\r\n\t\t\ttext-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\r\n\t\t  }\r\n\t\t  .beepboxEditor .instrument-bar > :not(.last-button) {\r\n\t\t\tborder-color: var(--background-color-lit) !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\tborder-color: rgba(255, 255, 255, 1) !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor button, button {\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #3c236f;\r\n\t\t  }\r\n\t\t  .beepboxEditor .instrument-bar .selected-instrument,\r\n\t\t  .beepboxEditor .filterEditor svg,\r\n\t\t  .beepboxEditor .fadeInOut svg,\r\n\t\t  .beepboxEditor .harmonics svg,\r\n\t\t  .beepboxEditor .spectrum svg {\r\n\t\t\tbackground: rgb(255, 255, 255) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t  0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t  inset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t  inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"range\"]::-webkit-slider-thumb {\r\n\t\t\tbackground: #000000 !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\tbackground: #000000 !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track {\r\n\t\t\tbackground: rgb(127, 127, 127) !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"range\"]::-moz-range-track {\r\n\t\t\tbackground: rgb(127, 127, 127) !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track::focus {\r\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t  0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t  inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t  inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"range\"]::-moz-range-track::focus {\r\n\t\t\tbackground: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\tbox-shadow:\r\n\t\t\t  0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t  inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t  inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t  }\r\n\t\t  .beepboxEditor input[type=\"text\"],\r\n\t\t  .beepboxEditor input[type=\"number\"] {\r\n\t\t\tfont-size: inherit !important;\r\n\t\t\tfont-weight: bold !important;\r\n\t\t\tfont-family: inherit !important;\r\n\t\t\tbackground: #ff8c1a !important;\r\n\t\t\ttext-align: center !important;\r\n\t\t\tborder: 1px solid var(--input-box-outline);\r\n\t\t\tcolor: #fff !important;\r\n\t\t\tbox-shadow: 0px 0px 0px 1px rgb(134, 134, 134) !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor .prompt {\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #fff;\r\n\t\t\t--ui-widget-background: #351f5f;\r\n\t\t\tcolor: #fff !important;\r\n\t\t\tbackground: #855cd6 !important;\r\n\t\t  }\r\n\t\t  .beepboxEditor .trackContainer {\r\n\t\t\t--editor-background: #fff;\r\n\t\t  }\r\n\t\t  #text-content {\r\n\t\t\tcolor: #fff;\r\n\t\t\tbackground: #855cd6;\r\n\t\t  }\r\n\t\t  body:not(#secondImage) {\r\n\t\t\tbackground-image: url(\"https://cdn.scratch.mit.edu/scratchr2/static/__74e70580e9dbe93ce1c3f8422dde592d__/images/scratch-bg.png\");\r\n\t\t  }\r\n\t\t  body:not(#secondImage) input {\r\n\t\t\t--primary-text: #000;\r\n\t\t  }\r\n\t\t  body:not(#secondImage) h1 {\r\n\t\t\tcolor: #000;\r\n\t\t  }\r\n\t\t  button.copyButton,\r\n\t\t  button.pasteButton,\r\n\t\t  button.exportInstrumentButton,\r\n\t\t  button.importInstrumentButton, \r\n\t\t  button.addEnvelope,\r\n\t\t  div.editor-controls div button,\r\n\t\t  div.selectRow button,\r\n\t\t  div.effects-menu button,\r\n\t\t  div.effects-menu::before,\r\n\t\t  div.selectContainer select,\r\n\t\t  div.selectContainer::after,\r\n\t\t  span#select2-pitchPresetSelect-container {\r\n\t\t\tcolor: white !important;\r\n\t\t  }\r\n\t\t  div#text-content {\r\n\t\t\tpadding-top: 15px;\r\n\t\t  }\r\n\t\t  div#beepboxEditorContainer{\r\n\t\t\tpadding-bottom: 15px;\r\n\t\t  }\r\n\t\t  div.channelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\t\t  div.curChannelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\t\t  div.muteEditor {\r\n\t\t\tborder-radius: 0px !important;\r\n\t\t\theight: 158px !important;\r\n\t\t  }\r\n\t\t  div.loopEditor {\r\n\t\t\tborder-radius: 0px !important;\r\n\t\t  }\r\n\t\t`,\r\n\t\t\"Scratch Addons\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #111111;\r\n\t\t\t--editor-background: #f6e5fa;\r\n\t\t\t--hover-preview: #ff9900;\r\n\t\t\t--playhead: #4cbf56;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #fff;\r\n\t\t\t--inverted-text: #fff;\r\n\t\t\t--text-selection: rgba(255, 255, 255, .99);\r\n\t\t\t--box-selection-fill: #7725ff;\r\n\t\t\t--loop-accent: rgb(225, 169, 26);\r\n\t\t\t--link-accent: #ff9900;\r\n\t\t\t--ui-widget-background: #202020;\r\n\t\t\t--ui-widget-focus: #0a0a0a;\r\n\t\t\t--pitch-background: #111111;\r\n\t\t\t--tonic: #855cd6;\r\n\t\t\t--fifth-note: #2e4274;\r\n\t\t\t--third-note: #547580;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #393939;\r\n\t\t\t--track-editor-bg-pitch-dim: #21211F;\r\n\t\t\t--track-editor-bg-noise: #393939;\r\n\t\t\t--track-editor-bg-noise-dim: #21211FF;\r\n\t\t\t--track-editor-bg-mod: #393939;\r\n\t\t\t--track-editor-bg-mod-dim: #21211FF;\r\n\t\t\t--multiplicative-mod-slider: #ff6680;\r\n\t\t\t--overwriting-mod-slider: #ff3355;\r\n\t\t\t--indicator-primary: #855cd6;\r\n\t\t\t--indicator-secondary: #cecece;\r\n\t\t\t--select2-opt-group: #333;\r\n\t\t\t--input-box-outline: #626262;\r\n\t\t\t--mute-button-normal: #cf63cf;\r\n\t\t\t--mute-button-mod: #cf63cf;\r\n\t\t\t--mod-label-primary: #ff3355;\r\n\t\t\t--white-piano-key: #fff;\r\n\t\t\t--black-piano-key: #000;\r\n\t\t\t--white-piano-key-text: #000;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--note-flash: #ff0;\r\n\t\t\t--note-flash-secondary: #ff7b00;\r\n\t\t\t--oscilloscope-line-L: #d587e6;\r\n\t\t\t--oscilloscope-line-R: #b11cc7;\r\n\t\t   \r\n\t\t\t--pitch1-secondary-channel: #3b56aa;\r\n\t\t\t--pitch1-primary-channel: #4a6cd4;\r\n\t\t\t--pitch1-secondary-note: #3b56aa;\r\n\t\t\t--pitch1-primary-note: #4a6cd4;\r\n\t\t\t--pitch2-secondary-channel: rgb(110, 68, 172);\r\n\t\t\t--pitch2-primary-channel: rgb(138, 85, 215);\r\n\t\t\t--pitch2-secondary-note: rgb(110, 68, 172);\r\n\t\t\t--pitch2-primary-note: rgb(138, 85, 215);\r\n\t\t\t--pitch3-secondary-channel: rgb(150, 53, 156);\r\n\t\t\t--pitch3-primary-channel: rgb(187, 66, 195);\r\n\t\t\t--pitch3-secondary-note: rgb(150, 53, 156);\r\n\t\t\t--pitch3-primary-note: rgb(187, 66, 195);\r\n\t\t\t--pitch4-secondary-channel: rgb(160, 105, 38);\r\n\t\t\t--pitch4-primary-channel: rgb(200, 131, 48);\r\n\t\t\t--pitch4-secondary-note: rgb(160, 105, 38);\r\n\t\t\t--pitch4-primary-note: rgb(200, 131, 48);\r\n\t\t\t--pitch5-secondary-channel: rgb(180, 135, 21);\r\n\t\t\t--pitch5-primary-channel: rgb(225, 169, 26);\r\n\t\t\t--pitch5-secondary-note: rgb(180, 135, 21);\r\n\t\t\t--pitch5-primary-note: rgb(225, 169, 26);\r\n\t\t\t--pitch6-secondary-channel: rgb(35, 132, 181);\r\n\t\t\t--pitch6-primary-channel: rgb(44, 165, 226);\r\n\t\t\t--pitch6-secondary-note: rgb(35, 132, 181);\r\n\t\t\t--pitch6-primary-note: rgb(44, 165, 226);\r\n\t\t\t--pitch7-secondary-channel: rgb(74, 146, 14);\r\n\t\t\t--pitch7-primary-channel: rgb(92, 183, 18);\r\n\t\t\t--pitch7-secondary-note: rgb(74, 146, 14);\r\n\t\t\t--pitch7-primary-note: rgb(92, 183, 18);\r\n\t\t\t--pitch8-secondary-channel: rgb(190, 100, 18);\r\n\t\t\t--pitch8-primary-channel: rgb(238, 125, 22);\r\n\t\t\t--pitch8-secondary-note: rgb(190, 100, 18);\r\n\t\t\t--pitch8-primary-note: rgb(238, 125, 22);\r\n\t\t\t--pitch9-secondary-channel: rgb(79, 36, 122);\r\n\t\t\t--pitch9-primary-channel: rgb(99, 45, 153);\r\n\t\t\t--pitch9-secondary-note: rgb(79, 36, 122);\r\n\t\t\t--pitch9-primary-note: rgb(99, 45, 153);\r\n\t\t\t--pitch10-secondary-channel: rgb(11, 123, 86);\r\n\t\t\t--pitch10-primary-channel: rgb(14, 154, 108);\r\n\t\t\t--pitch10-secondary-note: rgb(11, 123, 86);\r\n\t\t\t--pitch10-primary-note: rgb(14, 154, 108);\r\n\t\t\t--noise1-secondary-channel: #ef3d23;\r\n\t\t\t--noise1-primary-channel: #fcf9ce;\r\n\t\t\t--noise1-secondary-note: #ef3d23;\r\n\t\t\t--noise1-primary-note: #fcf9ce;\r\n\t\t\t--noise2-secondary-channel: #dd002b;\r\n\t\t\t--noise2-primary-channel: #f73d61;\r\n\t\t\t--noise2-secondary-note: #dd002b;\r\n\t\t\t--noise2-primary-note: #f73d61;\r\n\t\t\t--noise3-secondary-channel: #d0e9ea;\r\n\t\t\t--noise3-primary-channel: #f3ffff;\r\n\t\t\t--noise3-secondary-note: #d0e9ea;\r\n\t\t\t--noise3-primary-note: #f3ffff;\r\n\t\t\t--noise4-secondary-channel: #ed9b24;\r\n\t\t\t--noise4-primary-channel: #ffc941;\r\n\t\t\t--noise4-secondary-note: #ed9b24;\r\n\t\t\t--noise4-primary-note: #ffc941;\r\n\t\t\t--noise5-secondary-channel: #663b00;\r\n\t\t\t--noise5-primary-channel: #ffe9cc;\r\n\t\t\t--noise5-secondary-note: #663b00;\r\n\t\t\t--noise5-primary-note: #ffe9cc;\r\n\t\t\t--mod1-secondary-channel: #001026;\r\n\t\t\t--mod1-primary-channel: #ffab19;\r\n\t\t\t--mod1-secondary-note: #001026;\r\n\t\t\t--mod1-primary-note: #ffab19;\r\n\t\t\t--mod2-secondary-channel: #603813;\r\n\t\t\t--mod2-primary-channel: #ffc93e;\r\n\t\t\t--mod2-secondary-note: #603813;\r\n\t\t\t--mod2-primary-note: #ffc93e;\r\n\t\t\t--mod3-secondary-channel: #1b75bb;\r\n\t\t\t--mod3-primary-channel: #e6e7e8;\r\n\t\t\t--mod3-secondary-note: #1b75bb;\r\n\t\t\t--mod3-primary-note: #e6e7e8;\r\n\t\t\t--mod4-secondary-channel: #404041;\r\n\t\t\t--mod4-primary-channel: #f05a28;\r\n\t\t\t--mod4-secondary-note: #404041;\r\n\t\t\t--mod4-primary-note: #f05a28;\r\n\t\t\t--disabled-note-primary: #ff6680;\r\n\t\t\t--disabled-note-secondary: #ff3355;\r\n\t\t   }\r\n\r\n\t\tdiv.promptContainerBG {\r\n\t\t\tbackground-color: var(--editor-background) !important;\r\n\t\t\tbackdrop-filter: unset !important;\r\n\t\t\topacity: 0.5 !important;\r\n\t\t}\r\n\r\n\t\t   * {\r\n\t\t   --play-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\");\r\n\t\t   --pause-symbol:url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\");\r\n\t\t   }\r\n \r\n\t\t   button.playButton::before {\r\n\t\t\t background-image: url(\"https://choptop84.github.io/choptop84s-image-repository/Greenflag.png\") !important;\r\n\t\t\t background-size: 18px !important;\r\n\t\t\t background-position: center !important;\r\n\t\t\t background-repeat: no-repeat !important;\r\n\t\t\t mask-size: 800px;\r\n\t\t\t color: #fff0;\r\n\t\t }\r\n \r\n\t\t button.pauseButton::before {\r\n\t\t\t background-image: url(\"https://choptop84.github.io/choptop84s-image-repository/stopsign.png\") !important;\r\n\t\t\t background-size: 18px !important;\r\n\t\t\t background-position: center !important;\r\n\t\t\t background-repeat: no-repeat !important;\r\n\t\t\t mask-size: 800px;\r\n\t\t\t   color: #fff0;\r\n\t\t }\r\n\r\n\t\t   #text-content > section > h1 {\r\n\t\t\t margin: auto;\r\n\t\t\t content: url(\"https://file.garden/ZMQ0Om5nmTe-x2hq/AbyssBox%20Scratch%20Logo3.png\");\r\n\t\t   }\r\n\t\t   .beepboxEditor,\r\n\t\t   #beepboxEditorContainer {\r\n\t\t\t background-color: #111111 !important;\r\n\t\t\t border-radius: 6px;\r\n\t\t\t box-shadow: 0px 0px 0px 4px rgba(158, 158, 158, 0.91);\r\n\t\t   }\r\n\t\t   .beepboxEditor .loopEditor {\r\n\t\t\t --editor-background: #111111 !important;\r\n\t\t\t border-radius: 3px;\r\n\t\t   }\r\n\t\t   .beepboxEditor .muteEditor {\r\n\t\t\t --editor-background: #4d97ff40 !important;\r\n\t\t\t border-radius: 3px;\r\n\t\t   }\r\n\t\t   .beepboxEditor .pattern-area {\r\n\t\t\t --editor-background: #292929 !important;\r\n\t\t\t border-radius: 3px;\r\n\t\t   }\r\n\t\t   .beepboxEditor .trackContainer svg {\r\n\t\t\t --editor-background: #3100ff !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor .muteEditor > :last-child {\r\n\t\t\t --editor-background: #111111 !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor #octaveScrollBarContainer {\r\n\t\t\t background-color: #111111;\r\n\t\t   }\r\n\t\t   .beepboxEditor .muteButtonText {\r\n\t\t\t transform: translate(0px, 1px) !important;\r\n\t\t\t color: #777 !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor .instrument-bar {\r\n\t\t\t --text-color-lit: #111111 !important;\r\n\t\t\t --text-color-dim: #4c4c4c !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\t color: rgb(0, 0, 0) !important;\r\n\t\t\t text-shadow: 0px 0px 4px var(--text-color-lit);\r\n\t\t   }\r\n\t\t   .beepboxEditor .instrument-bar .deactivated {\r\n\t\t\t color: rgba(0, 0, 0, 1) !important;\r\n\t\t\t text-shadow: 0px 1px 0px rgba(255, 255, 255, 0.2);\r\n\t\t   }\r\n\t\t   .beepboxEditor .instrument-bar > :not(.last-button) {\r\n\t\t\t border-color: var(--background-color-lit) !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor .instrument-bar .selected-instrument {\r\n\t\t\t border-color: #111111 !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor button, button {\r\n\t\t\t color: #fff;\r\n\t\t\t background: #3c236f;\r\n\t\t   }\r\n\t\t   .beepboxEditor .instrument-bar .selected-instrument,\r\n\t\t   .beepboxEditor .filterEditor svg,\r\n\t\t   .beepboxEditor .fadeInOut svg,\r\n\t\t   .beepboxEditor .harmonics svg,\r\n\t\t   .beepboxEditor .spectrum svg {\r\n\t\t\t background: rgb(255, 255, 255) !important;\r\n\t\t\t box-shadow:\r\n\t\t\t   0px 0px 1px 1px rgba(0, 0, 0, 0.7),\r\n\t\t\t   inset 0px 2px 3px 0px rgba(0, 0, 0, 0.7),\r\n\t\t\t   inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"range\"]::-webkit-slider-thumb {\r\n\t\t\t background: #fff !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\t background: #000000 !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track {\r\n\t\t\t background: rgb(127, 127, 127) !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-track {\r\n\t\t\t background: rgb(127, 127, 127) !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track::focus {\r\n\t\t\t background: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\t box-shadow:\r\n\t\t\t   0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t   inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t   inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-track::focus {\r\n\t\t\t background: rgba(255, 255, 255, 0.2) !important;\r\n\t\t\t box-shadow:\r\n\t\t\t   0px 0px 1px 1px rgba(0, 0, 0, 0.2),\r\n\t\t\t   inset 0px 1px 2px 0px rgba(0, 0, 0, 0.2),\r\n\t\t\t   inset 0px -1px 0px 0px rgba(255, 255, 255, 0.3);\r\n\t\t   }\r\n\t\t   .beepboxEditor input[type=\"text\"],\r\n\t\t   .beepboxEditor input[type=\"number\"] {\r\n\t\t\t font-size: inherit !important;\r\n\t\t\t font-weight: bold !important;\r\n\t\t\t font-family: inherit !important;\r\n\t\t\t background: #202020 !important;\r\n\t\t\t text-align: center !important;\r\n\t\t\t border: 1px solid var(--input-box-outline);\r\n\t\t\t color: #fff !important;\r\n\t\t\t box-shadow: 0px 0px 0px 1px rgb(134, 134, 134) !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor .prompt {\r\n\t\t\t --primary-text: #fff;\r\n\t\t\t --secondary-text: #fff;\r\n\t\t\t --ui-widget-background: #351f5f;\r\n\t\t\t color: #fff !important;\r\n\t\t\t background: #202020 !important;\r\n\t\t   }\r\n\t\t   .beepboxEditor .trackContainer {\r\n\t\t\t --editor-background: #000;\r\n\t\t   }\r\n\t\t   #text-content {\r\n\t\t\t color: #fff;\r\n\t\t\t background: #202020;\r\n\t\t   }\r\n\t\t   body:not(#secondImage) {\r\n\t\t\t background: #202020;\r\n\t\t   }\r\n\t\t   body:not(#secondImage) input {\r\n\t\t\t --primary-text: #000;\r\n\t\t   }\r\n\t\t   body:not(#secondImage) h1 {\r\n\t\t\t color: #fff;\r\n\t\t   }\r\n\t\t  div#text-content {\r\n\t\t\tpadding-top: 15px;\r\n\t\t  }\r\n\t\t  div#beepboxEditorContainer{\r\n\t\t\tpadding-bottom: 15px;\r\n\t\t  }\r\n\t\t  div.channelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\t\t  div.curChannelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t  }\r\n\t\t  div.muteEditor {\r\n\t\t\tborder-radius: 0px !important;\r\n\t\t  }\r\n\t\t`,\r\n\t\t\"Doom 1993\": `\r\n\t\t\t:root { \t\t\r\n\t\t\t--page-margin: #470000; \t\t\r\n\t\t\t--editor-background: #470000; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: #ffffff; \t\t\r\n\t\t\t--secondary-text: #ffffff; \t\t\r\n\t\t\t--inverted-text:  #000000;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #ff6f00; \t\t\r\n\t\t\t--loop-accent: #ff0000; \t\t\r\n\t\t\t--link-accent: #962727; \t\t\r\n\t\t\t--ui-widget-background: #4f3b36;\t\t\r\n\t\t\t--ui-widget-focus: #4f3b36; \t\t\r\n\t\t\t--pitch-background: #7d0000; \t\t\r\n\t\t\t--tonic: #ff0000; \t\t\r\n\t\t\t--fifth-note: #962727; \t\r\n\t\t\t--third-note: #d2192a;\t\r\n\t\t\t--white-piano-key: #ccbca5; \t\t\r\n\t\t\t--black-piano-key: #40382f; \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #7d1f00; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #401000; \t\t\r\n\t\t\t--track-editor-bg-noise: #7d0000; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #400000; \t\t\r\n\t\t\t--track-editor-bg-mod: #7d0028; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #470017; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f8460; \t\t\r\n\t\t\t--overwriting-mod-slider: #9f6460; \t\t\r\n\t\t\t--indicator-primary: #b38949; \t\t\r\n\t\t\t--indicator-secondary: #543d1d; \t\t\r\n\t\t\t--select2-opt-group: #4f3b19; \t\t\r\n\t\t\t--input-box-outline: #1a0404; \t\t\r\n\t\t\t--mute-button-normal: #dd5d5d;\t \t\t\r\n\t\t\t--mute-button-mod: #ba3d36; \t\t\r\n\t\t\t--mod-label-primary: #541616; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--progress-bar: #ff0000;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -4; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 60; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -4; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 20; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -4; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 65; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 60; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 60; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 25; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 75; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \r\n\t\t\t\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t#text-content > section > h1 > font {\r\n\t\tdisplay: none;\r\n\t\t}\r\n\t\t#text-content > section > h1 {\r\n\t\tmargin: auto;\r\n\t\tcontent: url(\"./image_assets/AbyssBox_DOOM.png\");\r\n\t\t}\r\n\t\t\t\t\r\n\t\t\t\t/* sets background image */\r\n\t\tbody {\r\n\t\tbackground-image: url(\"./image_assets/doomsky.png\") !important;\r\n\t\tbackground-size: cover;\r\n\t\tbackground-position: center;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\t\t}\r\n\t\t\t/* make editor background transparent */\r\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\r\n\t\t}\r\n\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"doomfont\";\r\n\t\t   src:\r\n \t\t   url(\"./image_assets/doomfont.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n \t\t   font-family: 'doomfont';\r\n\t\t\t}\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'doomfont' !important;\r\n\t\t\t}\r\n\r\n\t\t\t`,\r\n\t\t\t\"Undertale\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #000;\r\n\t\t\t\t--editor-background: #000;\r\n\t\t\t\t--hover-preview: #fff;\r\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t--primary-text: #fff;\r\n\t\t\t\t--secondary-text: #979797;\r\n\t\t\t\t--inverted-text: #000;\r\n\t\t\t\t--text-selection: rgba(255, 255, 255, .99);\r\n\t\t\t\t--box-selection-fill: #fff;\r\n\t\t\t\t--loop-accent: #f00;\r\n\t\t\t\t--link-accent: #0f0;\r\n\t\t\t\t--ui-widget-background: #4d4d4d;\r\n\t\t\t\t--ui-widget-focus: #000;\r\n\t\t\t\t--pitch-background: #2d2d2d73;\r\n\t\t\t\t--tonic: #c9c9c9;\r\n\t\t\t\t--fifth-note: #400000;\r\n\t\t\t\t--third-note: #073037;\r\n\t\t\t\t--white-piano-key: #fff;\r\n\t\t\t\t--black-piano-key: #000;\r\n\t\t\t\t--white-piano-key-text: #000;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t--track-editor-bg-pitch: #8b8b8b;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #000;\r\n\t\t\t\t--track-editor-bg-noise: #5c5c5c;\r\n\t\t\t\t--track-editor-bg-noise-dim: #000;\r\n\t\t\t\t--track-editor-bg-mod: #585858;\r\n\t\t\t\t--track-editor-bg-mod-dim: #000;\r\n\t\t\t\t--multiplicative-mod-slider: #f00;\r\n\t\t\t\t--overwriting-mod-slider: #00f;\r\n\t\t\t\t--indicator-primary: #f00;\r\n\t\t\t\t--indicator-secondary: #919191;\r\n\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t--input-box-outline: #626262;\r\n\t\t\t\t--mute-button-normal: #ffffff;\r\n\t\t\t\t--mute-button-mod: #4f4f4f;\r\n\t\t\t\t--mod-label-primary: #f00;\r\n\t\t\t\t--progress-bar: #00ff00;\r\n\r\n\t\t\t\t--pitch1-secondary-channel: #590000;\r\n\t\t\t  --pitch1-primary-channel: #f00;\r\n\t\t\t  --pitch1-secondary-note: #590000;\r\n\t\t\t  --pitch1-primary-note: #f00;\r\n\t\t\t\r\n\t\t\t  --pitch2-secondary-channel: #00678a;\r\n\t\t\t  --pitch2-primary-channel: #00ffef;\r\n\t\t\t  --pitch2-secondary-note: #00678a;\r\n\t\t\t  --pitch2-primary-note: #00ffef;\r\n\t\t\t\r\n\t\t\t  --pitch3-secondary-channel: #b35600;\r\n\t\t\t  --pitch3-primary-channel: #ff7a00;\r\n\t\t\t  --pitch3-secondary-note: #b35600;\r\n\t\t\t  --pitch3-primary-note: #ff7a00;\r\n\t\t\t\r\n\t\t\t  --pitch4-secondary-channel: #002866;\r\n\t\t\t  --pitch4-primary-channel: #001aff;\r\n\t\t\t  --pitch4-secondary-note: #002866;\r\n\t\t\t  --pitch4-primary-note: #001aff;\r\n\t\t\t\r\n\t\t\t  --pitch5-secondary-channel: #005e0b;\r\n\t\t\t  --pitch5-primary-channel: #00ff1d;\r\n\t\t\t  --pitch5-secondary-note: #005e0b;\r\n\t\t\t  --pitch5-primary-note: #00ff1d;\r\n\t\t\t\r\n\t\t\t  --pitch6-secondary-channel: #b55d00;\r\n\t\t\t  --pitch6-primary-channel: #fe0;\r\n\t\t\t  --pitch6-secondary-note: #b55d00;\r\n\t\t\t  --pitch6-primary-note: #fe0;\r\n\t\t\t\r\n\t\t\t  --pitch7-secondary-channel: #6a00b3;\r\n\t\t\t  --pitch7-primary-channel: #a429f7;\r\n\t\t\t  --pitch7-secondary-note: #6a00b3;\r\n\t\t\t  --pitch7-primary-note: #a429f7;\r\n\t\t\t\r\n\t\t\t  --pitch8-secondary-channel: #02009f;\r\n\t\t\t  --pitch8-primary-channel: #0058ff;\r\n\t\t\t  --pitch8-secondary-note: #02009f;\r\n\t\t\t  --pitch8-primary-note: #0058ff;\r\n\t\t\t\r\n\t\t\t  --pitch9-secondary-channel: #5c5c5c;\r\n\t\t\t  --pitch9-primary-channel: #fff;\r\n\t\t\t  --pitch9-secondary-note: #5c5c5c;\r\n\t\t\t  --pitch9-primary-note: #fff;\r\n\t\t\t\r\n\t\t\t  --pitch10-secondary-channel: #5e2700;\r\n\t\t\t  --pitch10-primary-channel: #ffb300;\r\n\t\t\t  --pitch10-secondary-note: #5e2700;\r\n\t\t\t  --pitch10-primary-note: #ffb300;\r\n\t\t\t\r\n\t\t\t  --noise1-secondary-channel: #750000;\r\n\t\t\t  --noise1-primary-channel: #f00;\r\n\t\t\t  --noise1-secondary-note: #750000;\r\n\t\t\t  --noise1-primary-note: #f00;\r\n\t\t\t\r\n\t\t\t  --noise2-secondary-channel: #8567ff;\r\n\t\t\t  --noise2-primary-channel: #f00;\r\n\t\t\t  --noise2-secondary-note: #8567ff;\r\n\t\t\t  --noise2-primary-note: #f00;\r\n\t\t\t\r\n\t\t\t  --noise3-secondary-channel: #8567ff;\r\n\t\t\t  --noise3-primary-channel: #cec2ff;\r\n\t\t\t  --noise3-secondary-note: #8567ff;\r\n\t\t\t  --noise3-primary-note: #cec2ff;\r\n\t\t\t\r\n\t\t\t  --noise4-secondary-channel: #00266a;\r\n\t\t\t  --noise4-primary-channel: #ffe100;\r\n\t\t\t  --noise4-secondary-note: #00266a;\r\n\t\t\t  --noise4-primary-note: #ffe100;\r\n\t\t\t\r\n\t\t\t  --noise5-secondary-channel: #976a00;\r\n\t\t\t  --noise5-primary-channel: #ffe100;\r\n\t\t\t  --noise5-secondary-note: #976a00;\r\n\t\t\t  --noise5-primary-note: #ffe100;\r\n\t\t\t\r\n\t\t\t  --mod1-secondary-channel: #aaa;\r\n\t\t\t  --mod1-primary-channel: #fff;\r\n\t\t\t  --mod1-secondary-note: #aaa;\r\n\t\t\t  --mod1-primary-note: #fff;\r\n\t\t\t\r\n\t\t\t  --mod2-secondary-channel: #950000;\r\n\t\t\t  --mod2-primary-channel: #ff6000;\r\n\t\t\t  --mod2-secondary-note: #950000;\r\n\t\t\t  --mod2-primary-note: #ff6000;\r\n\t\t\t\r\n\t\t\t  --mod3-secondary-channel: #021300;\r\n\t\t\t  --mod3-primary-channel: #1db917;\r\n\t\t\t  --mod3-secondary-note: #021300;\r\n\t\t\t  --mod3-primary-note: #1db917;\r\n\t\t\t\r\n\t\t\t  --mod4-secondary-channel: #a00000;\r\n\t\t\t  --mod4-primary-channel: #ff252f;\r\n\t\t\t  --mod4-secondary-note: #a00000;\r\n\t\t\t  --mod4-primary-note: #ff252f;\r\n\t\t\t\r\n\t\t\t  --disabled-note-primary: #999;\r\n\t\t\t  --disabled-note-secondary: #696969;\r\n\r\n\t\t\t  --arrow-color: #f67c33;\r\n\t\t\t  --icon-color: #f67c33;\r\n\t\t\t\t}\r\n\t\t\t\t* {\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/cursor-heart.png\"), auto !important;\r\n\t\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t\t\t\t--text-enabled-icon:❤️ ;\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\r\n\t\t\t\t\tdiv.promptContainerBG {\r\n\t\t\t\t\t\tbackground-color: var(--editor-background) !important;\r\n\t\t\t\t\t\tbackdrop-filter: unset !important;\r\n\t\t\t\t\t\topacity: 0.5 !important;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t/* sets background image */\r\n\t\t\tbody {\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/battlebg.png\") !important;\r\n\t\t\tbackground-position: center;\r\n\t\t\tbackground-size: contain;\r\n\t\t\tbackground-attachment: fixed;\r\n\t\t\tbackground-repeat: no-repeat;\r\n\t\t\t}\r\n\t\t\t#text-content > section > h1 > font {\r\n\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t\t#text-content > section > h1 {\r\n\t\t\tmargin: auto;\r\n\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/UndertaleThemeLogo.png\");\r\n\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxUtThemeLogo.png\");\r\n \t\t\tbackground-size: contain;\r\n \t\t\tbackground-position: center;\r\n  \t\t\tbackground-repeat: no-repeat;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.selectContainer.menu.file select,\r\n\t\t\tdiv.selectContainer.menu.edit select,\r\n\t\t\tdiv.selectContainer.menu.preferences select {\r\n\t\t\t\tborder-style: solid;\r\n\t\t\t\tborder-color: #f67c33;\r\n\t\t\t\tborder-radius: 0px;\r\n\t\t\t}\r\n\t\t\tdiv.selectContainer.menu.file,\r\n\t\t\tdiv.selectContainer.menu.edit,\r\n\t\t\tdiv.selectContainer.menu.preferences {\r\n\t\t\t\t--ui-widget-background: black;\r\n\t\t\t\t--icon-color: #f67c33;\r\n\t\t\t\t--arrow-color: #f67c33;\r\n\t\t\t\tcolor: #f67c33;\r\n\t\t\t}\r\n\t\t\t.beepboxEditor select:focus,\r\n\t\t\t.beepboxEditor .selectContainer:focus-within\r\n\t\t\t{\r\n\t\t\t\tborder-color: #fbff4b !important;\r\n\t\t\t\t--ui-widget-background: black !important;\r\n\t\t\t\t--icon-color: #f00 !important;\r\n\t\t\t\t--arrow-color: #fbff4b !important;\r\n\t\t\t\tcolor: #fbff4b !important;\r\n\r\n\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\r\n\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\r\n\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\r\n\t\t\t}\r\n\t\t\t.beepboxEditor .menu.edit::before,\r\n\t\t\t.beepboxEditor .menu.file::before,\r\n\t\t\t.beepboxEditor .menu.preferences::before {\r\n\t\t\t\tbackground: var(--icon-color) !important;\r\n\t\t\t}\r\n\t\t\t.beepboxEditor .menu.edit::after,\r\n\t\t\t.beepboxEditor .menu.file::after,\r\n\t\t\t.beepboxEditor .menu.preferences::after {\r\n\t\t\t\tbackground: var(--arrow-color) !important;\r\n\t\t\t}\r\n\r\n\t\t\t#text-content {\r\n\t\t\t\tborder-style: solid;\r\n\t\t\t\tborder-radius: 0px;\r\n\t\t\t\tpadding-left: 20px;\r\n\t\t\t\tpadding-right: 20px;\r\n\t\t\t\tpadding-top: 15px;\r\n\t\t\t}\r\n\t\t#beepboxEditorContainer {\r\n\t\t\tborder-style: solid;\r\n\t\t\tborder-radius: 0px;\r\n\t\t\tpadding-left: 20px;\r\n\t\t\tpadding-right: 20px;\r\n\t\t\tpadding-bottom: 15px;\r\n\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"Yume Nikki\": `\r\n\t\t\t\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #000000; \t\t\r\n\t\t\t--editor-background: #000000; \t\t\r\n\t\t\t--hover-preview: white; \t\t\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9); \t\t\r\n\t\t\t--primary-text: white; \t\t\r\n\t\t\t--secondary-text: #ffcedd; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #1e0915; \t\t\r\n\t\t\t--loop-accent: #7b2442; \t\t\r\n\t\t\t--link-accent: #f588ff; \t\t\r\n\t\t\t--ui-widget-background: #000000; \t\t\r\n\t\t\t--ui-widget-focus: #1f1f1f; \t\t\r\n\t\t\t--pitch-background: #1e0915; \t\t\r\n\t\t\t--tonic: #7b2442; \t\t\r\n\t\t\t--pitch2-background: #13040c;\r\n\t\t\t--fifth-note: #4a0008; \t\r\n\t\t\t--pitch9-background: #13040c;\r\n\t\t\t--pitch10-background: #13040c;\r\n\t\t\t--third-note: #481325;\t\r\n\t\t\t--white-piano-key: #cca5c7; \t\t\r\n\t\t\t--black-piano-key: #402f2f;\r\n\t\t\t--white-piano-key-text: #131200;\t\t\r\n\t\t\t--black-piano-key-text: #fff;\t\t \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #731b50; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #260019; \t\t\r\n\t\t\t--track-editor-bg-noise: #731b50; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #260019; \t\t\r\n\t\t\t--track-editor-bg-mod: #731b50; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #260019; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray; \r\n\t\t\t--mod-title: #bf2c5d;\r\n\t\t\t--progress-bar: #bf2c5d;\r\n\t\t\t--octave-scrollbar: #4a0008;\r\n\t\t\t--empty-sample-bar: #0d0d0d;\r\n\r\n\t\t\t--pitch-secondary-channel-hue: -80; \t\t\r\n\t\t\t--pitch-secondary-channel-hue-scale: 0; \t\t\r\n\t\t\t--pitch-secondary-channel-sat: 43; \t\t\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-channel-lum: 40; \t\t\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-channel-hue: -53; \t\t\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-channel-sat: 75; \t\t\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-primary-channel-lum: 67.5; \t\t\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05; \t\r\n\t\r\n\t\t\t--pitch-secondary-note-hue: -34; \t\t\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-secondary-note-sat: 93.9; \t\t\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1; \t\t\r\n\t\t\t--pitch-secondary-note-lum: 25; \t\t\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05; \r\n\t\t\r\n\t\t\t--pitch-primary-note-hue: -53; \t\t\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1; \t\t\r\n\t\t\t--pitch-primary-note-sat: 100; \t\t\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05; \t\t\r\n\t\t\t--pitch-primary-note-lum: 85.6; \t\t\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025; \r\n\t\t\r\n\t\t\t--noise-secondary-channel-hue: 0; \t\t\r\n\t\t\t--noise-secondary-channel-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-channel-sat: 65; \t\t\r\n\t\t\t--noise-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-channel-lum: 42; \t\t\r\n\t\t\t--noise-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-primary-channel-hue: 0; \t\t\r\n\t\t\t--noise-primary-channel-hue-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-sat: 100; \t\t\r\n\t\t\t--noise-primary-channel-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-channel-lum: 63.5; \t\t\r\n\t\t\t--noise-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--noise-secondary-note-hue: 24; \t\t\r\n\t\t\t--noise-secondary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-secondary-note-sat: 100; \t\t\r\n\t\t\t--noise-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--noise-secondary-note-lum: 35; \t\t\r\n\t\t\t--noise-secondary-note-lum-scale: 0; \t\r\n\t\r\n\t\t\t--noise-primary-note-hue: 24; \t\t\r\n\t\t\t--noise-primary-note-hue-scale: 2; \t\t\r\n\t\t\t--noise-primary-note-sat: 100; \t\t\r\n\t\t\t--noise-primary-note-sat-scale: 1; \t\t\r\n\t\t\t--noise-primary-note-lum: 60; \t\t\r\n\t\t\t--noise-primary-note-lum-scale: 1; \t\r\n\t\r\n\t\t\t--mod-secondary-channel-hue: 55; \t\t\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-channel-sat: 100; \t\t\r\n\t\t\t--mod-secondary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-channel-lum: 20; \t\t\r\n\t\t\t--mod-secondary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-channel-hue: 55; \t\t\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-channel-sat: 96; \t\t\r\n\t\t\t--mod-primary-channel-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-channel-lum: 50; \t\t\r\n\t\t\t--mod-primary-channel-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-secondary-note-hue: 55; \t\t\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-secondary-note-sat: 92; \t\t\r\n\t\t\t--mod-secondary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-secondary-note-lum: 45; \t\t\r\n\t\t\t--mod-secondary-note-lum-scale: 0; \r\n\t\t\r\n\t\t\t--mod-primary-note-hue: 55; \t\t\r\n\t\t\t--mod-primary-note-hue-scale: 1.5; \t\t\r\n\t\t\t--mod-primary-note-sat: 96; \t\t\r\n\t\t\t--mod-primary-note-sat-scale: 0; \t\t\r\n\t\t\t--mod-primary-note-lum: 85; \t\t\r\n\t\t\t--mod-primary-note-lum-scale: 0; \t\r\n\r\n\t\t\t--note-flash: #ffffff;\r\n\t\t\t--note-flash-secondary: #ffffff77;\r\n\r\n\t\t\t--oscilloscope-line-R: #7b2442;\r\n\t\t\t--oscilloscope-line-L: var(--secondary-text);\r\n\r\n\t\t\t--scrollbar-color: #ffffff;\r\n\t\t\t--icon-color: #000;\r\n\t\t\t--arrow-color: #000;\r\n\t\t\t\t}\r\n\t\t* {\r\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\r\n\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\r\n\t\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\r\n\t\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\r\n\t\t}\r\n\t\t\r\n\t\t.spIcon {\r\n\t\t--ui-widget-background: #93090f;\r\n\t\t}\r\n\r\n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t{\r\n\t\t\tbackground: #4a0008 !important;\r\n\t\t\tborder-radius: 0px;\r\n\t\t} /* Thanks to LeoV's Skeumorphic theme on this one */\r\n\r\n\t\t\t\r\n\r\n\t\t\t/*#Hotdog {\r\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/abclassic_hotdog.png\");\r\n\t\t\t} */\r\n\r\n\t\t\t#text-content {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNikkiBorder.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 12px; \r\n\t\t\t\tborder-image-repeat: repeat; \r\n    \t\t\t\tpadding: 12px; \r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n    \t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNikkiBorder.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 12px; \r\n\t\t\t\tborder-image-repeat: repeat;\r\n    \t\t\t\tpadding: 12px;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiv.prompt.noSelection {\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNikkiBorder.png\");\r\n    \t\t\t\tborder-image-slice: 4 fill; \r\n   \t\t\t\tborder-image-width: 12px; \r\n\t\t\t\tborder-image-repeat: repeat;\r\n    \t\t\t\tpadding: 12px;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor select:focus,\r\n\t\t\t\t.beepboxEditor select:hover,\r\n\t\t\t\t.beepboxEditor .selectContainer:focus-within,\r\n\t\t\t\t.beepboxEditor button:hover,\r\n\t\t\t\t.beepboxEditor button:focus,\r\n\t\t\t\t#select2-pitchPresetSelect-container:hover,\r\n\t\t\t\t#select2-pitchPresetSelect-container:focus\r\n\t\t\t\t{\r\n\t\t\t\t\t--ui-widget-background: black !important;\r\n\t\t\t\t\t\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNikkiButton.png\");\r\n\t\t\t\t\tborder-image-slice: 6 fill; \r\n   \t\t\t\t\tborder-image-width: 8px; \r\n\t\t\t\t\tborder-image-repeat: repeat;\r\n\t\r\n\t\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\r\n\t\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\r\n\t\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-soul.png\");\r\n\t\t\t\t\t--ui-widget-focus: #000;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .menu.edit::before,\r\n\t\t\t\t.beepboxEditor .menu.file::before,\r\n\t\t\t\t.beepboxEditor .menu.preferences::before {\r\n\t\t\t\t\tbackground: var(--icon-color) !important;\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor .menu.edit::after,\r\n\t\t\t\t.beepboxEditor .menu.file::after,\r\n\t\t\t\t.beepboxEditor .menu.preferences::after {\r\n\t\t\t\t\tbackground: var(--arrow-color) !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .channelBoxLabel {\r\n\t\t\t\t\tfont-size: 14px !important;\r\n\t\t\t\t\tfont-weight: unset !important;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\tdiv.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t--ui-widget-background: #000000 !important;\r\n\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"yumeNumbers\";\r\n\t\t   src:\r\n \t\t   url(\"https://choptop84.github.io/choptop84s-image-repository/yumeNumbers.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\r\n\t\t\t#text-content > section > h1 > font {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t#text-content > section > h1 {\r\n\t\t\t\tmargin: auto;\r\n\t\t\t\tcontent: url(\"https://choptop84.github.io/choptop84s-image-repository/AbyssBoxYumeNikkiThemeLogo.png\");\r\n\t\t\t\t}\r\n\r\n\t\t\t/**/\r\n\r\n\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\tfont-family: 'yumeNumbers' !important;\r\n\t\t\t}\r\n\r\n\t\t\tdiv.fadeInOut svg path {\r\n\t\t\t--ui-widget-background: #4a0008;\r\n\t\t\t}\r\n\t\t\tdiv.filterEditor svg path {\r\n\t\t\t--ui-widget-background: #4a0008;\r\n\t\t\t}\r\n\t\t\t`,\r\n      \"Windows Xp\": `\r\n\t\t\t:root {\t\t\r\n\t\t\t--page-margin: #edead9; \t\t\r\n\t\t\t--editor-background: #faf9f2; \t\t\r\n\t\t\t--hover-preview: black; \t\t\r\n\t\t\t--playhead: #000; \t\t\r\n\t\t\t--primary-text: #231f20; \t\t\r\n\t\t\t--secondary-text: #231f20; \t\t\r\n\t\t\t--inverted-text: black;\t \t\t\r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \t\t\r\n\t\t\t--box-selection-fill: #1e0915; \t\t\r\n\t\t\t--loop-accent: #003399; \t\t\r\n\t\t\t--link-accent: #003399; \t\t\r\n\t\t\t--ui-widget-background: #faf9f2; \t\t\r\n\t\t\t--ui-widget-focus: #faf9f2; \t\t\r\n\t\t\t--pitch-background: #ffffff; \t\t\r\n\t\t\t--tonic: #d5dbf5; \t\t\r\n\t\t\t--fifth-note: #e8e8e8; \t\r\n\t\t\t--third-note: #b6ceac;\t\r\n\t\t\t--white-piano-key: #ebe2ca; \t\t\r\n\t\t\t--black-piano-key: #403a2f; \t\t\r\n\t\t\t--use-color-formula: true; \t\t\r\n\t\t\t--track-editor-bg-pitch: #cfcab2; \t\t\r\n\t\t\t--track-editor-bg-pitch-dim: #9c9781; \t\t\r\n\t\t\t--track-editor-bg-noise: #cfcab2; \t\t\r\n\t\t\t--track-editor-bg-noise-dim: #9c9781; \t\t\r\n\t\t\t--track-editor-bg-mod: #cfcab2; \t\t\r\n\t\t\t--track-editor-bg-mod-dim: #9c9781; \t\t\r\n\t\t\t--multiplicative-mod-slider: #9f6082; \t\t\r\n\t\t\t--overwriting-mod-slider: #9e3470; \t\t\r\n\t\t\t--indicator-primary: #b3498f; \t\t\r\n\t\t\t--indicator-secondary: #541d40; \t\t\r\n\t\t\t--select2-opt-group: #4f191e; \t\t\r\n\t\t\t--input-box-outline: #18041a; \t\t\r\n\t\t\t--mute-button-normal: #dd5d94;\t \t\t\r\n\t\t\t--mute-button-mod: #ba364c; \t\t\r\n\t\t\t--mod-label-primary: #541625; \t\t\r\n\t\t\t--mod-label-secondary-text: rgb(120, 87, 86); \r\n\t\t\t--mod-label-primary-text: gray;\r\n\t\t\t--progress-bar: #00ff00;\r\n\t\t\t--octave-scrollbar: #cfcab2;\r\n\r\n--pitch-secondary-channel-hue: 0;\t\t\r\n--pitch-secondary-channel-hue-scale: 6.1;\t\t\r\n--pitch-secondary-channel-sat: 43.3;\t\t\r\n--pitch-secondary-channel-sat-scale: 0.1;\t\t\r\n--pitch-secondary-channel-lum: 30;\t\t\r\n--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\r\n--pitch-primary-channel-hue: 0;\t\t\r\n--pitch-primary-channel-hue-scale: 6.1;\t\t\r\n--pitch-primary-channel-sat: 60;\t\t\r\n--pitch-primary-channel-sat-scale: 0.1;\t\t\r\n--pitch-primary-channel-lum: 57.5;\t\t\r\n--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\r\n--pitch-secondary-note-hue: 0;\t\t\r\n--pitch-secondary-note-hue-scale: 6.1;\t\t\r\n--pitch-secondary-note-sat: 43.9;\t\t\r\n--pitch-secondary-note-sat-scale: 0.1;\t\t\r\n--pitch-secondary-note-lum: 35;\t\t\r\n--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\r\n--pitch-primary-note-hue: 0;\t\t\r\n--pitch-primary-note-hue-scale: 6.1;\t\t\r\n--pitch-primary-note-sat: 60;\t\t\r\n--pitch-primary-note-sat-scale: 0.05;\t\t\r\n--pitch-primary-note-lum: 65.6;\t\t\r\n--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\r\n--noise-secondary-channel-hue: 0;\t\t\r\n--noise-secondary-channel-hue-scale: 2;\t\t\r\n--noise-secondary-channel-sat: 25;\t\t\r\n--noise-secondary-channel-sat-scale: 0;\t\t\r\n--noise-secondary-channel-lum: 32;\t\t\r\n--noise-secondary-channel-lum-scale: 0;\r\n\t\t\r\n--noise-primary-channel-hue: 0;\t\t\r\n--noise-primary-channel-hue-scale: 2;\t\t\r\n--noise-primary-channel-sat: 33;\t\t\r\n--noise-primary-channel-sat-scale: 0;\t\t\r\n--noise-primary-channel-lum: 53.5;\t\t\r\n--noise-primary-channel-lum-scale: 0;\r\n\t\t\r\n--noise-secondary-note-hue: 0;\t\t\r\n--noise-secondary-note-hue-scale: 2;\t\t\r\n--noise-secondary-note-sat: 33.5;\t\t\r\n--noise-secondary-note-sat-scale: 0;\t\t\r\n--noise-secondary-note-lum: 35;\t\t\r\n--noise-secondary-note-lum-scale: 0;\t\r\n\t\r\n--noise-primary-note-hue: 0;\t\t\r\n--noise-primary-note-hue-scale: 2;\t\t\r\n--noise-primary-note-sat: 46.5;\t\t\r\n--noise-primary-note-sat-scale: 0;\t\t\r\n--noise-primary-note-lum: 54;\t\t\r\n--noise-primary-note-lum-scale: 0;\t\r\n\t\r\n--mod-secondary-channel-hue: 192;\t\t\r\n--mod-secondary-channel-hue-scale: 1.5;\t\t\r\n--mod-secondary-channel-sat: 88;\t\t\r\n--mod-secondary-channel-sat-scale: 0;\t\t\r\n--mod-secondary-channel-lum: 30;\t\t\r\n--mod-secondary-channel-lum-scale: 0;\t\r\n\t\r\n--mod-primary-channel-hue: 192;\t\t\r\n--mod-primary-channel-hue-scale: 1.5;\t\t\r\n--mod-primary-channel-sat: 56;\t\t\r\n--mod-primary-channel-sat-scale: 0;\t\t\r\n--mod-primary-channel-lum: 60;\t\t\r\n--mod-primary-channel-lum-scale: 0;\t\r\n\t\r\n--mod-secondary-note-hue: 192;\t\t\r\n--mod-secondary-note-hue-scale: 1.5;\t\t\r\n--mod-secondary-note-sat: 42;\t\t\r\n--mod-secondary-note-sat-scale: 0;\t\t\r\n--mod-secondary-note-lum: 35;\t\t\r\n--mod-secondary-note-lum-scale: 0;\t\r\n\t\r\n--mod-primary-note-hue: 192;\t\t\r\n--mod-primary-note-hue-scale: 1.5;\t\t\r\n--mod-primary-note-sat: 56;\t\t\r\n--mod-primary-note-sat-scale: 0;\t\t\r\n--mod-primary-note-lum: 65;\t\t\r\n--mod-primary-note-lum-scale: 0;\t\r\n\r\n\t\t\t--note-flash: #ffffff77;\r\n\t\t\t--note-flash-secondary: #ffffff66;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t@font-face {\r\n\t\t\t\t\tfont-family: \"tahoma\";\r\n\t\t\t\t\tsrc:\r\n\t\t\t\t\t url(\"./image_assets/tahoma.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t image-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t image-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t image-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t image-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tdiv.promptContainerBG {\r\n\t\t\t\t\tdisplay: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\thtml {\r\n\t\t\t\tfont-family: 'tahoma';\r\n\t\t\t   font-size: 150% !important;\r\n\t\t\t\t}\r\n\t\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\t\tfont-family: 'tahoma' !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .promptContainer {\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiv.prompt.noSelection {\r\n\t\t\t\t\tmargin: auto;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t\tbackground: var(--editor-background);\r\n\t\t\t\t\tborder-radius: 15px;\r\n\t\t\t\t\tborder: 0px solid var(--ui-widget-background) !important;\r\n\t\t\t\t\tpadding-left: 20px !important;\r\n\t\t\t\t\tbox-shadow: 6px 6px 27px 4px rgba(0, 0, 0, 0.5) !important;\r\n\t\t\t\t\tpadding-top: 6px !important;\r\n\t\t\t\t\tpadding-right: 20px !important;\r\n\t\t\t\t\tpadding-bottom: 20px !important;\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/xpborder.png\") !important;\r\n\t\t\t\t\tborder-image-slice: 34 !important;\r\n\t\t\t\t\tborder-image-width: 50px !important;\r\n\t\t\t\t\tborder-width: unset !important;\r\n\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiv.prompt.noSelection button.cancelButton {\r\n\t\t\t\t\topacity: 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdiv.promptTitle {\r\n\t\t\t\t\ttext-align: left !important;\r\n\t\t\t\t\tcolor: white !important;\r\n\t\t\t\t}\r\n\t\t\t\t.layoutExt::before {\r\n\t\t\t\t\tcontent: \"layout.exe\";\r\n\t\t\t\t}\r\n\t\t\t\t.layoutTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.channelExt::after {\r\n\t\t\t\t\tcontent: \"channelSettings.exe\";\r\n\t\t\t\t}\r\n\t\t\t\t.channelTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.limiterExt::after {\r\n\t\t\t\t\tcontent: \"limiter.exe\";\r\n\t\t\t\t}\r\n\t\t\t\t.limiterTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.bpmTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.bpmExt::after {\r\n\t\t\t\t\tcontent: \"bpb.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.gerTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.gerExt::after {\r\n\t\t\t\t\tcontent: \"euclidianRhythm.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.samplesTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.samplesExt::after {\r\n\t\t\t\t\tcontent: \"sampler.exe\";\r\n\t\t\t\t\tmargin-bottom: 0.5em;\r\n\r\n\t\t\t\t}\r\n\t\t\t\t.samplesExt {\r\n\t\t\t\t\tpadding-bottom: 8px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.importTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.importExt::after {\r\n\t\t\t\t\tcontent: \"import.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.exportTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.exportExt::after {\r\n\t\t\t\t\tcontent: \"export.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.import-instrumentTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.import-instrumentExt::after {\r\n\t\t\t\t\tcontent: \"importInstrument.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.export-instrumentTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.export-instrumentExt::after {\r\n\t\t\t\t\tcontent: \"exportInstrument.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.song-lengthTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.song-lengthExt::after {\r\n\t\t\t\t\tcontent: \"songExtender.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.mnsTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.mnsExt::after {\r\n\t\t\t\t\tcontent: \"moveNotesSideways.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.themeExt::after {\r\n\t\t\t\t\tcontent: \"setTheme.exe\";\r\n\t\t\t\t}\r\n\t\t\t\t.themeTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.customThemeExt::after {\r\n\t\t\t\t\tcontent: \"customThemeEditor.exe\";\r\n\t\t\t\t}\r\n\t\t\t\t.customThemeTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.nrsTitle {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t\t.nrsExt::after {\r\n\t\t\t\t\tcontent: \"setupMidiKeyboard.exe\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .promptContainer::before {\r\n\t\t\t\t\tbackground: #fff0;\r\n\t\t\t\t}\r\n\r\n\t\t* {\r\n\t\tcursor: url(\"./image_assets/xpcursor.png\"), auto !important;\r\n\t\t--play-symbol:url(\"./image_assets/xpPlay.png\");\r\n\t\t--pause-symbol:url(\"./image_assets/xpPause.png\");\r\n\t\t--record-symbol:url(\"./image_assets/xpRecord.png\");\r\n\t\t--stop-symbol:url(\"./image_assets/xpStop.png\");\r\n\t\t--prev-bar-symbol:url(\"./image_assets/xpBackward.png\");\r\n\t\t--next-bar-symbol:url(\"./image_assets/xpForward.png\");\r\n\t\t--file-page-symbol: url(\"./image_assets/xpFile.png\");\r\n\t\t--edit-pencil-symbol: url(\"./image_assets/xpEdit.png\");\r\n\t\t--preferences-gear-symbol: url(\"./image_assets/xpPreferences.png\");\r\n\t\t--muted-symbol: url(\"./image_assets/xpSpeakerMute.png\");\r\n\t\t--unmuted-symbol: url(\"./image_assets/xpSpeaker.png\");\r\n\t\t--volume-symbol: url(\"./image_assets/xpSpeaker.png\");\r\n\t\t--zoom-in-symbol: url(\"./image_assets/xpZoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"./image_assets/xpZoomOut.png\");\r\n\t\t}\r\n\r\n\t\t.beepboxEditor button,\r\n\t\tbutton.mobilePatternButton,\r\n\t\tbutton.mobileTrackButton,\r\n\t\tbutton.mobileSettingsButton,\r\n\t\tbutton.mobilePlayButton,\r\n\t\tbutton.mobilePauseButton,\r\n\t\tbutton.mobileNextBarButton,\r\n\t\tbutton.mobilePrevBarButton,\r\n\t\tbutton.playButton,\r\n\t\tbutton.pauseButton, \r\n\t\tbutton.recordButton, \r\n\t\tbutton.stopButton,\r\n\t\tbutton.nextBarButton, \r\n\t\tbutton.prevBarButton, \r\n\t\tbutton.copyButton, \r\n\t\tbutton.pasteButton, \r\n\t\tbutton.exportInstrumentButton, \r\n\t\tbutton.importInstrumentButton, \r\n\t\t.beepboxEditor select, \r\n\t\t.beepboxEditor .select2-selection__rendered {\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\tdiv.mute-button::before {\r\n\t\t\tbackground-image: url(\"./image_assets/xpSpeaker.png\") !important;\r\n\t\t\tbackground-size: 120% !important;\r\n\t\t\tbackground-position-x: center !important;\r\n\t\t\tbackground-position-y: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\tdiv.mute-button.muted::before {\r\n\t\t\tbackground-image: url(\"./image_assets/xpSpeakerMute.png\") !important;\r\n\t\t\tbackground-size: 120% !important;\r\n\t\t\tbackground-position-x: center !important;\r\n\t\t\tbackground-position-y: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\t\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\tbutton.recordButton::Before {\r\n\t\t\tbackground-image: url(\"./image_assets/xpRecord.png\") !important;\r\n\t\t\tbackground-size: 64% !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\tbutton.stopButton::Before {\r\n\t\t\tbackground-image: url(\"./image_assets/xpStop.png\") !important;\r\n\t\t\tbackground-size: 64% !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\tbutton.pauseButton::Before {\r\n\t\t\tbackground-image: url(\"./image_assets/xpPause.png\") !important;\r\n\t\t\tbackground-size: 64% !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\t.beepboxEditor span.volume-speaker {\r\n\t\t\tbackground-image: url(\"./image_assets/xpSpeaker.png\");\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-repeat: no-repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t}\r\n\r\n\t\tdiv.selectContainer.menu.file::before {\r\n\r\n\t\t\tbackground-image: url(\"./image_assets/xpFile.png\");\r\n\t\t\tbackground-size: 64%;\r\n\t\t\tbackground-position-x: center;\r\n\t\t\tbackground-position-y: center;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\tdiv.selectContainer.menu.edit::before {\r\n\r\n\t\t\tbackground-image: url(\"./image_assets/xpEdit.png\");\r\n\t\t\tbackground-size: 64%;\r\n\t\t\tbackground-position-x: center;\r\n\t\t\tbackground-position-y: center;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\t\tdiv.selectContainer.menu.preferences::before {\r\n\r\n\t\t\tbackground-image: url(\"./image_assets/xpPreferences.png\");\r\n\t\t\tbackground-size: 64%;\r\n\t\t\tbackground-position-x: center;\r\n\t\t\tbackground-position-y: center;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\t\tbutton.playButton::before {\r\n\r\n\t\t\tbackground-image: url(\"./image_assets/xpPlay.png\") !important;\r\n\t\t\tbackground-size: 64% !important;\r\n\t\t\tbackground-position: center !important;\r\n\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t}\r\n\r\n\t\t.beepboxEditor button.prevBarButton::before {\r\n\t\t\tbackground-image: url(\"./image_assets/xpBackward.png\") !important;\r\n\t\t\tbackground-size: 64% !important;\r\n\t\t\tbackground-position: center !important;\r\n\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\t.beepboxEditor button.nextBarButton::before {\r\n\t\t\tbackground-image: url(\"./image_assets/xpForward.png\") !important;\r\n\t\t\tbackground-size: 64% !important;\r\n\t\t\tbackground-position: center !important;\r\n\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\t.beepboxEditor .zoomInButton::before {\r\n\t\t\tbackground-image: url(\"./image_assets/xpZoomIn.png\") !important;\r\n\t\t\tbackground-position: center !important;\r\n\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\t.beepboxEditor .zoomOutButton::before {\r\n\t\t\tbackground-image: url(\"./image_assets/xpZoomOut.png\") !important;\r\n\t\t\tbackground-position: center !important;\r\n\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\tbackground-image: url(\"./image_assets/scrollbar.png\") !important;\r\n\t\t\tbackground-position: center !important;\r\n\t\t\tbackground-size: inherit !important;\r\n\r\n\t\t\tborder-radius: 0px !important;\r\n\t\t\twidth: 13px !important;\r\n\t\t\theight: 23px !important;\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\r\n\t\t}\r\n\r\n\t\t\t/* NON ICON STUFFS SO DON'T GET CONFUSED DUMMY!!! */\r\n\r\n\t\t\t#text-content > section > h1 > font {\r\n\t\tdisplay: none;\r\n\t\t}\r\n\t\t#text-content > section > h1 {\r\n\t\tmargin: auto;\r\n\t\tcontent: url(\"./image_assets/AbyssBox_XP.png\");\r\n\t\t}\r\n\r\n\t\t\t\t/* sets background image */\r\n\t\tbody {\r\n\t\tbackground-image: url(\"./image_assets/xphills.png\") !important;\r\n\t\tbackground-size: cover;\r\n\t\tbackground-position: center;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\t\t}\r\n\r\n\t\t\t#text-content {\r\n    \t\t\tmargin: auto;\r\n\t\t\t\tmargin-top: auto;\r\n\t\t\t\ttext-align: center;\r\n\t\t\t\tbackground: var(--editor-background);\r\n\t\t\t\tborder-radius: 15px;\r\n\t\t\t\tborder: 0px solid var(--ui-widget-background) !important;\r\n\t\t\t\tpadding-left: 20px !important;\r\n\t\t\t\tbox-shadow: 6px 6px 27px 4px rgba(0, 0, 0, 0.5) !important;\r\n\t\t\t\tpadding-top: 58px !important;\r\n\t\t\t\tpadding-right: 20px !important;\r\n\t\t\t\tpadding-bottom: 20px !important;\r\n\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/xpborder.png\") !important;\r\n\t\t\t\tborder-image-slice: 34 !important;\r\n\t\t\t\tborder-image-width: 50px !important;\r\n\t\t\t\tborder-width: unset !important;\r\n\t\t\t\timage-rendering: -moz-crisp-edges !important;\r\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important;\r\n\t\t\t\timage-rendering: -o-crisp-edges !important;\r\n\t\t\t\timage-rendering: pixelated !important;\r\n\t\t\t\timage-rendering: optimizeSpeed !important;\r\n\t\t\t\tmargin-top: 15px;\r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n    \t\t\t\tborder-image-source: url(\"./image_assets/xptextbg.png\");\r\n    \t\t\t\tborder-image-slice: 11 fill; \r\n   \t\t\t\tborder-image-width: 11px; \r\n\t\t\t\tborder-image-repeat: stretch;\r\n    \t\t\t\tbackground-color: transparent; \r\n    \t\t\t\tpadding: 13px; \r\n\t\t\t\t}\r\n\r\n\t\t\t.pattern-area {\r\n\t\t\tborder: #fff 1px solid;\r\n\t\t\tborder-right-color: rgb(255, 255, 255);\r\n\t\t\tborder-bottom-color: rgb(255, 255, 255);\r\n\t\t\tpadding: 2px;\r\n\t\t\tbackground: #f9f8f3;\r\n\t\t\tborder-right-color: #c7c7bd;\r\n\t\t\tborder-bottom-color: #c7c7bd;\r\n\t\t\t}\r\n\r\n\t\t\t.track-area {\r\n\t\t\t--editor-background: #edead9;\r\n\t\t\t--ui-widget-background: #edead9;\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor .muteEditor {\r\n\t\t\tbackground: #edead9;\r\n\t\t\t}\r\n\r\n\t\t\t.settings-area {\r\n\t\t\tborder: #fff 1px solid;\r\n\t\t\tborder-right-color: rgb(255, 255, 255);\r\n\t\t\tborder-bottom-color: rgb(255, 255, 255);\r\n\t\t\tpadding: 2px;\r\n\t\t\tbackground: #f9f8f3;\r\n\t\t\tborder-right-color: #c7c7bd;\r\n\t\t\tborder-bottom-color: #c7c7bd;\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor {\r\n\t\t\tbackground: #edead9 !important;\r\n\t\t\t}\r\n\r\n\t\t\t#octaveScrollBarContainer {\r\n\t\t\t--tonic: #9c9781;\r\n\t\t\t}\r\n\r\n\t\t\t.barScrollBar {\r\n\t\t\t--ui-widget-background: #9c9781;\r\n\t\t\t--editor-background: #edead9;\r\n\t\t\t}\r\n\r\n\t\t\t.songLoopButton {\r\n\t\t\tbackground: #edead9;\r\n\t\t\t}\r\n\r\n\t\t\t#firstImage {\r\n\t\t\t\tbackground-image: url(\"./image_assets/xpsongeditorbg.png\") !important;\r\n\t\t\t\tbackground-repeat: no-repeat !important;\r\n\t\t\t\tbackground-size: 100% 100% !important;\r\n\t\t\t}\r\n\r\n\t\t\tselect {\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t{\r\n\t\t\t\tbackground: rgba(222, 217, 189, 0.2) !important;\r\n\t\t\t\tbox-shadow:\r\n\t\t\t\t\t0px 0px 1px 1px rgba(0, 0, 0, 0.0), \r\n\t\t\t\t\tinset 0px 1px 2px 0px rgb(125, 120, 95), \r\n\t\t\t\t\tinset 0px -1px 0px 0px rgb(255, 255, 255)\r\n\t\t\t\t;\r\n\t\t\t\tborder-radius: 4px;\r\n\t\t\t} /* Thanks to LeoV's Skeumorphic theme on this one */\r\n\t\t\t\r\n\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track {\r\n\t\t\t\theight: 3px !important;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.beepboxEditor select:focus {\r\n\t\t\t\t\tborder-image-source: url(\"./image_assets/xpbuttonpressedbg.png\");\r\n\t\t\t\t\tborder-image-slice: 4 fill; \r\n\t\t\t\t\tborder-image-width: 4px; \r\n\t\t\t\t\tborder-image-repeat: repeat;\r\n\t\t\t\t\tbackground-color: transparent; \r\n\t\t\t\t\tpadding: 6px; \r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t\t{\r\n\t\t\t\t\tappearance: none;\r\n\t\t\t\t\tbackground: rgba(255, 255, 255, 1);\r\n\t\t\t\t\tcolor: currentColor;\r\n\t\t\t\t\tborder-radius: 0px;\r\n\t\t\t\t\twidth: 13px !important;\r\n\t\t\t\t\theight: 13px !important;\r\n\t\t\t\t\tbackground-image:url(\"./image_assets/xpCheckmarkBlank.png\");\r\n\t\t\t\t\tbackground-repeat:no-repeat;\r\n\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\ttransform: scale(2) !important;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t\t{\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t\ttransform: scale(2) !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t\t{\r\n\t\t\t\t\twidth: 13px;\r\n\t\t\t\t\theight: 13px;\r\n\t\t\t\t\ttext-align: center;\r\n\t\t\t\t\tcontent: \"\";\r\n\t\t\t\t\tbackground-repeat:no-repeat;\r\n\t\t\t\t\tbackground-image:url(\"./image_assets/xpCheckmark.png\");\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdiv.selectRow span \r\n\t\t\t\t{\r\n\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/xphandcursor.png\"), pointer !important;\r\n\t\t\t\t}\r\n\t\t\t\t \r\n\r\n\r\n\t\t\t`,\r\n\t\t\t\"corporate dark\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: #1f1f1f;\r\n\t\t\t--editor-background: #1f1f1f;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #e8e8e8;\r\n\t\t\t--secondary-text: #8c8c8c;\r\n\t\t\t--inverted-text: #1D1C1D;\r\n\t\t\t--text-selection: #C249DD;\r\n\t\t\t--box-selection-fill: rgba(0,0,0,0.2);\r\n\t\t\t--loop-accent: #C249DD;\r\n\t\t\t--link-accent: #0E9DD3;\r\n\t\t\t--ui-widget-background: #303134;\r\n\t\t\t--ui-widget-focus: #5B5957;\r\n\t\t\t--pitch-background: #3e3f42;\r\n\t\t\t--tonic: #303134;\r\n\t\t\t--fifth-note: #98809D;\r\n\t\t\t--third-note: #62738b;\r\n\t\t\t--white-piano-key: white;\r\n\t\t\t--black-piano-key: #1D1C1D;\r\n\t\t\t--white-piano-key-text: #1D1C1D;\r\n\t\t\t--black-piano-key-text: white;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #303134;\r\n\t\t\t--track-editor-bg-pitch-dim: #1d1e20;\r\n\t\t\t--track-editor-bg-noise: #303134;\r\n\t\t\t--track-editor-bg-noise-dim: #1d1e20;\r\n\t\t\t--track-editor-bg-mod: #46524a;\r\n\t\t\t--track-editor-bg-mod-dim: #2c352f;\r\n\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t--indicator-primary: #C249DD;\r\n\t\t\t--indicator-secondary: #602670;\r\n\t\t\t--select2-opt-group: #474747;\r\n\t\t\t--input-box-outline: #F4EDE4;\r\n\t\t\t--mute-button-normal: #DE8969;\r\n\t\t\t--mute-button-mod: #C05B8C;\r\n\t\t\t--pitch-channel-limit: 4;\r\n\t\t\t--noise-channel-limit: 3;\r\n\t\t\t--pitch1-secondary-channel: #17616B;\r\n\t\t\t--pitch1-primary-channel:   #36C5F0;\r\n\t\t\t--pitch1-secondary-note:    #17616B;\r\n\t\t\t--pitch1-primary-note:      #36C5F0;\r\n\t\t\t--pitch2-secondary-channel: #185F34;\r\n\t\t\t--pitch2-primary-channel:   #2EB67D;\r\n\t\t\t--pitch2-secondary-note:    #185F34;\r\n\t\t\t--pitch2-primary-note:      #2EB67D;\r\n\t\t\t--pitch3-secondary-channel: #755617;\r\n\t\t\t--pitch3-primary-channel:   #ECB22E;\r\n\t\t\t--pitch3-secondary-note:    #755617;\r\n\t\t\t--pitch3-primary-note:      #ECB22E;\r\n\t\t\t--pitch4-secondary-channel: #821237;\r\n\t\t\t--pitch4-primary-channel:   #E01E5A;\r\n\t\t\t--pitch4-secondary-note:    #821237;\r\n\t\t\t--pitch4-primary-note:      #E01E5A;\r\n\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t--noise1-secondary-channel: #424242;\r\n\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t--noise1-secondary-note:    #424242;\r\n\t\t\t--noise1-primary-note:      #AAAAAA;\r\n\t\t\t--noise2-secondary-channel: #5E3A2D;\r\n\t\t\t--noise2-primary-channel:   #DE8969;\r\n\t\t\t--noise2-secondary-note:    #5E3A2D;\r\n\t\t\t--noise2-primary-note:      #DE8969;\r\n\t\t\t--noise3-secondary-channel: #32595B;\r\n\t\t\t--noise3-primary-channel:   #78D7DD;\r\n\t\t\t--noise3-secondary-note:    #32595B;\r\n\t\t\t--noise3-primary-note:      #78D7DD;\r\n\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t--mod-label-primary:        #999;\r\n\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t--mod-title: #1D1C1D;\r\n\t\t\t}\r\n\r\n\t\t\t.channelBox {\r\n\t\t\tborder-radius: 25px;\r\n\t\t\t}\r\n\r\n\t\t\tbutton:hover {\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tbackground-color: #1d1e20 !important;\r\n\t\t\t}\r\n\r\n\t\t\tselect:hover {\r\n\t\t\tborder-radius: 4px !important;\r\n\t\t\tbackground-color: #1d1e20 !important;\r\n\t\t\t}\r\n\r\n\t\t\t#select2-pitchPresetSelect-container:hover {\r\n\t\t\tborder-radius: 4px !important;\r\n\t\t\tbackground-color: #1d1e20 !important;\r\n\t\t\t}`,\r\n\t\t\t\"corporate light\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: white;\r\n\t\t\t--editor-background: white;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #1D1C1D;\r\n\t\t\t--secondary-text: #A5A19B;\r\n\t\t\t--inverted-text: #1D1C1D;\r\n\t\t\t--text-selection: #C249DD;\r\n\t\t\t--box-selection-fill: rgba(0,0,0,0.2);\r\n\t\t\t--loop-accent: #C249DD;\r\n\t\t\t--link-accent: #0E9DD3;\r\n\t\t\t--ui-widget-background: #F4EDE4;\r\n\t\t\t--ui-widget-focus: white;\r\n\t\t\t--pitch-background: #E8DED1;\r\n\t\t\t--tonic: #E6B8A8;\r\n\t\t\t--fifth-note: #DB99EA;\r\n\t\t\t--third-note: #99c3ff;\r\n\t\t\t--white-piano-key: white;\r\n\t\t\t--black-piano-key: #1D1C1D;\r\n\t\t\t--white-piano-key-text: #1D1C1D;\r\n\t\t\t--black-piano-key-text: white;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #E8DED1;\r\n\t\t\t--track-editor-bg-pitch-dim: #ecc6ba;\r\n\t\t\t--track-editor-bg-noise: #E8DED1;\r\n\t\t\t--track-editor-bg-noise-dim: #ecc6ba;\r\n\t\t\t--track-editor-bg-mod: #87BB9B;\r\n\t\t\t--track-editor-bg-mod-dim: #6baa83;\r\n\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t--indicator-primary: #C249DD;\r\n\t\t\t--indicator-secondary: #602670;\r\n\t\t\t--select2-opt-group: #474747;\r\n\t\t\t--input-box-outline: #F4EDE4;\r\n\t\t\t--mute-button-normal: #DE8969;\r\n\t\t\t--mute-button-mod: #C05B8C;\r\n\t\t\t--pitch-channel-limit: 4;\r\n\t\t\t--noise-channel-limit: 3;\r\n\t\t\t--pitch1-secondary-channel: #17616B;\r\n\t\t\t--pitch1-primary-channel:   #36C5F0;\r\n\t\t\t--pitch1-secondary-note:    #17616B;\r\n\t\t\t--pitch1-primary-note:      #36C5F0;\r\n\t\t\t--pitch2-secondary-channel: #185F34;\r\n\t\t\t--pitch2-primary-channel:   #2EB67D;\r\n\t\t\t--pitch2-secondary-note:    #185F34;\r\n\t\t\t--pitch2-primary-note:      #2EB67D;\r\n\t\t\t--pitch3-secondary-channel: #755617;\r\n\t\t\t--pitch3-primary-channel:   #ECB22E;\r\n\t\t\t--pitch3-secondary-note:    #755617;\r\n\t\t\t--pitch3-primary-note:      #ECB22E;\r\n\t\t\t--pitch4-secondary-channel: #821237;\r\n\t\t\t--pitch4-primary-channel:   #E01E5A;\r\n\t\t\t--pitch4-secondary-note:    #821237;\r\n\t\t\t--pitch4-primary-note:      #E01E5A;\r\n\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t--noise1-secondary-channel: #424242;\r\n\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t--noise1-secondary-note:    #424242;\r\n\t\t\t--noise1-primary-note:      #AAAAAA;\r\n\t\t\t--noise2-secondary-channel: #5E3A2D;\r\n\t\t\t--noise2-primary-channel:   #DE8969;\r\n\t\t\t--noise2-secondary-note:    #5E3A2D;\r\n\t\t\t--noise2-primary-note:      #DE8969;\r\n\t\t\t--noise3-secondary-channel: #32595B;\r\n\t\t\t--noise3-primary-channel:   #78D7DD;\r\n\t\t\t--noise3-secondary-note:    #32595B;\r\n\t\t\t--noise3-primary-note:      #78D7DD;\r\n\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t--mod-label-primary:        #999;\r\n\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t--mod-title: #1D1C1D;\r\n\t\t\t}\r\n\r\n\t\t\t.channelBox {\r\n\t\t\tborder-radius: 25px;\r\n\t\t\t}\r\n\r\n\t\t\tbutton:hover {\r\n\t\t\tborder-radius: 4px;\r\n\t\t\tbackground-color: #dbd2c5 !important;\r\n\t\t\t}\r\n\r\n\t\t\tselect:hover {\r\n\t\t\tborder-radius: 4px !important;\r\n\t\t\tbackground-color: #dbd2c5 !important;\r\n\t\t\t}\r\n\r\n\t\t\t#select2-pitchPresetSelect-container:hover {\r\n\t\t\tborder-radius: 4px !important;\r\n\t\t\tbackground-color: #dbd2c5 !important;\r\n\t\t\t}`,\r\n\t\t\t\"Terminal 2.0 (AB)\": `\r\n\t\t\t:root { \r\n\t\t\t--page-margin: black; \r\n\t\t\t--editor-background: black; \r\n\t\t\t--hover-preview: white; \r\n\t\t\t--playhead: white; \r\n\t\t\t--primary-text: #26ff00; \r\n\t\t\t--secondary-text: #0d6d00; \r\n\t\t\t--inverted-text: #000000; \r\n\t\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2); \r\n\t\t\t--loop-accent: #1eff00; \r\n\t\t\t--link-accent: #8dff7e; \r\n\t\t\t--ui-widget-background: #000000; \r\n\t\t\t--ui-widget-focus: #242424; \r\n\t\t\t--pitch-background: #0d0d0d50; \r\n\t\t\t--tonic: #06350090; \r\n\t\t\t--fifth-note: #20202090; \r\n\t\t\t--third-note: #2f571f8f;\r\n\t\t\t--white-piano-key: #ffffff; \r\n\t\t\t--black-piano-key: #000000; \r\n\t\t\t--white-piano-key-text: #131200; \r\n\t\t\t--black-piano-key-text: #fff; \r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n\t\t\t--track-editor-bg-pitch: #152912; \r\n\t\t\t--track-editor-bg-pitch-dim: #091307; \r\n\t\t\t--track-editor-bg-noise: #1a1a1a; \r\n\t\t\t--track-editor-bg-noise-dim: #333; \r\n\t\t\t--track-editor-bg-mod: #000000; \r\n\t\t\t--track-editor-bg-mod-dim: #000000; \r\n\t\t\t--multiplicative-mod-slider: #073c00; \r\n\t\t\t--overwriting-mod-slider: #0c6700; \r\n\t\t\t--indicator-primary: #139f00; \r\n\t\t\t--indicator-secondary: #1eff00; \r\n\t\t\t--select2-opt-group: #171717; \r\n\t\t\t--input-box-outline: #00ff00; \r\n\t\t\t--mute-button-normal: #00ff44; \r\n\t\t\t--mute-button-mod: #44ff00; \r\n\t\t\t--progress-bar: #00ff00;\r\n\t\t\t--pitch1-secondary-channel: #0099A1; \r\n\t\t\t--pitch1-primary-channel: #25F3FF; \r\n\t\t\t--pitch1-secondary-note: #00BDC7; \r\n\t\t\t--pitch1-primary-note: #92F9FF; \r\n\t\t\t--pitch2-secondary-channel: #A1A100; \r\n\t\t\t--pitch2-primary-channel: #FFFF25; \r\n\t\t\t--pitch2-secondary-note: #C7C700; \r\n\t\t\t--pitch2-primary-note: #FFFF92; \r\n\t\t\t--pitch3-secondary-channel: #C75000; \r\n\t\t\t--pitch3-primary-channel: #FF9752; \r\n\t\t\t--pitch3-secondary-note: #FF771C; \r\n\t\t\t--pitch3-primary-note: #FFCDAB; \r\n\t\t\t--pitch4-secondary-channel: #00A100; \r\n\t\t\t--pitch4-primary-channel: #50FF50; \r\n\t\t\t--pitch4-secondary-note: #00C700; \r\n\t\t\t--pitch4-primary-note: #A0FFA0; \r\n\t\t\t--pitch5-secondary-channel: #D020D0; \r\n\t\t\t--pitch5-primary-channel: #FF90FF; \r\n\t\t\t--pitch5-secondary-note: #E040E0; \r\n\t\t\t--pitch5-primary-note: #FFC0FF; \r\n\t\t\t--pitch6-secondary-channel: #7777B0; \r\n\t\t\t--pitch6-primary-channel: #A0A0FF; \r\n\t\t\t--pitch6-secondary-note: #8888D0; \r\n\t\t\t--pitch6-primary-note: #D0D0FF; \r\n\t\t\t--pitch7-secondary-channel: #8AA100; \r\n\t\t\t--pitch7-primary-channel: #DEFF25; \r\n\t\t\t--pitch7-secondary-note: #AAC700; \r\n\t\t\t--pitch7-primary-note: #E6FF92; \r\n\t\t\t--pitch8-secondary-channel: #DF0019; \r\n\t\t\t--pitch8-primary-channel: #FF98A4; \r\n\t\t\t--pitch8-secondary-note: #FF4E63; \r\n\t\t\t--pitch8-primary-note: #FFB2BB; \r\n\t\t\t--pitch9-secondary-channel: #00A170; \r\n\t\t\t--pitch9-primary-channel: #50FFC9; \r\n\t\t\t--pitch9-secondary-note: #00C78A; \r\n\t\t\t--pitch9-primary-note: #83FFD9; \r\n\t\t\t--pitch10-secondary-channel: #A11FFF; \r\n\t\t\t--pitch10-primary-channel: #CE8BFF; \r\n\t\t\t--pitch10-secondary-note: #B757FF; \r\n\t\t\t--pitch10-primary-note: #DFACFF; \r\n\t\t\t--noise1-secondary-channel: #6F6F6F; \r\n\t\t\t--noise1-primary-channel: #AAAAAA; \r\n\t\t\t--noise1-secondary-note: #A7A7A7; \r\n\t\t\t--noise1-primary-note: #E0E0E0; \r\n\t\t\t--noise2-secondary-channel: #996633; \r\n\t\t\t--noise2-primary-channel: #DDAA77; \r\n\t\t\t--noise2-secondary-note: #CC9966; \r\n\t\t\t--noise2-primary-note: #F0D0BB; \r\n\t\t\t--noise3-secondary-channel: #4A6D8F; \r\n\t\t\t--noise3-primary-channel: #77AADD; \r\n\t\t\t--noise3-secondary-note: #6F9FCF; \r\n\t\t\t--noise3-primary-note: #BBD7FF; \r\n\t\t\t--noise4-secondary-channel: #7A4F9A; \r\n\t\t\t--noise4-primary-channel: #AF82D2; \r\n\t\t\t--noise4-secondary-note: #9E71C1; \r\n\t\t\t--noise4-primary-note: #D4C1EA; \r\n\t\t\t--noise5-secondary-channel: #607837; \r\n\t\t\t--noise5-primary-channel: #A2BB77; \r\n\t\t\t--noise5-secondary-note: #91AA66; \r\n\t\t\t--noise5-primary-note: #C5E2B2; \r\n\t\t\t--mod1-secondary-channel: #339955; \r\n\t\t\t--mod1-primary-channel: #77fc55; \r\n\t\t\t--mod1-secondary-note: #77ff8a; \r\n\t\t\t--mod1-primary-note: #cdffee; \r\n\t\t\t--mod2-secondary-channel: #993355; \r\n\t\t\t--mod2-primary-channel: #f04960; \r\n\t\t\t--mod2-secondary-note: #f057a0; \r\n\t\t\t--mod2-primary-note: #ffb8de; \r\n\t\t\t--mod3-secondary-channel: #553399; \r\n\t\t\t--mod3-primary-channel: #8855fc; \r\n\t\t\t--mod3-secondary-note: #aa64ff; \r\n\t\t\t--mod3-primary-note: #f8ddff; \r\n\t\t\t--mod4-secondary-channel: #a86436; \r\n\t\t\t--mod4-primary-channel: #c8a825; \r\n\t\t\t--mod4-secondary-note: #e8ba46; \r\n\t\t\t--mod4-primary-note: #fff6d3; \r\n\t\t\t--mod-label-primary: #164705; \r\n\t\t\t--mod-label-secondary-text: #333; \r\n\t\t\t--mod-label-primary-text: #44ff00; \r\n\t\t\t--disabled-note-primary: #999; \r\n\t\t\t--disabled-note-secondary: #666; \r\n\t\t\t--note-flash: #a4ff82; \r\n\t\t\t--note-flash-secondary: #dffbd57a; }\r\n\t\t\t\r\n\t\t\t.overlay {\r\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/lines2.png\") !important;\r\n\t\t\t\tbackground-size: 10%;\r\n\t\t\t}\r\n\r\n\t\t\t\t\t\t@font-face {\r\n\t\t\t\t\t   font-family: \"Workbench\";\r\n\t\t\t\t\t   src:\r\n\t\t\t\t\t\turl(\"./image_assets/Workbench.ttf\") format(\"truetype\") tech(color-COLRv1),\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\thtml {\r\n\t\t\t\t\t\t\tfont-family: 'Workbench';\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\t\t\t\tfont-family: 'Workbench' !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t\t#firstImage {\r\n\t\t\t\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/lines.png\") !important;\r\n\t\t\t\t\t\t\t\tbackground-repeat: repeat !important;\r\n\t\t\t\t\t\t\t\tbackground-size: 40% 40% !important;\r\n\t\t\t\t\t\t\t\topacity: 70%;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t#modTitle::before {\r\n\t\t\t\t\t\t\tcontent: \"> AbyssBox Terminal 2.0\" !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"Slushie\": `\r\n\t\t\t:root { \r\n\t\t\t\t--page-margin: #040814; \r\n\t\t\t\t--editor-background: #040814; \r\n\t\t\t\t--hover-preview: #c6f7ff; \r\n\t\t\t\t--playhead: white; \r\n\t\t\t\t--primary-text: #d3f3ff; \r\n\t\t\t\t--secondary-text: #6f72b5; \r\n\t\t\t\t--inverted-text: black; \r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t\t\t--box-selection-fill: rgb(43 70 171 / 62%); \r\n\t\t\t\t--loop-accent: #573ebb; \r\n\t\t\t\t--link-accent: #98f; \r\n\t\t\t\t--ui-widget-background: #2e2f44; \r\n\t\t\t\t--ui-widget-focus: #2b2c46; \r\n\t\t\t\t--pitch-background: #353654; \r\n\t\t\t\t--tonic: #716fe3; \r\n\t\t\t\t--fifth-note: #76469b;\r\n\t\t\t\t--third-note: #534488; \r\n\t\t\t\t--white-piano-key: #abbce3; \r\n\t\t\t\t--black-piano-key: #2f235e; \r\n\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n\t\t\t\t--track-editor-bg-pitch: #3a3b5c; \r\n\t\t\t\t--track-editor-bg-pitch-dim: #1f2036; \r\n\t\t\t\t--track-editor-bg-noise: #3c3554; \r\n\t\t\t\t--track-editor-bg-noise-dim: #1e1834; \r\n\t\t\t\t--track-editor-bg-mod: #30335e; \r\n\t\t\t\t--track-editor-bg-mod-dim: #161938; \r\n\t\t\t\t--multiplicative-mod-slider: #e29cff; \r\n\t\t\t\t--overwriting-mod-slider: #495789; \r\n\t\t\t\t--indicator-primary: #e1a6ff; \r\n\t\t\t\t--indicator-secondary: #415187; \r\n\t\t\t\t--select2-opt-group: #22223a; \r\n\t\t\t\t--input-box-outline: #2d2648; \r\n\t\t\t\t--mute-button-normal: #7aceff; \r\n\t\t\t\t--mute-button-mod: #9d6bff; \r\n\t\t\t\t--pitch1-secondary-channel: #5f3ea5; \r\n\t\t\t\t--pitch1-primary-channel: #c1a4ff; \r\n\t\t\t\t--pitch1-secondary-note: #794fd3; \r\n\t\t\t\t--pitch1-primary-note: #d8c6ff; \r\n\t\t\t\t--pitch2-secondary-channel: #4f44bf; \r\n\t\t\t\t--pitch2-primary-channel: #9287ff; \r\n\t\t\t\t--pitch2-secondary-note: #5e51d9; \r\n\t\t\t\t--pitch2-primary-note: #b6afff; \r\n\t\t\t\t--pitch3-secondary-channel: #374eb9; \r\n\t\t\t\t--pitch3-primary-channel: #8097ff; \r\n\t\t\t\t--pitch3-secondary-note: #445cc9; \r\n\t\t\t\t--pitch3-primary-note: #a0b2ff; \r\n\t\t\t\t--pitch4-secondary-channel: #2867cf; \r\n\t\t\t\t--pitch4-primary-channel: #6fa5ff; \r\n\t\t\t\t--pitch4-secondary-note: #2e6ed7; \r\n\t\t\t\t--pitch4-primary-note: #a6c7ff; \r\n\t\t\t\t--pitch5-secondary-channel: #3175a7; \r\n\t\t\t\t--pitch5-primary-channel: #7ec9ff; \r\n\t\t\t\t--pitch5-secondary-note: #367eb3; \r\n\t\t\t\t--pitch5-primary-note: #9fd7ff; \r\n\t\t\t\t--pitch6-secondary-channel: #3993a9; \r\n\t\t\t\t--pitch6-primary-channel: #8ce9ff; \r\n\t\t\t\t--pitch6-secondary-note: #386da3; \r\n\t\t\t\t--pitch6-primary-note: #9eecff; \r\n\t\t\t\t--pitch7-secondary-channel: #369d8a; \r\n\t\t\t\t--pitch7-primary-channel: #8bfce7; \r\n\t\t\t\t--pitch7-secondary-note: #1c93a7; \r\n\t\t\t\t--pitch7-primary-note: #abffef; \r\n\t\t\t\t--pitch8-secondary-channel: #00A170; \r\n\t\t\t\t--pitch8-primary-channel: #50FFC9; \r\n\t\t\t\t--pitch8-secondary-note: #00C78A; \r\n\t\t\t\t--pitch8-primary-note: #83FFD9; \r\n\t\t\t\t--pitch9-secondary-channel: #49b374; \r\n\t\t\t\t--pitch9-primary-channel: #8affa9; \r\n\t\t\t\t--pitch9-secondary-note: #26815f; \r\n\t\t\t\t--pitch9-primary-note: #c8ffde; \r\n\t\t\t\t--pitch10-secondary-channel: #58a747; \r\n\t\t\t\t--pitch10-primary-channel: #bbffaa; \r\n\t\t\t\t--pitch10-secondary-note: #1d7c48; \r\n\t\t\t\t--pitch10-primary-note: #c7ffbc; \r\n\t\t\t\t--noise1-secondary-channel: #42829b; \r\n\t\t\t\t--noise1-primary-channel: #97d3fc; \r\n\t\t\t\t--noise1-secondary-note: #3f53b3; \r\n\t\t\t\t--noise1-primary-note: #97d3fc; \r\n\t\t\t\t--noise2-secondary-channel: #6354bb; \r\n\t\t\t\t--noise2-primary-channel: #9a89ff; \r\n\t\t\t\t--noise2-secondary-note: #5f4dcd; \r\n\t\t\t\t--noise2-primary-note: #c6bcff; \r\n\t\t\t\t--noise3-secondary-channel: #704a95; \r\n\t\t\t\t--noise3-primary-channel: #c285ff; \r\n\t\t\t\t--noise3-secondary-note: #ad5aff; \r\n\t\t\t\t--noise3-primary-note: #d3a6ff; \r\n\t\t\t\t--noise4-secondary-channel: #a53c65; \r\n\t\t\t\t--noise4-primary-channel: #f794bb; \r\n\t\t\t\t--noise4-secondary-note: #cb5080; \r\n\t\t\t\t--noise4-primary-note: #f794bb; \r\n\t\t\t\t--noise5-secondary-channel: #9b2d2d; \r\n\t\t\t\t--noise5-primary-channel: #ff7676; \r\n\t\t\t\t--noise5-secondary-note: #cb4444; \r\n\t\t\t\t--noise5-primary-note: #ff9999; \r\n\t\t\t\t--mod1-secondary-channel: #b7613c; \r\n\t\t\t\t--mod1-primary-channel: #ff9f76; \r\n\t\t\t\t--mod1-secondary-note: #e77e52; \r\n\t\t\t\t--mod1-primary-note: #ffb99b; \r\n\t\t\t\t--mod2-secondary-channel: #916d34; \r\n\t\t\t\t--mod2-primary-channel: #fece80; \r\n\t\t\t\t--mod2-secondary-note: #c58b35; \r\n\t\t\t\t--mod2-primary-note: #ffdda5; \r\n\t\t\t\t--mod3-secondary-channel: #83761a; \r\n\t\t\t\t--mod3-primary-channel: #fdf68c; \r\n\t\t\t\t--mod3-secondary-note: #c18e00; \r\n\t\t\t\t--mod3-primary-note: #fdf68c; \r\n\t\t\t\t--mod4-secondary-channel: #a86436; \r\n\t\t\t\t--mod4-primary-channel: #c8a825; \r\n\t\t\t\t--mod4-secondary-note: #e8ba46; \r\n\t\t\t\t--mod4-primary-note: #c8a825; \r\n\t\t\t\t--mod-label-primary: #37325e; \r\n\t\t\t\t--mod-label-secondary-text: #6e8aa7; \r\n\t\t\t\t--mod-label-primary-text: #c1ffff; \r\n\t\t\t\t--disabled-note-primary: #999; \r\n\t\t\t\t--disabled-note-secondary: #666; \r\n\t\t\t\t--note-flash: #ffffff; \r\n\t\t\t\t--note-flash-secondary: #ffffff77; }\r\n\t\t\t`,\r\n\t\t\t\"Slushie Pixel\": `\r\n\t\t\t:root { \r\n\t\t\t\t--page-margin: #040814; \r\n\t\t\t\t--editor-background: #040814; \r\n\t\t\t\t--hover-preview: #c6f7ff; \r\n\t\t\t\t--playhead: white; \r\n\t\t\t\t--primary-text: #d3f3ff; \r\n\t\t\t\t--secondary-text: #6f72b5; \r\n\t\t\t\t--inverted-text: black; \r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t\t\t--box-selection-fill: rgb(43 70 171 / 62%); \r\n\t\t\t\t--loop-accent: #573ebb; \r\n\t\t\t\t--link-accent: #98f; \r\n\t\t\t\t--ui-widget-background: #2e2f44; \r\n\t\t\t\t--ui-widget-focus: #2b2c46; \r\n\t\t\t\t--pitch-background: #353654; \r\n\t\t\t\t--tonic: #716fe3; \r\n\t\t\t\t--fifth-note: #76469b;\r\n\t\t\t\t--third-note: #534488; \r\n\t\t\t\t--white-piano-key: #abbce3; \r\n\t\t\t\t--black-piano-key: #2f235e; \r\n\t\t\t\t--progress-bar: #716fe3;\r\n\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n\t\t\t\t--track-editor-bg-pitch: #3a3b5c; \r\n\t\t\t\t--track-editor-bg-pitch-dim: #1f2036; \r\n\t\t\t\t--track-editor-bg-noise: #3c3554; \r\n\t\t\t\t--track-editor-bg-noise-dim: #1e1834; \r\n\t\t\t\t--track-editor-bg-mod: #30335e; \r\n\t\t\t\t--track-editor-bg-mod-dim: #161938; \r\n\t\t\t\t--multiplicative-mod-slider: #e29cff; \r\n\t\t\t\t--overwriting-mod-slider: #495789; \r\n\t\t\t\t--indicator-primary: #e1a6ff; \r\n\t\t\t\t--indicator-secondary: #415187; \r\n\t\t\t\t--select2-opt-group: #22223a; \r\n\t\t\t\t--input-box-outline: #2d2648; \r\n\t\t\t\t--mute-button-normal: #7aceff; \r\n\t\t\t\t--mute-button-mod: #9d6bff; \r\n\t\t\t\t--pitch1-secondary-channel: #5f3ea5; \r\n\t\t\t\t--pitch1-primary-channel: #c1a4ff; \r\n\t\t\t\t--pitch1-secondary-note: #794fd3; \r\n\t\t\t\t--pitch1-primary-note: #d8c6ff; \r\n\t\t\t\t--pitch2-secondary-channel: #4f44bf; \r\n\t\t\t\t--pitch2-primary-channel: #9287ff; \r\n\t\t\t\t--pitch2-secondary-note: #5e51d9; \r\n\t\t\t\t--pitch2-primary-note: #b6afff; \r\n\t\t\t\t--pitch3-secondary-channel: #374eb9; \r\n\t\t\t\t--pitch3-primary-channel: #8097ff; \r\n\t\t\t\t--pitch3-secondary-note: #445cc9; \r\n\t\t\t\t--pitch3-primary-note: #a0b2ff; \r\n\t\t\t\t--pitch4-secondary-channel: #2867cf; \r\n\t\t\t\t--pitch4-primary-channel: #6fa5ff; \r\n\t\t\t\t--pitch4-secondary-note: #2e6ed7; \r\n\t\t\t\t--pitch4-primary-note: #a6c7ff; \r\n\t\t\t\t--pitch5-secondary-channel: #3175a7; \r\n\t\t\t\t--pitch5-primary-channel: #7ec9ff; \r\n\t\t\t\t--pitch5-secondary-note: #367eb3; \r\n\t\t\t\t--pitch5-primary-note: #9fd7ff; \r\n\t\t\t\t--pitch6-secondary-channel: #3993a9; \r\n\t\t\t\t--pitch6-primary-channel: #8ce9ff; \r\n\t\t\t\t--pitch6-secondary-note: #386da3; \r\n\t\t\t\t--pitch6-primary-note: #9eecff; \r\n\t\t\t\t--pitch7-secondary-channel: #369d8a; \r\n\t\t\t\t--pitch7-primary-channel: #8bfce7; \r\n\t\t\t\t--pitch7-secondary-note: #1c93a7; \r\n\t\t\t\t--pitch7-primary-note: #abffef; \r\n\t\t\t\t--pitch8-secondary-channel: #00A170; \r\n\t\t\t\t--pitch8-primary-channel: #50FFC9; \r\n\t\t\t\t--pitch8-secondary-note: #00C78A; \r\n\t\t\t\t--pitch8-primary-note: #83FFD9; \r\n\t\t\t\t--pitch9-secondary-channel: #49b374; \r\n\t\t\t\t--pitch9-primary-channel: #8affa9; \r\n\t\t\t\t--pitch9-secondary-note: #26815f; \r\n\t\t\t\t--pitch9-primary-note: #c8ffde; \r\n\t\t\t\t--pitch10-secondary-channel: #58a747; \r\n\t\t\t\t--pitch10-primary-channel: #bbffaa; \r\n\t\t\t\t--pitch10-secondary-note: #1d7c48; \r\n\t\t\t\t--pitch10-primary-note: #c7ffbc; \r\n\t\t\t\t--noise1-secondary-channel: #42829b; \r\n\t\t\t\t--noise1-primary-channel: #97d3fc; \r\n\t\t\t\t--noise1-secondary-note: #3f53b3; \r\n\t\t\t\t--noise1-primary-note: #97d3fc; \r\n\t\t\t\t--noise2-secondary-channel: #6354bb; \r\n\t\t\t\t--noise2-primary-channel: #9a89ff; \r\n\t\t\t\t--noise2-secondary-note: #5f4dcd; \r\n\t\t\t\t--noise2-primary-note: #c6bcff; \r\n\t\t\t\t--noise3-secondary-channel: #704a95; \r\n\t\t\t\t--noise3-primary-channel: #c285ff; \r\n\t\t\t\t--noise3-secondary-note: #ad5aff; \r\n\t\t\t\t--noise3-primary-note: #d3a6ff; \r\n\t\t\t\t--noise4-secondary-channel: #a53c65; \r\n\t\t\t\t--noise4-primary-channel: #f794bb; \r\n\t\t\t\t--noise4-secondary-note: #cb5080; \r\n\t\t\t\t--noise4-primary-note: #f794bb; \r\n\t\t\t\t--noise5-secondary-channel: #9b2d2d; \r\n\t\t\t\t--noise5-primary-channel: #ff7676; \r\n\t\t\t\t--noise5-secondary-note: #cb4444; \r\n\t\t\t\t--noise5-primary-note: #ff9999; \r\n\t\t\t\t--mod1-secondary-channel: #b7613c; \r\n\t\t\t\t--mod1-primary-channel: #ff9f76; \r\n\t\t\t\t--mod1-secondary-note: #e77e52; \r\n\t\t\t\t--mod1-primary-note: #ffb99b; \r\n\t\t\t\t--mod2-secondary-channel: #916d34; \r\n\t\t\t\t--mod2-primary-channel: #fece80; \r\n\t\t\t\t--mod2-secondary-note: #c58b35; \r\n\t\t\t\t--mod2-primary-note: #ffdda5; \r\n\t\t\t\t--mod3-secondary-channel: #83761a; \r\n\t\t\t\t--mod3-primary-channel: #fdf68c; \r\n\t\t\t\t--mod3-secondary-note: #c18e00; \r\n\t\t\t\t--mod3-primary-note: #fdf68c; \r\n\t\t\t\t--mod4-secondary-channel: #a86436; \r\n\t\t\t\t--mod4-primary-channel: #c8a825; \r\n\t\t\t\t--mod4-secondary-note: #e8ba46; \r\n\t\t\t\t--mod4-primary-note: #c8a825; \r\n\t\t\t\t--mod-label-primary: #37325e; \r\n\t\t\t\t--mod-label-secondary-text: #6e8aa7; \r\n\t\t\t\t--mod-label-primary-text: #c1ffff; \r\n\t\t\t\t--disabled-note-primary: #999; \r\n\t\t\t\t--disabled-note-secondary: #666; \r\n\t\t\t\t--note-flash: #ffffff; \r\n\t\t\t\t--note-flash-secondary: #ffffff77; }\r\n\t\t\t\r\n\t\t\t\t* {\r\n\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_cursor.png\"), auto !important;\r\n\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\r\n\t\t\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\r\n\t\t\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\r\n\t\t\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\r\n\t\t\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\r\n\t\t\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\r\n\t\t\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\r\n\t\t\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\r\n\t\t\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\r\n\t\t\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\r\n\t\t\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\r\n\t\t\t\t} \r\n\t\t\t\t\t@font-face {\r\n\t\t\t\t   font-family: \"AbyssType\";\r\n\t\t\t\t   src:\r\n\t\t\t\t\turl(\"./image_assets/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t@font-face {\r\n\t\t\t\t   font-family: \"AbyssType_small\";\r\n\t\t\t\t   src:\r\n\t\t\t\t\turl(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tbody {\r\n\t\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/slushbg.gif\") !important;\r\n\t\t\t\t\t\tbackground-size: 32px;\r\n\t\t\t\t\t\tbackground-position: center;\r\n\t\t\t\t\t\tbackground-repeat: repeat;\r\n\t\t\t\r\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t#text-content {\r\n\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/slushiepixel_border.png\");\r\n\t\t\t\t\t\tborder-image-slice: 4 fill; \r\n\t\t\t\t\t   border-image-width: 8px; \r\n\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\t\tpadding-left: 12px; \r\n\t\t\t\t\t\tpadding-right: 12px; \r\n\t\t\t\t\t\tpadding-bottom: 12px; \r\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t}\r\n\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/slushiepixel_border.png\");\r\n\t\t\t\t\t\tborder-image-slice: 4 fill; \r\n\t\t\t\t\t   border-image-width: 8px; \r\n\t\t\t\t\tborder-image-repeat: repeat;\r\n\t\t\t\t\t\tpadding-left: 12px; \r\n\t\t\t\t\t\tpadding-right: 12px; \r\n\t\t\t\t\t\tpadding-bottom: 12px; \r\n\t\t\t\r\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t.beepboxEditor button,\r\n\t\t\t\t\tbutton.mobilePatternButton,\r\n\t\t\t\t\tbutton.mobileTrackButton,\r\n\t\t\t\t\tbutton.mobileSettingsButton,\r\n\t\t\t\t\tbutton.mobilePlayButton,\r\n\t\t\t\t\tbutton.mobilePauseButton,\r\n\t\t\t\t\tbutton.mobileNextBarButton,\r\n\t\t\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\t\t\tbutton.playButton,\r\n\t\t\t\t\tbutton.pauseButton, \r\n\t\t\t\t\tbutton.recordButton, \r\n\t\t\t\t\tbutton.stopButton,\r\n\t\t\t\t\tbutton.nextBarButton, \r\n\t\t\t\t\tbutton.prevBarButton, \r\n\t\t\t\t\tbutton.copyButton, \r\n\t\t\t\t\tbutton.pasteButton, \r\n\t\t\t\t\tbutton.exportInstrumentButton, \r\n\t\t\t\t\tbutton.importInstrumentButton, \r\n\t\t\t\t\t.beepboxEditor select, \r\n\t\t\t\t\t.beepboxEditor .select2-selection__rendered {\r\n\t\t\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/slushie buttonbg.png\") !important;\r\n\t\t\t\t\t\t\tborder-image-slice: 4 fill !important; \r\n\t\t\t\t\t\t   border-image-width: 4px !important; \r\n\t\t\t\t\t\tborder-image-repeat: stretch !important;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\r\n\t\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\thtml {\r\n\t\t\t\t\tfont-family: 'AbyssType';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t \r\n\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\tdiv.selectRow span {\r\n\t\t\t\t\t\tcursor: url(\"https://choptop84.github.io/choptop84s-image-repository/slush_pixel_hand.png\"), pointer !important;\r\n\t\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"2012 Video Tutorial\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.overlay {\r\n\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/bandicam_watermark.png\");\r\n\t\t\t\t\tbackground-repeat: no-repeat;\r\n  \t\t\t\t\tbackground-size: contain;\r\n  \t\t\t\t\tbackground-position-x: center;\r\n\t\t\t\t  \tbackdrop-filter: blur(1px);\r\n\t\t\t\t\tposition: fixed !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t html:not(.overlay) {\r\n\t\t\t\t\twidth: 75vw;\r\n\t\t\t\t\tpadding-left: 12.5%;\r\n\t\t\t\t\tposition: relative;\r\n\t\t\t\t\tbackground: black;\r\n\t\t\t\t} \r\n\r\n\t\t\t`,\r\n\t\t\t\"I am on fire\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.overlay {\r\n\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/fire.gif\");\r\n\t\t\t\t\tbackground-repeat: no-repeat;\r\n  \t\t\t\t\tbackground-size: cover;\r\n  \t\t\t\t\tbackground-position-y: bottom;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t\t#modTitle::before {\r\n\t\t\t\t\tcontent: \"AAAA I'M ON FIRE AAA\" !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t`,\r\n\t\t\t\"BeepBox Pixel\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\t\t\r\n\t\t\t\t\r\n\t\t\t\t* {\r\n\t\t\t\t\tcursor: url(\"abyssbox_cursor.png\"), auto;\r\n\t\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t\t\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t\t\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t\t\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t\t\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\r\n\t\t\t\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\r\n\t\t\t\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t\t\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t\t\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\r\n\t\t\t\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\r\n\t\t\t\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\r\n\t\t\t\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\r\n\t\t\t\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\r\n\t\t\t\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\r\n\t\t\t\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\r\n\t\t\t\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\r\n\t\t\t\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t@font-face {\r\n\t\t\t\t\t   font-family: \"AbyssType\";\r\n\t\t\t\t\t   src:\r\n\t\t\t\t\t\turl(\"./image_assets/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t/* sets background image */\r\n\t\t\t\t\t\tbody {\r\n\t\t\t\t\t\tbackground-image: url(\"./image_assets/diamondsbg.gif\") !important;\r\n\t\t\t\t\t\tbackground-position: center;\r\n\t\t\t\t\t\tbackground-repeat: repeat;\r\n\t\t\t\r\n\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t#text-content {\r\n\t\t\t\t\t\t\t\tborder-image-source: url(\"./image_assets/beepbox_pixel_border.png\");\r\n\t\t\t\t\t\t\t\tborder-image-slice: 4 fill; \r\n\t\t\t\t\t\t\t   border-image-width: 8px; \r\n\t\t\t\t\t\t\tborder-image-repeat: stretch; \r\n\t\t\t\t\t\t\t\tpadding: 12px; \r\n\t\t\t\r\n\t\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\t\t\t\tborder-image-source: url(\"./image_assets/beepbox_pixel_border.png\");\r\n\t\t\t\t\t\t\t\tborder-image-slice: 4 fill; \r\n\t\t\t\t\t\t\t   border-image-width: 8px; \r\n\t\t\t\t\t\t\tborder-image-repeat: stretch;\r\n\t\t\t\t\t\t\t\tpadding: 12px;\r\n\t\t\t\r\n\t\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t.beepboxEditor button,\r\n\t\t\t\t\t\tbutton.mobilePatternButton,\r\n\t\t\t\t\t\tbutton.mobileTrackButton,\r\n\t\t\t\t\t\tbutton.mobileSettingsButton,\r\n\t\t\t\t\t\tbutton.mobilePlayButton,\r\n\t\t\t\t\t\tbutton.mobilePauseButton,\r\n\t\t\t\t\t\tbutton.mobileNextBarButton,\r\n\t\t\t\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\t\t\t\tbutton.playButton,\r\n\t\t\t\t\t\tbutton.pauseButton, \r\n\t\t\t\t\t\tbutton.recordButton, \r\n\t\t\t\t\t\tbutton.stopButton,\r\n\t\t\t\t\t\tbutton.nextBarButton, \r\n\t\t\t\t\t\tbutton.prevBarButton, \r\n\t\t\t\t\t\tbutton.copyButton, \r\n\t\t\t\t\t\tbutton.pasteButton, \r\n\t\t\t\t\t\tbutton.exportInstrumentButton, \r\n\t\t\t\t\t\tbutton.importInstrumentButton, \r\n\t\t\t\t\t\t.beepboxEditor select, \r\n\t\t\t\t\t\t.beepboxEditor .select2-selection__rendered {\r\n\t\t\t\t\t\t\t\tborder-image-source: url(\"./image_assets/beepbox_pixel_border.png\") !important;\r\n\t\t\t\t\t\t\t\tborder-image-slice: 4 fill !important; \r\n\t\t\t\t\t\t\t   border-image-width: 4px !important; \r\n\t\t\t\t\t\t\tborder-image-repeat: stretch !important;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\r\n\t\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t.beepboxEditor .channelBox {\r\n\t\t\t\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t\t\t\t0px calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t2px calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t2px 100%,\r\n\t\t\t\t\t\t\t\tcalc(100% - 2px) 100%,\r\n\t\t\t\t\t\t\t\tcalc(100% - 2px) calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t100% calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t100% 2px,\r\n\t\t\t\t\t\t\t\tcalc(100% - 2px) 2px,\r\n\t\t\t\t\t\t\t\tcalc(100% - 2px) 0px,\r\n\t\t\t\t\t\t\t\t2px 0px,\r\n\t\t\t\t\t\t\t\t2px 2px,\r\n\t\t\t\t\t\t\t\t0px 2px\r\n\t\t\t\t\t\t\t  );\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t.beepboxEditor .curChannelBox {\r\n\t\t\t\t\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t\t\t\t\t0px calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t\t2px calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t\t2px 100%,\r\n\t\t\t\t\t\t\t\t\tcalc(100% - 2px) 100%,\r\n\t\t\t\t\t\t\t\t\tcalc(100% - 2px) calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t\t100% calc(100% - 2px),\r\n\t\t\t\t\t\t\t\t\t100% 2px,\r\n\t\t\t\t\t\t\t\t\tcalc(100% - 2px) 2px,\r\n\t\t\t\t\t\t\t\t\tcalc(100% - 2px) 0px,\r\n\t\t\t\t\t\t\t\t\t2px 0px,\r\n\t\t\t\t\t\t\t\t\t2px 2px,\r\n\t\t\t\t\t\t\t\t\t0px 2px\r\n\t\t\t\t\t\t\t\t  );\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t@font-face {\r\n\t\t\t\t\t   font-family: \"AbyssType_small\";\r\n\t\t\t\t\t   src:\r\n\t\t\t\t\t\turl(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\thtml {\r\n\t\t\t\t\t\t\tfont-family: 'AbyssType';\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-thumb\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-webkit-slider-runnable-track\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-webkit-slider-runnable-track\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-thumb\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-ms-track\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-ms-track\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-track\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"range\"]:focus::-moz-range-track\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"text\"],\r\n\t\t\t\t\t\t.beepboxEditor input[type=\"number\"]\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t\t.beepboxEditor input[type=\"checkbox\"]:checked:after\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t\t\t\tdiv.selectRow span {\r\n\t\t\t\t\t\t\tcursor: url(\"./image_assets/abyssbox_cursor_hand.png\"), pointer !important;\r\n\t\t\t\t\t\t}\r\n\t\t\t\r\n\t\t\t`,\r\n      \"dark classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"dark competition\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #ddd;\r\n\t\t\t\t\t--playhead: #ddd;\r\n\t\t\t\t\t--primary-text: #ddd;\r\n\t\t\t\t\t--secondary-text: #8e695b;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(169,0,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(221,221,221,0.2);\r\n\t\t\t\t\t--loop-accent: #bf15ba;\r\n\t\t\t\t\t--link-accent: #f888ff;\r\n\t\t\t\t\t--ui-widget-background: #443a3a;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #353333;\r\n\t\t\t\t\t--tonic: #884a44;\r\n\t\t\t\t\t--fifth-note: #415498;\r\n\t\t\t\t\t--third-note: #486;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n                    --white-piano-key-text: #131200;\r\n                    --black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #AAC700;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#E6FF92;\r\n\t\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#83FFD9;\r\n\t\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6B3E8E;\r\n\t\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t}\r\n\t\t`,\r\n        \"light classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t--page-margin: #685d88;\r\n\t\t\t\t--editor-background: white;\r\n\t\t\t\t--hover-preview: black;\r\n\t\t\t\t--playhead: rgba(0,0,0,0.5);\r\n\t\t\t\t--primary-text: black;\r\n\t\t\t\t--secondary-text: #777;\r\n\t\t\t\t--inverted-text: white;\r\n\t\t\t\t--text-selection: rgba(200,170,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\r\n\t\t\t\t--loop-accent: #98f;\r\n\t\t\t\t--link-accent: #74f;\r\n\t\t\t\t--ui-widget-background: #ececec;\r\n\t\t\t\t--ui-widget-focus: #eee;\r\n\t\t\t\t--pitch-background: #ececec;\r\n\t\t\t\t--tonic: #f0d6b6;\r\n\t\t\t\t--fifth-note: #bbddf0;\r\n\t\t\t\t--third-note: #bbf0ce;\r\n\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\r\n\t\t\t\t\t--multiplicative-mod-slider: #789;\r\n\t\t\t\t\t--overwriting-mod-slider: #987;\r\n\t\t\t\t\t--indicator-primary: #98f;\r\n\t\t\t\t\t--indicator-secondary: #cde;\r\n\t\t\t\t\t--select2-opt-group: #cecece;\r\n\t\t\t\t\t--input-box-outline: #ddd;\r\n\t\t\t\t\t--mute-button-normal: #c0b47f;\r\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\r\n\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\r\n\t\t\t\t--pitch1-primary-channel:   #00A0BD;\r\n\t\t\t\t--pitch1-secondary-note:    #34C2DC;\r\n\t\t\t\t--pitch1-primary-note:      #00758A;\r\n\t\t\t\t--pitch2-secondary-channel: #E3C941;\r\n\t\t\t\t--pitch2-primary-channel:   #B49700;\r\n\t\t\t\t--pitch2-secondary-note:    #D1B628;\r\n\t\t\t\t--pitch2-primary-note:      #836E00;\r\n\t\t\t\t--pitch3-secondary-channel: #FF9D61;\r\n\t\t\t\t--pitch3-primary-channel:   #E14E00;\r\n\t\t\t\t--pitch3-secondary-note:    #F67D3C;\r\n\t\t\t\t--pitch3-primary-note:      #B64000;\r\n\t\t\t\t--pitch4-secondary-channel: #4BE24B;\r\n\t\t\t\t--pitch4-primary-channel:   #00A800;\r\n\t\t\t\t--pitch4-secondary-note:    #2DC82D;\r\n\t\t\t\t--pitch4-primary-note:      #008000;\r\n\t\t\t\t--pitch5-secondary-channel: #FF90FF;\r\n\t\t\t\t--pitch5-primary-channel:   #E12EDF;\r\n\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\r\n\t\t\t\t--pitch5-primary-note:      #A600A5;\r\n\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\r\n\t\t\t\t--pitch6-primary-channel:   #6969FD;\r\n\t\t\t\t--pitch6-secondary-note:    #9393FE;\r\n\t\t\t\t--pitch6-primary-note:      #4A4AD7;\r\n\t\t\t\t--pitch7-secondary-channel: #C2D848;\r\n\t\t\t\t--pitch7-primary-channel:   #8EA800;\r\n\t\t\t\t--pitch7-secondary-note:    #B0C82D;\r\n\t\t\t\t--pitch7-primary-note:      #6C8000;\r\n\t\t\t\t--pitch8-secondary-channel: #FF90A4;\r\n\t\t\t\t--pitch8-primary-channel:   #E12E4D;\r\n\t\t\t\t--pitch8-secondary-note:    #EC6E85;\r\n\t\t\t\t--pitch8-primary-note:      #A6001D;\r\n\t\t\t\t--pitch9-secondary-channel: #41E3B5;\r\n\t\t\t\t--pitch9-primary-channel:   #00B481;\r\n\t\t\t\t--pitch9-secondary-note:    #28D1A1;\r\n\t\t\t\t--pitch9-primary-note:      #00835E;\r\n\t\t\t\t--pitch10-secondary-channel:#CA77FF;\r\n\t\t\t\t--pitch10-primary-channel:  #9609FF;\r\n\t\t\t\t--pitch10-secondary-note:   #B54FFF;\r\n\t\t\t\t--pitch10-primary-note:     #8400E3;\r\n\t\t\t\t--noise1-secondary-channel: #C1C1C1;\r\n\t\t\t\t--noise1-primary-channel:   #898989;\r\n\t\t\t\t--noise1-secondary-note:    #ADADAD;\r\n\t\t\t\t--noise1-primary-note:      #6C6C6C;\r\n\t\t\t\t--noise2-secondary-channel: #E8BB8C;\r\n\t\t\t\t--noise2-primary-channel:   #BD7D3A;\r\n\t\t\t\t--noise2-secondary-note:    #D1A374;\r\n\t\t\t\t--noise2-primary-note:      #836342;\r\n\t\t\t\t--noise3-secondary-channel: #9BC4EB;\r\n\t\t\t\t--noise3-primary-channel:   #4481BE;\r\n\t\t\t\t--noise3-secondary-note:    #7CA7D3;\r\n\t\t\t\t--noise3-primary-note:      #476685;\r\n\t\t\t\t--noise4-secondary-channel: #C5A5E0;\r\n\t\t\t\t--noise4-primary-channel:   #8553AE;\r\n\t\t\t\t--noise4-secondary-note:    #B290CC;\r\n\t\t\t\t--noise4-primary-note:      #684F7D;\r\n\t\t\t\t--noise5-secondary-channel: #B8CE93;\r\n\t\t\t\t--noise5-primary-channel:   #87A74F;\r\n\t\t\t\t--noise5-secondary-note:    #ABC183;\r\n\t\t\t\t--noise5-primary-note:      #68784C;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #a86810;\r\n\t\t\t\t\t--mod-label-primary:        #dddddd;\r\n\t\t\t\t\t--mod-label-secondary-text: #777;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #666;\r\n\t\t\t\t\t--disabled-note-secondary:  #aaa;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.promptContainerBG::before {\r\n\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor button, .beepboxEditor select, button {\r\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t`,\r\n        \"jummbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--third-note: #3b4b71;\r\n\t\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t\t--black-piano-key: #666;\r\n                    --white-piano-key-text: #131200;\r\n                    --black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.5;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.5;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.5;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.5;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #91879f;\r\n\t\t\t\t\t--disabled-note-secondary:  #6a677a;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"forest\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #010c03;\r\n\t\t\t\t\t--editor-background: #010c03;\r\n\t\t\t\t\t--hover-preview: #efe;\r\n\t\t\t\t\t--playhead: rgba(232, 255, 232, 0.9);\r\n\t\t\t\t\t--primary-text: #efe;\r\n\t\t\t\t\t--secondary-text: #70A070;\r\n\t\t\t\t\t--inverted-text: #280228;\r\n\t\t\t\t\t--text-selection: rgba(255,68,199,0.99);\r\n\t\t\t\t\t--box-selection-fill: #267aa3;\r\n\t\t\t\t\t--loop-accent: #ffe845;\r\n\t\t\t\t\t--link-accent: #9f8;\r\n\t\t\t\t\t--ui-widget-background: #203829;\r\n\t\t\t\t\t--ui-widget-focus: #487860;\r\n\t\t\t\t\t--pitch-background: #203829;\r\n\t\t\t\t\t--tonic: #2b8d20;\r\n\t\t\t\t\t--fifth-note: #385840;\r\n\t\t\t\t\t--third-note: #486;\r\n\t\t\t\t\t--white-piano-key: #bda;\r\n\t\t\t\t\t--black-piano-key: #573;\r\n                    --white-piano-key-text: #131200;\r\n                    --black-piano-key-text: #ffffff;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #254820;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #102819;\r\n\t\t\t\t\t--track-editor-bg-noise: #304050;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #102030;\r\n\t\t\t\t\t--track-editor-bg-mod: #506030;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #2a300a;\r\n\t\t\t\t\t--multiplicative-mod-slider: #205c8f;\r\n\t\t\t\t\t--overwriting-mod-slider: #20ac6f;\r\n\t\t\t\t\t--indicator-primary: #dcd866;\r\n\t\t\t\t\t--indicator-secondary: #203829;\r\n\t\t\t\t\t--select2-opt-group: #1a6f5a;\r\n\t\t\t\t\t--input-box-outline: #242;\r\n\t\t\t\t\t--mute-button-normal: #49e980;\r\n\t\t\t\t\t--mute-button-mod: #c2e502;\r\n\t\t\t\t\t--mod-label-primary: #133613;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(27, 126, 40);\r\n\t\t\t\t\t--mod-label-primary-text: #efe;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-note-hue: 120;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 80;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 200;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-channel-sat: 48;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 65;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 200;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 33;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 200;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 64;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 40;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-channel-sat: 60;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 40;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-note-sat: 62;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 55;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 40;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-note-sat: 66;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #536e5c;\r\n\t\t\t\t\t--disabled-note-secondary:  #395440;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\"forest 2\": `\r\n\t\t\t\t\t:root { --page-margin: #132f16; \r\n\t\t\t\t\t--editor-background: #002b03;; \r\n\t\t\t\t\t--hover-preview: white; \r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9); \r\n\t\t\t\t\t--primary-text: #96d69f; \r\n\t\t\t\t\t--secondary-text: #7fdb60; \r\n\t\t\t\t\t--inverted-text: #2c562e; \r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t\t\t\t--box-selection-fill: #044b94; \r\n\t\t\t\t\t--loop-accent: #63e469; \r\n\t\t\t\t\t--link-accent: #c5facd; \r\n\t\t\t\t\t--ui-widget-background: #396b32; \r\n\t\t\t\t\t--ui-widget-focus: #002b03; \r\n\t\t\t\t\t--pitch-background: #30583c; \r\n\t\t\t\t\t--tonic: #4dac5b; \r\n\t\t\t\t\t--fifth-note: #458343; \r\n\t\t\t\t\t--third-note: #486;\r\n\t\t\t\t\t--white-piano-key: #bee9bf; \r\n\t\t\t\t\t--black-piano-key: #395e3c;\r\n\t\t\t\t\t--white-piano-key-text: #024a0c;\t\t\r\n\t\t\t\t\t--black-piano-key-text: #96d69f; \r\n\t\t\t\t\t--use-color-formula: true; \r\n\t\t\t\t\t--track-editor-bg-pitch: #43a631; \r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #387e34; \r\n\t\t\t\t\t--track-editor-bg-noise: #3c8462; \r\n\t\t\t\t\t--track-editor-bg-noise-dim: #285821; \r\n\t\t\t\t\t--track-editor-bg-mod: #419296; \r\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e7b59; \r\n\t\t\t\t\t--multiplicative-mod-slider: #345838; \r\n\t\t\t\t\t--overwriting-mod-slider: #3a8136; \r\n\t\t\t\t\t--indicator-primary: #75ce71; \r\n\t\t\t\t\t--indicator-secondary: #5fe857; \r\n\t\t\t\t\t--select2-opt-group: #002002; \r\n\t\t\t\t\t--input-box-outline: #bbe6b0; \r\n\t\t\t\t\t--mute-button-normal: #50aa4a; \r\n\t\t\t\t\t--mute-button-mod: #49ab69; \r\n\t\t\t\t\t--mod-label-primary: #8dd883; \r\n\t\t\t\t\t--mod-label-secondary-text: #7be250; \r\n\t\t\t\t\t--mod-label-primary-text: #bcebb4; \r\n\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 59;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 50;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 120;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 86;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 70;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 120;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 85;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 30;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.04;\r\n\t\t\t\t\t--pitch-primary-note-hue: 120;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 80;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 200;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 22;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 200;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-channel-sat: 48;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 65;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 200;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 33;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 200;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 1.1;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 64;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 40;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 44;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 40;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-channel-sat: 60;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 40;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-secondary-note-sat: 62;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 55;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 40;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.8;\r\n\t\t\t\t\t--mod-primary-note-sat: 66;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #536e5c;\r\n\t\t\t\t\t--disabled-note-secondary:  #395440;\r\n\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.note-primary {\r\n\t\t\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t\t\t0px calc(100% - 4px),\r\n\t\t\t\t\t\t\t4px calc(100% - 4px),\r\n\t\t\t\t\t\t\t4px 100%,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 100%,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\r\n\t\t\t\t\t\t\t100% calc(100% - 4px),\r\n\t\t\t\t\t\t\t100% 4px,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 4px,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 0px,\r\n\t\t\t\t\t\t\t4px 0px,\r\n\t\t\t\t\t\t\t4px 4px,\r\n\t\t\t\t\t\t\t0px 4px\r\n\t\t\t\t\t\t  );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t.note-secondary {\r\n\t\t\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t\t\t0px calc(100% - 4px),\r\n\t\t\t\t\t\t\t4px calc(100% - 4px),\r\n\t\t\t\t\t\t\t4px 100%,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 100%,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\r\n\t\t\t\t\t\t\t100% calc(100% - 4px),\r\n\t\t\t\t\t\t\t100% 4px,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 4px,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 0px,\r\n\t\t\t\t\t\t\t4px 0px,\r\n\t\t\t\t\t\t\t4px 4px,\r\n\t\t\t\t\t\t\t0px 4px\r\n\t\t\t\t\t\t  );\r\n\t\t\t\t\t}\r\n\t\t\t\t\t.note-flash {\r\n\t\t\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t\t\t0px calc(100% - 4px),\r\n\t\t\t\t\t\t\t4px calc(100% - 4px),\r\n\t\t\t\t\t\t\t4px 100%,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 100%,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\r\n\t\t\t\t\t\t\t100% calc(100% - 4px),\r\n\t\t\t\t\t\t\t100% 4px,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 4px,\r\n\t\t\t\t\t\t\tcalc(100% - 4px) 0px,\r\n\t\t\t\t\t\t\t4px 0px,\r\n\t\t\t\t\t\t\t4px 4px,\r\n\t\t\t\t\t\t\t0px 4px\r\n\t\t\t\t\t\t  );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t/* sets background image */\r\n\t\t\t\t\tbody {\r\n\t\t\t\t\t\tbackground-image: url(\"./image_assets/Forest2Trees.png\") !important;\r\n\t\t\t\t\t\tbackground-size: cover;\r\n\t\t\t\t\t\tbackground-position: center top; /* Adjusted to align with the top */\r\n  \t\t\t\t\t\tbackground-repeat: no-repeat;\r\n\r\n    \t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n    \t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n    \t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n    \t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n    \t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t#text-content {\r\n\t\t\t\t\t\t--editor-background: (255, 255, 255, 0);\r\n\t\t\t\t\t\t\tborder-image-source: url(\"./image_assets/forest2_border.png\");\r\n\t\t\t\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t\t\t\t   \tborder-image-width: 32px; \r\n\t\t\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\t\t\tpadding: 36px; \r\n\t\t\r\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t\t\t--editor-background: (255, 255, 255, 0);\r\n\t\t\t\t\t\t\tborder-image-source: url(\"./image_assets/forest2_border.png\");\r\n\t\t\t\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t\t\t\t   \tborder-image-width: 32px; \r\n\t\t\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\t\t\tpadding-left: 36px; \r\n\t\t\t\t\t\t\tpadding-right: 36px; \r\n\t\t\t\t\t\t\tpadding-top: 5px; \r\n\t\t\t\t\t\t\tpadding-bottom: 5px; \r\n\r\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t.beepboxEditor button, .beepboxEditor select, .beepboxEditor .select2-selection__rendered, button {\r\n\t\t\t\t\t\t\tborder-image-source: url(\"./image_assets/forest2_border2.png\") !important;\r\n\t\t\t\t\t\t\tborder-image-slice: 4 fill !important; \r\n\t\t\t\t\t\t   border-image-width: 4px !important; \r\n\t\t\t\t\t\tborder-image-repeat: stretch !important;\r\n\t\t\t\t\t\t\t\r\n\t\t\r\n\t\t\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdiv.prompt.noSelection {\r\n\t\t\t\t\t\t--editor-background: #002b03; \r\n\t\t\t\t\t}\r\n\t\t\t\t\t/* div.channelBox {\r\n\t\t\t\t\tborder-radius: 5px;\r\n\t\t\t\t\t} */\r\n\t\t\t\t\t* {\r\n\t\t\t\t\t\tcursor: url(\"./image_assets/pixel_cursor.png\"), auto !important;\r\n\t\t\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t\t\t\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t\t\t\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t\t\t\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t\t\t\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\r\n\t\t\t\t\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\r\n\t\t\t\t\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t\t\t\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t\t\t\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\r\n\t\t\t\t\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\r\n\t\t\t\t\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\r\n\t\t\t\t\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\r\n\t\t\t\t\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\r\n\t\t\t\t\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\r\n\t\t\t\t\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\r\n\t\t\t\t\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\r\n\t\t\t\t\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t@font-face {\r\n\t\t\t\t\t\t   font-family: \"AbyssType\";\r\n\t\t\t\t\t\t   src:\r\n\t\t\t\t\t\t\turl(\"./image_assets/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t@font-face {\r\n\t\t\t\t\t\t   font-family: \"AbyssType_small\";\r\n\t\t\t\t\t\t   src:\r\n\t\t\t\t\t\t\turl(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\t\t\thtml {\r\n\t\t\t\t\t\t\tfont-family: 'AbyssType';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t`,\r\n        \"canyon\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0a0000;\r\n\t\t\t\t\t--editor-background: #0a0000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\r\n\t\t\t\t\t--primary-text: #f5d6bf;\r\n\t\t\t\t\t--secondary-text: #934050;\r\n\t\t\t\t\t--inverted-text: #290505;\r\n\t\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\r\n\t\t\t\t\t--box-selection-fill: #94044870;\r\n\t\t\t\t\t--loop-accent: #ff1e1e;\r\n\t\t\t\t\t--link-accent: #da7b76;\r\n\t\t\t\t\t--ui-widget-background: #533137;\r\n\t\t\t\t\t--ui-widget-focus: #743e4b;\r\n\t\t\t\t\t--pitch-background: #4f3939;\r\n\t\t\t\t\t--tonic: #9e4145;\r\n\t\t\t\t\t--fifth-note: #5b3e6b;\r\n\t\t\t\t\t--third-note: #886744;\r\n\t\t\t\t\t--white-piano-key: #d89898;\r\n\t\t\t\t\t--black-piano-key: #572b29;\r\n                    --white-piano-key-text: #131200;\r\n                    --black-piano-key-text: #ffffff;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #5e3a41;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #281d1c;\r\n\t\t\t\t\t--track-editor-bg-noise: #3a3551;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #272732;\r\n\t\t\t\t\t--track-editor-bg-mod: #552045;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\r\n\t\t\t\t\t--multiplicative-mod-slider: #9f6095;\r\n\t\t\t\t\t--overwriting-mod-slider: #b55050;\r\n\t\t\t\t\t--indicator-primary: #f2f764;\r\n\t\t\t\t\t--indicator-secondary: #4f3939;\r\n\t\t\t\t\t--select2-opt-group: #673030;\r\n\t\t\t\t\t--input-box-outline: #443131;\r\n\t\t\t\t\t--mute-button-normal: #d81833;\r\n\t\t\t\t\t--mute-button-mod: #9e2691;\r\n\t\t\t\t\t--mod-label-primary: #5f2b39;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\r\n\t\t\t\t\t--mod-label-primary-text: #e6caed;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 83.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 35;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 60;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 60;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 60;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 60;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 222;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 222;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 222;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 54;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 222;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #515164;\r\n\t\t\t\t\t--disabled-note-secondary:  #2a2a3a;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"canyon 2\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #0a0000;\r\n\t\t\t\t--song-player-margin: var(--page-margin);\r\n\t\t\t\t--editor-background: #5a1616;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: rgba(247, 172, 196, 0.9);\r\n\t\t\t\t--primary-text: #f5d6bf;\r\n\t\t\t\t--secondary-text: #ff234d;\r\n\t\t\t\t--inverted-text: #290505;\r\n\t\t\t\t--text-selection: rgba(255, 208, 68, 0.99);\r\n\t\t\t\t--box-selection-fill: #94044870;\r\n\t\t\t\t--loop-accent: #ff1e1e;\r\n\t\t\t\t--link-accent: #da7b76;\r\n\t\t\t\t--ui-widget-background: #832d2d;\r\n\t\t\t\t--ui-widget-focus: #832d2d;\r\n\t\t\t\t--pitch-background: #832d2d;\r\n\t\t\t\t--tonic: #bb5a5e;\r\n\t\t\t\t--fifth-note: #5b3e6b;\r\n\t\t\t\t--third-note: #886744;\r\n\t\t\t\t--white-piano-key: #ff8383;\r\n\t\t\t\t--black-piano-key: #2b0806;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #ffffff;\r\n\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t--track-editor-bg-pitch: #a80b2b;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #38030e;\r\n\t\t\t\t--track-editor-bg-noise: #3a3551;\r\n\t\t\t\t--track-editor-bg-noise-dim: #272732;\r\n\t\t\t\t--track-editor-bg-mod: #552045;\r\n\t\t\t\t--track-editor-bg-mod-dim: #3e1442;\r\n\t\t\t\t--multiplicative-mod-slider: #9f6095;\r\n\t\t\t\t--overwriting-mod-slider: #b55050;\r\n\t\t\t\t--indicator-primary: #f2f764;\r\n\t\t\t\t--indicator-secondary: #4f3939;\r\n\t\t\t\t--select2-opt-group: #673030;\r\n\t\t\t\t--input-box-outline: #443131;\r\n\t\t\t\t--mute-button-normal: #d81833;\r\n\t\t\t\t--mute-button-mod: #9e2691;\r\n\t\t\t\t--mod-label-primary: #5f2b39;\r\n\t\t\t\t--mod-label-secondary-text: rgb(158, 66, 122);\r\n\t\t\t\t--mod-label-primary-text: #e6caed;\r\n\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t--pitch-secondary-channel-hue-scale: 11.8;\r\n\t\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t--pitch-primary-channel-hue-scale: 11.8;\r\n\t\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t--pitch-secondary-note-hue-scale: 11.8;\r\n\t\t\t\t--pitch-secondary-note-sat: 83.9;\r\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-note-lum: 35;\r\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t--pitch-primary-note-hue-scale: 11.8;\r\n\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t--noise-secondary-channel-hue: 60;\r\n\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-primary-channel-hue: 60;\r\n\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-secondary-note-hue: 60;\r\n\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t--noise-primary-note-hue: 60;\r\n\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-hue: 222;\r\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-primary-channel-hue: 222;\r\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-note-hue: 222;\r\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-note-lum: 54;\r\n\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t--mod-primary-note-hue: 222;\r\n\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t--disabled-note-primary:    #515164;\r\n\t\t\t\t--disabled-note-secondary:  #2a2a3a;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t* {\r\n\t\t\t\tcursor: url(\"./image_assets/pixel_cursor.png\"), auto !important;\r\n\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\r\n\t\t\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\r\n\t\t\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\r\n\t\t\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\r\n\t\t\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\r\n\t\t\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\r\n\t\t\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\r\n\t\t\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\r\n\t\t\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\r\n\t\t\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\r\n\t\t\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\r\n\t\t\t\t} \r\n\t\t\t\r\n\t\t\t@font-face {\r\n\t\t\t\tfont-family: \"AbyssType\";\r\n\t\t\t\tsrc:\r\n\t\t\t\t url(\"./image_assets/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t }\r\n\t\t\t\r\n\t\t\t\t @font-face {\r\n\t\t\t\tfont-family: \"AbyssType_small\";\r\n\t\t\t\tsrc:\r\n\t\t\t\t url(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t }\r\n\t\t\t\r\n\t\t\t\t #pattern-area {\r\n\t\t\t\t\tborder-style: solid;\r\n\t\t\t\t\tborder-color: #0a0000;\r\n\t\t\t\t\tborder-bottom: 0;\r\n\t\t\t\t\tborder-right: 0;\r\n\t\t\t\t\tborder-top: 0;\r\n\t\t\t\t }\r\n\t\t\t\r\n\t\t\t\t body {\r\n\t\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/canyonbg.png\") !important;\r\n\t\t\t\t\tbackground-size: 200% !important;\r\n\t\t\t\t\tbackground-position: center top; /* Adjusted to align with the top */\r\n\t\t\t\t\t  background-repeat: no-repeat !important;\r\n\t\t\t\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t\t }\r\n\t\t\t\r\n\t\t\t\t #text-content {\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/canyon2_border.png\");\r\n\t\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t\t\tborder-image-width: 32px; \r\n\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\tpadding-left: 36px; \r\n\t\t\t\t\tpadding-right: 36px; \r\n\t\t\t\t\tpadding-bottom: 6px; \r\n\t\t\t\t\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\tbackground: #fff0;\r\n\t\t\t\t }\r\n\t\t\t #beepboxEditorContainer {\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/canyon2_border.png\");\r\n\t\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t\t\tborder-image-width: 32px; \r\n\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\tpadding-left: 36px; \r\n\t\t\t\t\tpadding-right: 36px; \r\n\t\t\t\t\tpadding-bottom: 6px; \r\n\t\t\t\t\t\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\tbackground: #fff0;\r\n\t\t\t\t }\r\n\t\t\t\r\n\t\t\t\t .beepboxEditor button,\r\n\t\t\t\t button.mobilePatternButton,\r\n\t\t\t\t button.mobileTrackButton,\r\n\t\t\t\t button.mobileSettingsButton,\r\n\t\t\t\t button.mobilePlayButton,\r\n\t\t\t\t button.mobilePauseButton,\r\n\t\t\t\t button.mobileNextBarButton,\r\n\t\t\t\t button.mobilePrevBarButton,\r\n\t\t\t\t button.playButton,\r\n\t\t\t\t button.pauseButton, \r\n\t\t\t\t button.recordButton, \r\n\t\t\t\t button.stopButton,\r\n\t\t\t\t button.nextBarButton, \r\n\t\t\t\t button.prevBarButton, \r\n\t\t\t\t button.copyButton, \r\n\t\t\t\t button.pasteButton, \r\n\t\t\t\t button.exportInstrumentButton, \r\n\t\t\t\t button.importInstrumentButton, \r\n\t\t\t\t .beepboxEditor select, \r\n\t\t\t\t .beepboxEditor .select2-selection__rendered {\r\n\t\t\t\t\t\t border-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/canyon2_button.png\") !important;\r\n\t\t\t\t\t\t border-image-slice: 4 fill !important; \r\n\t\t\t\t\t\tborder-image-width: 4px !important; \r\n\t\t\t\t\t border-image-repeat: stretch !important;\r\n\t\t\t\t\t\t \r\n\t\t\t\r\n\t\t\t\t\t\t image-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\t\t image-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\t\t image-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\t\t image-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\t\t image-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t\t }\r\n\t\t\t\r\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t html {\r\n\t\t\t\t font-family: 'AbyssType';\r\n\t\t\t\t }\r\n\t\t\t\t div.channelBoxLabel {\r\n\t\t\t\t\t font-family: 'AbyssType_small' !important;\r\n\t\t\t\t }\r\n\t\t`,\r\n        \"midnight\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #757575;\r\n\t\t\t--playhead: #fff;\r\n\t\t\t--primary-text: #fff;\r\n\t\t\t--secondary-text: #acacac;\r\n\t\t\t--inverted-text: #290505;\r\n\t\t\t--text-selection: rgba(155, 155, 155, 0.99);\r\n\t\t\t--box-selection-fill: #79797970;\r\n\t\t\t--loop-accent: #646464;\r\n\t\t\t--link-accent: #707070;\r\n\t\t\t--ui-widget-background: #353535;\r\n\t\t\t--ui-widget-focus: #464646;\r\n\t\t\t--pitch-background: #222121;\r\n\t\t\t--tonic: #555955;\r\n\t\t\t--fifth-note: #1a1818;\r\n\t\t\t--third-note: #19141a;\r\n\t\t\t--white-piano-key: #a89e9e;\r\n\t\t\t--black-piano-key: #2d2424;\r\n            --white-piano-key-text: #131200;\r\n            --black-piano-key-text: #ffffff;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #373737;\r\n\t\t\t--track-editor-bg-pitch-dim: #131313;\r\n\t\t\t--track-editor-bg-noise: #484848;\r\n\t\t\t--track-editor-bg-noise-dim: #131313;\r\n\t\t\t--track-editor-bg-mod: #373737;\r\n\t\t\t--track-editor-bg-mod-dim: #131313;\r\n\t\t\t--multiplicative-mod-slider: #555;\r\n\t\t\t--overwriting-mod-slider: #464545;\r\n\t\t\t--indicator-primary: #e0e0e0;\r\n\t\t\t--indicator-secondary: #404040;\r\n\t\t\t--select2-opt-group: #3c3b3b;\r\n\t\t\t--input-box-outline: #757575;\r\n\t\t\t--mute-button-normal: #8e8d8d;\r\n\t\t\t--mute-button-mod: #ddd;\r\n\t\t\t--mod-label-primary: #262526;\r\n\t\t\t--mod-label-secondary-text: rgb(227, 222, 225);\r\n\t\t\t--mod-label-primary-text: #b9b9b9;\r\n\t\t\t--pitch-secondary-channel-hue: 240;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 228;\r\n\t\t\t--pitch-secondary-channel-sat: 73.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 25;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 240;\r\n\t\t\t--pitch-primary-channel-hue-scale: 228;\r\n\t\t\t--pitch-primary-channel-sat: 80;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 60.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 240;\r\n\t\t\t--pitch-secondary-note-hue-scale: 228;\r\n\t\t\t--pitch-secondary-note-sat: 73.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 32;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 240;\r\n\t\t\t--pitch-primary-note-hue-scale: 228;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 80.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 160;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 160;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 160;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 62;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 30;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 62;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 62;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 34;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 62;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 75;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary:    #66a;\r\n\t\t\t--disabled-note-secondary:  #447;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}\r\n\t`,\r\n        \"gold light\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: #cab1d3;\r\n\t\t\t\t\t--editor-background: #f4f4f4;\r\n\t\t\t\t\t--hover-preview: #2d26a2;\r\n\t\t\t\t\t--playhead: rgb(20 25 153 / 90%);\r\n\t\t\t\t\t--primary-text: #b686c3;\r\n\t\t\t\t\t--secondary-text: #970f38;\r\n\t\t\t\t\t--inverted-text: #fefdff;\r\n\t\t\t\t\t--text-selection: rgb(56 21 8 / 99%);\r\n\t\t\t\t\t--box-selection-fill: rgb(20 203 160 / 61%);\r\n\t\t\t\t\t--loop-accent: #09dc0e;\r\n\t\t\t\t\t--link-accent: #3ee669;\r\n\t\t\t\t\t--ui-widget-background: #0e0a42;\r\n\t\t\t\t\t--ui-widget-focus: #380c42;\r\n\t\t\t\t\t--pitch-background: #8daf96;\r\n\t\t\t\t\t--tonic: #a16fb1;\r\n\t\t\t\t\t--fifth-note: #d08c8c;\r\n\t\t\t\t\t--third-note: #486;\r\n\t\t\t\t\t--white-piano-key: #fbffee;\r\n\t\t\t\t\t--black-piano-key: #c9d8e5;\r\n\t\t\t\t\t--white-piano-key-text: #101160;\r\n\t\t\t\t\t--black-piano-key-text: #231b03;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #34456a;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #88afad;\r\n\t\t\t\t\t--track-editor-bg-noise: #564566;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #aaa;\r\n\t\t\t\t\t--track-editor-bg-mod: #7f779d;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #aaa;\r\n\t\t\t\t\t--multiplicative-mod-slider: #807caf;\r\n\t\t\t\t\t--overwriting-mod-slider: #909cdf;\r\n\t\t\t\t\t--indicator-primary: #ae38ff;\r\n\t\t\t\t\t--indicator-secondary: #5c8dbb;\r\n\t\t\t\t\t--select2-opt-group: #581b50;\r\n\t\t\t\t\t--input-box-outline: #6f7074;\r\n\t\t\t\t\t--mute-button-normal: #db1e00;\r\n\t\t\t\t\t--mute-button-mod: #883bf9;\r\n\t\t\t\t\t--mod-label-primary: #525297;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(197 147 245);\r\n\t\t\t\t\t--mod-label-primary-text: #a3aae9;\r\n                    --pitch-secondary-channel-hue: 26;\r\n                    --pitch-secondary-channel-hue-scale: 214.5;\r\n                    --pitch-secondary-channel-sat: 74.3;\r\n                    --pitch-secondary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 55;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 26;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 214.5;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 74;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 65.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 26;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 214.5;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 74.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: -0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 70;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: -0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 26;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 214.5;\r\n\t\t\t\t\t--pitch-primary-note-sat: 85;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 64.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: -0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 220;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 62;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-primary-channel-hue: 220;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 53;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 53.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: -0.1;\r\n\t\t\t\t\t--noise-secondary-note-hue: 220;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 58.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 85;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: -1;\r\n\t\t\t\t\t--noise-primary-note-hue: 220;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 56.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 54;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: -1;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 90;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 60;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 90;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 89;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 65;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 90;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 79;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 95;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 90;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 79;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 55;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary:    #868;\r\n\t\t\t\t\t--disabled-note-secondary:  #767;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.promptContainerBG::before {\r\n\t\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select, button {\r\n\t\t\t\t\tbackground-color: var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbackground-color: var(--secondary-text);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor .piano-button::before {\r\n\t\t\t\t\tdisplay: none;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n        \"amoled dark\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #000;\r\n\t\t\t\t\t--editor-background: #020406;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #8e88ce;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #ad38f9;\r\n\t\t\t\t\t--link-accent: #bd25ff;\r\n\t\t\t\t\t--ui-widget-background: #080d1f;\r\n\t\t\t\t\t--ui-widget-focus: #060f2d;\r\n\t\t\t\t\t--pitch-background: #02060b;\r\n\t\t\t\t\t--tonic: #00113a;\r\n\t\t\t\t\t--fifth-note: #1b0019;\r\n\t\t\t\t\t--third-note: #071a00;\r\n\t\t\t\t\t--white-piano-key: #02040c;\r\n\t\t\t\t\t--black-piano-key: #02040c;\r\n                    --white-piano-key-text: #fff;\r\n                    --black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #050829;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #010213;\r\n\t\t\t\t\t--track-editor-bg-noise: #051529;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #010b13;\r\n\t\t\t\t\t--track-editor-bg-mod: #150529;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a0113;\r\n\t\t\t\t\t--multiplicative-mod-slider: #2b409c;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #7f3bec;\r\n\t\t\t\t\t--indicator-secondary: #213888;\r\n\t\t\t\t\t--select2-opt-group: #1d123c;\r\n\t\t\t\t\t--input-box-outline: #1b1e48;\r\n\t\t\t\t\t--mute-button-normal: #d234b0;\r\n\t\t\t\t\t--mute-button-mod: #263d98;\r\n\t\t\t\t\t--mod-label-primary: #090910;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(73, 69, 214);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 183;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 158.7;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 183;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 158.7;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 183;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 158.7;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 183;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 158.7;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 30;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 30;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 30;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 30;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 0;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--disabled-note-primary: #91879f;\r\n\t\t\t\t\t--disabled-note-secondary: #6a677a;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t`,\r\n        \"beachcombing\": `\r\n\t\t\t:root {\r\n\t\t\t  --page-margin: #010121;\r\n  --editor-background: #020222;\r\n  --hover-preview: #f3ffff;\r\n  --playhead: #fff;\r\n  --primary-text: #c1f1ff;\r\n  --secondary-text: #546775;\r\n  --inverted-text: black;\r\n  --text-selection: rgba(119,68,255,0.99);\r\n  --box-selection-fill: #3e0028;\r\n  --loop-accent: #5e68fffc;\r\n  --link-accent: #ff3ad5fc;\r\n  --ui-widget-background: #1f2b52;\r\n  --ui-widget-focus: #384e91;\r\n  --pitch-background: #2c3155;\r\n  --tonic: #935175;\r\n  --fifth-note: #1f569f;\r\n  --third-note: #704488;\r\n  --white-piano-key: #f3f2ff;\r\n  --black-piano-key: #4b4471;\r\n  --white-piano-key-text: #4b4471;\r\n  --black-piano-key-text: #fff;\r\n  --use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n  --track-editor-bg-pitch: #34406c;\r\n  --track-editor-bg-pitch-dim: #121931;\r\n  --track-editor-bg-noise: #562e3b;\r\n  --track-editor-bg-noise-dim: #161313;\r\n  --track-editor-bg-mod: #372e66;\r\n  --track-editor-bg-mod-dim: #2a1640;\r\n  --multiplicative-mod-slider: #606c9f;\r\n  --overwriting-mod-slider: #6850b5;\r\n  --indicator-primary: #ff8bd1;\r\n  --indicator-secondary: #393e4f;\r\n  --select2-opt-group: #5d576f;\r\n  --input-box-outline: #222;\r\n  --mute-button-normal: #7ce1ff;\r\n  --mute-button-mod: #db519d;\r\n  --pitch1-secondary-channel: #329b70;\r\n  --pitch1-primary-channel: #53ffb8;\r\n  --pitch1-secondary-note: #4cb98c;\r\n  --pitch1-primary-note: #98ffd4;\r\n  --pitch2-secondary-channel: #b08e4d;\r\n  --pitch2-primary-channel: #ffe185;\r\n  --pitch2-secondary-note: #91782e;\r\n  --pitch2-primary-note: #ffd968;\r\n  --pitch3-secondary-channel: #018e8e;\r\n  --pitch3-primary-channel: #3de4ff;\r\n  --pitch3-secondary-note: #24b7b7;\r\n  --pitch3-primary-note: #a7ffff;\r\n  --pitch4-secondary-channel: #792354;\r\n  --pitch4-primary-channel: #ff68bd;\r\n  --pitch4-secondary-note: #a73c78;\r\n  --pitch4-primary-note: #ff98d2;\r\n  --pitch5-secondary-channel: #185aab;\r\n  --pitch5-primary-channel: #6493ff;\r\n  --pitch5-secondary-note: #3e99d9;\r\n  --pitch5-primary-note: #b3e3ff;\r\n  --pitch6-secondary-channel: #953C47;\r\n  --pitch6-primary-channel: #FF7888;\r\n  --pitch6-secondary-note: #DF4F60;\r\n  --pitch6-primary-note: #FFB2BB;\r\n  --pitch7-secondary-channel: #4f007d;\r\n  --pitch7-primary-channel: #a54cd9;\r\n  --pitch7-secondary-note: #732b9d;\r\n  --pitch7-primary-note: #d386ff;\r\n  --pitch8-secondary-channel: #323c99;\r\n  --pitch8-primary-channel: #1b61ff;\r\n  --pitch8-secondary-note: #1848b3;\r\n  --pitch8-primary-note: #6f9bff;\r\n  --pitch9-secondary-channel: #1F605A;\r\n  --pitch9-primary-channel: #69FFEA;\r\n  --pitch9-secondary-note: #178076;\r\n  --pitch9-primary-note: #83FFD9;\r\n  --pitch10-secondary-channel: #6D438C;\r\n  --pitch10-primary-channel: #CE8BFF;\r\n  --pitch10-secondary-note: #8040B0;\r\n  --pitch10-primary-note: #DFACFF;\r\n  --noise1-secondary-channel: #635070;\r\n  --noise1-primary-channel: #9071db;\r\n  --noise1-secondary-note: #915dc1;\r\n  --noise1-primary-note: #c5a5ff;\r\n  --noise2-secondary-channel: #993367;\r\n  --noise2-primary-channel: #dd777c;\r\n  --noise2-secondary-note: #cc6695;\r\n  --noise2-primary-note: #f0bbd1;\r\n  --noise3-secondary-channel: #4a8c8f;\r\n  --noise3-primary-channel: #77c5dd;\r\n  --noise3-secondary-note: #6fb4cf;\r\n  --noise3-primary-note: #bbf2ff;\r\n  --noise4-secondary-channel: #8e3e7d;\r\n  --noise4-primary-channel: #c682d2;\r\n  --noise4-secondary-note: #b871c1;\r\n  --noise4-primary-note: #ffb8f0;\r\n  --noise5-secondary-channel: #785e37;\r\n  --noise5-primary-channel: #bb9d77;\r\n  --noise5-secondary-note: #aa8c66;\r\n  --noise5-primary-note: #e2d1b2;\r\n  --mod1-secondary-channel: #4e8397;\r\n  --mod1-primary-channel: #92e6f3;\r\n  --mod1-secondary-note: #76b9d9;\r\n  --mod1-primary-note: #cde3ff;\r\n  --mod2-secondary-channel: #ad5774;\r\n  --mod2-primary-channel: #eba4ae;\r\n  --mod2-secondary-note: #c9719b;\r\n  --mod2-primary-note: #fdcee7;\r\n  --mod3-secondary-channel: #6f579f;\r\n  --mod3-primary-channel: #b192f7;\r\n  --mod3-secondary-note: #7c3fc8;\r\n  --mod3-primary-note: #f8ddff;\r\n  --mod4-secondary-channel: #a88a36;\r\n  --mod4-primary-channel: #bec825;\r\n  --mod4-secondary-note: #aecb57;\r\n  --mod4-primary-note: #dee9bd;\r\n  --mod-label-primary: #2c2c56;\r\n  --mod-label-secondary-text: rgb(71,69,147);\r\n  --mod-label-primary-text: white;\r\n  --disabled-note-primary: #91879f;\r\n  --disabled-note-secondary: #6a677a;\r\n\r\n  \r\n  \r\n\r\n\t\t\t}\r\n\t\t`,\r\n        \"roe\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: #050000;\r\n\t\t\t--editor-background: #050000;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #b8cee0;\r\n\t\t\t--secondary-text: #cb3434;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(255 68 68 / 99%);\r\n\t\t\t--box-selection-fill: rgb(255 0 0 / 30%);\r\n\t\t\t--loop-accent: #7744FF;\r\n\t\t\t--link-accent: #FF2A2A;\r\n\t\t\t--ui-widget-background: #1a2642;\r\n\t\t\t--ui-widget-focus: #2c3f6d;\r\n\t\t\t--pitch-background: #15111a;\r\n\t\t\t--tonic: #1b3041;\r\n\t\t\t--fifth-note: #381818;\r\n\t\t\t--third-note: #733f30;\r\n\t\t\t--white-piano-key: #cdcdcd;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #302938;\r\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\r\n\t\t\t--track-editor-bg-noise: #261f42;\r\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\r\n\t\t\t--track-editor-bg-mod: #183049;\r\n\t\t\t--track-editor-bg-mod-dim: #102132;\r\n\t\t\t--multiplicative-mod-slider: #344a7f;\r\n\t\t\t--overwriting-mod-slider: #344a7f;\r\n\t\t\t--indicator-primary: #FF2A2A;\r\n\t\t\t--indicator-secondary: #800000;\r\n\t\t\t--select2-opt-group: #141e34;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #299eff;\r\n\t\t\t--mute-button-mod: #165a93;\r\n\t\t\t--pitch1-secondary-channel: #273c90;\r\n\t\t\t--pitch1-primary-channel: #476BFF;\r\n\t\t\t--pitch1-secondary-note: #273c90;\r\n\t\t\t--pitch1-primary-note: #476BFF;\r\n\t\t\t--pitch2-secondary-channel: #3a3898;\r\n\t\t\t--pitch2-primary-channel: #625FFB;\r\n\t\t\t--pitch2-secondary-note: #3a3898;\r\n\t\t\t--pitch2-primary-note: #625FFB;\r\n\t\t\t--pitch3-secondary-channel: #542780;\r\n\t\t\t--pitch3-primary-channel: #9C49EC;\r\n\t\t\t--pitch3-secondary-note: #542780;\r\n\t\t\t--pitch3-primary-note: #9C49EC;\r\n\t\t\t--pitch4-secondary-channel: #84225d;\r\n\t\t\t--pitch4-primary-channel: #fd3fb1;\r\n\t\t\t--pitch4-secondary-note: #84225d;\r\n\t\t\t--pitch4-primary-note: #fd3fb1;\r\n\t\t\t--pitch5-secondary-channel: #8d2323;\r\n\t\t\t--pitch5-primary-channel: #ff3f3f;\r\n\t\t\t--pitch5-secondary-note: #8d2323;\r\n\t\t\t--pitch5-primary-note: #ff3f3f;\r\n\t\t\t--pitch6-secondary-channel: #84225d;\r\n\t\t\t--pitch6-primary-channel: #fd3fb1;\r\n\t\t\t--pitch6-secondary-note: #84225d;\r\n\t\t\t--pitch6-primary-note: #fd3fb1;\r\n\t\t\t--pitch7-secondary-channel: #542780;\r\n\t\t\t--pitch7-primary-channel: #9C49EC;\r\n\t\t\t--pitch7-secondary-note: #542780;\r\n\t\t\t--pitch7-primary-note: #9C49EC;\r\n\t\t\t--pitch8-secondary-channel: #3a3898;\r\n\t\t\t--pitch8-primary-channel: #625FFB;\r\n\t\t\t--pitch8-secondary-note: #3a3898;\r\n\t\t\t--pitch8-primary-note: #625FFB;\r\n\t\t\t--pitch9-secondary-channel: #273c90;\r\n\t\t\t--pitch9-primary-channel: #476BFF;\r\n\t\t\t--pitch9-secondary-note: #273c90;\r\n\t\t\t--pitch9-primary-note: #476BFF;\r\n\t\t\t--pitch10-secondary-channel: #165a93;\r\n\t\t\t--pitch10-primary-channel: #299EFF;\r\n\t\t\t--pitch10-secondary-note: #165a93;\r\n\t\t\t--pitch10-primary-note: #299EFF;\r\n\t\t\t--noise1-secondary-channel: #4281FF;\r\n\t\t\t--noise1-primary-channel: #96b9ff;\r\n\t\t\t--noise1-secondary-note: #4281FF;\r\n\t\t\t--noise1-primary-note: #96b9ff;\r\n\t\t\t--noise2-secondary-channel: #7347FF;\r\n\t\t\t--noise2-primary-channel: #c3b0ff;\r\n\t\t\t--noise2-secondary-note: #7347FF;\r\n\t\t\t--noise2-primary-note: #c3b0ff;\r\n\t\t\t--noise3-secondary-channel: #9F3CBF;\r\n\t\t\t--noise3-primary-channel: #e29cf9;\r\n\t\t\t--noise3-secondary-note: #9F3CBF;\r\n\t\t\t--noise3-primary-note: #e29cf9;\r\n\t\t\t--noise4-secondary-channel: #D3326F;\r\n\t\t\t--noise4-primary-channel: #fb9bbf;\r\n\t\t\t--noise4-secondary-note: #D3326F;\r\n\t\t\t--noise4-primary-note: #fb9bbf;\r\n\t\t\t--noise5-secondary-channel: #FF2A2A;\r\n\t\t\t--noise5-primary-channel: #ffa2a2;\r\n\t\t\t--noise5-secondary-note: #FF2A2A;\r\n\t\t\t--noise5-primary-note: #ffa2a2;\r\n\t\t\t--mod1-secondary-channel: #47587a;\r\n\t\t\t--mod1-primary-channel: #96b9ff;\r\n\t\t\t--mod1-secondary-note: #47587a;\r\n\t\t\t--mod1-primary-note: #96b9ff;\r\n\t\t\t--mod2-secondary-channel: #716791;\r\n\t\t\t--mod2-primary-channel: #c3b0ff;\r\n\t\t\t--mod2-secondary-note: #716791;\r\n\t\t\t--mod2-primary-note: #c3b0ff;\r\n\t\t\t--mod3-secondary-channel: #6f4c7b;\r\n\t\t\t--mod3-primary-channel: #e29cf9;\r\n\t\t\t--mod3-secondary-note: #6f4c7b;\r\n\t\t\t--mod3-primary-note: #e29cf9;\r\n\t\t\t--mod4-secondary-channel: #9e6279;\r\n\t\t\t--mod4-primary-channel: #fb9bbf;\r\n\t\t\t--mod4-secondary-note: #9e6279;\r\n\t\t\t--mod4-primary-note: #fb9bbf;\r\n\t\t\t--mod-label-primary: #15111a;\r\n\t\t\t--mod-label-secondary-text: #cb3434;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #c9c9c9;\r\n\t\t\t--disabled-note-secondary: #616161;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"moonlight\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: #020514;\r\n\t\t\t--editor-background: #020514;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #D4DCE9;\r\n\t\t\t--secondary-text: #3E87DA;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #03599bd9;\r\n\t\t\t--box-selection-fill: hsl(206deg 66% 41% / 85%);\r\n\t\t\t--loop-accent: #639BD6;\r\n\t\t\t--link-accent: #A8C6E8;\r\n\t\t\t--ui-widget-background: #1e2940;\r\n\t\t\t--ui-widget-focus: #324b81;\r\n\t\t\t--pitch-background: #223849;\r\n\t\t\t--tonic: #33536c;\r\n\t\t\t--fifth-note: hsl(206deg 36% 16%);\r\n\t\t\t--third-note: #528d9b;\r\n\t\t\t--white-piano-key: #c1bfe9;\r\n\t\t\t--black-piano-key: #454354;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #25568d80;\r\n\t\t\t--track-editor-bg-pitch-dim: #10253c80;\r\n\t\t\t--track-editor-bg-noise: #25568d80;\r\n\t\t\t--track-editor-bg-noise-dim: #10253c80;\r\n\t\t\t--track-editor-bg-mod: #25568d80;\r\n\t\t\t--track-editor-bg-mod-dim: #10253c80;\r\n\t\t\t--multiplicative-mod-slider: #0476cd;\r\n\t\t\t--overwriting-mod-slider: #035899;\r\n\t\t\t--indicator-primary: #57a1f4;\r\n\t\t\t--indicator-secondary: #2e5684;\r\n\t\t\t--select2-opt-group: #24355c;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #6ebffc;\r\n\t\t\t--mute-button-mod: #0a92fa;\r\n\t\t\t--pitch1-secondary-channel: #47425c;\r\n\t\t\t--pitch1-primary-channel: #918bac;\r\n\t\t\t--pitch1-secondary-note: #6b6489;\r\n\t\t\t--pitch1-primary-note: #a8a3bf;\r\n\t\t\t--pitch2-secondary-channel: #626493;\r\n\t\t\t--pitch2-primary-channel: #bdbed3;\r\n\t\t\t--pitch2-secondary-note: #626493;\r\n\t\t\t--pitch2-primary-note: #bdbed3;\r\n\t\t\t--pitch3-secondary-channel: #6e89b4;\r\n\t\t\t--pitch3-primary-channel: #d4dce9;\r\n\t\t\t--pitch3-secondary-note: #6e89b4;\r\n\t\t\t--pitch3-primary-note: #d4dce9;\r\n\t\t\t--pitch4-secondary-channel: #4c77a9;\r\n\t\t\t--pitch4-primary-channel: #a8c6e8;\r\n\t\t\t--pitch4-secondary-note: #4c77a9;\r\n\t\t\t--pitch4-primary-note: #a8c6e8;\r\n\t\t\t--pitch5-secondary-channel: #314e6d;\r\n\t\t\t--pitch5-primary-channel: #639bd6;\r\n\t\t\t--pitch5-secondary-note: #46698f;\r\n\t\t\t--pitch5-primary-note: #639bd6;\r\n\t\t\t--pitch6-secondary-channel: #143d6b;\r\n\t\t\t--pitch6-primary-channel: #3e87da;\r\n\t\t\t--pitch6-secondary-note: #143d6b;\r\n\t\t\t--pitch6-primary-note: #3e87da;\r\n\t\t\t--pitch7-secondary-channel: #314e6d;\r\n\t\t\t--pitch7-primary-channel: #639bd6;\r\n\t\t\t--pitch7-secondary-note: #314e6d;\r\n\t\t\t--pitch7-primary-note: #639bd6;\r\n\t\t\t--pitch8-secondary-channel: #4c77a9;\r\n\t\t\t--pitch8-primary-channel: #a8c6e8;\r\n\t\t\t--pitch8-secondary-note: #4c77a9;\r\n\t\t\t--pitch8-primary-note: #a8c6e8;\r\n\t\t\t--pitch9-secondary-channel: #6e89b4;\r\n\t\t\t--pitch9-primary-channel: #d4dce9;\r\n\t\t\t--pitch9-secondary-note: #6e89b4;\r\n\t\t\t--pitch9-primary-note: #d4dce9;\r\n\t\t\t--pitch10-secondary-channel: #626493;\r\n\t\t\t--pitch10-primary-channel: #bdbed3;\r\n\t\t\t--pitch10-secondary-note: #626493;\r\n\t\t\t--pitch10-primary-note: #bdbed3;\r\n\t\t\t--noise1-secondary-channel: #4b4a55;\r\n\t\t\t--noise1-primary-channel: #9795a3;\r\n\t\t\t--noise1-secondary-note: #4b4a55;\r\n\t\t\t--noise1-primary-note: #9795a3;\r\n\t\t\t--noise2-secondary-channel: #858e9d;\r\n\t\t\t--noise2-primary-channel: #d7dce5;\r\n\t\t\t--noise2-secondary-note: #858e9d;\r\n\t\t\t--noise2-primary-note: #d7dce5;\r\n\t\t\t--noise3-secondary-channel: #394e65;\r\n\t\t\t--noise3-primary-channel: #809bb7;\r\n\t\t\t--noise3-secondary-note: #394e65;\r\n\t\t\t--noise3-primary-note: #809bb7;\r\n\t\t\t--noise4-secondary-channel: #37577b;\r\n\t\t\t--noise4-primary-channel: #6189b8;\r\n\t\t\t--noise4-secondary-note: #37577b;\r\n\t\t\t--noise4-primary-note: #6189b8;\r\n\t\t\t--noise5-secondary-channel: #223849;\r\n\t\t\t--noise5-primary-channel: #5588af;\r\n\t\t\t--noise5-secondary-note: #223849;\r\n\t\t\t--noise5-primary-note: #5588af;\r\n\t\t\t--mod1-secondary-channel: #3e336c;\r\n\t\t\t--mod1-primary-channel: #6d60a4;\r\n\t\t\t--mod1-secondary-note: #3e336c;\r\n\t\t\t--mod1-primary-note: #6d60a4;\r\n\t\t\t--mod2-secondary-channel: #716791;\r\n\t\t\t--mod2-primary-channel: #bdbed3;\r\n\t\t\t--mod2-secondary-note: #716791;\r\n\t\t\t--mod2-primary-note: #bdbed3;\r\n\t\t\t--mod3-secondary-channel: #6b91bd;\r\n\t\t\t--mod3-primary-channel: #4b8fdd;\r\n\t\t\t--mod3-secondary-note: #597ca7;\r\n\t\t\t--mod3-primary-note: #7eade3;\r\n\t\t\t--mod4-secondary-channel: #14559f;\r\n\t\t\t--mod4-primary-channel: #3386e6;\r\n\t\t\t--mod4-secondary-note: #14559f;\r\n\t\t\t--mod4-primary-note: #3386e6;\r\n\t\t\t--mod-label-primary: #1e2940;\r\n\t\t\t--mod-label-secondary-text: #748ebe;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #828282;\r\n\t\t\t--disabled-note-secondary: #4f4f4f;\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"autumn\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #060304;\r\n\t\t\t--editor-background: #060304;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(115 80 76);\r\n\t\t\t--box-selection-fill: rgb(174 73 81 / 45%);\r\n\t\t\t--loop-accent: #834A69;\r\n\t\t\t--link-accent: #98f;\r\n\t\t\t--ui-widget-background: #2a2523;\r\n\t\t\t--ui-widget-focus: #4e4c44;\r\n\t\t\t--pitch-background: #121212;\r\n\t\t\t--tonic: #4f4f4f;\r\n\t\t\t--fifth-note: #222;\r\n\t\t\t--third-note: #778473;\r\n\t\t\t--white-piano-key: #b59b9b;\r\n\t\t\t--black-piano-key: #231e1e;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #352f38;\r\n\t\t\t--track-editor-bg-pitch-dim: #232025;\r\n\t\t\t--track-editor-bg-noise: #3c3029;\r\n\t\t\t--track-editor-bg-noise-dim: #251d19;\r\n\t\t\t--track-editor-bg-mod: #202623;\r\n\t\t\t--track-editor-bg-mod-dim: #131715;\r\n\t\t\t--multiplicative-mod-slider: #D9D16E;\r\n\t\t\t--overwriting-mod-slider: #2D826F;\r\n\t\t\t--indicator-primary: #D9D16E;\r\n\t\t\t--indicator-secondary: #444226;\r\n\t\t\t--select2-opt-group: #20191c;\r\n\t\t\t--input-box-outline: #20191c;\r\n\t\t\t--mute-button-normal: var(--pitch2-primary-channel);\r\n\t\t\t--mute-button-mod: var(--pitch4-primary-channel);\r\n\t\t\t--pitch1-secondary-channel: #704a34;\r\n\t\t\t--pitch1-primary-channel: #D9895A;\r\n\t\t\t--pitch1-secondary-note: #704a34;\r\n\t\t\t--pitch1-primary-note: #D9895A;\r\n\t\t\t--pitch2-secondary-channel: #5f3538;\r\n\t\t\t--pitch2-primary-channel: #AE4951;\r\n\t\t\t--pitch2-secondary-note: #5f3538;\r\n\t\t\t--pitch2-primary-note: #AE4951;\r\n\t\t\t--pitch3-secondary-channel: #5c4336;\r\n\t\t\t--pitch3-primary-channel: #CA9A81;\r\n\t\t\t--pitch3-secondary-note: #5c4336;\r\n\t\t\t--pitch3-primary-note: #CA9A81;\r\n\t\t\t--pitch4-secondary-channel: #1d3143;\r\n\t\t\t--pitch4-primary-channel: #386995;\r\n\t\t\t--pitch4-secondary-note: #1d3143;\r\n\t\t\t--pitch4-primary-note: #386995;\r\n\t\t\t--pitch5-secondary-channel: #9c8a58;\r\n\t\t\t--pitch5-primary-channel: #D9D16E;\r\n\t\t\t--pitch5-secondary-note: #7c783f;\r\n\t\t\t--pitch5-primary-note: #D9D16E;\r\n\t\t\t--pitch6-secondary-channel: #886562;\r\n\t\t\t--pitch6-primary-channel: #D3A9A5;\r\n\t\t\t--pitch6-secondary-note: #886562;\r\n\t\t\t--pitch6-primary-note: #D3A9A5;\r\n\t\t\t--pitch7-secondary-channel: #1c3f37;\r\n\t\t\t--pitch7-primary-channel: #2D826F;\r\n\t\t\t--pitch7-secondary-note: #1c3f37;\r\n\t\t\t--pitch7-primary-note: #2D826F;\r\n\t\t\t--pitch8-secondary-channel: #442e2d;\r\n\t\t\t--pitch8-primary-channel: #815150;\r\n\t\t\t--pitch8-secondary-note: #442e2d;\r\n\t\t\t--pitch8-primary-note: #815150;\r\n\t\t\t--pitch9-secondary-channel: #8e6f60;\r\n\t\t\t--pitch9-primary-channel: #E5B8A1;\r\n\t\t\t--pitch9-secondary-note: #8e6f60;\r\n\t\t\t--pitch9-primary-note: #E5B8A1;\r\n\t\t\t--pitch10-secondary-channel: #4f3142;\r\n\t\t\t--pitch10-primary-channel: #834A69;\r\n\t\t\t--pitch10-secondary-note: #4f3142;\r\n\t\t\t--pitch10-primary-note: #834A69;\r\n\t\t\t--noise1-secondary-channel: #6b5346;\r\n\t\t\t--noise1-primary-channel: #b99c89;\r\n\t\t\t--noise1-secondary-note: #6b5346;\r\n\t\t\t--noise1-primary-note: #F0D0BB;\r\n\t\t\t--noise2-secondary-channel: #4a3839;\r\n\t\t\t--noise2-primary-channel: #9c6b6e;\r\n\t\t\t--noise2-secondary-note: #4a3839;\r\n\t\t\t--noise2-primary-note: #c18b8f;\r\n\t\t\t--noise3-secondary-channel: #2d3c4a;\r\n\t\t\t--noise3-primary-channel: #536e86;\r\n\t\t\t--noise3-secondary-note: #2d3c4a;\r\n\t\t\t--noise3-primary-note: #8fa8c0;\r\n\t\t\t--noise4-secondary-channel: #273f3a;\r\n\t\t\t--noise4-primary-channel: #4e8377;\r\n\t\t\t--noise4-secondary-note: #273f3a;\r\n\t\t\t--noise4-primary-note: #87baae;\r\n\t\t\t--noise5-secondary-channel: #372730;\r\n\t\t\t--noise5-primary-channel: #7f5e70;\r\n\t\t\t--noise5-secondary-note: #372730;\r\n\t\t\t--noise5-primary-note: #cc96b3;\r\n\t\t\t--mod1-secondary-channel: #783f1f;\r\n\t\t\t--mod1-primary-channel: #dc6d2c;\r\n\t\t\t--mod1-secondary-note: #783f1f;\r\n\t\t\t--mod1-primary-note: #dc6d2c;\r\n\t\t\t--mod2-secondary-channel: #0b3153;\r\n\t\t\t--mod2-primary-channel: #1464ac;\r\n\t\t\t--mod2-secondary-note: #0b3153;\r\n\t\t\t--mod2-primary-note: #1464ac;\r\n\t\t\t--mod3-secondary-channel: #075040;\r\n\t\t\t--mod3-primary-channel: #08a17f;\r\n\t\t\t--mod3-secondary-note: #075040;\r\n\t\t\t--mod3-primary-note: #08a17f;\r\n\t\t\t--mod4-secondary-channel: #631640;\r\n\t\t\t--mod4-primary-channel: #b4186d;\r\n\t\t\t--mod4-secondary-note: #631640;\r\n\t\t\t--mod4-primary-note: #b4186d;\r\n\t\t\t--mod-label-primary: #000;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"fruit\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #040507;\r\n\t\t\t--editor-background: #040507;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(115 103 76);\r\n\t\t\t--box-selection-fill: rgb(174 109 73 / 45%);\r\n\t\t\t--loop-accent: #EC897D;\r\n\t\t\t--link-accent: #FDE484;\r\n\t\t\t--ui-widget-background: #22222c;\r\n\t\t\t--ui-widget-focus: #39394c;\r\n\t\t\t--pitch-background: #101010;\r\n\t\t\t--tonic: #2c2d34;\r\n\t\t\t--fifth-note: #191a20;\r\n\t\t\t--third-note: #1f241e;\r\n\t\t\t--white-piano-key: #bbbaba;\r\n\t\t\t--black-piano-key: #2d2d2d;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #2b2d40;\r\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\r\n\t\t\t--track-editor-bg-noise: #3c3644;\r\n\t\t\t--track-editor-bg-noise-dim: #26222b;\r\n\t\t\t--track-editor-bg-mod: #322a2a;\r\n\t\t\t--track-editor-bg-mod-dim: #191515;\r\n\t\t\t--multiplicative-mod-slider: #977da9;\r\n\t\t\t--overwriting-mod-slider: #798FA7;\r\n\t\t\t--indicator-primary: #EAAC9D;\r\n\t\t\t--indicator-secondary: #5e413a;\r\n\t\t\t--select2-opt-group: #191920;\r\n\t\t\t--input-box-outline: #191920;\r\n\t\t\t--mute-button-normal: #798FA7;\r\n\t\t\t--mute-button-mod: #354457;\r\n\t\t\t--pitch1-secondary-channel: #91655a;\r\n\t\t\t--pitch1-primary-channel: #EAAC9D;\r\n\t\t\t--pitch1-secondary-note: #91655a;\r\n\t\t\t--pitch1-primary-note: #EAAC9D;\r\n\t\t\t--pitch2-secondary-channel: #8f6513;\r\n\t\t\t--pitch2-primary-channel: #FFAF12;\r\n\t\t\t--pitch2-secondary-note: #8f6513;\r\n\t\t\t--pitch2-primary-note: #FFAF12;\r\n\t\t\t--pitch3-secondary-channel: #212f46;\r\n\t\t\t--pitch3-primary-channel: #34558B;\r\n\t\t\t--pitch3-secondary-note: #212f46;\r\n\t\t\t--pitch3-primary-note: #34558B;\r\n\t\t\t--pitch4-secondary-channel: #2e6b5b;\r\n\t\t\t--pitch4-primary-channel: #4EC5A7;\r\n\t\t\t--pitch4-secondary-note: #2e6b5b;\r\n\t\t\t--pitch4-primary-note: #4EC5A7;\r\n\t\t\t--pitch5-secondary-channel: #555D46;\r\n\t\t\t--pitch5-primary-channel: #aabf84;\r\n\t\t\t--pitch5-secondary-note: #555D46;\r\n\t\t\t--pitch5-primary-note: #aabf84;\r\n\t\t\t--pitch6-secondary-channel: #A2553B;\r\n\t\t\t--pitch6-primary-channel: #e59a81;\r\n\t\t\t--pitch6-secondary-note: #A2553B;\r\n\t\t\t--pitch6-primary-note: #e59a81;\r\n\t\t\t--pitch7-secondary-channel: #7b4021;\r\n\t\t\t--pitch7-primary-channel: #FE813E;\r\n\t\t\t--pitch7-secondary-note: #7b4021;\r\n\t\t\t--pitch7-primary-note: #FE813E;\r\n\t\t\t--pitch8-secondary-channel: #847753;\r\n\t\t\t--pitch8-primary-channel: #EFDAA3;\r\n\t\t\t--pitch8-secondary-note: #847753;\r\n\t\t\t--pitch8-primary-note: #EFDAA3;\r\n\t\t\t--pitch9-secondary-channel: #2c3642;\r\n\t\t\t--pitch9-primary-channel: #798FA7;\r\n\t\t\t--pitch9-secondary-note: #2c3642;\r\n\t\t\t--pitch9-primary-note: #798FA7;\r\n\t\t\t--pitch10-secondary-channel: #0d4453;\r\n\t\t\t--pitch10-primary-channel: #107895;\r\n\t\t\t--pitch10-secondary-note: #0d4453;\r\n\t\t\t--pitch10-primary-note: #107895;\r\n\t\t\t--noise1-secondary-channel: #71617C;\r\n\t\t\t--noise1-primary-channel: #977da9;\r\n\t\t\t--noise1-secondary-note: #71617C;\r\n\t\t\t--noise1-primary-note: #977da9;\r\n\t\t\t--noise2-secondary-channel: #3B3D4A;\r\n\t\t\t--noise2-primary-channel: #707591;\r\n\t\t\t--noise2-secondary-note: #3B3D4A;\r\n\t\t\t--noise2-primary-note: #707591;\r\n\t\t\t--noise3-secondary-channel: #625f5e;\r\n\t\t\t--noise3-primary-channel: #A19D9C;\r\n\t\t\t--noise3-secondary-note: #625f5e;\r\n\t\t\t--noise3-primary-note: #A19D9C;\r\n\t\t\t--noise4-secondary-channel: #ab847b;\r\n\t\t\t--noise4-primary-channel: #EAAC9D;\r\n\t\t\t--noise4-secondary-note: #ab847b;\r\n\t\t\t--noise4-primary-note: #EAAC9D;\r\n\t\t\t--noise5-secondary-channel: #B49D74;\r\n\t\t\t--noise5-primary-channel: #dec69b;\r\n\t\t\t--noise5-secondary-note: #B49D74;\r\n\t\t\t--noise5-primary-note: #dec69b;\r\n\t\t\t--mod1-secondary-channel: #722124;\r\n\t\t\t--mod1-primary-channel: #D13A41;\r\n\t\t\t--mod1-secondary-note: #722124;\r\n\t\t\t--mod1-primary-note: #D13A41;\r\n\t\t\t--mod2-secondary-channel: #213657;\r\n\t\t\t--mod2-primary-channel: #34558B;\r\n\t\t\t--mod2-secondary-note: #213657;\r\n\t\t\t--mod2-primary-note: #34558B;\r\n\t\t\t--mod3-secondary-channel: #555D46;\r\n\t\t\t--mod3-primary-channel: #848f6d;\r\n\t\t\t--mod3-secondary-note: #555D46;\r\n\t\t\t--mod3-primary-note: #848f6d;\r\n\t\t\t--mod4-secondary-channel: #71617C;\r\n\t\t\t--mod4-primary-channel: #a68ab9;\r\n\t\t\t--mod4-secondary-note: #71617C;\r\n\t\t\t--mod4-primary-note: #a68ab9;\r\n\t\t\t--mod-label-primary: #282828;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"sunset\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #040300;\r\n\t\t\t--editor-background: #040300;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(94 0 157);\r\n\t\t\t--box-selection-fill: rgb(174 173 73 / 45%);\r\n\t\t\t--loop-accent: #EC897D;\r\n\t\t\t--link-accent: #FDE484;\r\n\t\t\t--ui-widget-background: #241b24;\r\n\t\t\t--ui-widget-focus: #3a2e39;\r\n\t\t\t--pitch-background: #141414;\r\n\t\t\t--tonic: #2C212B;\r\n\t\t\t--fifth-note: #2E2A15;\r\n\t\t\t--third-note: #1f2b1a;\r\n\t\t\t--white-piano-key: #bbbaba;\r\n\t\t\t--black-piano-key: #2d2d2d;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #2d2e42;\r\n\t\t\t--track-editor-bg-pitch-dim: #191a25;\r\n\t\t\t--track-editor-bg-noise: #393340;\r\n\t\t\t--track-editor-bg-noise-dim: #26222b;\r\n\t\t\t--track-editor-bg-mod: #232a2c;\r\n\t\t\t--track-editor-bg-mod-dim: #151819;\r\n\t\t\t--multiplicative-mod-slider: #977da9;\r\n\t\t\t--overwriting-mod-slider: #798FA7;\r\n\t\t\t--indicator-primary: #F28891;\r\n\t\t\t--indicator-secondary: #601d23;\r\n\t\t\t--select2-opt-group: #151015;\r\n\t\t\t--input-box-outline: #151015;\r\n\t\t\t--mute-button-normal: #E4739D;\r\n\t\t\t--mute-button-mod: #9650A6;\r\n\t\t\t--pitch1-secondary-channel: #7F7721;\r\n\t\t\t--pitch1-primary-channel: #F3E79A;\r\n\t\t\t--pitch1-secondary-note: #7F7721;\r\n\t\t\t--pitch1-primary-note: #F3E79A;\r\n\t\t\t--pitch2-secondary-channel: #785E20;\r\n\t\t\t--pitch2-primary-channel: #F7D086;\r\n\t\t\t--pitch2-secondary-note: #785E20;\r\n\t\t\t--pitch2-primary-note: #F7D086;\r\n\t\t\t--pitch3-secondary-channel: #6E4219;\r\n\t\t\t--pitch3-primary-channel: #F9B881;\r\n\t\t\t--pitch3-secondary-note: #6E4219;\r\n\t\t\t--pitch3-primary-note: #F9B881;\r\n\t\t\t--pitch4-secondary-channel: #79351F;\r\n\t\t\t--pitch4-primary-channel: #F7A086;\r\n\t\t\t--pitch4-secondary-note: #79351F;\r\n\t\t\t--pitch4-primary-note: #F7A086;\r\n\t\t\t--pitch5-secondary-channel: #81272F;\r\n\t\t\t--pitch5-primary-channel: #F28891;\r\n\t\t\t--pitch5-secondary-note: #81272F;\r\n\t\t\t--pitch5-primary-note: #F28891;\r\n\t\t\t--pitch6-secondary-channel: #8F224D;\r\n\t\t\t--pitch6-primary-channel: #E4739D;\r\n\t\t\t--pitch6-secondary-note: #8F224D;\r\n\t\t\t--pitch6-primary-note: #E4739D;\r\n\t\t\t--pitch7-secondary-channel: #611548;\r\n\t\t\t--pitch7-primary-channel: #CF63A6;\r\n\t\t\t--pitch7-secondary-note: #611548;\r\n\t\t\t--pitch7-primary-note: #CF63A6;\r\n\t\t\t--pitch8-secondary-channel: #561253;\r\n\t\t\t--pitch8-primary-channel: #B557A9;\r\n\t\t\t--pitch8-secondary-note: #4D104A;\r\n\t\t\t--pitch8-primary-note: #B557A9;\r\n\t\t\t--pitch9-secondary-channel: #4c1260;\r\n\t\t\t--pitch9-primary-channel: #9650A6;\r\n\t\t\t--pitch9-secondary-note: #3C0F4C;\r\n\t\t\t--pitch9-primary-note: #9650A6;\r\n\t\t\t--pitch10-secondary-channel: #3e1d78;\r\n\t\t\t--pitch10-primary-channel: #704D9E;\r\n\t\t\t--pitch10-secondary-note: #27124C;\r\n\t\t\t--pitch10-primary-note: #704D9E;\r\n\t\t\t--noise1-secondary-channel: #A7A578;\r\n\t\t\t--noise1-primary-channel: #EFE9AC;\r\n\t\t\t--noise1-secondary-note: #A7A578;\r\n\t\t\t--noise1-primary-note: #EFE9AC;\r\n\t\t\t--noise2-secondary-channel: #947A5F;\r\n\t\t\t--noise2-primary-channel: #FBCEA8;\r\n\t\t\t--noise2-secondary-note: #947A5F;\r\n\t\t\t--noise2-primary-note: #FBCEA8;\r\n\t\t\t--noise3-secondary-channel: #A3635D;\r\n\t\t\t--noise3-primary-channel: #F4A5AB;\r\n\t\t\t--noise3-secondary-note: #A3635D;\r\n\t\t\t--noise3-primary-note: #F4A5AB;\r\n\t\t\t--noise4-secondary-channel: #724D60;\r\n\t\t\t--noise4-primary-channel: #CD90B6;\r\n\t\t\t--noise4-secondary-note: #724D60;\r\n\t\t\t--noise4-primary-note: #CD90B6;\r\n\t\t\t--noise5-secondary-channel: #503F5C;\r\n\t\t\t--noise5-primary-channel: #7C6A9E;\r\n\t\t\t--noise5-secondary-note: #503F5C;\r\n\t\t\t--noise5-primary-note: #7C6A9E;\r\n\t\t\t--mod1-secondary-channel: #371883;\r\n\t\t\t--mod1-primary-channel: #6416C6;\r\n\t\t\t--mod1-secondary-note: #1F0A52;\r\n\t\t\t--mod1-primary-note: #6416C6;\r\n\t\t\t--mod2-secondary-channel: #690645;\r\n\t\t\t--mod2-primary-channel: #E52FA2;\r\n\t\t\t--mod2-secondary-note: #690645;\r\n\t\t\t--mod2-primary-note: #E52FA2;\r\n\t\t\t--mod3-secondary-channel: #943618;\r\n\t\t\t--mod3-primary-channel: #eb5b2c;\r\n\t\t\t--mod3-secondary-note: #943618;\r\n\t\t\t--mod3-primary-note: #eb5b2c;\r\n\t\t\t--mod4-secondary-channel: #928409;\r\n\t\t\t--mod4-primary-channel: #ecd50e;\r\n\t\t\t--mod4-secondary-note: #928409;\r\n\t\t\t--mod4-primary-note: #ecd50e;\r\n\t\t\t--mod-label-primary: #282828;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"toxic\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #010003;\r\n\t\t\t--editor-background: #010003;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(147 195 0);\r\n\t\t\t--box-selection-fill: rgb(145 174 73 / 49%);\r\n\t\t\t--loop-accent: #BCDE2C;\r\n\t\t\t--link-accent: #edff9f;\r\n\t\t\t--ui-widget-background: #261e2e;\r\n\t\t\t--ui-widget-focus: #322042;\r\n\t\t\t--pitch-background: #141c15;\r\n\t\t\t--tonic: #282c21;\r\n\t\t\t--fifth-note: #18221a;\r\n\t\t\t--third-note: #25421a;\r\n\t\t\t--white-piano-key: #e3e3e3;\r\n\t\t\t--black-piano-key: #2d2d2d;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #38293e;\r\n\t\t\t--track-editor-bg-pitch-dim: #251c29;\r\n\t\t\t--track-editor-bg-noise: #2c304c;\r\n\t\t\t--track-editor-bg-noise-dim: #191b2b;\r\n\t\t\t--track-editor-bg-mod: #311b32;\r\n\t\t\t--track-editor-bg-mod-dim: #1d101e;\r\n\t\t\t--multiplicative-mod-slider: #977da9;\r\n\t\t\t--overwriting-mod-slider: #798FA7;\r\n\t\t\t--indicator-primary: #aae9ff;\r\n\t\t\t--indicator-secondary: #253e46;\r\n\t\t\t--select2-opt-group: #110d15;\r\n\t\t\t--input-box-outline: #110d15;\r\n\t\t\t--mute-button-normal: #8f5ad1;\r\n\t\t\t--mute-button-mod: #482574;\r\n\t\t\t--pitch1-secondary-channel: #6b7f19;\r\n\t\t\t--pitch1-primary-channel: #BCDE2C;\r\n\t\t\t--pitch1-secondary-note: #6b7f19;\r\n\t\t\t--pitch1-primary-note: #BCDE2C;\r\n\t\t\t--pitch2-secondary-channel: #497a31;\r\n\t\t\t--pitch2-primary-channel: #7BD152;\r\n\t\t\t--pitch2-secondary-note: #497a31;\r\n\t\t\t--pitch2-primary-note: #7BD152;\r\n\t\t\t--pitch3-secondary-channel: #286b40;\r\n\t\t\t--pitch3-primary-channel: #45BE71;\r\n\t\t\t--pitch3-secondary-note: #286b40;\r\n\t\t\t--pitch3-primary-note: #45BE71;\r\n\t\t\t--pitch4-secondary-channel: #125140;\r\n\t\t\t--pitch4-primary-channel: #25A884;\r\n\t\t\t--pitch4-secondary-note: #125140;\r\n\t\t\t--pitch4-primary-note: #25A884;\r\n\t\t\t--pitch5-secondary-channel: #114c49;\r\n\t\t\t--pitch5-primary-channel: #21908C;\r\n\t\t\t--pitch5-secondary-note: #114c49;\r\n\t\t\t--pitch5-primary-note: #21908C;\r\n\t\t\t--pitch6-secondary-channel: #143843;\r\n\t\t\t--pitch6-primary-channel: #2B788E;\r\n\t\t\t--pitch6-secondary-note: #143843;\r\n\t\t\t--pitch6-primary-note: #2B788E;\r\n\t\t\t--pitch7-secondary-channel: #1d354e;\r\n\t\t\t--pitch7-primary-channel: #355F8D;\r\n\t\t\t--pitch7-secondary-note: #1a2f46;\r\n\t\t\t--pitch7-primary-note: #355F8D;\r\n\t\t\t--pitch8-secondary-channel: #2c2e5a;\r\n\t\t\t--pitch8-primary-channel: #414486;\r\n\t\t\t--pitch8-secondary-note: #1e1f3d;\r\n\t\t\t--pitch8-primary-note: #414486;\r\n\t\t\t--pitch9-secondary-channel: #3c1f5e;\r\n\t\t\t--pitch9-primary-channel: #5e3b89;\r\n\t\t\t--pitch9-secondary-note: #25133b;\r\n\t\t\t--pitch9-primary-note: #5e3b89;\r\n\t\t\t--pitch10-secondary-channel: #510264;\r\n\t\t\t--pitch10-primary-channel: #720d8a;\r\n\t\t\t--pitch10-secondary-note: #440154;\r\n\t\t\t--pitch10-primary-note: #720d8a;\r\n\t\t\t--noise1-secondary-channel: #BCDE2C;\r\n\t\t\t--noise1-primary-channel: #edff9f;\r\n\t\t\t--noise1-secondary-note: #BCDE2C;\r\n\t\t\t--noise1-primary-note: #edff9f;\r\n\t\t\t--noise2-secondary-channel: #45BE71;\r\n\t\t\t--noise2-primary-channel: #89ffb4;\r\n\t\t\t--noise2-secondary-note: #45BE71;\r\n\t\t\t--noise2-primary-note: #89ffb4;\r\n\t\t\t--noise3-secondary-channel: #21908C;\r\n\t\t\t--noise3-primary-channel: #72fffa;\r\n\t\t\t--noise3-secondary-note: #21908C;\r\n\t\t\t--noise3-primary-note: #72fffa;\r\n\t\t\t--noise4-secondary-channel: #355F8D;\r\n\t\t\t--noise4-primary-channel: #7cb6f5;\r\n\t\t\t--noise4-secondary-note: #355F8D;\r\n\t\t\t--noise4-primary-note: #7cb6f5;\r\n\t\t\t--noise5-secondary-channel: #482574;\r\n\t\t\t--noise5-primary-channel: #8f5ad1;\r\n\t\t\t--noise5-secondary-note: #48257A;\r\n\t\t\t--noise5-primary-note: #8f5ad1;\r\n\t\t\t--mod1-secondary-channel: #815a16;\r\n\t\t\t--mod1-primary-channel: #F5AB29;\r\n\t\t\t--mod1-secondary-note: #815a16;\r\n\t\t\t--mod1-primary-note: #F5AB29;\r\n\t\t\t--mod2-secondary-channel: #4d341a;\r\n\t\t\t--mod2-primary-channel: #C98540;\r\n\t\t\t--mod2-secondary-note: #4d341a;\r\n\t\t\t--mod2-primary-note: #C98540;\r\n\t\t\t--mod3-secondary-channel: #643734;\r\n\t\t\t--mod3-primary-channel: #A75D58;\r\n\t\t\t--mod3-secondary-note: #643734;\r\n\t\t\t--mod3-primary-note: #A75D58;\r\n\t\t\t--mod4-secondary-channel: #461430;\r\n\t\t\t--mod4-primary-channel: #812359;\r\n\t\t\t--mod4-secondary-note: #3f112b;\r\n\t\t\t--mod4-primary-note: #812359;\r\n\t\t\t--mod-label-primary: #282828;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #5d5d5d;\r\n\t\t\t--disabled-note-secondary: #292929;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"violet verdant\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #0e031a;\r\n\t\t\t--editor-background: #0e031a;\r\n\t\t\t--hover-preview: #e5ffea;\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t--primary-text: #f0e0ff;\r\n\t\t\t--secondary-text: #706087;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: #225835;\r\n\t\t\t--loop-accent: #8f00fb;\r\n\t\t\t--link-accent: #82dd5d;\r\n\t\t\t--ui-widget-background: #303c66;\r\n\t\t\t--ui-widget-focus: #62559b;\r\n\t\t\t--pitch-background: #293b52;\r\n\t\t\t--tonic: #5b46ad;\r\n\t\t\t--fifth-note: #42604d;\r\n\t\t\t--third-note: #884471;\r\n\t\t\t--white-piano-key: #f6e8ff;\r\n\t\t\t--black-piano-key: #5a4972;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #392a46;\r\n\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t--track-editor-bg-noise: #403150;\r\n\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t--track-editor-bg-mod: #253c25;\r\n\t\t\t--track-editor-bg-mod-dim: #0c1811;\r\n\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t--input-box-outline: #403150;\r\n\t\t\t--mute-button-normal: #82dd5d;\r\n\t\t\t--mute-button-mod: #945de5;\r\n\t\t\t--mod-label-primary: #312840;\r\n\t\t\t--mod-label-secondary-text: rgb(88 70 104);\r\n\t\t\t--mod-label-primary-text: #82dd5d;\r\n\t\t\t--pitch-secondary-channel-hue: 64;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t--pitch-secondary-channel-sat: 63.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 64;\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t--pitch-primary-channel-sat: 90;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 32;\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t--pitch-secondary-note-sat: 87.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 64;\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 192;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 45;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 32;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 192;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 43.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 160;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 45;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 192;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 132;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 132;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 100;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 132;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary: #91879f;\r\n\t\t\t--disabled-note-secondary: #6a677a;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"portal\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #04081a;\r\n\t\t\t--editor-background: #04081a;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: rgb(0 72 181);\r\n\t\t\t--loop-accent: #44d4ff;\r\n\t\t\t--link-accent: #ffa500;\r\n\t\t\t--ui-widget-background: #212c4a;\r\n\t\t\t--ui-widget-focus: #121f42;\r\n\t\t\t--pitch-background: #1b263e;\r\n\t\t\t--tonic: #995d00;\r\n\t\t\t--fifth-note: #0898a1;\r\n\t\t\t--third-note: #8a52ce;\r\n\t\t\t--white-piano-key: #ffffff;\r\n\t\t\t--black-piano-key: #516d7a;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #213352;\r\n\t\t\t--track-editor-bg-pitch-dim: #152032;\r\n\t\t\t--track-editor-bg-noise: #403524;\r\n\t\t\t--track-editor-bg-noise-dim: #2a1f0e;\r\n\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t--indicator-primary: #5490ff;\r\n\t\t\t--indicator-secondary: #444;\r\n\t\t\t--select2-opt-group: #585858;\r\n\t\t\t--input-box-outline: #333;\r\n\t\t\t--mute-button-normal: #3372ff;\r\n\t\t\t--mute-button-mod: #dd872f;\r\n\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t--pitch1-primary-channel: #77f7ff;\r\n\t\t\t--pitch1-secondary-note: #00BDC7;\r\n\t\t\t--pitch1-primary-note: #92F9FF;\r\n\t\t\t--pitch2-secondary-channel: #0083a1;\r\n\t\t\t--pitch2-primary-channel: #35d9ff;\r\n\t\t\t--pitch2-secondary-note: #0083a1;\r\n\t\t\t--pitch2-primary-note: #a4eeff;\r\n\t\t\t--pitch3-secondary-channel: #0074c7;\r\n\t\t\t--pitch3-primary-channel: #3caeff;\r\n\t\t\t--pitch3-secondary-note: #00477a;\r\n\t\t\t--pitch3-primary-note: #aadcff;\r\n\t\t\t--pitch4-secondary-channel: #0039a1;\r\n\t\t\t--pitch4-primary-channel: #2673ff;\r\n\t\t\t--pitch4-secondary-note: #001f56;\r\n\t\t\t--pitch4-primary-note: #9bbeff;\r\n\t\t\t--pitch5-secondary-channel: #31148b;\r\n\t\t\t--pitch5-primary-channel: #7042ff;\r\n\t\t\t--pitch5-secondary-note: #190656;\r\n\t\t\t--pitch5-primary-note: #b79fff;\r\n\t\t\t--pitch6-secondary-channel: #979934;\r\n\t\t\t--pitch6-primary-channel: #fbff2f;\r\n\t\t\t--pitch6-secondary-note: #5d5e0a;\r\n\t\t\t--pitch6-primary-note: #fdff9a;\r\n\t\t\t--pitch7-secondary-channel: #b78f00;\r\n\t\t\t--pitch7-primary-channel: #ffd747;\r\n\t\t\t--pitch7-secondary-note: #5e3d00;\r\n\t\t\t--pitch7-primary-note: #ffe381;\r\n\t\t\t--pitch8-secondary-channel: #9d6500;\r\n\t\t\t--pitch8-primary-channel: #ffa400;\r\n\t\t\t--pitch8-secondary-note: #583900;\r\n\t\t\t--pitch8-primary-note: #ffd07c;\r\n\t\t\t--pitch9-secondary-channel: #744203;\r\n\t\t\t--pitch9-primary-channel: #ff8e00;\r\n\t\t\t--pitch9-secondary-note: #502d00;\r\n\t\t\t--pitch9-primary-note: #ffcb89;\r\n\t\t\t--pitch10-secondary-channel: #a32d00;\r\n\t\t\t--pitch10-primary-channel: #ff885b;\r\n\t\t\t--pitch10-secondary-note: #521700;\r\n\t\t\t--pitch10-primary-note: #ffb397;\r\n\t\t\t--noise1-secondary-channel: #6e2210;\r\n\t\t\t--noise1-primary-channel: #ff4600;\r\n\t\t\t--noise1-secondary-note: #4c1a08;\r\n\t\t\t--noise1-primary-note: #ffc9b4;\r\n\t\t\t--noise2-secondary-channel: #6a3110;\r\n\t\t\t--noise2-primary-channel: #ff782a;\r\n\t\t\t--noise2-secondary-note: #4c1f05;\r\n\t\t\t--noise2-primary-note: #ffb488;\r\n\t\t\t--noise3-secondary-channel: #72460e;\r\n\t\t\t--noise3-primary-channel: #d9871f;\r\n\t\t\t--noise3-secondary-note: #442905;\r\n\t\t\t--noise3-primary-note: #ffdcae;\r\n\t\t\t--noise4-secondary-channel: #837a0f;\r\n\t\t\t--noise4-primary-channel: #f7ea55;\r\n\t\t\t--noise4-secondary-note: #605906;\r\n\t\t\t--noise4-primary-note: #fff9ab;\r\n\t\t\t--noise5-secondary-channel: #8c8f00;\r\n\t\t\t--noise5-primary-channel: #fdff90;\r\n\t\t\t--noise5-secondary-note: #606200;\r\n\t\t\t--noise5-primary-note: #feffbc;\r\n\t\t\t--mod1-secondary-channel: #561b97;\r\n\t\t\t--mod1-primary-channel: #aa66f5;\r\n\t\t\t--mod1-secondary-note: #30075c;\r\n\t\t\t--mod1-primary-note: #cd9fff;\r\n\t\t\t--mod2-secondary-channel: #5116df;\r\n\t\t\t--mod2-primary-channel: #6b2dff;\r\n\t\t\t--mod2-secondary-note: #36138b;\r\n\t\t\t--mod2-primary-note: #bea3ff;\r\n\t\t\t--mod3-secondary-channel: #2535a1;\r\n\t\t\t--mod3-primary-channel: #3f57ff;\r\n\t\t\t--mod3-secondary-note: #0e185c;\r\n\t\t\t--mod3-primary-note: #8494ff;\r\n\t\t\t--mod4-secondary-channel: #1b5883;\r\n\t\t\t--mod4-primary-channel: #5eb7f5;\r\n\t\t\t--mod4-secondary-note: #072f4a;\r\n\t\t\t--mod4-primary-note: #63beff;\r\n\t\t\t--mod-label-primary: #24293a;\r\n\t\t\t--mod-label-secondary-text: #454d4e;\r\n\t\t\t--mod-label-primary-text: #7bd4ff;\r\n\t\t\t--disabled-note-primary: #072f4a;\r\n\t\t\t--disabled-note-secondary: #6585a7;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"fusion\": `:root {\r\n\t\t\t--page-margin: #0c0306;\r\n\t\t\t--editor-background: #0c0306;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #26d9cd;\r\n\t\t\t--secondary-text: #ff6666;\r\n\t\t\t--inverted-text: white;\r\n\t\t\t--text-selection: #ffffff;\r\n\t\t\t--box-selection-fill: #ff00004d;\r\n\t\t\t--loop-accent: #ff6666;\r\n\t\t\t--link-accent: white;\r\n\t\t\t--ui-widget-background: #232323;\r\n\t\t\t--ui-widget-focus: #303030;\r\n\t\t\t--pitch-background: hsl(61deg 100% 70% / 25%);\r\n\t\t\t--tonic: #66a3ff40;\r\n\t\t\t--fifth-note: #ff666640;\r\n\t\t\t--third-note: #48640;\r\n\t\t\t--white-piano-key: #cdcdcd;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #404040bf;\r\n\t\t\t--track-editor-bg-pitch-dim: #151515;\r\n\t\t\t--track-editor-bg-noise: #404040bf;\r\n\t\t\t--track-editor-bg-noise-dim: #151515;\r\n\t\t\t--track-editor-bg-mod: #404040bf;\r\n\t\t\t--track-editor-bg-mod-dim: #151515;\r\n\t\t\t--multiplicative-mod-slider: #ef7692;\r\n\t\t\t--overwriting-mod-slider: #f43e69;\r\n\t\t\t--indicator-primary: #26d9cd;\r\n\t\t\t--indicator-secondary: hsl(176deg 70% 25%);\r\n\t\t\t--select2-opt-group: #232323;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #26d9cd;\r\n\t\t\t--mute-button-mod: hsl(346deg 70% 50%);\r\n\t\t\t--pitch1-secondary-channel: #bf4040;\r\n\t\t\t--pitch1-primary-channel: #ff6666;\r\n\t\t\t--pitch1-secondary-note: #bf4040;\r\n\t\t\t--pitch1-primary-note: #ff6666;\r\n\t\t\t--pitch2-secondary-channel: #bf5b40;\r\n\t\t\t--pitch2-primary-channel: #ff8766;\r\n\t\t\t--pitch2-secondary-note: #bf5b40;\r\n\t\t\t--pitch2-primary-note: #ff8766;\r\n\t\t\t--pitch3-secondary-channel: #bf7940;\r\n\t\t\t--pitch3-primary-channel: #ffab66;\r\n\t\t\t--pitch3-secondary-note: #bf7940;\r\n\t\t\t--pitch3-primary-note: #ffab66;\r\n\t\t\t--pitch4-secondary-channel: #bf9b40;\r\n\t\t\t--pitch4-primary-channel: #ffd466;\r\n\t\t\t--pitch4-secondary-note: #bf9b40;\r\n\t\t\t--pitch4-primary-note: #ffd466;\r\n\t\t\t--pitch5-secondary-channel: #bdbf40;\r\n\t\t\t--pitch5-primary-channel: #fcff66;\r\n\t\t\t--pitch5-secondary-note: #bdbf40;\r\n\t\t\t--pitch5-primary-note: #fcff66;\r\n\t\t\t--pitch6-secondary-channel: #9dbf40;\r\n\t\t\t--pitch6-primary-channel: #d6ff66;\r\n\t\t\t--pitch6-secondary-note: #9dbf40;\r\n\t\t\t--pitch6-primary-note: #d6ff66;\r\n\t\t\t--pitch7-secondary-channel: #9dbf40;\r\n\t\t\t--pitch7-primary-channel: #fcff66;\r\n\t\t\t--pitch7-secondary-note: #9dbf40;\r\n\t\t\t--pitch7-primary-note: #fcff66;\r\n\t\t\t--pitch8-secondary-channel: #bf9b40;\r\n\t\t\t--pitch8-primary-channel: #ffd466;\r\n\t\t\t--pitch8-secondary-note: #bf9b40;\r\n\t\t\t--pitch8-primary-note: #ffd466;\r\n\t\t\t--pitch9-secondary-channel: #bf5b40;\r\n\t\t\t--pitch9-primary-channel: #ffab66;\r\n\t\t\t--pitch9-secondary-note: #bf5b40;\r\n\t\t\t--pitch9-primary-note: #ffab66;\r\n\t\t\t--pitch10-secondary-channel: #d15a1f;\r\n\t\t\t--pitch10-primary-channel: #ff8766;\r\n\t\t\t--pitch10-secondary-note: #d15a1f;\r\n\t\t\t--pitch10-primary-note: #ff8766;\r\n\t\t\t--noise1-secondary-channel: #4073bf;\r\n\t\t\t--noise1-primary-channel: #66a3ff;\r\n\t\t\t--noise1-secondary-note: #4073bf;\r\n\t\t\t--noise1-primary-note: #66a3ff;\r\n\t\t\t--noise2-secondary-channel: #405dbf;\r\n\t\t\t--noise2-primary-channel: #668aff;\r\n\t\t\t--noise2-secondary-note: #405dbf;\r\n\t\t\t--noise2-primary-note: #668aff;\r\n\t\t\t--noise3-secondary-channel: #4f40bf;\r\n\t\t\t--noise3-primary-channel: #7866ff;\r\n\t\t\t--noise3-secondary-note: #4f40bf;\r\n\t\t\t--noise3-primary-note: #7866ff;\r\n\t\t\t--noise4-secondary-channel: #8840bf;\r\n\t\t\t--noise4-primary-channel: #bd66ff;\r\n\t\t\t--noise4-secondary-note: #8840bf;\r\n\t\t\t--noise4-primary-note: #bd66ff;\r\n\t\t\t--noise5-secondary-channel: #bf40b5;\r\n\t\t\t--noise5-primary-channel: #ff66f2;\r\n\t\t\t--noise5-secondary-note: #bf40b5;\r\n\t\t\t--noise5-primary-note: #ff66f2;\r\n\t\t\t--mod1-secondary-channel: #cc6666;\r\n\t\t\t--mod1-primary-channel: #ff9999;\r\n\t\t\t--mod1-secondary-note: #cc6666;\r\n\t\t\t--mod1-primary-note: #ff9999;\r\n\t\t\t--mod2-secondary-channel: #cc7766;\r\n\t\t\t--mod2-primary-channel: #ffaa99;\r\n\t\t\t--mod2-secondary-note: #bf5540;\r\n\t\t\t--mod2-primary-note: #ffaa99;\r\n\t\t\t--mod3-secondary-channel: #cc8866;\r\n\t\t\t--mod3-primary-channel: #ffbb99;\r\n\t\t\t--mod3-secondary-note: #cc8866;\r\n\t\t\t--mod3-primary-note: #ffbb99;\r\n\t\t\t--mod4-secondary-channel: #cc9966;\r\n\t\t\t--mod4-primary-channel: #ffcc99;\r\n\t\t\t--mod4-secondary-note: #cc9966;\r\n\t\t\t--mod4-primary-note: #ffcc99;\r\n\t\t\t--mod-label-primary: #999;\r\n\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t--mod-label-primary-text: black;\r\n\t\t\t--disabled-note-primary: #696969;\r\n\t\t\t--disabled-note-secondary: #232323;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"inverse\": `:root {\r\n\t\t\t--page-margin: #c4c8e3;\r\n\t\t\t--editor-background: #c4c8e3;\r\n\t\t\t--hover-preview: #000000;\r\n\t\t\t--playhead: #243953;\r\n\t\t\t--primary-text: black;\r\n\t\t\t--secondary-text: #855b95;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(132 125 255);\r\n\t\t\t--box-selection-fill: rgb(174 109 73 / 65%);\r\n\t\t\t--loop-accent: #EC897D;\r\n\t\t\t--link-accent: #4e00c8;\r\n\t\t\t--ui-widget-background: #e7e7ff;\r\n\t\t\t--ui-widget-focus: #d0d3e9;\r\n\t\t\t--pitch-background: #ffffff;\r\n\t\t\t--tonic: #bbbbbb;\r\n\t\t\t--fifth-note: #dcdcdc;\r\n\t\t\t--third-note: #dce1da;\r\n\t\t\t--white-piano-key: #ffffff;\r\n\t\t\t--black-piano-key: #615f66;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #e9ebff;\r\n\t\t\t--track-editor-bg-pitch-dim: #e9ebff;\r\n\t\t\t--track-editor-bg-noise: #fdf2fe;\r\n\t\t\t--track-editor-bg-noise-dim: #fdf2fe;\r\n\t\t\t--track-editor-bg-mod: #dbdefe;\r\n\t\t\t--track-editor-bg-mod-dim: #dbdefe;\r\n\t\t\t--multiplicative-mod-slider: #6900b3;\r\n\t\t\t--overwriting-mod-slider: #004b9d;\r\n\t\t\t--indicator-primary: #ff633d;\r\n\t\t\t--indicator-secondary: #933822;\r\n\t\t\t--select2-opt-group: #e7e7ff;\r\n\t\t\t--input-box-outline: #e7e7ff;\r\n\t\t\t--mute-button-normal: #0072ef;\r\n\t\t\t--mute-button-mod: #002e67;\r\n\t\t\t--pitch1-secondary-channel: #b77d6e;\r\n\t\t\t--pitch1-primary-channel: #ff9d85;\r\n\t\t\t--pitch1-secondary-note: #b77d6e;\r\n\t\t\t--pitch1-primary-note: #ff9d85;\r\n\t\t\t--pitch2-secondary-channel: #be8821;\r\n\t\t\t--pitch2-primary-channel: #FFAF12;\r\n\t\t\t--pitch2-secondary-note: #be8821;\r\n\t\t\t--pitch2-primary-note: #FFAF12;\r\n\t\t\t--pitch3-secondary-channel: #3a62a4;\r\n\t\t\t--pitch3-primary-channel: #528ae6;\r\n\t\t\t--pitch3-secondary-note: #3a62a4;\r\n\t\t\t--pitch3-primary-note: #528ae6;\r\n\t\t\t--pitch4-secondary-channel: #3e8d78;\r\n\t\t\t--pitch4-primary-channel: #4EC5A7;\r\n\t\t\t--pitch4-secondary-note: #3e8d78;\r\n\t\t\t--pitch4-primary-note: #4EC5A7;\r\n\t\t\t--pitch5-secondary-channel: #84906d;\r\n\t\t\t--pitch5-primary-channel: #aabf84;\r\n\t\t\t--pitch5-secondary-note: #84906d;\r\n\t\t\t--pitch5-primary-note: #aabf84;\r\n\t\t\t--pitch6-secondary-channel: #bd6345;\r\n\t\t\t--pitch6-primary-channel: #e59a81;\r\n\t\t\t--pitch6-secondary-note: #bd6345;\r\n\t\t\t--pitch6-primary-note: #e59a81;\r\n\t\t\t--pitch7-secondary-channel: #aa592f;\r\n\t\t\t--pitch7-primary-channel: #FE813E;\r\n\t\t\t--pitch7-secondary-note: #aa592f;\r\n\t\t\t--pitch7-primary-note: #FE813E;\r\n\t\t\t--pitch8-secondary-channel: #b2a171;\r\n\t\t\t--pitch8-primary-channel: #ffd76d;\r\n\t\t\t--pitch8-secondary-note: #b2a171;\r\n\t\t\t--pitch8-primary-note: #ffd76d;\r\n\t\t\t--pitch9-secondary-channel: #4f6177;\r\n\t\t\t--pitch9-primary-channel: #798FA7;\r\n\t\t\t--pitch9-secondary-note: #4f6177;\r\n\t\t\t--pitch9-primary-note: #798FA7;\r\n\t\t\t--pitch10-secondary-channel: #165162;\r\n\t\t\t--pitch10-primary-channel: #107895;\r\n\t\t\t--pitch10-secondary-note: #165162;\r\n\t\t\t--pitch10-primary-note: #107895;\r\n\t\t\t--noise1-secondary-channel: #71617C;\r\n\t\t\t--noise1-primary-channel: #977da9;\r\n\t\t\t--noise1-secondary-note: #71617C;\r\n\t\t\t--noise1-primary-note: #977da9;\r\n\t\t\t--noise2-secondary-channel: #4a4c5b;\r\n\t\t\t--noise2-primary-channel: #707591;\r\n\t\t\t--noise2-secondary-note: #4a4c5b;\r\n\t\t\t--noise2-primary-note: #707591;\r\n\t\t\t--noise3-secondary-channel: #817c7b;\r\n\t\t\t--noise3-primary-channel: #A19D9C;\r\n\t\t\t--noise3-secondary-note: #817c7b;\r\n\t\t\t--noise3-primary-note: #A19D9C;\r\n\t\t\t--noise4-secondary-channel: #ab847b;\r\n\t\t\t--noise4-primary-channel: #EAAC9D;\r\n\t\t\t--noise4-secondary-note: #ab847b;\r\n\t\t\t--noise4-primary-note: #EAAC9D;\r\n\t\t\t--noise5-secondary-channel: #B49D74;\r\n\t\t\t--noise5-primary-channel: #dec69b;\r\n\t\t\t--noise5-secondary-note: #B49D74;\r\n\t\t\t--noise5-primary-note: #dec69b;\r\n\t\t\t--mod1-secondary-channel: #722124;\r\n\t\t\t--mod1-primary-channel: #D13A41;\r\n\t\t\t--mod1-secondary-note: #722124;\r\n\t\t\t--mod1-primary-note: #D13A41;\r\n\t\t\t--mod2-secondary-channel: #213657;\r\n\t\t\t--mod2-primary-channel: #34558B;\r\n\t\t\t--mod2-secondary-note: #213657;\r\n\t\t\t--mod2-primary-note: #34558B;\r\n\t\t\t--mod3-secondary-channel: #555D46;\r\n\t\t\t--mod3-primary-channel: #848f6d;\r\n\t\t\t--mod3-secondary-note: #555D46;\r\n\t\t\t--mod3-primary-note: #848f6d;\r\n\t\t\t--mod4-secondary-channel: #71617C;\r\n\t\t\t--mod4-primary-channel: #a68ab9;\r\n\t\t\t--mod4-secondary-note: #71617C;\r\n\t\t\t--mod4-primary-note: #a68ab9;\r\n\t\t\t--mod-label-primary: #e9e9e9;\r\n\t\t\t--mod-label-secondary-text: #707070;\r\n\t\t\t--mod-label-primary-text: black;\r\n\t\t\t--disabled-note-primary: #959595;\r\n\t\t\t--disabled-note-secondary: #6e6e6e;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t}`,\r\n        \"nebula\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #11001c;\r\n\t\t\t--editor-background: #150e1f;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #8C849A;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(141,79,201,0.99);\r\n\t\t\t--box-selection-fill: #311E44;\r\n\t\t\t--loop-accent: #CC688C;\r\n\t\t\t--link-accent: #817DC9;\r\n\t\t\t--ui-widget-background: #44394F;\r\n\t\t\t--ui-widget-focus: #7A6386;\r\n\t\t\t--pitch-background: #393e4f40;\r\n\t\t\t--tonic: #7D5C9EC0;\r\n\t\t\t--fifth-note: #ab77bd50;\r\n\t\t\t--third-note: #532748;\r\n\t\t\t--white-piano-key: #EEEEEE;\r\n\t\t\t--black-piano-key: #5F5566;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #46374C;\r\n\t\t\t--track-editor-bg-pitch-dim: #1F1C2850;\r\n\t\t\t--track-editor-bg-noise: #3D353B;\r\n\t\t\t--track-editor-bg-noise-dim: #16131550;\r\n\t\t\t--track-editor-bg-mod: #623F4C;\r\n\t\t\t--track-editor-bg-mod-dim: #361A2450;\r\n\t\t\t--multiplicative-mod-slider: #9F6E6A;\r\n\t\t\t--overwriting-mod-slider: #A664B5;\r\n\t\t\t--indicator-primary: #CC6B8E;\r\n\t\t\t--indicator-secondary: #44394F;\r\n\t\t\t--select2-opt-group: #6A576F;\r\n\t\t\t--input-box-outline: #222;\r\n\t\t\t--mute-button-normal: #BF91DC;\r\n\t\t\t--mute-button-mod: #DC8C9A;\r\n\t\t\t--mod-label-primary: #3A2840;\r\n\t\t\t--mod-label-secondary-text: #62485E;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--pitch-secondary-channel-hue: -96;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 4.2;\r\n\t\t\t--pitch-secondary-channel-sat: 50.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: -96;\r\n\t\t\t--pitch-primary-channel-hue-scale: 4.2;\r\n\t\t\t--pitch-primary-channel-sat: 70;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: -96;\r\n\t\t\t--pitch-secondary-note-hue-scale: 4.2;\r\n\t\t\t--pitch-secondary-note-sat: 70.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: -96;\r\n\t\t\t--pitch-primary-note-hue-scale: 4.2;\r\n\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 16;\r\n\t\t\t--noise-secondary-channel-hue-scale: -1.33;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 16;\r\n\t\t\t--noise-primary-channel-hue-scale: -1.33;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 12;\r\n\t\t\t--noise-secondary-note-hue-scale: -1.33;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 12;\r\n\t\t\t--noise-primary-note-hue-scale: -1.33;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 12;\r\n\t\t\t--mod-secondary-channel-hue-scale: -.75;\r\n\t\t\t--mod-secondary-channel-sat: 50;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 12;\r\n\t\t\t--mod-primary-channel-hue-scale: -.75;\r\n\t\t\t--mod-primary-channel-sat: 70;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 12;\r\n\t\t\t--mod-secondary-note-hue-scale: -.75;\r\n\t\t\t--mod-secondary-note-sat: 75;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 12;\r\n\t\t\t--mod-primary-note-hue-scale: -.75;\r\n\t\t\t--mod-primary-note-sat: 85;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary: #aaa;\r\n\t\t\t--disabled-note-secondary: #666;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n\t\t\"Nebula 2\": ` \r\n\t\t\t:root { \r\n\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t--editor-background: #11001c;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #8C849A;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(141,79,201,0.99);\r\n\t\t\t\t--box-selection-fill: #311E44;\r\n\t\t\t\t--loop-accent: #CC688C;\r\n\t\t\t\t--link-accent: #817DC9;\r\n\t\t\t\t--ui-widget-background: #3b2057;\r\n\t\t\t\t--ui-widget-focus: #7A6386;\r\n\t\t\t\t--pitch-background: #393e4f40;\r\n\t\t\t\t--tonic: #7D5C9EC0;\r\n\t\t\t\t--fifth-note: #ab77bd50;\r\n\t\t\t\t--third-note: #532748;\r\n\t\t\t\t--white-piano-key: #EEEEEE;\r\n\t\t\t\t--black-piano-key: #5F5566;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t--track-editor-bg-pitch: #46374C;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #1F1C2850;\r\n\t\t\t\t--track-editor-bg-noise: #3D353B;\r\n\t\t\t\t--track-editor-bg-noise-dim: #16131550;\r\n\t\t\t\t--track-editor-bg-mod: #623F4C;\r\n\t\t\t\t--track-editor-bg-mod-dim: #361A2450;\r\n\t\t\t\t--multiplicative-mod-slider: #9F6E6A;\r\n\t\t\t\t--overwriting-mod-slider: #A664B5;\r\n\t\t\t\t--indicator-primary: #CC6B8E;\r\n\t\t\t\t--indicator-secondary: #3b2057;\r\n\t\t\t\t--select2-opt-group: #6A576F;\r\n\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t--mute-button-normal: #BF91DC;\r\n\t\t\t\t--mute-button-mod: #DC8C9A;\r\n\t\t\t\t--mod-label-primary: #3A2840;\r\n\t\t\t\t--mod-label-secondary-text: #62485E;\r\n\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t--pitch-secondary-channel-hue: -96;\r\n\t\t\t\t--pitch-secondary-channel-hue-scale: 4.2;\r\n\t\t\t\t--pitch-secondary-channel-sat: 50.3;\r\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-channel-hue: -96;\r\n\t\t\t\t--pitch-primary-channel-hue-scale: 4.2;\r\n\t\t\t\t--pitch-primary-channel-sat: 70;\r\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-secondary-note-hue: -96;\r\n\t\t\t\t--pitch-secondary-note-hue-scale: 4.2;\r\n\t\t\t\t--pitch-secondary-note-sat: 70.9;\r\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-hue: -96;\r\n\t\t\t\t--pitch-primary-note-hue-scale: 4.2;\r\n\t\t\t\t--pitch-primary-note-sat: 90;\r\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t--noise-secondary-channel-hue: 16;\r\n\t\t\t\t--noise-secondary-channel-hue-scale: -1.33;\r\n\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-primary-channel-hue: 16;\r\n\t\t\t\t--noise-primary-channel-hue-scale: -1.33;\r\n\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-secondary-note-hue: 12;\r\n\t\t\t\t--noise-secondary-note-hue-scale: -1.33;\r\n\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t--noise-primary-note-hue: 12;\r\n\t\t\t\t--noise-primary-note-hue-scale: -1.33;\r\n\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-hue: 12;\r\n\t\t\t\t--mod-secondary-channel-hue-scale: -.75;\r\n\t\t\t\t--mod-secondary-channel-sat: 50;\r\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-primary-channel-hue: 12;\r\n\t\t\t\t--mod-primary-channel-hue-scale: -.75;\r\n\t\t\t\t--mod-primary-channel-sat: 70;\r\n\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-note-hue: 12;\r\n\t\t\t\t--mod-secondary-note-hue-scale: -.75;\r\n\t\t\t\t--mod-secondary-note-sat: 75;\r\n\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t--mod-primary-note-hue: 12;\r\n\t\t\t\t--mod-primary-note-hue-scale: -.75;\r\n\t\t\t\t--mod-primary-note-sat: 85;\r\n\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t\t--disabled-note-primary: #aaa;\r\n\t\t\t\t--disabled-note-secondary: #666;\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\t.note-primary {\r\n\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t0px calc(100% - 4px),\r\n\t\t\t\t\t4px calc(100% - 4px),\r\n\t\t\t\t\t4px 100%,\r\n\t\t\t\t\tcalc(100% - 4px) 100%,\r\n\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\r\n\t\t\t\t\t100% calc(100% - 4px),\r\n\t\t\t\t\t100% 4px,\r\n\t\t\t\t\tcalc(100% - 4px) 4px,\r\n\t\t\t\t\tcalc(100% - 4px) 0px,\r\n\t\t\t\t\t4px 0px,\r\n\t\t\t\t\t4px 4px,\r\n\t\t\t\t\t0px 4px\r\n\t\t\t\t  );\r\n\t\t\t}\r\n\t\t\t.note-secondary {\r\n\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t0px calc(100% - 4px),\r\n\t\t\t\t\t4px calc(100% - 4px),\r\n\t\t\t\t\t4px 100%,\r\n\t\t\t\t\tcalc(100% - 4px) 100%,\r\n\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\r\n\t\t\t\t\t100% calc(100% - 4px),\r\n\t\t\t\t\t100% 4px,\r\n\t\t\t\t\tcalc(100% - 4px) 4px,\r\n\t\t\t\t\tcalc(100% - 4px) 0px,\r\n\t\t\t\t\t4px 0px,\r\n\t\t\t\t\t4px 4px,\r\n\t\t\t\t\t0px 4px\r\n\t\t\t\t  );\r\n\t\t\t}\r\n\t\t\t.note-flash {\r\n\t\t\t\tclip-path: polygon(\r\n\t\t\t\t\t0px calc(100% - 4px),\r\n\t\t\t\t\t4px calc(100% - 4px),\r\n\t\t\t\t\t4px 100%,\r\n\t\t\t\t\tcalc(100% - 4px) 100%,\r\n\t\t\t\t\tcalc(100% - 4px) calc(100% - 4px),\r\n\t\t\t\t\t100% calc(100% - 4px),\r\n\t\t\t\t\t100% 4px,\r\n\t\t\t\t\tcalc(100% - 4px) 4px,\r\n\t\t\t\t\tcalc(100% - 4px) 0px,\r\n\t\t\t\t\t4px 0px,\r\n\t\t\t\t\t4px 4px,\r\n\t\t\t\t\t0px 4px\r\n\t\t\t\t  );\r\n\t\t\t}\r\n\r\n\t\t\t.prompt.noSelection {\r\n\t\t\t\tbackground: #040410 !important;\r\n\t\t\t}\r\n\r\n\t\t\tbody {\r\n\t\t\t\tbackground-image: url(\"./image_assets/stars.gif\") !important;\r\n\t\t\t\tbackground-size: contain !important;\r\n\t\t\t\tbackground-position: center top !important;\r\n\t\t\t\t  background-repeat: repeat !important;\r\n\r\n\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\t\t\t#text-content {\r\n\t\t\t\t--editor-background: rgba(255, 255, 255, 0);\r\n\t\t\t\t\tborder-image-source: url(\"./image_assets/nebula2_border.png\");\r\n\t\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t\t\t   border-image-width: 32px; \r\n\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\tpadding: 36px; \r\n\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t#beepboxEditorContainer {\r\n\t\t\t\t--editor-background: rgba(255, 255, 255, 0);\r\n\t\t\t\t\tborder-image-source: url(\"./image_assets/nebula2_border.png\");\r\n\t\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t\t\t   border-image-width: 32px; \r\n\t\t\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\t\tpadding-left: 36px; \r\n\t\t\t\t\tpadding-right: 36px; \r\n\t\t\t\t\tpadding-top: 5px; \r\n\t\t\t\t\tpadding-bottom: 5px; \r\n\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t\t}\r\n\t\t\t.beepboxEditor button, .beepboxEditor select, .beepboxEditor .select2-selection__rendered, button {\r\n\t\t\t\t\tborder-image-source: url(\"./image_assets/nebula2_border2.png\") !important;\r\n\t\t\t\t\tborder-image-slice: 4 fill !important; \r\n\t\t\t\t   border-image-width: 4px !important; \r\n\t\t\t\tborder-image-repeat: stretch !important;\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\t\t\tselect.trackSelectBox {\r\n\t\t\t\t\tborder-image: none !important;\r\n\t\t\t\t}\r\n\t\t\t/* div.channelBox {\r\n\t\t\tborder-radius: 5px;\r\n\t\t\t} */\r\n\t\t\t* {\r\n\t\t\t\tcursor: url(\"./image_assets/pixel_cursor.png\"), auto !important;\r\n\t\t\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\r\n\t\t\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\r\n\t\t\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\r\n\t\t\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\r\n\t\t\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\r\n\t\t\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\r\n\t\t\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\r\n\t\t\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\r\n\t\t\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\r\n\t\t\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\r\n\t\t\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\r\n\t\t\t\t} \r\n\t\t\t\t\t@font-face {\r\n\t\t\t\t   font-family: \"AbyssType\";\r\n\t\t\t\t   src:\r\n\t\t\t\t\turl(\"./image_assets/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\t@font-face {\r\n\t\t\t\t   font-family: \"AbyssType_small\";\r\n\t\t\t\t   src:\r\n\t\t\t\t\turl(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t\t\t}\r\n\t\t\r\n\t\t\t\t\thtml {\r\n\t\t\t\t\tfont-family: 'AbyssType';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdiv.channelBoxLabel {\r\n\t\t\t\t\t\tfont-family: 'AbyssType_small' !important;\r\n\t\t\t\t\t}\r\n\t\t\r\n\r\n\r\n\t\t`,\r\n        \"roe light\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #fff5f5;\r\n\t\t\t--editor-background: #fff5f5;\r\n\t\t\t--hover-preview: #0e8bf1;\r\n\t\t\t--playhead: 000;\r\n\t\t\t--primary-text: #0e8bf1;\r\n\t\t\t--secondary-text: #f10e0e;\r\n\t\t\t--inverted-text: white;\r\n\t\t\t--text-selection: #ff4444fc;\r\n\t\t\t--box-selection-fill: #ff00004d;\r\n\t\t\t--loop-accent: #9a75ff;\r\n\t\t\t--link-accent: #ff7070;\r\n\t\t\t--ui-widget-background: #bdc9e5;\r\n\t\t\t--ui-widget-focus: #a3b7e5;\r\n\t\t\t--pitch-background: #d0c7db;\r\n\t\t\t--tonic: #bed3e4;\r\n\t\t\t--fifth-note: #e7c6c6;\r\n\t\t\t--third-note: #c2cc91;\r\n\t\t\t--white-piano-key: #cdcdcd;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #e5e1ea;\r\n\t\t\t--track-editor-bg-pitch-dim: #cbc4d4;\r\n\t\t\t--track-editor-bg-noise: #e0ddee;\r\n\t\t\t--track-editor-bg-noise-dim: #c1bade;\r\n\t\t\t--track-editor-bg-mod: #d8e6f3;\r\n\t\t\t--track-editor-bg-mod-dim: #b1cce7;\r\n\t\t\t--multiplicative-mod-slider: #8097cb;\r\n\t\t\t--overwriting-mod-slider: #8097cb;\r\n\t\t\t--indicator-primary: #FF2A2A;\r\n\t\t\t--indicator-secondary: #92a6d3;\r\n\t\t\t--select2-opt-group: #b6c4e2;\r\n\t\t\t--input-box-outline: #bdc9e5;\r\n\t\t\t--mute-button-normal: #66baff;\r\n\t\t\t--mute-button-mod: #1a98ff;\r\n\t\t\t--pitch1-secondary-channel: #273c90;\r\n\t\t\t--pitch1-primary-channel: #476BFF;\r\n\t\t\t--pitch1-secondary-note: #273c90;\r\n\t\t\t--pitch1-primary-note: #476BFF;\r\n\t\t\t--pitch2-secondary-channel: #3a3898;\r\n\t\t\t--pitch2-primary-channel: #625FFB;\r\n\t\t\t--pitch2-secondary-note: #3a3898;\r\n\t\t\t--pitch2-primary-note: #625FFB;\r\n\t\t\t--pitch3-secondary-channel: #542780;\r\n\t\t\t--pitch3-primary-channel: #9C49EC;\r\n\t\t\t--pitch3-secondary-note: #542780;\r\n\t\t\t--pitch3-primary-note: #9C49EC;\r\n\t\t\t--pitch4-secondary-channel: #84225d;\r\n\t\t\t--pitch4-primary-channel: #fd3fb1;\r\n\t\t\t--pitch4-secondary-note: #84225d;\r\n\t\t\t--pitch4-primary-note: #fd3fb1;\r\n\t\t\t--pitch5-secondary-channel: #8d2323;\r\n\t\t\t--pitch5-primary-channel: #ff3f3f;\r\n\t\t\t--pitch5-secondary-note: #8d2323;\r\n\t\t\t--pitch5-primary-note: #ff3f3f;\r\n\t\t\t--pitch6-secondary-channel: #84225d;\r\n\t\t\t--pitch6-primary-channel: #fd3fb1;\r\n\t\t\t--pitch6-secondary-note: #84225d;\r\n\t\t\t--pitch6-primary-note: #fd3fb1;\r\n\t\t\t--pitch7-secondary-channel: #542780;\r\n\t\t\t--pitch7-primary-channel: #9C49EC;\r\n\t\t\t--pitch7-secondary-note: #542780;\r\n\t\t\t--pitch7-primary-note: #9C49EC;\r\n\t\t\t--pitch8-secondary-channel: #3a3898;\r\n\t\t\t--pitch8-primary-channel: #625FFB;\r\n\t\t\t--pitch8-secondary-note: #3a3898;\r\n\t\t\t--pitch8-primary-note: #625FFB;\r\n\t\t\t--pitch9-secondary-channel: #273c90;\r\n\t\t\t--pitch9-primary-channel: #476BFF;\r\n\t\t\t--pitch9-secondary-note: #273c90;\r\n\t\t\t--pitch9-primary-note: #476BFF;\r\n\t\t\t--pitch10-secondary-channel: #165a93;\r\n\t\t\t--pitch10-primary-channel: #299EFF;\r\n\t\t\t--pitch10-secondary-note: #165a93;\r\n\t\t\t--pitch10-primary-note: #299EFF;\r\n\t\t\t--noise1-secondary-channel: #336bdb;\r\n\t\t\t--noise1-primary-channel: #4281FF;\r\n\t\t\t--noise1-secondary-note: #336bdb;\r\n\t\t\t--noise1-primary-note: #4281FF;\r\n\t\t\t--noise2-secondary-channel: #5e38dc;\r\n\t\t\t--noise2-primary-channel: #7347FF;\r\n\t\t\t--noise2-secondary-note: #5e38dc;\r\n\t\t\t--noise2-primary-note: #7347FF;\r\n\t\t\t--noise3-secondary-channel: #7d3097;\r\n\t\t\t--noise3-primary-channel: #9F3CBF;\r\n\t\t\t--noise3-secondary-note: #7d3097;\r\n\t\t\t--noise3-primary-note: #9F3CBF;\r\n\t\t\t--noise4-secondary-channel: #ad2559;\r\n\t\t\t--noise4-primary-channel: #D3326F;\r\n\t\t\t--noise4-secondary-note: #ad2559;\r\n\t\t\t--noise4-primary-note: #D3326F;\r\n\t\t\t--noise5-secondary-channel: #d02525;\r\n\t\t\t--noise5-primary-channel: #FF2A2A;\r\n\t\t\t--noise5-secondary-note: #d02525;\r\n\t\t\t--noise5-primary-note: #FF2A2A;\r\n\t\t\t--mod1-secondary-channel: #35415a;\r\n\t\t\t--mod1-primary-channel: #47587a;\r\n\t\t\t--mod1-secondary-note: #35415a;\r\n\t\t\t--mod1-primary-note: #47587a;\r\n\t\t\t--mod2-secondary-channel: #5a5374;\r\n\t\t\t--mod2-primary-channel: #716791;\r\n\t\t\t--mod2-secondary-note: #5a5374;\r\n\t\t\t--mod2-primary-note: #716791;\r\n\t\t\t--mod3-secondary-channel: #53385c;\r\n\t\t\t--mod3-primary-channel: #6f4c7b;\r\n\t\t\t--mod3-secondary-note: #53385c;\r\n\t\t\t--mod3-primary-note: #6f4c7b;\r\n\t\t\t--mod4-secondary-channel: #7e4e60;\r\n\t\t\t--mod4-primary-channel: #9e6279;\r\n\t\t\t--mod4-secondary-note: #7e4e60;\r\n\t\t\t--mod4-primary-note: #9e6279;\r\n\t\t\t--mod-label-primary: #d0c7db;\r\n\t\t\t--mod-label-secondary-text: #cb3434;\r\n\t\t\t--mod-label-primary-text: black;\r\n\t\t\t--disabled-note-primary: #616161;\r\n\t\t\t--disabled-note-secondary: #474747;\r\n\t\t}\r\n\t\t.promptContainerBG::before {\r\n\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t}\r\n\t\t`,\r\n\t\t\"jummbox light\": `\r\n\t\t:root {\r\n\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t--page-margin: #fefdff;\r\n\t\t\t--editor-background: #fefdff;\r\n\t\t\t--hover-preview: #302880;\r\n\t\t\t--playhead: rgba(62, 32, 120, 0.9);\r\n\t\t\t--primary-text: #401890;\r\n\t\t\t--secondary-text: #8769af;\r\n\t\t\t--inverted-text: #fefdff;\r\n\t\t\t--text-selection: rgba(255,160,235,0.99);\r\n\t\t\t--box-selection-fill: rgba(30,62,220,0.5);\r\n\t\t\t--loop-accent: #4c35d4;\r\n\t\t\t--link-accent: #7af;\r\n\t\t\t--ui-widget-background: #bf9cec;\r\n\t\t\t--ui-widget-focus: #e9c4ff;\r\n\t\t\t--pitch-background: #e2d9f9;\r\n\t\t\t--tonic: #c288cc;\r\n\t\t\t--fifth-note: #d8c9fd;\r\n\t\t\t--third-note: #bdd0b6;\r\n\t\t\t--white-piano-key: #e2e2ff;\r\n\t\t\t--black-piano-key: #66667a;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #d9e5ec;\r\n\t\t\t--track-editor-bg-pitch-dim: #eaeef5;\r\n\t\t\t--track-editor-bg-noise: #ffc3ae;\r\n\t\t\t--track-editor-bg-noise-dim: #ffe0cf;\r\n\t\t\t--track-editor-bg-mod: #c9accc;\r\n\t\t\t--track-editor-bg-mod-dim: #ebe3ef;\r\n\t\t\t--multiplicative-mod-slider: #807caf;\r\n\t\t\t--overwriting-mod-slider: #909cdf;\r\n\t\t\t--indicator-primary: #ae38ff;\r\n\t\t\t--indicator-secondary: #bbd4ec;\r\n\t\t\t--select2-opt-group: #c1b7f1;\r\n\t\t\t--input-box-outline: #bbb;\r\n\t\t\t--mute-button-normal: #e9b752;\r\n\t\t\t--mute-button-mod: #9558ee;\r\n\t\t\t--mod-label-primary: #ececff;\r\n\t\t\t--mod-label-secondary-text: rgb(197, 145, 247);\r\n\t\t\t--mod-label-primary-text: #302880;\r\n\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 8.1;\r\n\t\t\t--pitch-secondary-channel-sat: 53.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: -0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 72;\r\n\t\t\t--pitch-secondary-channel-lum-scale: -0.05;\r\n\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t--pitch-primary-channel-hue-scale: 8.1;\r\n\t\t\t--pitch-primary-channel-sat: 97;\r\n\t\t\t--pitch-primary-channel-sat-scale: -0.1;\r\n\t\t\t--pitch-primary-channel-lum: 45.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: -0.05;\r\n\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t--pitch-secondary-note-hue-scale: 8.1;\r\n\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: -0.1;\r\n\t\t\t--pitch-secondary-note-lum: 95;\r\n\t\t\t--pitch-secondary-note-lum-scale: -0.05;\r\n\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t--pitch-primary-note-hue-scale: 8.1;\r\n\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 43.6;\r\n\t\t\t--pitch-primary-note-lum-scale: -0.025;\r\n\t\t\t--noise-secondary-channel-hue: 220;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 62;\r\n\t\t\t--noise-secondary-channel-lum-scale: -0.1;\r\n\t\t\t--noise-primary-channel-hue: 220;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 53;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 53.5;\r\n\t\t\t--noise-primary-channel-lum-scale: -0.1;\r\n\t\t\t--noise-secondary-note-hue: 220;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 58.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 85;\r\n\t\t\t--noise-secondary-note-lum-scale: -1;\r\n\t\t\t--noise-primary-note-hue: 220;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 56.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 54;\r\n\t\t\t--noise-primary-note-lum-scale: -1;\r\n\t\t\t--mod-secondary-channel-hue: 90;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 60;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 90;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 100;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 65;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 90;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 95;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 90;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 55;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t}\r\n\t\t.beepboxEditor button, .beepboxEditor select, button {\r\n\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t}\r\n\t\t.select2-selection__rendered {\r\n\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t}\r\n\t\t.promptContainerBG::before {\r\n\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t}\r\n\t\t`,\r\n        \"energized\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #000a08;\r\n\t\t\t--editor-background: #000a08;\r\n\t\t\t--hover-preview: #ffffcc;\r\n\t\t\t--playhead: #ccfff5;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #d9d98c;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #ffff6659;\r\n\t\t\t--box-selection-fill: #ffffff33;\r\n\t\t\t--loop-accent: #ffff00;\r\n\t\t\t--link-accent: #00ffcc;\r\n\t\t\t--ui-widget-background: #141f1d;\r\n\t\t\t--ui-widget-focus: #24423d;\r\n\t\t\t--pitch-background: #001410;\r\n\t\t\t--tonic: #00241d;\r\n\t\t\t--fifth-note: #ffff6633;\r\n\t\t\t--third-note: #885a4452;\r\n\t\t\t--white-piano-key: #66998f;\r\n\t\t\t--black-piano-key: #141f1d;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #66998f40;\r\n\t\t\t--track-editor-bg-pitch-dim: #293d3940;\r\n\t\t\t--track-editor-bg-noise: #66998f40;\r\n\t\t\t--track-editor-bg-noise-dim: #293d3940;\r\n\t\t\t--track-editor-bg-mod: #99996640;\r\n\t\t\t--track-editor-bg-mod-dim: #3d3d2940;\r\n\t\t\t--multiplicative-mod-slider: #ffff00;\r\n\t\t\t--overwriting-mod-slider: #00ffcc;\r\n\t\t\t--indicator-primary: #ffff00;\r\n\t\t\t--indicator-secondary: #141f1d;\r\n\t\t\t--select2-opt-group: #1b312e;\r\n\t\t\t--input-box-outline: #141f1d;\r\n\t\t\t--mute-button-normal: #00ffcc;\r\n\t\t\t--mute-button-mod: #00997a;\r\n\t\t\t--pitch1-secondary-channel: #bfbf40;\r\n\t\t\t--pitch1-primary-channel: #ffff64;\r\n\t\t\t--pitch1-secondary-note: #bfbf40;\r\n\t\t\t--pitch1-primary-note: #ffff64;\r\n\t\t\t--pitch2-secondary-channel: #a2bf40;\r\n\t\t\t--pitch2-primary-channel: #e0ff7d;\r\n\t\t\t--pitch2-secondary-note: #a2bf40;\r\n\t\t\t--pitch2-primary-note: #e0ff7d;\r\n\t\t\t--pitch3-secondary-channel: #75bf40;\r\n\t\t\t--pitch3-primary-channel: #c1ff96;\r\n\t\t\t--pitch3-secondary-note: #75bf40;\r\n\t\t\t--pitch3-primary-note: #c1ff96;\r\n\t\t\t--pitch4-secondary-channel: #40bf51;\r\n\t\t\t--pitch4-primary-channel: #a2ffaf;\r\n\t\t\t--pitch4-secondary-note: #40bf51;\r\n\t\t\t--pitch4-primary-note: #a2ffaf;\r\n\t\t\t--pitch5-secondary-channel: #40bf86;\r\n\t\t\t--pitch5-primary-channel: #83ffc8;\r\n\t\t\t--pitch5-secondary-note: #40bf86;\r\n\t\t\t--pitch5-primary-note: #83ffc8;\r\n\t\t\t--pitch6-secondary-channel: #40bfa6;\r\n\t\t\t--pitch6-primary-channel: #64ffe1;\r\n\t\t\t--pitch6-secondary-note: #40bfa6;\r\n\t\t\t--pitch6-primary-note: #64ffe1;\r\n\t\t\t--pitch7-secondary-channel: #40bf86;\r\n\t\t\t--pitch7-primary-channel: #83ffc8;\r\n\t\t\t--pitch7-secondary-note: #40bf86;\r\n\t\t\t--pitch7-primary-note: #83ffc8;\r\n\t\t\t--pitch8-secondary-channel: #40bf51;\r\n\t\t\t--pitch8-primary-channel: #a2ffaf;\r\n\t\t\t--pitch8-secondary-note: #40bf51;\r\n\t\t\t--pitch8-primary-note: #a2ffaf;\r\n\t\t\t--pitch9-secondary-channel: #75bf40;\r\n\t\t\t--pitch9-primary-channel: #c1ff96;\r\n\t\t\t--pitch9-secondary-note: #75bf40;\r\n\t\t\t--pitch9-primary-note: #c1ff96;\r\n\t\t\t--pitch10-secondary-channel: #a2bf40;\r\n\t\t\t--pitch10-primary-channel: #e0ff7d;\r\n\t\t\t--pitch10-secondary-note: #a2bf40;\r\n\t\t\t--pitch10-primary-note: #e0ff7d;\r\n\t\t\t--noise1-secondary-channel: #a6a659;\r\n\t\t\t--noise1-primary-channel: #ffffcc;\r\n\t\t\t--noise1-secondary-note: #a6a659;\r\n\t\t\t--noise1-primary-note: #ffffcc;\r\n\t\t\t--noise2-secondary-channel: #94a659;\r\n\t\t\t--noise2-primary-channel: #f3ffcc;\r\n\t\t\t--noise2-secondary-note: #94a659;\r\n\t\t\t--noise2-primary-note: #f3ffcc;\r\n\t\t\t--noise3-secondary-channel: #79a659;\r\n\t\t\t--noise3-primary-channel: #e1ffcc;\r\n\t\t\t--noise3-secondary-note: #79a659;\r\n\t\t\t--noise3-primary-note: #e1ffcc;\r\n\t\t\t--noise4-secondary-channel: #94a659;\r\n\t\t\t--noise4-primary-channel: #f3ffcc;\r\n\t\t\t--noise4-secondary-note: #94a659;\r\n\t\t\t--noise4-primary-note: #f3ffcc;\r\n\t\t\t--noise5-secondary-channel: #a6a659;\r\n\t\t\t--noise5-primary-channel: #ffffcc;\r\n\t\t\t--noise5-secondary-note: #a6a659;\r\n\t\t\t--noise5-primary-note: #ffffcc;\r\n\t\t\t--mod1-secondary-channel: #a3a329;\r\n\t\t\t--mod1-primary-channel: #ffff00;\r\n\t\t\t--mod1-secondary-note: #a3a329;\r\n\t\t\t--mod1-primary-note: #ffff00;\r\n\t\t\t--mod2-secondary-channel: #a38529;\r\n\t\t\t--mod2-primary-channel: #ffbf00;\r\n\t\t\t--mod2-secondary-note: #a38529;\r\n\t\t\t--mod2-primary-note: #ffbf00;\r\n\t\t\t--mod3-secondary-channel: #a36629;\r\n\t\t\t--mod3-primary-channel: #ff7f00;\r\n\t\t\t--mod3-secondary-note: #a36629;\r\n\t\t\t--mod3-primary-note: #ff7f00;\r\n\t\t\t--mod4-secondary-channel: #a38529;\r\n\t\t\t--mod4-primary-channel: #ffbf00;\r\n\t\t\t--mod4-secondary-note: #a38529;\r\n\t\t\t--mod4-primary-note: #ffbf00;\r\n\t\t\t--mod-label-primary: #141f1d;\r\n\t\t\t--mod-label-secondary-text: #d9d98c;\r\n\t\t\t--mod-label-primary-text: white;\r\n\t\t\t--disabled-note-primary: #808080;\r\n\t\t\t--disabled-note-secondary: #666666;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"neapolitan\": `:root {\r\n\t\t\t--page-margin: #120807;\r\n\t\t\t--editor-background: #120807;\r\n\t\t\t--hover-preview: #e79a82;\r\n\t\t\t--playhead: #e79a82;\r\n\t\t\t--primary-text: #decdbf;\r\n\t\t\t--secondary-text: #fa99bb;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #990036;\r\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t--loop-accent: #f6377a;\r\n\t\t\t--link-accent: #f6377a;\r\n\t\t\t--ui-widget-background: #24160f;\r\n\t\t\t--ui-widget-focus: #362217;\r\n\t\t\t--pitch-background: #1e1106;\r\n\t\t\t--tonic: #382414;\r\n\t\t\t--fifth-note: #41240c;\r\n\t\t\t--third-note: #685022;\r\n\t\t\t--white-piano-key: #e1c5b7;\r\n\t\t\t--black-piano-key: #482c1e;\r\n\t\t\t--white-piano-key-text: black;\r\n\t\t\t--black-piano-key-text: white;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #4d2a19;\r\n\t\t\t--track-editor-bg-pitch-dim: #27150c;\r\n\t\t\t--track-editor-bg-noise: #4d2a19;\r\n\t\t\t--track-editor-bg-noise-dim: #27150c;\r\n\t\t\t--track-editor-bg-mod: #4d2a19;\r\n\t\t\t--track-editor-bg-mod-dim: #27150c;\r\n\t\t\t--multiplicative-mod-slider: #decdbf;\r\n\t\t\t--overwriting-mod-slider: #decdbf;\r\n\t\t\t--indicator-primary: #decdbf;\r\n\t\t\t--indicator-secondary: #362217;\r\n\t\t\t--select2-opt-group: #24160f;\r\n\t\t\t--input-box-outline: #24160f;\r\n\t\t\t--mute-button-normal: #ff66a1;\r\n\t\t\t--mute-button-mod: #e61968;\r\n\t\t\t--pitch1-secondary-channel: #680029;\r\n\t\t\t--pitch1-primary-channel: #cc0052;\r\n\t\t\t--pitch1-secondary-note: #660029;\r\n\t\t\t--pitch1-primary-note: #cc0052;\r\n\t\t\t--pitch2-secondary-channel: #7e1b43;\r\n\t\t\t--pitch2-primary-channel: #d32e71;\r\n\t\t\t--pitch2-secondary-note: #7e1b43;\r\n\t\t\t--pitch2-primary-note: #d32e71;\r\n\t\t\t--pitch3-secondary-channel: #aa275e;\r\n\t\t\t--pitch3-primary-channel: #da5d91;\r\n\t\t\t--pitch3-secondary-note: #aa275e;\r\n\t\t\t--pitch3-primary-note: #da5d91;\r\n\t\t\t--pitch4-secondary-channel: #cc3878;\r\n\t\t\t--pitch4-primary-channel: #e18bb0;\r\n\t\t\t--pitch4-secondary-note: #cc3878;\r\n\t\t\t--pitch4-primary-note: #e18bb0;\r\n\t\t\t--pitch5-secondary-channel: #d06c9b;\r\n\t\t\t--pitch5-primary-channel: #e9bad0;\r\n\t\t\t--pitch5-secondary-note: #d06c9b;\r\n\t\t\t--pitch5-primary-note: #e9bad0;\r\n\t\t\t--pitch6-secondary-channel: #c9acc5;\r\n\t\t\t--pitch6-primary-channel: #f0e8ef;\r\n\t\t\t--pitch6-secondary-note: #c9acc5;\r\n\t\t\t--pitch6-primary-note: #f0e8ef;\r\n\t\t\t--pitch7-secondary-channel: #d06c9b;\r\n\t\t\t--pitch7-primary-channel: #e9bad0;\r\n\t\t\t--pitch7-secondary-note: #d06c9b;\r\n\t\t\t--pitch7-primary-note: #e9bad0;\r\n\t\t\t--pitch8-secondary-channel: #cc3878;\r\n\t\t\t--pitch8-primary-channel: #e18bb0;\r\n\t\t\t--pitch8-secondary-note: #cc3878;\r\n\t\t\t--pitch8-primary-note: #e18bb0;\r\n\t\t\t--pitch9-secondary-channel: #aa275e;\r\n\t\t\t--pitch9-primary-channel: #da5d91;\r\n\t\t\t--pitch9-secondary-note: #aa275e;\r\n\t\t\t--pitch9-primary-note: #da5d91;\r\n\t\t\t--pitch10-secondary-channel: #7e1b43;\r\n\t\t\t--pitch10-primary-channel: #d32e71;\r\n\t\t\t--pitch10-secondary-note: #7e1b43;\r\n\t\t\t--pitch10-primary-note: #d32e71;\r\n\t\t\t--noise1-secondary-channel: #683a37;\r\n\t\t\t--noise1-primary-channel: #A85F5A;\r\n\t\t\t--noise1-secondary-note: #683a37;\r\n\t\t\t--noise1-primary-note: #A85F5A;\r\n\t\t\t--noise2-secondary-channel: #7c4a41;\r\n\t\t\t--noise2-primary-channel: #B47A70;\r\n\t\t\t--noise2-secondary-note: #7c4a41;\r\n\t\t\t--noise2-primary-note: #B47A70;\r\n\t\t\t--noise3-secondary-channel: #935f4d;\r\n\t\t\t--noise3-primary-channel: #c09587;\r\n\t\t\t--noise3-secondary-note: #935f4d;\r\n\t\t\t--noise3-primary-note: #C09587;\r\n\t\t\t--noise4-secondary-channel: #aa795a;\r\n\t\t\t--noise4-primary-channel: #cdb09d;\r\n\t\t\t--noise4-secondary-note: #aa795a;\r\n\t\t\t--noise4-primary-note: #CDAF9D;\r\n\t\t\t--noise5-secondary-channel: #bb987c;\r\n\t\t\t--noise5-primary-channel: #decdbf;\r\n\t\t\t--noise5-secondary-note: #bb987c;\r\n\t\t\t--noise5-primary-note: #decdbf;\r\n\t\t\t--mod1-secondary-channel: #6ca784;\r\n\t\t\t--mod1-primary-channel: #accdb9;\r\n\t\t\t--mod1-secondary-note: #6ca784;\r\n\t\t\t--mod1-primary-note: #accdb9;\r\n\t\t\t--mod2-secondary-channel: #7daa9f;\r\n\t\t\t--mod2-primary-channel: #bbd3cd;\r\n\t\t\t--mod2-secondary-note: #7daa9f;\r\n\t\t\t--mod2-primary-note: #bbd3cd;\r\n\t\t\t--mod3-secondary-channel: #70a3a9;\r\n\t\t\t--mod3-primary-channel: #afcccf;\r\n\t\t\t--mod3-secondary-note: #70a3a9;\r\n\t\t\t--mod3-primary-note: #afcccf;\r\n\t\t\t--mod4-secondary-channel: #5698b8;\r\n\t\t\t--mod4-primary-channel: #9ec3d6;\r\n\t\t\t--mod4-secondary-note: #5698b8;\r\n\t\t\t--mod4-primary-note: #9ec3d6;\r\n\t\t\t--mod-label-primary: #24160f;\r\n\t\t\t--mod-label-secondary-text: #E5AFC2;\r\n\t\t\t--mod-label-primary-text: #decdbf;\r\n\t\t\t--disabled-note-primary: #bababa;\r\n\t\t\t--disabled-note-secondary: #878787;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n        \"mono\": `:root {\r\n\t\t\t--page-margin: #000;\r\n\t\t\t--editor-background: #000;\r\n\t\t\t--hover-preview: #808080;\r\n\t\t\t--playhead: #808080;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #cccccc;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: #696969;\r\n\t\t\t--box-selection-fill: #cccccc40;\r\n\t\t\t--loop-accent: #808080;\r\n\t\t\t--link-accent: white;\r\n\t\t\t--ui-widget-background: #232323;\r\n\t\t\t--ui-widget-focus: #303030;\r\n\t\t\t--pitch-background: #1a1a1a;\r\n\t\t\t--tonic: #262626;\r\n\t\t\t--fifth-note: #0d0d0d;\r\n\t\t\t--third-note: #30332f;\r\n\t\t\t--white-piano-key: #808080;\r\n\t\t\t--black-piano-key: #232323;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #262626;\r\n\t\t\t--track-editor-bg-pitch-dim: #1a1a1a;\r\n\t\t\t--track-editor-bg-noise: #262626;\r\n\t\t\t--track-editor-bg-noise-dim: #1a1a1a;\r\n\t\t\t--track-editor-bg-mod: #262626;\r\n\t\t\t--track-editor-bg-mod-dim: #1a1a1a;\r\n\t\t\t--multiplicative-mod-slider: #808080;\r\n\t\t\t--overwriting-mod-slider: #808080;\r\n\t\t\t--indicator-primary: #808080;\r\n\t\t\t--indicator-secondary: #333333;\r\n\t\t\t--select2-opt-group: #232323;\r\n\t\t\t--input-box-outline: #222;\r\n\t\t\t--mute-button-normal: #808080;\r\n\t\t\t--mute-button-mod: #808080;\r\n\t\t\t--mod-label-primary: #232323;\r\n\t\t\t--mod-label-secondary-text: #696969;\r\n\t\t\t--mod-label-primary-text: #cdcdcd;\r\n\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 25;\r\n\t\t\t--pitch-secondary-channel-sat: 10;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 70;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0;\r\n\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t--pitch-primary-channel-hue-scale: 25;\r\n\t\t\t--pitch-primary-channel-sat: 50;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 95;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0;\r\n\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t--pitch-secondary-note-hue-scale: 25;\r\n\t\t\t--pitch-secondary-note-sat: 10;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 70;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0;\r\n\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t--pitch-primary-note-hue-scale: 25;\r\n\t\t\t--pitch-primary-note-sat: 50;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-note-lum: 95;\r\n\t\t\t--pitch-primary-note-lum-scale: 0;\r\n\t\t\t--noise-secondary-channel-hue: 125;\r\n\t\t\t--noise-secondary-channel-hue-scale: 50;\r\n\t\t\t--noise-secondary-channel-sat: 10;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--noise-secondary-channel-lum: 70;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 125;\r\n\t\t\t--noise-primary-channel-hue-scale: 50;\r\n\t\t\t--noise-primary-channel-sat: 50;\r\n\t\t\t--noise-primary-channel-sat-scale: 0.1;\r\n\t\t\t--noise-primary-channel-lum: 95;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 125;\r\n\t\t\t--noise-secondary-note-hue-scale: 50;\r\n\t\t\t--noise-secondary-note-sat: 10;\r\n\t\t\t--noise-secondary-note-sat-scale: 0.1;\r\n\t\t\t--noise-secondary-note-lum: 70;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 125;\r\n\t\t\t--noise-primary-note-hue-scale: 50;\r\n\t\t\t--noise-primary-note-sat: 50;\r\n\t\t\t--noise-primary-note-sat-scale: 0.1;\r\n\t\t\t--noise-primary-note-lum: 95;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 255;\r\n\t\t\t--mod-secondary-channel-hue-scale: 75;\r\n\t\t\t--mod-secondary-channel-sat: 10;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 70;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 255;\r\n\t\t\t--mod-primary-channel-hue-scale: 75;\r\n\t\t\t--mod-primary-channel-sat: 50;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 95;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 255;\r\n\t\t\t--mod-secondary-note-hue-scale: 75;\r\n\t\t\t--mod-secondary-note-sat: 10;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 70;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 255;\r\n\t\t\t--mod-primary-note-hue-scale: 75;\r\n\t\t\t--mod-primary-note-sat: 50;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 95;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary: #c6c6c6;\r\n\t\t\t--disabled-note-secondary: #8c8c8c;\r\n\t\t}`,\r\n\t\t\"blutonium\":\r\n\t\t\t`:root {\r\n\t\t\t--page-margin: #02070D;\r\n\t\t\t--editor-background: #02070D;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: #9bd1ee;\r\n\t\t\t--secondary-text: #5a6da8;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgb(68 68 255 / 99%);\r\n\t\t\t--box-selection-fill: rgb(0 0 255 / 30%);\r\n\t\t\t--loop-accent: #024aca;\r\n\t\t\t--link-accent: #024aca;\r\n\t\t\t--ui-widget-background: #161c2e;\r\n\t\t\t--ui-widget-focus: #262c3e;\r\n\t\t\t--pitch-background: #22272D;\r\n\t\t\t--tonic: #1b3056;\r\n\t\t\t--fifth-note: #344051;\r\n\t\t\t--third-note: #1b3740;\r\n\t\t\t--white-piano-key: #a6c6ed;\r\n\t\t\t--black-piano-key: #2f4687;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #25284c;\r\n\t\t\t--track-editor-bg-pitch-dim: #211c26;\r\n\t\t\t--track-editor-bg-noise: #261f42;\r\n\t\t\t--track-editor-bg-noise-dim: #1a152d;\r\n\t\t\t--track-editor-bg-mod: #183049;\r\n\t\t\t--track-editor-bg-mod-dim: #102132;\r\n\t\t\t--multiplicative-mod-slider: #344a7f;\r\n\t\t\t--overwriting-mod-slider: #344a7f;\r\n\t\t\t--indicator-primary: #024aca;\r\n\t\t\t--indicator-secondary: #00177d;\r\n\t\t\t--select2-opt-group: #141e34;\r\n\t\t\t--input-box-outline: #141e34;\r\n\t\t\t--mute-button-normal: #273b9d;\r\n\t\t\t--mute-button-mod: #27989d;\r\n\t\t\t--pitch1-secondary-channel: hsl(200, 100%, 40%);\r\n\t\t\t--pitch1-primary-channel: #99ddff;\r\n\t\t\t--pitch1-secondary-note: hsl(200, 100%, 40%);\r\n\t\t\t--pitch1-primary-note: #99ddff;\r\n\t\t\t--pitch2-secondary-channel: \thsl(212, 100%, 34%);\r\n\t\t\t--pitch2-primary-channel: #5BA8FF;\r\n\t\t\t--pitch2-secondary-note: hsl(212, 100%, 34%);\r\n\t\t\t--pitch2-primary-note: #5BA8FF;\r\n\t\t\t--pitch3-secondary-channel: #024ACA;\r\n\t\t\t--pitch3-primary-channel: #0A89FF;\r\n\t\t\t--pitch3-secondary-note: #024ACA;\r\n\t\t\t--pitch3-primary-note: #0A89FF;\r\n\t\t\t--pitch4-secondary-channel: #00177D;\r\n\t\t\t--pitch4-primary-channel: #024ACA;\r\n\t\t\t--pitch4-secondary-note: #00177D;\r\n\t\t\t--pitch4-primary-note: #024ACA;\r\n\t\t\t--pitch5-secondary-channel: #000e4e;\r\n\t\t\t--pitch5-primary-channel: #0023bf;\r\n\t\t\t--pitch5-secondary-note: #000e4e;\r\n\t\t\t--pitch5-primary-note: #0023bf;\r\n\t\t\t--pitch6-secondary-channel: #8990FE;\r\n\t\t\t--pitch6-primary-channel: #C2C6FF;\r\n\t\t\t--pitch6-secondary-note: #8990FE;\r\n\t\t\t--pitch6-primary-note: #C2C6FF;\r\n\t\t\t--pitch7-secondary-channel: #5E65D3;\r\n\t\t\t--pitch7-primary-channel: #8990FE;\r\n\t\t\t--pitch7-secondary-note: #5E65D3;\r\n\t\t\t--pitch7-primary-note: #8990FE;\r\n\t\t\t--pitch8-secondary-channel: #3138A6;\r\n\t\t\t--pitch8-primary-channel: #5E65D3;\r\n\t\t\t--pitch8-secondary-note: #3138A6;\r\n\t\t\t--pitch8-primary-note: #5E65D3;\r\n\t\t\t--pitch9-secondary-channel: #1B0B7F;\r\n\t\t\t--pitch9-primary-channel: #3138A6;\r\n\t\t\t--pitch9-secondary-note: #1B0B7F;\r\n\t\t\t--pitch9-primary-note: #3138A6;\r\n\t\t\t--pitch10-secondary-channel: #13015D;\r\n\t\t\t--pitch10-primary-channel: #1c02bd;\r\n\t\t\t--pitch10-secondary-note: #13015D;\r\n\t\t\t--pitch10-primary-note: #1c02bd;\r\n\t\t\t--noise1-secondary-channel: #A675FE;\r\n\t\t\t--noise1-primary-channel: #E2C9FF;\r\n\t\t\t--noise1-secondary-note: #A675FE;\r\n\t\t\t--noise1-primary-note: #E2C9FF;\r\n\t\t\t--noise2-secondary-channel: #6A31CA;\r\n\t\t\t--noise2-primary-channel: #A675FE;\r\n\t\t\t--noise2-secondary-note: #6A31CA;\r\n\t\t\t--noise2-primary-note: #A675FE;\r\n\t\t\t--noise3-secondary-channel: #5A1991;\r\n\t\t\t--noise3-primary-channel: #6A31CA;\r\n\t\t\t--noise3-secondary-note: #5A1991;\r\n\t\t\t--noise3-primary-note: #6A31CA;\r\n\t\t\t--noise4-secondary-channel: #2f1a68;\r\n\t\t\t--noise4-primary-channel: #5A1991;\r\n\t\t\t--noise4-secondary-note: #2f1a68;\r\n\t\t\t--noise4-primary-note: #5A1991;\r\n\t\t\t--noise5-secondary-channel: #211640;\r\n\t\t\t--noise5-primary-channel: #391b8d;\r\n\t\t\t--noise5-secondary-note: #211640;\r\n\t\t\t--noise5-primary-note: #391b8d;\r\n\t\t\t--mod1-secondary-channel: #25E2CD;\r\n\t\t\t--mod1-primary-channel: #BDFFCA;\r\n\t\t\t--mod1-secondary-note: #25E2CD;\r\n\t\t\t--mod1-primary-note: #BDFFCA;\r\n\t\t\t--mod2-secondary-channel: #0A98AC;\r\n\t\t\t--mod2-primary-channel: #25E2CD;\r\n\t\t\t--mod2-secondary-note: #0A98AC;\r\n\t\t\t--mod2-primary-note: #25E2CC;\r\n\t\t\t--mod3-secondary-channel: #005280;\r\n\t\t\t--mod3-primary-channel: #0A98AC;\r\n\t\t\t--mod3-secondary-note: #005280;\r\n\t\t\t--mod3-primary-note: #0A98AC;\r\n\t\t\t--mod4-secondary-channel: #0f3670;\r\n\t\t\t--mod4-primary-channel: #1369c1;\r\n\t\t\t--mod4-secondary-note: #0f3670;\r\n\t\t\t--mod4-primary-note: #1369c1;\r\n\t\t\t--mod-label-primary: #191d26;\r\n\t\t\t--mod-label-secondary-text: #024aca;\r\n\t\t\t--mod-label-primary-text: #ffffffa6;\r\n\t\t\t--disabled-note-primary: #c9c9c9;\r\n\t\t\t--disabled-note-secondary: #616161;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t}`,\r\n\t\"Ghost House\": `\r\n\t:root { \r\n\t\t--page-margin: #120918; \r\n\t\t--editor-background: #120918; \r\n\t\t--hover-preview: #c6f7ff; \r\n\t\t--playhead: white; \r\n\t\t--primary-text: #bbb8db; \r\n\t\t--secondary-text: #6f72b5; \r\n\t\t--inverted-text: black; \r\n\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t--box-selection-fill: rgb(43 70 171 / 62%); \r\n\t\t--loop-accent: #573ebb; \r\n\t\t--link-accent: #98f; \r\n\t\t--ui-widget-background: #1c1a2f; \r\n\t\t--ui-widget-focus: var(--ui-widget-background); \r\n\t\t--pitch-background: #3e3a5f; \r\n\t\t--tonic: #7874a1; \r\n\t\t--fifth-note: #423fff; \r\n\t\t--third-note: #534488;\r\n\t\t--white-piano-key: #bbb8db; \r\n\t\t--black-piano-key: #1c1a2f; \r\n\t\t--white-piano-key-text: #1c1a2f; \r\n\t\t--black-piano-key-text: #bbb8db; \r\n\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n\t\t--track-editor-bg-pitch: #3a3b5c; \r\n\t\t--track-editor-bg-pitch-dim: #1f2036; \r\n\t\t--track-editor-bg-noise: #3c3554; \r\n\t\t--track-editor-bg-noise-dim: #1e1834; \r\n\t\t--track-editor-bg-mod: #30335e; \r\n\t\t--track-editor-bg-mod-dim: #161938; \r\n\t\t--multiplicative-mod-slider: #573ebb; \r\n\t\t--overwriting-mod-slider: #495789; \r\n\t\t--indicator-primary: #573ebb; \r\n\t\t--indicator-secondary: #415187; \r\n\t\t--select2-opt-group: #22223a; \r\n\t\t--input-box-outline: #2d2648; \r\n\t\t--mute-button-normal: #7aceff; \r\n\t\t--mute-button-mod: #9d6bff; \r\n\t\t--pitch1-secondary-channel: #5f3ea5; \r\n\t\t--pitch1-primary-channel: #c1a4ff; \r\n\t\t--pitch1-secondary-note: #794fd3; \r\n\t\t--pitch1-primary-note: #d8c6ff; \r\n\t\t--pitch2-secondary-channel: #4f44bf; \r\n\t\t--pitch2-primary-channel: #9287ff; \r\n\t\t--pitch2-secondary-note: #5e51d9; \r\n\t\t--pitch2-primary-note: #b6afff; \r\n\t\t--pitch3-secondary-channel: #374eb9; \r\n\t\t--pitch3-primary-channel: #8097ff; \r\n\t\t--pitch3-secondary-note: #445cc9; \r\n\t\t--pitch3-primary-note: #a0b2ff; \r\n\t\t--pitch4-secondary-channel: #2867cf; \r\n\t\t--pitch4-primary-channel: #6fa5ff; \r\n\t\t--pitch4-secondary-note: #2e6ed7; \r\n\t\t--pitch4-primary-note: #a6c7ff; \r\n\t\t--pitch5-secondary-channel: #3175a7; \r\n\t\t--pitch5-primary-channel: #7ec9ff; \r\n\t\t--pitch5-secondary-note: #367eb3; \r\n\t\t--pitch5-primary-note: #9fd7ff; \r\n\t\t--pitch6-secondary-channel: #3993a9; \r\n\t\t--pitch6-primary-channel: #8ce9ff; \r\n\t\t--pitch6-secondary-note: #386da3; \r\n\t\t--pitch6-primary-note: #9eecff; \r\n\t\t--pitch7-secondary-channel: #369d8a; \r\n\t\t--pitch7-primary-channel: #8bfce7; \r\n\t\t--pitch7-secondary-note: #1c93a7; \r\n\t\t--pitch7-primary-note: #abffef; \r\n\t\t--pitch8-secondary-channel: #00A170; \r\n\t\t--pitch8-primary-channel: #50FFC9; \r\n\t\t--pitch8-secondary-note: #00C78A; \r\n\t\t--pitch8-primary-note: #83FFD9; \r\n\t\t--pitch9-secondary-channel: #49b374; \r\n\t\t--pitch9-primary-channel: #8affa9; \r\n\t\t--pitch9-secondary-note: #26815f; \r\n\t\t--pitch9-primary-note: #c8ffde; \r\n\t\t--pitch10-secondary-channel: #58a747; \r\n\t\t--pitch10-primary-channel: #bbffaa; \r\n\t\t--pitch10-secondary-note: #1d7c48; \r\n\t\t--pitch10-primary-note: #c7ffbc; \r\n\t\t--noise1-secondary-channel: #42829b; \r\n\t\t--noise1-primary-channel: #97d3fc; \r\n\t\t--noise1-secondary-note: #3f53b3; \r\n\t\t--noise1-primary-note: #97d3fc; \r\n\t\t--noise2-secondary-channel: #6354bb; \r\n\t\t--noise2-primary-channel: #9a89ff; \r\n\t\t--noise2-secondary-note: #5f4dcd; \r\n\t\t--noise2-primary-note: #c6bcff; \r\n\t\t--noise3-secondary-channel: #704a95; \r\n\t\t--noise3-primary-channel: #c285ff; \r\n\t\t--noise3-secondary-note: #ad5aff; \r\n\t\t--noise3-primary-note: #d3a6ff; \r\n\t\t--noise4-secondary-channel: #a53c65; \r\n\t\t--noise4-primary-channel: #f794bb; \r\n\t\t--noise4-secondary-note: #cb5080; \r\n\t\t--noise4-primary-note: #f794bb; \r\n\t\t--noise5-secondary-channel: #9b2d2d; \r\n\t\t--noise5-primary-channel: #ff7676; \r\n\t\t--noise5-secondary-note: #cb4444; \r\n\t\t--noise5-primary-note: #ff9999; \r\n\t\t--mod1-secondary-channel: #b7613c; \r\n\t\t--mod1-primary-channel: #ff9f76; \r\n\t\t--mod1-secondary-note: #e77e52; \r\n\t\t--mod1-primary-note: #ffb99b; \r\n\t\t--mod2-secondary-channel: #916d34; \r\n\t\t--mod2-primary-channel: #fece80; \r\n\t\t--mod2-secondary-note: #c58b35; \r\n\t\t--mod2-primary-note: #ffdda5; \r\n\t\t--mod3-secondary-channel: #83761a; \r\n\t\t--mod3-primary-channel: #fdf68c; \r\n\t\t--mod3-secondary-note: #c18e00; \r\n\t\t--mod3-primary-note: #fdf68c; \r\n\t\t--mod4-secondary-channel: #a86436; \r\n\t\t--mod4-primary-channel: #c8a825; \r\n\t\t--mod4-secondary-note: #e8ba46; \r\n\t\t--mod4-primary-note: #c8a825; \r\n\t\t--mod-label-primary: #37325e; \r\n\t\t--mod-label-secondary-text: #6e8aa7; \r\n\t\t--mod-label-primary-text: #c1ffff; \r\n\t\t--disabled-note-primary: #999; \r\n\t\t--disabled-note-secondary: #666; \r\n\t\t--note-flash: #ffffff; \r\n\t\t--note-flash-secondary: #ffffff77; }\r\n\t`,\r\n\t\"Ghost House 2\": `\r\n\t:root { \r\n\t\t--page-margin: #120918; \r\n\t\t--editor-background: #1c1a2f; \r\n\t\t--hover-preview: #c6f7ff; \r\n\t\t--playhead: white; \r\n\t\t--primary-text: #bbb8db; \r\n\t\t--secondary-text: #6f72b5; \r\n\t\t--inverted-text: black; \r\n\t\t--text-selection: rgba(119,68,255,0.99); \r\n\t\t--box-selection-fill: rgb(43 70 171 / 62%); \r\n\t\t--loop-accent: #573ebb; \r\n\t\t--link-accent: #98f; \r\n\t\t--ui-widget-background: #3e3a5f; \r\n\t\t--ui-widget-focus: var(--ui-widget-background); \r\n\t\t--pitch-background: var(--ui-widget-background); \r\n\t\t--tonic: #7874a1; \r\n\t\t--fifth-note: #423fff; \r\n\t\t--third-note: #534488;\r\n\t\t--white-piano-key: #bbb8db; \r\n\t\t--black-piano-key: #1c1a2f; \r\n\t\t--white-piano-key-text: #1c1a2f; \r\n\t\t--black-piano-key-text: #bbb8db; \r\n\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n\t\t--track-editor-bg-pitch: #3a3b5c; \r\n\t\t--track-editor-bg-pitch-dim: #1f2036; \r\n\t\t--track-editor-bg-noise: #3c3554; \r\n\t\t--track-editor-bg-noise-dim: #1e1834; \r\n\t\t--track-editor-bg-mod: #30335e; \r\n\t\t--track-editor-bg-mod-dim: #161938; \r\n\t\t--multiplicative-mod-slider: #573ebb; \r\n\t\t--overwriting-mod-slider: #495789; \r\n\t\t--indicator-primary: #573ebb; \r\n\t\t--indicator-secondary: #415187; \r\n\t\t--select2-opt-group: #22223a; \r\n\t\t--input-box-outline: #2d2648; \r\n\t\t--mute-button-normal: #7aceff; \r\n\t\t--mute-button-mod: #9d6bff; \r\n\t\t--pitch1-secondary-channel: #5f3ea5; \r\n\t\t--pitch1-primary-channel: #c1a4ff; \r\n\t\t--pitch1-secondary-note: #794fd3; \r\n\t\t--pitch1-primary-note: #d8c6ff; \r\n\t\t--pitch2-secondary-channel: #4f44bf; \r\n\t\t--pitch2-primary-channel: #9287ff; \r\n\t\t--pitch2-secondary-note: #5e51d9; \r\n\t\t--pitch2-primary-note: #b6afff; \r\n\t\t--pitch3-secondary-channel: #374eb9; \r\n\t\t--pitch3-primary-channel: #8097ff; \r\n\t\t--pitch3-secondary-note: #445cc9; \r\n\t\t--pitch3-primary-note: #a0b2ff; \r\n\t\t--pitch4-secondary-channel: #2867cf; \r\n\t\t--pitch4-primary-channel: #6fa5ff; \r\n\t\t--pitch4-secondary-note: #2e6ed7; \r\n\t\t--pitch4-primary-note: #a6c7ff; \r\n\t\t--pitch5-secondary-channel: #3175a7; \r\n\t\t--pitch5-primary-channel: #7ec9ff; \r\n\t\t--pitch5-secondary-note: #367eb3; \r\n\t\t--pitch5-primary-note: #9fd7ff; \r\n\t\t--pitch6-secondary-channel: #3993a9; \r\n\t\t--pitch6-primary-channel: #8ce9ff; \r\n\t\t--pitch6-secondary-note: #386da3; \r\n\t\t--pitch6-primary-note: #9eecff; \r\n\t\t--pitch7-secondary-channel: #369d8a; \r\n\t\t--pitch7-primary-channel: #8bfce7; \r\n\t\t--pitch7-secondary-note: #1c93a7; \r\n\t\t--pitch7-primary-note: #abffef; \r\n\t\t--pitch8-secondary-channel: #00A170; \r\n\t\t--pitch8-primary-channel: #50FFC9; \r\n\t\t--pitch8-secondary-note: #00C78A; \r\n\t\t--pitch8-primary-note: #83FFD9; \r\n\t\t--pitch9-secondary-channel: #49b374; \r\n\t\t--pitch9-primary-channel: #8affa9; \r\n\t\t--pitch9-secondary-note: #26815f; \r\n\t\t--pitch9-primary-note: #c8ffde; \r\n\t\t--pitch10-secondary-channel: #58a747; \r\n\t\t--pitch10-primary-channel: #bbffaa; \r\n\t\t--pitch10-secondary-note: #1d7c48; \r\n\t\t--pitch10-primary-note: #c7ffbc; \r\n\t\t--noise1-secondary-channel: #42829b; \r\n\t\t--noise1-primary-channel: #97d3fc; \r\n\t\t--noise1-secondary-note: #3f53b3; \r\n\t\t--noise1-primary-note: #97d3fc; \r\n\t\t--noise2-secondary-channel: #6354bb; \r\n\t\t--noise2-primary-channel: #9a89ff; \r\n\t\t--noise2-secondary-note: #5f4dcd; \r\n\t\t--noise2-primary-note: #c6bcff; \r\n\t\t--noise3-secondary-channel: #704a95; \r\n\t\t--noise3-primary-channel: #c285ff; \r\n\t\t--noise3-secondary-note: #ad5aff; \r\n\t\t--noise3-primary-note: #d3a6ff; \r\n\t\t--noise4-secondary-channel: #a53c65; \r\n\t\t--noise4-primary-channel: #f794bb; \r\n\t\t--noise4-secondary-note: #cb5080; \r\n\t\t--noise4-primary-note: #f794bb; \r\n\t\t--noise5-secondary-channel: #9b2d2d; \r\n\t\t--noise5-primary-channel: #ff7676; \r\n\t\t--noise5-secondary-note: #cb4444; \r\n\t\t--noise5-primary-note: #ff9999; \r\n\t\t--mod1-secondary-channel: #b7613c; \r\n\t\t--mod1-primary-channel: #ff9f76; \r\n\t\t--mod1-secondary-note: #e77e52; \r\n\t\t--mod1-primary-note: #ffb99b; \r\n\t\t--mod2-secondary-channel: #916d34; \r\n\t\t--mod2-primary-channel: #fece80; \r\n\t\t--mod2-secondary-note: #c58b35; \r\n\t\t--mod2-primary-note: #ffdda5; \r\n\t\t--mod3-secondary-channel: #83761a; \r\n\t\t--mod3-primary-channel: #fdf68c; \r\n\t\t--mod3-secondary-note: #c18e00; \r\n\t\t--mod3-primary-note: #fdf68c; \r\n\t\t--mod4-secondary-channel: #a86436; \r\n\t\t--mod4-primary-channel: #c8a825; \r\n\t\t--mod4-secondary-note: #e8ba46; \r\n\t\t--mod4-primary-note: #c8a825; \r\n\t\t--mod-label-primary: #37325e; \r\n\t\t--mod-label-secondary-text: #6e8aa7; \r\n\t\t--mod-label-primary-text: #c1ffff; \r\n\t\t--disabled-note-primary: #999; \r\n\t\t--disabled-note-secondary: #666; \r\n\t\t--note-flash: #ffffff; \r\n\t\t--note-flash-secondary: #ffffff77; }\r\n\t\r\n\t\t* {\r\n\t\tcursor: url(\"./image_assets/pixel_cursor.png\"), auto !important;\r\n\t\t--file-page-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-file.png\");\r\n\t\t--edit-pencil-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-edit.png\");\r\n\t\t--preferences-gear-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-preferences.png\");\r\n\t\t--instrument-copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t--instrument-paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t--play-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-play.png\");\r\n\t\t--pause-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-pause.png\");\r\n\t\t--record-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-record.png\");\r\n\t\t--stop-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-stop.png\");\r\n\t\t--prev-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-prev.png\");\r\n\t\t--next-bar-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-next.png\");\r\n\t\t--muted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speakerMuted.png\");\r\n\t\t--unmuted-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--volume-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-speaker.png\");\r\n\t\t--zoom-in-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomIn.png\");\r\n\t\t--zoom-out-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-zoomOut.png\");\r\n\t\t--export-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-export.png\");\r\n\t\t--export-instrument-symbol: var(--export-symbol);\r\n\t\t--import-symbol: url(\"https://choptop84.github.io/choptop84s-image-repository/icon-import.png\");\r\n\t\t--undo-symbol: url(\"./image_assets/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"./image_assets/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"./image_assets/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"./image_assets/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"./image_assets/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"./image_assets/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"./image_assets/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"./image_assets/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"./image_assets/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"./image_assets/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"./image_assets/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"./image_assets/icon-fullscreen.png\");\r\n\t\t--loop-within-bar-symbol: url(\"./image_assets/icon-loop-bar.png\");\r\n\t--loop-full-song-symbol: url(\"./image_assets/icon-loop-song.png\");\r\n\t--dont-loop-symbol: url(\"./image_assets/icon-loop-once.png\");\r\n\t\t} \r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType\";\r\n\t\t   src:\r\n\t\t\turl(\"./image_assets/abysstype.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\t\r\n\t\t\t#beepboxEditorContainer, .track-area, .beepboxEditor, #text-content, div.noSelection, .beepboxEditor .loopEditor {\r\n\t\t\t\tbackground-color: #fff0 !important;\r\n\t\t\t} \r\n\t\r\n\t\t\t@font-face {\r\n\t\t   font-family: \"AbyssType_small\";\r\n\t\t   src:\r\n\t\t\turl(\"./image_assets/abysstype_small.otf\") format(\"opentype\") tech(color-COLRv1),\r\n\t\t\t}\r\n\t\r\n\t\t\tbody {\r\n\t\t\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/ghosthousebg.png\") !important;\r\n\t\t\t\tbackground-size: 256px;\r\n\t\t\t\tbackground-position: center;\r\n\t\t\t\tbackground-repeat: repeat;\r\n\t\r\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\r\n\t\t\t#text-content {\r\n\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/ghosthousebg2.png\");\r\n\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t   border-image-width: 32px; \r\n\t\t\tborder-image-repeat: repeat; \r\n\t\t\t\tpadding-left: 32px; \r\n\t\t\t\tpadding-right: 32px; \r\n\t\t\t\tpadding-bottom: 16px; \r\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t}\r\n\t\t#beepboxEditorContainer {\r\n\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/ghosthousebg2.png\");\r\n\t\t\t\tborder-image-slice: 16 fill; \r\n\t\t\t   border-image-width: 32px; \r\n\t\t\tborder-image-repeat: repeat;\r\n\t\t\t\tpadding-left: 32px; \r\n\t\t\t\tpadding-right: 32px; \r\n\t\t\t\tpadding-bottom: 16px; \r\n\t\r\n\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */ \r\n\t\t\t}\r\n\t\r\n\t\t\tdiv.prompt.noSelection {\r\n\t\t\t\tbackground-color: var(--editor-background) !important;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.beepboxEditor button,\r\n\t\t\tbutton.mobilePatternButton,\r\n\t\t\tbutton.mobileTrackButton,\r\n\t\t\tbutton.mobileSettingsButton,\r\n\t\t\tbutton.mobilePlayButton,\r\n\t\t\tbutton.mobilePauseButton,\r\n\t\t\tbutton.mobileNextBarButton,\r\n\t\t\tbutton.mobilePrevBarButton,\r\n\t\t\tbutton.playButton,\r\n\t\t\tbutton.pauseButton, \r\n\t\t\tbutton.recordButton, \r\n\t\t\tbutton.stopButton,\r\n\t\t\tbutton.nextBarButton, \r\n\t\t\tbutton.prevBarButton, \r\n\t\t\tbutton.copyButton, \r\n\t\t\tbutton.pasteButton, \r\n\t\t\tbutton.exportInstrumentButton, \r\n\t\t\tbutton.importInstrumentButton, \r\n\t\t\t.beepboxEditor select, \r\n\t\t\t.beepboxEditor .select2-selection__rendered {\r\n\t\t\t\t\tborder-image-source: url(\"https://choptop84.github.io/choptop84s-image-repository/ghosthouse_button.png\") !important;\r\n\t\t\t\t\tborder-image-slice: 5 fill !important; \r\n\t\t\t\t   border-image-width: 5px !important;  \r\n\t\t\t\tborder-image-repeat: repeat !important;\r\n\t\t\t\t\t\r\n\t\r\n\t\t\t\t\timage-rendering: -moz-crisp-edges !important;         /* Firefox */\r\n\t\t\t\t\timage-rendering: -webkit-optimize-contrast !important; /* Webkit (Chrome/Safari) */\r\n\t\t\t\t\timage-rendering: -o-crisp-edges !important;            /* Opera */\r\n\t\t\t\t\timage-rendering: pixelated !important;                 /* Future browsers */\r\n\t\t\t\t\timage-rendering: optimizeSpeed !important;             /* IE */\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbutton.envelopeDropdown, div.selectRow button:not(.copyButton,.pasteButton,.exportInstrumentButton,.importInstrumentButton) {\r\n\t\t\t\t\t--ui-widget-background: var(--editor-background) !important;\r\n\t\t\t\t\tborder-image-source: none !important;\r\n\t\t\t\t}\r\n\t\r\n\t\t\thtml {\r\n\t\t\tfont-family: 'AbyssType';\r\n\t\t\t}\r\n\t\t\t\r\n\t`,\r\n\t\"ultrabox dark\": `\r\n\t\t:root {\r\n\t\t/*--mod-title: #CCCCCC;*/\r\n\t\t--loop-accent: #CCCCCC;\r\n\t\t--playhead: #CCCCCC;\r\n\t\t/*--primary-text: #CCCCCC;\r\n\t\t--hover-preview: #CCCCCC;*/\r\n\t\t--link-accent: #FF8EC5;\r\n\t\t--indicator-primary: #FF8EC5;\r\n\t\t/*--indicator-primary: #CCCCCC;*/\r\n\t\t/*--indicator-secondary: #E856B2;*/\r\n\t\t--white-piano-key: #CCCCCC;\r\n\t\t/*--black-piano-key: #444;*/\r\n\t\t--text-selection: #932253;\r\n\t\t--oscilloscope-line-L: #CCCCCC;\r\n\t\t--oscilloscope-line-R: #932253;\r\n\t\t--pitch-channel-limit: 8;\r\n\t\t--pitch1-secondary-channel: #A83030;\r\n\t\t--pitch1-primary-channel:   #FF7C7C;\r\n\t\t--pitch1-secondary-note:    #B51532;\r\n\t\t--pitch1-primary-note:      #FFA3A3;\r\n\t\t--pitch2-secondary-channel: #C75000;\r\n\t\t--pitch2-primary-channel:   #FF9752;\r\n\t\t--pitch2-secondary-note:    #FF771C;\r\n\t\t--pitch2-primary-note:      #FFCDAB;\r\n\t\t--pitch3-secondary-channel: #A1A100;\r\n\t\t--pitch3-primary-channel: #FFFF25;\r\n\t\t--pitch3-secondary-note: #C7C700;\r\n\t\t--pitch3-primary-note: #FFFF92;\r\n\t\t--pitch4-secondary-channel: #139620;\r\n\t\t--pitch4-primary-channel:   #25ff3a;\r\n\t\t--pitch4-secondary-note:    #139620;\r\n\t\t--pitch4-primary-note:      #25ff3a;\r\n\t\t--pitch5-secondary-channel: #0099A1;\r\n\t\t--pitch5-primary-channel:   #25F3FF;\r\n\t\t--pitch5-secondary-note:    #00BDC7;\r\n\t\t--pitch5-primary-note:      #92F9FF;\r\n\t\t--pitch6-secondary-channel: #58599E;\r\n\t\t--pitch6-primary-channel:   #5EA3FF;\r\n\t\t--pitch6-secondary-note:    #183AC7;\r\n\t\t--pitch6-primary-note:      #9EC8FF;\r\n\t\t--pitch7-secondary-channel: #6038a5;\r\n\t\t--pitch7-primary-channel:   #C760FF;\r\n\t\t--pitch7-secondary-note:    #5433A0;\r\n\t\t--pitch7-primary-note:      #D99EFF;\r\n\t\t--pitch8-secondary-channel: #932253;\r\n\t\t--pitch8-primary-channel:   #FF60A5;\r\n\t\t--pitch8-secondary-note:    #8E1C4E;\r\n\t\t--pitch8-primary-note:      #FF8EC5;\r\n\t\t}`,\r\n\t\t\"modbox classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #9900cc;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox 2\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #00ff00;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #c4ffa3;\r\n\t\t\t\t--fifth-note: #96fffb;\r\n\t\t\t\t--third-note: #9698ff;\r\n\t\t\t\t--octave-scrollbar: #00ff00;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #00ff00;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox artic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #ffffff;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #eafffe;\r\n\t\t\t\t--fifth-note: #b7f1ff;\r\n\t\t\t\t--third-note: #9698ff;\r\n\t\t\t\t--octave-scrollbar: #a5eeff;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #42dcff;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox ocean\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #5982ff;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #090b3a;\r\n\t\t\t\t--fifth-note: #3f669b;\r\n\t\t\t\t--third-note: #6f91bf;\r\n\t\t\t\t--octave-scrollbar: #a5eeff;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #4449a3;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox windows\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #2779c2;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #da4e2a;\r\n\t\t\t\t--fifth-note: #5d9511;\r\n\t\t\t\t--third-note: #2779c2;\r\n\t\t\t\t--octave-scrollbar: #295294;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #fdd01d;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox grassland\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #a0d168;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #20330a;\r\n\t\t\t\t--fifth-note: #74bc21;\r\n\t\t\t\t--third-note: #a0d168;\r\n\t\t\t\t--octave-scrollbar: #74bc21;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #69c400;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox dessert\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #ff6254;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #fffc5b;\r\n\t\t\t\t--fifth-note: #ff5e3a;\r\n\t\t\t\t--third-note: #ffa03a;\r\n\t\t\t\t--octave-scrollbar: #ff5e3a;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #fffc5b;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox kahoot\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #ff3355;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #45a3e5;\r\n\t\t\t\t--fifth-note: #864cbf;\r\n\t\t\t\t--third-note: #bf4ca8;\r\n\t\t\t\t--octave-scrollbar: #eb670f;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #66bf39;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox egg\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #6b003a;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #fffafa;\r\n\t\t\t\t--fifth-note: #ff91ce;\r\n\t\t\t\t--third-note: #ff91a3;\r\n\t\t\t\t--octave-scrollbar: #ffb1f4;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #75093e;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox pony\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #4b4b4b;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #1a2844;\r\n\t\t\t\t--fifth-note: #dabbe6;\r\n\t\t\t\t--third-note: #faf4c3;\r\n\t\t\t\t--octave-scrollbar: #5f4c99;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #818383;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox woodkid\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #e83c4e;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #fff6fe;\r\n\t\t\t\t--pitch1-background: #41323b;\r\n\t\t\t\t--pitch2-background: #41323b;\r\n\t\t\t\t--pitch3-background: #41323b;\r\n\t\t\t\t--fifth-note: #fff6fe;\r\n\t\t\t\t--pitch5-background: #41323b;\r\n\t\t\t\t--pitch6-background: #41323b;\r\n\t\t\t\t--third-note: #fff6fe;\r\n\t\t\t\t--pitch8-background: #41323b;\r\n\t\t\t\t--pitch9-background: #41323b;\r\n\t\t\t\t--pitch10-background: #41323b;\r\n\t\t\t\t--pitch11-background: #41323b;\r\n\t\t\t\t--octave-scrollbar: #ef3027;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #ffedca;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox midnight\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #445566;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #222222;\r\n\t\t\t\t--pitch1-background: #222222;\r\n\t\t\t\t--pitch2-background: #222222;\r\n\t\t\t\t--pitch3-background: #222222;\r\n\t\t\t\t--fifth-note: #444444;\r\n\t\t\t\t--pitch5-background: #222222;\r\n\t\t\t\t--pitch6-background:#222222;\r\n\t\t\t\t--third-note: #222222;\r\n\t\t\t\t--pitch8-background: #222222;\r\n\t\t\t\t--pitch9-background: #222222;\r\n\t\t\t\t--pitch10-background: #222222;\r\n\t\t\t\t--pitch11-background: #222222;\r\n\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #000000;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox snedbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #a53a3d;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #222222;\r\n\t\t\t\t--fifth-note: #60389b;\r\n\t\t\t\t--third-note: #10997e;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #ffffff;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox unnamed\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #ffffff;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #ffffa0; \r\n\t\t\t\t--pitch1-background: #ffffa0; \r\n\t\t\t\t--pitch2-background: #ffffa0; \r\n\t\t\t\t--pitch3-background: #ffffa0; \r\n\t\t\t\t--third-note: #ffffa0;\r\n\t\t\t\t--pitch5-background: #ffffa0; \r\n\t\t\t\t--pitch6-background: #ffffa0; \r\n\t\t\t\t--fifth-note: #ffffa0;  \r\n\t\t\t\t--pitch8-background: #ffffa0; \r\n\t\t\t\t--pitch9-background: #ffffa0; \r\n\t\t\t\t--pitch10-background: #ffffa0; \r\n\t\t\t\t--pitch11-background: #ffffa0; \r\n\t\t\t\t--octave-scrollbar: #ffffff;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #ffffff;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox halloween\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #9e2200;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #9e2200; \r\n\t\t\t\t--pitch1-background: #754a3f; \r\n\t\t\t\t--pitch2-background: #754a3f; \r\n\t\t\t\t--pitch3-background: #754a3f; \r\n\t\t\t\t--third-note: #754a3f;\r\n\t\t\t\t--pitch5-background: #754a3f; \r\n\t\t\t\t--pitch6-background: #754a3f; \r\n\t\t\t\t--fifth-note: #914300; \r\n\t\t\t\t--pitch8-background: #754a3f; \r\n\t\t\t\t--pitch9-background: #754a3f; \r\n\t\t\t\t--pitch10-background: #754a3f; \r\n\t\t\t\t--pitch11-background: #754a3f; \r\n\t\t\t\t--octave-scrollbar: #9e2200;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #ffffff;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox frozen\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\r\n\t\t\t\t--loop-accent: #38ef17;\r\n\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\r\n\t\t\t\t--tonic: #88bce8; \r\n\t\t\t\t--pitch1-background: #99c8ef; \r\n\t\t\t\t--pitch2-background: #abd3f4; \r\n\t\t\t\t--pitch3-background: #b8d7f2; \r\n\t\t\t\t--third-note: #cbe0f2;\r\n\t\t\t\t--pitch5-background: #e5f0f9; \r\n\t\t\t\t--pitch6-background: #ffffff; \r\n\t\t\t\t--fifth-note: #e5f0f9; \r\n\t\t\t\t--pitch8-background: #cbe0f2; \r\n\t\t\t\t--pitch9-background: #b8d7f2; \r\n\t\t\t\t--pitch10-background: #abd3f4; \r\n\t\t\t\t--pitch11-background: #99c8ef;\r\n\t\t\t\t--octave-scrollbar: #ffffff; \r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\r\n\t\t\t\t--black-piano-key-text: #38ef17;\r\n\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox cinnamon\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #ba8418;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\r\n\t\t\t\t--pitch-background: #444; \r\n\t\t\t\t--tonic: #f5bb00; \r\n\t\t\t\t--pitch1-background: #f5bb00; \r\n\t\t\t\t--pitch2-background: #f5bb00; \r\n\t\t\t\t--pitch3-background: #f5bb00; \r\n\t\t\t\t--third-note: #f5bb00;\r\n\t\t\t\t--pitch5-background: #f5bb00; \r\n\t\t\t\t--pitch6-background: #f5bb00; \r\n\t\t\t\t--fifth-note: #f5bb00;  \r\n\t\t\t\t--pitch8-background: #f5bb00; \r\n\t\t\t\t--pitch9-background: #f5bb00; \r\n\t\t\t\t--pitch10-background: #f5bb00; \r\n\t\t\t\t--pitch11-background: #f5bb00; \r\n\t\t\t\t--octave-scrollbar: #e59900;\r\n\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #ffff25;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox float\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #ffffff;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\r\n\t\t\t\t--pitch-background: #444; \r\n\t\t\t\t--tonic: #ffffff; \r\n\t\t\t\t--pitch1-background: #ededed;  \r\n\t\t\t\t--pitch2-background: #cecece;  \r\n\t\t\t\t--pitch3-background: #bababa;  \r\n\t\t\t\t--third-note: #afafaf;\r\n\t\t\t\t--pitch5-background: #a5a5a5; \r\n\t\t\t\t--pitch6-background: #999999; \r\n\t\t\t\t--fifth-note: #8e8e8e; \r\n\t\t\t\t--pitch8-background: #828282; \r\n\t\t\t\t--pitch9-background: #777777; \r\n\t\t\t\t--pitch10-background: #565656; \r\n\t\t\t\t--pitch11-background: #282828; \r\n\t\t\t\t--octave-scrollbar: #ffffff; \r\n\t\t\t\t\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #000000;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox rainbow\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #ff0000;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\r\n\t\t\t\t--pitch-background: #444; \r\n\t\t\t\t--tonic: #ffaaaa; \r\n\t\t\t\t--pitch1-background: #ffceaa; \r\n\t\t\t\t--pitch2-background: #ffdfaa; \r\n\t\t\t\t--pitch3-background: #fff5aa; \r\n\t\t\t\t--third-note: #e8ffaa;\r\n\t\t\t\t--pitch5-background: #bfffb2; \r\n\t\t\t\t--pitch6-background: #b2ffc8; \r\n\t\t\t\t--fifth-note: #b2ffe4; \r\n\t\t\t\t--pitch8-background: #b2f3ff; \r\n\t\t\t\t--pitch9-background: #b2b3ff; \r\n\t\t\t\t--pitch10-background: #e0b2ff; \r\n\t\t\t\t--pitch11-background: #ffafe9; \r\n\t\t\t\t--octave-scrollbar: #43ff00; \r\n\t\t\t\t\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #000000;\r\n\t\t\t\t--black-piano-key-text: #fefe00;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox bitbeam\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #fefe00;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\r\n\t\t\t\t--pitch-background: #444; \r\n\t\t\t\t--tonic: #fefe00; \r\n\t\t\t\t--pitch1-background: #111111; \r\n\t\t\t\t--pitch2-background: #111111; \r\n\t\t\t\t--pitch3-background: #111111; \r\n\t\t\t\t--third-note: #fa0103;\r\n\t\t\t\t--pitch5-background: #111111; \r\n\t\t\t\t--pitch6-background: #111111; \r\n\t\t\t\t--fifth-note: #111111; \r\n\t\t\t\t--pitch8-background: #0001fc; \r\n\t\t\t\t--pitch9-background: #111111; \r\n\t\t\t\t--pitch10-background: #111111; \r\n\t\t\t\t--pitch11-background: #111111;\r\n\t\t\t\t--octave-scrollbar: #0001fc;  \r\n\t\t\t\t\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #8bac0f;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox gameboy\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #9bbc0f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\r\n\t\t\t\t--pitch-background: #444; \r\n\t\t\t\t--tonic: #9bbc0f; \r\n\t\t\t\t--pitch1-background: #9bbc0f; \r\n\t\t\t\t--pitch2-background: #9bbc0f; \r\n\t\t\t\t--pitch3-background: #9bbc0f; \r\n\t\t\t\t--third-note: #9bbc0f;\r\n\t\t\t\t--pitch5-background: #9bbc0f; \r\n\t\t\t\t--pitch6-background: #306230; \r\n\t\t\t\t--fifth-note: #306230; \r\n\t\t\t\t--pitch8-background: #306230; \r\n\t\t\t\t--pitch9-background: #0f380f; \r\n\t\t\t\t--pitch10-background: #0f380f; \r\n\t\t\t\t--pitch11-background: #0f380f; \r\n\t\t\t\t--octave-scrollbar: #9bbc0f;  \r\n\t\t\t\t\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n\t\t\t --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"modbox piano\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #ffffff;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--use-piano-scheme: true;\r\n\r\n\t\t\t\t--tonic: #fff;\r\n\t\t\t\t--third-note: #7a7a7a;\r\n\t\t\t\t--fifth-note: #7a7a7a;\r\n\r\n\t\t\t\t--white-tonic: #fff;\r\n\t\t\t\t--black-tonic: #222;\r\n\t\t\t\t--white-third-note: #f7f7f7;\r\n\t\t\t\t--black-third-note: #444444;\r\n\t\t\t\t--white-fifth-note: #f7f7f7;\r\n\t\t\t\t--black-fifth-note: #444444;\r\n\t\t\t\t--pitch-white-key: #bfbfbf;\r\n\t\t\t\t--pitch-black-key: #7a7a7a;\r\n\t\t\t\t--octave-scrollbar: #211616;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"nepbox snedbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #000;\r\n\t\t\t\t--editor-background: #060606;\r\n\t\t\t\t--hover-preview: #fff;\r\n\t\t\t\t--playhead: rgb(0, 242, 255);\r\n\t\t\t\t--primary-text: #00fff5;\r\n\t\t\t\t--secondary-text: #a82f2f;\r\n\t\t\t\t--inverted-text: #000;\r\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\r\n\t\t\t\t--box-selection-fill: #b74a4a;\r\n\r\n\t\t\t\t--loop-accent: #7744FF;\r\n\r\n\t\t\t\t--link-accent: #ff00e1;\r\n\t\t\t\t--ui-widget-background: #484848;\r\n\t\t\t\t--ui-widget-focus: #3e3e3e;\r\n\t\t\t\t--pitch-background: #444444;\r\n\r\n\t\t\t\t--use-piano-scheme: true;\r\n\r\n\t\t\t\t--tonic: #886644;\r\n\t\t\t\t--third-note: #7a7a7a;\r\n\t\t\t\t--fifth-note: #7a7a7a;\r\n\r\n\t\t\t\t--white-tonic: #886644;\r\n\t\t\t\t--black-tonic: #886644;\r\n\t\t\t\t--white-third-note: #f7f7f7;\r\n\t\t\t\t--black-third-note: #444444;\r\n\t\t\t\t--white-fifth-note: #f7f7f7;\r\n\t\t\t\t--black-fifth-note: #444444;\r\n\t\t\t\t--pitch-white-key: #bfbfbf;\r\n\t\t\t\t--pitch-black-key: #7a7a7a;\r\n\r\n\t\t\t\t--pitch1-background: #ffffff;\r\n\t\t\t\t--pitch2-background: #ffffff;\r\n\t\t\t\t--pitch3-background: #ffffff;\r\n\t\t\t\t--pitch5-background: #ffffff;\r\n\t\t\t\t--pitch6-background: #ffffff;\r\n\t\t\t\t--pitch8-background: #ffffff;\r\n\t\t\t\t--pitch9-background: #ffffff;\r\n\t\t\t\t--pitch10-background: #ffffff;\r\n\t\t\t\t--pitch11-background: #ffffff;\r\n\r\n\t\t\t\t--pitch-white-key: #bfbfbf;\r\n\t\t\t\t--pitch-black-key: #7a7a7a;\r\n\t\t\t\t--octave-scrollbar: #211616;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"nepbox piano\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #000;\r\n\t\t\t\t--editor-background: #060606;\r\n\t\t\t\t--hover-preview: #fff;\r\n\t\t\t\t--playhead: rgb(0, 242, 255);\r\n\t\t\t\t--primary-text: #00fff5;\r\n\t\t\t\t--secondary-text: #a82f2f;\r\n\t\t\t\t--inverted-text: #000;\r\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\r\n\t\t\t\t--box-selection-fill: #b74a4a;\r\n\r\n\t\t\t\t--loop-accent: #7744FF;\r\n\r\n\t\t\t\t--link-accent: #ff00e1;\r\n\t\t\t\t--ui-widget-background: #484848;\r\n\t\t\t\t--ui-widget-focus: #3e3e3e;\r\n\t\t\t\t--pitch-background: #444444;\r\n\r\n\t\t\t\t--tonic: #ffffff;\r\n\t\t\t\t--third-note: #ffffff;\r\n\t\t\t\t--fifth-note: #ffffff;\r\n\r\n\t\t\t\t--pitch1-background: #ffffff;\r\n\t\t\t\t--pitch2-background: #ffffff;\r\n\t\t\t\t--pitch3-background: #ffffff;\r\n\t\t\t\t--pitch5-background: #ffffff;\r\n\t\t\t\t--pitch6-background: #ffffff;\r\n\t\t\t\t--pitch8-background: #ffffff;\r\n\t\t\t\t--pitch9-background: #ffffff;\r\n\t\t\t\t--pitch10-background: #ffffff;\r\n\t\t\t\t--pitch11-background: #ffffff;\r\n\r\n\t\t\t\t--pitch-white-key: #bfbfbf;\r\n\t\t\t\t--pitch-black-key: #7a7a7a;\r\n\t\t\t\t--octave-scrollbar: #211616;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"nepbox laffey\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #000;\r\n\t\t\t\t--editor-background: #060606;\r\n\t\t\t\t--hover-preview: #fff;\r\n\t\t\t\t--playhead: rgb(0, 242, 255);\r\n\t\t\t\t--primary-text: #00fff5;\r\n\t\t\t\t--secondary-text: #a82f2f;\r\n\t\t\t\t--inverted-text: #000;\r\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\r\n\t\t\t\t--box-selection-fill: #b74a4a;\r\n\r\n\t\t\t\t--loop-accent: #7744FF;\r\n\r\n\t\t\t\t--link-accent: #ff00e1;\r\n\t\t\t\t--ui-widget-background: #484848;\r\n\t\t\t\t--ui-widget-focus: #3e3e3e;\r\n\t\t\t\t--pitch-background: #444444;\r\n\r\n\t\t\t\t--tonic: #dbbeed;\r\n\t\t\t\t--pitch1-background: #1a2182; \r\n\t\t\t\t--pitch2-background: #1a2182; \r\n\t\t\t\t--pitch3-background: #1a2182; \r\n\t\t\t\t--third-note: #1a2182;\r\n\t\t\t\t--pitch5-background: #1a2182; \r\n\t\t\t\t--pitch6-background: #1a2182; \r\n\t\t\t\t--fifth-note: #6b1313;\r\n\t\t\t\t--pitch8-background: #1a2182; \r\n\t\t\t\t--pitch9-background: #1a2182; \r\n\t\t\t\t--pitch10-background: #1a2182; \r\n\t\t\t\t--pitch11-background: #1a2182;\r\n\t\t\t\t--octave-scrollbar: #852929;\r\n\r\n\t\t\t\t--white-piano-key: #bababa;\r\n\t\t\t\t--black-piano-key: #444444;\r\n\t\t\t\t--white-piano-key-text: #484848;\r\n\r\n\t\t\t\t--black-piano-key-text: #ffffff;\r\n\r\n\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t--track-editor-bg-pitch: #424242;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #000;\r\n\t\t\t\t--track-editor-bg-noise: #424242;\r\n\t\t\t\t--track-editor-bg-noise-dim: #000;\r\n\t\t\t\t--track-editor-bg-mod: #3c3c3c;\r\n\t\t\t\t--track-editor-bg-mod-dim: #000;\r\n\t\t\t\t--multiplicative-mod-slider: #fff;\r\n\t\t\t\t--overwriting-mod-slider: #9d9d9d;\r\n\t\t\t\t--indicator-primary: #f00;\r\n\t\t\t\t--indicator-secondary: #919191;\r\n\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t--input-box-outline: #626262;\r\n\t\t\t\t--mute-button-normal: #9a00ff;\r\n\t\t\t\t--mute-button-mod: #00fff7;\r\n\t\t\t\t--mod-label-primary: #2b2b2b;\r\n\t\t\t\t--noise-channel-limit: 2;\r\n\t\t\t\t--pitch1-secondary-channel: #c13cbf;\r\n\t\t\t\t--pitch1-primary-channel: #f75dff;\r\n\t\t\t\t--pitch1-secondary-note: #b930a2;\r\n\t\t\t\t--pitch1-primary-note: #fca5ff;\r\n\t\t\t\t--pitch2-secondary-channel: #800000;\r\n\t\t\t\t--pitch2-primary-channel: #f00;\r\n\t\t\t\t--pitch2-secondary-note: #8c2121;\r\n\t\t\t\t--pitch2-primary-note: #ff5252;\r\n\t\t\t\t--pitch3-secondary-channel: #004bb3;\r\n\t\t\t\t--pitch3-primary-channel: #1792ff;\r\n\t\t\t\t--pitch3-secondary-note: #005cb3;\r\n\t\t\t\t--pitch3-primary-note: #00ffe9;\r\n\t\t\t\t--pitch4-secondary-channel: #a48800;\r\n\t\t\t\t--pitch4-primary-channel: #fb0;\r\n\t\t\t\t--pitch4-secondary-note: #9c4100;\r\n\t\t\t\t--pitch4-primary-note: #ffd84e;\r\n\t\t\t\t--pitch5-secondary-channel: #6c0000;\r\n\t\t\t\t--pitch5-primary-channel:   #ff3e3e;\r\n\t\t\t\t--pitch5-secondary-note:    #6c0000;\r\n\t\t\t\t--pitch5-primary-note:      #ff3e3e;\r\n\t\t\t\t--pitch6-secondary-channel:#d25a00;\r\n\t\t\t\t--pitch6-primary-channel:  #fdff00;\r\n\t\t\t\t--pitch6-secondary-note:   #d25a00;\r\n\t\t\t\t--pitch6-primary-note:     #fdff00;\r\n\t\t\t\t--pitch7-secondary-channel: #046000;\r\n\t\t\t\t--pitch7-primary-channel:   #0c79ff;\r\n\t\t\t\t--pitch7-secondary-note:    #046000;\r\n\t\t\t\t--pitch7-primary-note:      #0c79ff;\r\n\t\t\t\t--pitch8-secondary-channel:#3b2bae;\r\n\t\t\t\t--pitch8-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch8-secondary-note:   #3b2bae;\r\n\t\t\t\t--pitch8-primary-note:     #d85d00;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #868686;\r\n\t\t\t\t--noise1-primary-channel: #fff;\r\n\t\t\t\t--noise1-secondary-note: #868686;\r\n\t\t\t\t--noise1-primary-note: #fff;\r\n\t\t\t\t--noise2-secondary-channel: #805300;\r\n\t\t\t\t--noise2-primary-channel: #ff8c00;\r\n\t\t\t\t--noise2-secondary-note: #6a3500;\r\n\t\t\t\t--noise2-primary-note: #a85400;\r\n\t\t\t\t--mod1-secondary-channel: #6c0000;\r\n\t\t\t\t--mod1-primary-channel: #ff3e3e;\r\n\t\t\t\t--mod1-secondary-note: #6c0000;\r\n\t\t\t\t--mod1-primary-note: #ff3e3e;\r\n\t\t\t\t--mod2-secondary-channel: #d25a00;\r\n\t\t\t\t--mod2-primary-channel: #fdff00;\r\n\t\t\t\t--mod2-secondary-note: #d25a00;\r\n\t\t\t\t--mod2-primary-note: #fdff00;\r\n\t\t\t\t--mod3-secondary-channel: #046000;\r\n\t\t\t\t--mod3-primary-channel: #23ff1b;\r\n\t\t\t\t--mod3-secondary-note: #046000;\r\n\t\t\t\t--mod3-primary-note: #23ff1b;\r\n\t\t\t\t--mod4-secondary-channel: #3b2bae;\r\n\t\t\t\t--mod4-primary-channel: #0c79ff;\r\n\t\t\t\t--mod4-secondary-note: #3b2bae;\r\n\t\t\t\t--mod4-primary-note: #0c79ff;\r\n\t\t\t\t--disabled-note-primary: #999;\r\n\t\t\t\t--disabled-note-secondary: #696969;\r\n\r\n\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"zefbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #C3593D;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #ff8864;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #06c400;\r\n\t\t\t\t--pitch1-primary-channel:   #08ff00;\r\n\t\t\t\t--pitch1-secondary-note:    #06c400;\r\n\t\t\t\t--pitch1-primary-note:      #06e000;\r\n\t\t\t\t--pitch2-secondary-channel: #00bf97;\r\n\t\t\t\t--pitch2-primary-channel:   #00ffcb;\r\n\t\t\t\t--pitch2-secondary-note:    #00bf97;\r\n\t\t\t\t--pitch2-primary-note:      #00edbc;\r\n\t\t\t\t--pitch3-secondary-channel: #b5b000;\r\n\t\t\t\t--pitch3-primary-channel:   #fffa00;\r\n\t\t\t\t--pitch3-secondary-note:    #b5b000;\r\n\t\t\t\t--pitch3-primary-note:      #e0db00;\r\n\t\t\t\t--pitch4-secondary-channel: #c90000;\r\n\t\t\t\t--pitch4-primary-channel:   #e20000;\r\n\t\t\t\t--pitch4-secondary-note:    #c90000;\r\n\t\t\t\t--pitch4-primary-note:      #e20000;\r\n\t\t\t\t--pitch5-secondary-channel: #d17d12;\r\n\t\t\t\t--pitch5-primary-channel:   #ff9e21;\r\n\t\t\t\t--pitch5-secondary-note:    #d17d12;\r\n\t\t\t\t--pitch5-primary-note:      #ef9017;\r\n\t\t\t\t--pitch6-secondary-channel: #d35bc8;\r\n\t\t\t\t--pitch6-primary-channel:   #ffa5f7;\r\n\t\t\t\t--pitch6-secondary-note:    #d35bc8;\r\n\t\t\t\t--pitch6-primary-note:      #fc64ee;\r\n\t\t\t\t--pitch7-secondary-channel: #D00000;\r\n\t\t\t\t--pitch7-primary-channel:   #FF4444;\r\n\t\t\t\t--pitch7-secondary-note:    #D00000;\r\n\t\t\t\t--pitch7-primary-note:      #FF4444;\r\n\t\t\t\t--pitch8-secondary-channel: #00C700;\r\n\t\t\t\t--pitch8-primary-channel:   #A0FFA0;\r\n\t\t\t\t--pitch8-secondary-note:    #00C700;\r\n\t\t\t\t--pitch8-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch9-secondary-channel: #A88981;\r\n\t\t\t\t--pitch9-primary-channel:   #F1C3B7;\r\n\t\t\t\t--pitch9-secondary-note:    #A88981;\r\n\t\t\t\t--pitch9-primary-note:      #F1C3B7;\r\n\t\t\t\t--pitch10-secondary-channel:#0C0A99;\r\n\t\t\t\t--pitch10-primary-channel:  #0000EE;\r\n\t\t\t\t--pitch10-secondary-note:   #0C0A99;\r\n\t\t\t\t--pitch10-primary-note:     #0000EE;\r\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\r\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\r\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\r\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\r\n\t\t\t\t--noise2-secondary-channel: #A18F51;\r\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\r\n\t\t\t\t--noise2-secondary-note:    #A18F51;\r\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768DFC;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768DFC;\r\n\t\t\t\t--noise4-secondary-channel: #8888D0;\r\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\r\n\t\t\t\t--noise4-secondary-note:    #8888D0;\r\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\r\n\t\t\t\t--noise5-secondary-channel: #B7148E;\r\n\t\t\t\t--noise5-primary-channel:   #E819B4;\r\n\t\t\t\t--noise5-secondary-note:    #B7148E;\r\n\t\t\t\t--noise5-primary-note:      #E819B4;\r\n       --mod1-secondary-channel: #06c400;\r\n\t\t\t\t--mod1-primary-channel:   #08ff00;\r\n\t\t\t\t--mod1-secondary-note:    #06c400;\r\n\t\t\t\t--mod1-primary-note:      #06e000;\r\n\t\t\t\t--mod2-secondary-channel: #00bf97;\r\n\t\t\t\t--mod2-primary-channel:   #00ffcb;\r\n\t\t\t\t--mod2-secondary-note:    #00bf97;\r\n\t\t\t\t--mod2-primary-note:      #00edbc;\r\n\t\t\t\t--mod3-secondary-channel: #b5b000;\r\n\t\t\t\t--mod3-primary-channel:   #fffa00;\r\n\t\t\t\t--mod3-secondary-note:    #b5b000;\r\n\t\t\t\t--mod3-primary-note:      #e0db00;\r\n\t\t\t\t--mod4-secondary-channel: #c90000;\r\n\t\t\t\t--mod4-primary-channel:   #e20000;\r\n\t\t\t\t--mod4-secondary-note:    #c90000;\r\n\t\t\t\t--mod4-primary-note:      #e20000;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"sandbox classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #198195;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 4;\r\n\t\t\t\t--pitch1-secondary-channel: #539999;\r\n\t\t\t\t--pitch1-primary-channel:   #5EB1B1;\r\n\t\t\t\t--pitch1-secondary-note:    #539999;\r\n\t\t\t\t--pitch1-primary-note:      #5EB1B1;\r\n\t\t\t\t--pitch2-secondary-channel: #95933C;\r\n\t\t\t\t--pitch2-primary-channel:   #B0AD44;\r\n\t\t\t\t--pitch2-secondary-note:    #95933C;\r\n\t\t\t\t--pitch2-primary-note:      #B0AD44;\r\n\t\t\t\t--pitch3-secondary-channel: #E75566;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9AA6;\r\n\t\t\t\t--pitch3-secondary-note:    #E75566;\r\n\t\t\t\t--pitch3-primary-note:      #FF9AA6;\r\n\t\t\t\t--pitch4-secondary-channel: #8B4343;\r\n\t\t\t\t--pitch4-primary-channel:   #FF8844;\r\n\t\t\t\t--pitch4-secondary-note:    #8B4343;\r\n\t\t\t\t--pitch4-primary-note:      #FF8844;\r\n\t\t\t\t--pitch5-secondary-channel: #888888;\r\n\t\t\t\t--pitch5-primary-channel:   #BBBBBB;\r\n\t\t\t\t--pitch5-secondary-note:    #888888;\r\n\t\t\t\t--pitch5-primary-note:      #BBBBBB;\r\n\t\t\t\t--pitch6-secondary-channel: #BB6906;\r\n\t\t\t\t--pitch6-primary-channel:   #FE8D00;\r\n\t\t\t\t--pitch6-secondary-note:    #BB6906;\r\n\t\t\t\t--pitch6-primary-note:      #FE8D00;\r\n\t\t\t\t--pitch7-secondary-channel: #539999;\r\n\t\t\t\t--pitch7-primary-channel:   #5EB1B1;\r\n\t\t\t\t--pitch7-secondary-note:    #539999;\r\n\t\t\t\t--pitch7-primary-note:      #5EB1B1;\r\n\t\t\t\t--pitch8-secondary-channel: #95933C;\r\n\t\t\t\t--pitch8-primary-channel:   #B0AD44;\r\n\t\t\t\t--pitch8-secondary-note:    #95933C;\r\n\t\t\t\t--pitch8-primary-note:      #B0AD44;\r\n\t\t\t\t--pitch9-secondary-channel: #E75566;\r\n\t\t\t\t--pitch9-primary-channel:   #FF9AA6;\r\n\t\t\t\t--pitch9-secondary-note:    #E75566;\r\n\t\t\t\t--pitch9-primary-note:      #FF9AA6;\r\n\t\t\t\t--pitch10-secondary-channel: #8B4343;\r\n\t\t\t\t--pitch10-primary-channel:   #FF8844;\r\n\t\t\t\t--pitch10-secondary-note:    #8B4343;\r\n\t\t\t\t--pitch10-primary-note:      #FF8844;\t\t\t\r\n\t\t\t\t--noise1-secondary-channel: #ABABAB;\r\n\t\t\t\t--noise1-primary-channel:   #D6D6D6;\r\n\t\t\t\t--noise1-secondary-note:    #ABABAB;\r\n\t\t\t\t--noise1-primary-note:      #D6D6D6;\r\n\t\t\t\t--noise2-secondary-channel: #A18F51;\r\n\t\t\t\t--noise2-primary-channel:   #F6BB6A;\r\n\t\t\t\t--noise2-secondary-note:    #A18F51;\r\n\t\t\t\t--noise2-primary-note:      #F6BB6A;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768DFC;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768DFC;\r\n\t\t\t\t--noise4-secondary-channel: #8888D0;\r\n\t\t\t\t--noise4-primary-channel:   #D0D0FF;\r\n\t\t\t\t--noise4-secondary-note:    #8888D0;\r\n\t\t\t\t--noise4-primary-note:      #D0D0FF;\r\n\t\t\t\t--noise5-secondary-channel: #A18F51;\r\n\t\t\t\t--noise5-primary-channel:   #F6BB6A;\r\n\t\t\t\t--noise5-secondary-note:    #A18F51;\r\n\t\t\t\t--noise5-primary-note:      #F6BB6A;\t\t\t\r\n         \t--mod1-secondary-channel: #539999;\r\n\t\t\t\t--mod1-primary-channel:   #5EB1B1;\r\n\t\t\t\t--mod1-secondary-note:    #539999;\r\n\t\t\t\t--mod1-primary-note:      #5EB1B1;\r\n\t\t\t\t--mod2-secondary-channel: #95933C;\r\n\t\t\t\t--mod2-primary-channel:   #B0AD44;\r\n\t\t\t\t--mod2-secondary-note:    #95933C;\r\n\t\t\t\t--mod2-primary-note:      #B0AD44;\r\n\t\t\t\t--mod3-secondary-channel: #E75566;\r\n\t\t\t\t--mod3-primary-channel:   #FF9AA6;\r\n\t\t\t\t--mod3-secondary-note:    #E75566;\r\n\t\t\t\t--mod3-primary-note:      #FF9AA6;\r\n\t\t\t\t--mod4-secondary-channel: #8B4343;\r\n\t\t\t\t--mod4-primary-channel:   #FF8844;\r\n\t\t\t\t--mod4-secondary-note:    #8B4343;\r\n\t\t\t\t--mod4-primary-note:      #FF8844;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"harrybox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #9900cc;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--noise-channel-limit: 2;\r\n\t\t\t\t--pitch1-secondary-channel: #00ffff;\r\n\t\t\t\t--pitch1-primary-channel:   #00ffff;\r\n\t\t\t\t--pitch1-secondary-note:    #00ffff;\r\n\t\t\t\t--pitch1-primary-note:      #00ffff;\r\n\t\t\t\t--pitch2-secondary-channel: #00d8d8;\r\n\t\t\t\t--pitch2-primary-channel:   #00d8d8;\r\n\t\t\t\t--pitch2-secondary-note:    #00d8d8;\r\n\t\t\t\t--pitch2-primary-note:      #00d8d8;\r\n\t\t\t\t--pitch3-secondary-channel: #00adad;\r\n\t\t\t\t--pitch3-primary-channel:   #00adad;\r\n\t\t\t\t--pitch3-secondary-note:    #00adad;\r\n\t\t\t\t--pitch3-primary-note:      #00adad;\r\n\t\t\t\t-pitch4-secondary-channel: #008c8c;\r\n\t\t\t\t--pitch4-primary-channel:   #008c8c;\r\n\t\t\t\t--pitch4-secondary-note:    #008c8c;\r\n\t\t\t\t--pitch4-primary-note:      #008c8c;\r\n\t\t\t\t--pitch5-secondary-channel: #005b5b;\r\n\t\t\t\t--pitch5-primary-channel:   #005b5b;\r\n\t\t\t\t--pitch5-secondary-note:    #005b5b;\r\n\t\t\t\t--pitch5-primary-note:      #005b5b;\r\n\t\t\t\t--pitch6-secondary-channel: #003333;\r\n\t\t\t\t--pitch6-primary-channel:   #003333;\r\n\t\t\t\t--pitch6-secondary-note:    #003333;\r\n\t\t\t\t--pitch6-primary-note:      #003333;\r\n\t\t\t\t--pitch7-secondary-channel: #00ffff;\r\n\t\t\t\t--pitch7-primary-channel:   #00ffff;\r\n\t\t\t\t--pitch7-secondary-note:    #00ffff;\r\n\t\t\t\t--pitch7-primary-note:      #00ffff;\r\n\t\t\t\t--pitch8-secondary-channel: #00ffff;\r\n\t\t\t\t--pitch8-primary-channel:   #00ffff;\r\n\t\t\t\t--pitch8-secondary-note:    #00ffff;\r\n\t\t\t\t--pitch8-primary-note:      #00ffff;\r\n\t\t\t\t--pitch9-secondary-channel: #00ffff;\r\n\t\t\t\t--pitch9-primary-channel:   #00ffff;\r\n\t\t\t\t--pitch9-secondary-note:    #00ffff;\r\n\t\t\t\t--pitch9-primary-note:      #00ffff;\r\n\t\t\t\t--pitch10-secondary-channel:#00ffff;\r\n\t\t\t\t--pitch10-primary-channel:  #00ffff;\r\n\t\t\t\t--pitch10-secondary-note:   #00ffff;\r\n\t\t\t\t--pitch10-primary-note:     #00ffff;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #991010;\r\n\t\t\t\t--noise3-primary-channel:   #ff1616;\r\n\t\t\t\t--noise3-secondary-note:    #991010;\r\n\t\t\t\t--noise3-primary-note:      #ff1616;\r\n\t\t\t\t--noise4-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise4-primary-channel:   #ffffff;\r\n\t\t\t\t--noise4-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise4-primary-note:      #ffffff;\r\n\t\t\t\t--noise5-secondary-channel: #991010;\r\n\t\t\t\t--noise5-primary-channel:   #ff1616;\r\n\t\t\t\t--noise5-secondary-note:    #991010;\r\n\t\t\t\t--noise5-primary-note:      #ff1616;\r\n         \t--mod1-secondary-channel: #00ffff;\r\n\t\t\t\t--mod1-primary-channel:   #00ffff;\r\n\t\t\t\t--mod1-secondary-note:    #00ffff;\r\n\t\t\t\t--mod1-primary-note:      #00ffff;\r\n\t\t\t\t--mod2-secondary-channel: #00d8d8;\r\n\t\t\t\t--mod2-primary-channel:   #00d8d8;\r\n\t\t\t\t--mod2-secondary-note:    #00d8d8;\r\n\t\t\t\t--mod2-primary-note:      #00d8d8;\r\n\t\t\t\t--mod3-secondary-channel: #00adad;\r\n\t\t\t\t--mod3-primary-channel:   #00adad;\r\n\t\t\t\t--mod3-secondary-note:    #00adad;\r\n\t\t\t\t--mod3-primary-note:      #00adad;\r\n\t\t\t\t-mod4-secondary-channel: #008c8c;\r\n\t\t\t\t--mod4-primary-channel:   #008c8c;\r\n\t\t\t\t--mod4-secondary-note:    #008c8c;\r\n\t\t\t\t--mod4-primary-note:      #008c8c;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"brucebox\": `\r\n\t\t\t:root {\r\n\t\t\t\tfont: 16px/2 cursive;\r\n\t\t\t\t--page-margin: #4667CE;\r\n\t\t\t\t--editor-background: #4667CE;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #444;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #444;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 3;\r\n\t\t\t\t\t--noise-channel-limit: 1;\r\n\t\t\t\t--pitch1-secondary-channel: #bda822;\r\n\t\t\t\t--pitch1-primary-channel:   #fcdb00;\r\n\t\t\t\t--pitch1-secondary-note:    #bda822;\r\n\t\t\t\t--pitch1-primary-note:      #fcdb00;\r\n\t\t\t\t--pitch2-secondary-channel: #612278;\r\n\t\t\t\t--pitch2-primary-channel:   #bb00ff;\r\n\t\t\t\t--pitch2-secondary-note:    #612278;\r\n\t\t\t\t--pitch2-primary-note:      #bb00ff;\r\n\t\t\t\t--pitch3-secondary-channel: #8b4343;\r\n\t\t\t\t--pitch3-primary-channel:   #ff8844;\r\n\t\t\t\t--pitch3-secondary-note:    #8b4343;\r\n\t\t\t\t--pitch3-primary-note:      #ff8844;\r\n\t\t\t\t--pitch4-secondary-channel: #bda822;\r\n\t\t\t\t--pitch4-primary-channel:   #fcdb00;\r\n\t\t\t\t--pitch4-secondary-note:    #bda822;\r\n\t\t\t\t--pitch4-primary-note:      #fcdb00;\r\n\t\t\t\t--pitch5-secondary-channel: #612278;\r\n\t\t\t\t--pitch5-primary-channel:   #bb00ff;\r\n\t\t\t\t--pitch5-secondary-note:    #612278;\r\n\t\t\t\t--pitch5-primary-note:      #bb00ff;\r\n\t\t\t\t--pitch6-secondary-channel: #8b4343;\r\n\t\t\t\t--pitch6-primary-channel:   #ff8844;\r\n\t\t\t\t--pitch6-secondary-note:    #8b4343;\r\n\t\t\t\t--pitch6-primary-note:      #ff8844;\r\n\t\t\t\t--pitch7-secondary-channel: #bda822;\r\n\t\t\t\t--pitch7-primary-channel:   #fcdb00;\r\n\t\t\t\t--pitch7-secondary-note:    #bda822;\r\n\t\t\t\t--pitch7-primary-note:      #fcdb00;\r\n\t\t\t\t--pitch8-secondary-channel: #612278;\r\n\t\t\t\t--pitch8-primary-channel:   #bb00ff;\r\n\t\t\t\t--pitch8-secondary-note:    #612278;\r\n\t\t\t\t--pitch8-primary-note:      #bb00ff;\r\n\t\t\t\t--pitch9-secondary-channel: #8b4343;\r\n\t\t\t\t--pitch9-primary-channel:   #ff8844;\r\n\t\t\t\t--pitch9-secondary-note:    #8b4343;\r\n\t\t\t\t--pitch9-primary-note:      #ff8844;\r\n\t\t\t\t--pitch10-secondary-channel: #bda822;\r\n\t\t\t\t--pitch10-primary-channel:   #fcdb00;\r\n\t\t\t\t--pitch10-secondary-note:    #bda822;\r\n\t\t\t\t--pitch10-primary-note:      #fcdb00;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tspan input, \r\n\t\t\t\tdiv.harmonics svg,\r\n\t\t\t\tdiv.spectrum svg,\r\n\t\t\t\tdiv.filterEditor svg,\r\n\t\t\t\tdiv.fadeInOut svg,\r\n\t\t\t\tdiv.loopEditor svg,\r\n\t\t\t\tsvg#firstImage,\r\n\t\t\t\tdiv.trackContainer div.noSelection\r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: black !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinput, textarea {\r\n\t\t\t\t\tbackground-color: black !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t#text-content > section > h1 {\r\n\t\t\t\t\tcolor: white;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"shitbox 1.0\": `\r\n\t\t\t\r\n\t\t\t:root {\r\n\t\t\t   --page-margin: #252525;\r\n\t\t\t   --editor-background: #252525;\r\n\t\t\t   --hover-preview: white;\r\n\t\t\t   --playhead: white;\r\n\t\t\t   --primary-text: #6e6e6e;\r\n\t\t\t   --secondary-text: #999;\r\n\t\t\t   --inverted-text: black;\r\n\t\t\t   --text-selection: rgba(119,68,255,0.99);\r\n\t\t\t   --box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t   --loop-accent: #74f;\r\n\t\t\t   --link-accent: #945800;\r\n\t\t\t   --ui-widget-background: #444;\r\n\t\t\t   --ui-widget-focus: #565656;\r\n\t\t\t   --pitch-background: #444;\r\n\t\t\t   --tonic: #864;\r\n\t\t\t   --fifth-note: #468;\r\n\t\t\t   --third-note: #486;\r\n\t\t\t   --white-piano-key: #bbb;\r\n\t\t\t   --black-piano-key: #444;\r\n\t\t\t   --white-piano-key-text: #131200;\r\n\t\t\t   --black-piano-key-text: #fff;\r\n\t\t\t\t   --use-color-formula: false;\r\n\t\t\t\t   --track-editor-bg-pitch: #444;\r\n\t\t\t\t   --track-editor-bg-pitch-dim: #444;\r\n\t\t\t\t   --track-editor-bg-noise: #444;\r\n\t\t\t\t   --track-editor-bg-noise-dim: #444;\r\n\t\t\t\t   --track-editor-bg-mod: #234;\r\n\t\t\t\t   --track-editor-bg-mod-dim: #123;\r\n\t\t\t\t   --multiplicative-mod-slider: #456;\r\n\t\t\t\t   --overwriting-mod-slider: #654;\r\n\t\t\t\t   --indicator-primary: #74f;\r\n\t\t\t\t   --indicator-secondary: #444;\r\n\t\t\t\t   --select2-opt-group: #585858;\r\n\t\t\t\t   --input-box-outline: #333;\r\n\t\t\t\t   --mute-button-normal: #ffa033;\r\n\t\t\t\t   --mute-button-mod: #9a6bff;\r\n\t\t\t\t   --noise-channel-limit: 3;\r\n\t\t\t   \t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t   --noise1-secondary-channel: #6F6F6F;\r\n\t\t\t   --noise1-primary-channel:   #AAAAAA;\r\n\t\t\t   --noise1-secondary-note:    #A7A7A7;\r\n\t\t\t   --noise1-primary-note:      #E0E0E0;\r\n\t\t\t   --noise2-secondary-channel: #996633;\r\n\t\t\t   --noise2-primary-channel:   #DDAA77;\r\n\t\t\t   --noise2-secondary-note:    #CC9966;\r\n\t\t\t   --noise2-primary-note:      #F0D0BB;\r\n\t\t\t   --noise3-secondary-channel: #4A6D8F;\r\n\t\t\t   --noise3-primary-channel:   #77AADD;\r\n\t\t\t   --noise3-secondary-note:    #6F9FCF;\r\n\t\t\t   --noise3-primary-note:      #BBD7FF;\r\n\t\t\t   --noise4-secondary-channel: #7A4F9A;\r\n\t\t\t   --noise4-primary-channel:   #AF82D2;\r\n\t\t\t   --noise4-secondary-note:    #9E71C1;\r\n\t\t\t   --noise4-primary-note:      #D4C1EA;\r\n\t\t\t   --noise5-secondary-channel: #607837;\r\n\t\t\t   --noise5-primary-channel:   #A2BB77;\r\n\t\t\t   --noise5-secondary-note:    #91AA66;\r\n\t\t\t   --noise5-primary-note:      #C5E2B2;\r\n\t\t --mod1-secondary-channel:   #339955;\r\n\t\t\t\t   --mod1-primary-channel:     #77fc55;\r\n\t\t\t\t   --mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t   --mod1-primary-note:        #cdffee;\r\n\t\t\t\t   --mod2-secondary-channel:   #993355;\r\n\t\t\t\t   --mod2-primary-channel:     #f04960;\r\n\t\t\t\t   --mod2-secondary-note:      #f057a0;\r\n\t\t\t\t   --mod2-primary-note:        #ffb8de;\r\n\t\t\t\t   --mod3-secondary-channel:   #553399;\r\n\t\t\t\t   --mod3-primary-channel:     #8855fc;\r\n\t\t\t\t   --mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t   --mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t   --mod4-secondary-channel:   #a86436;\r\n\t\t\t\t   --mod4-primary-channel:     #c8a825;\r\n\t\t\t\t   --mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t   --mod4-primary-note:        #fff6d3;\r\n\t\t\t\t   --mod-label-primary:        #999;\r\n\t\t\t\t   --mod-label-secondary-text: #333;\r\n\t\t\t\t   --mod-label-primary-text:   black;\r\n\t\t\t\t   --disabled-note-primary:    #999;\r\n\t\t\t\t   --disabled-note-secondary:  #666;\r\n\t\t\t\t   --mod-title: #6e6e6e;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\t\t   width: 8px !important;\r\n\t\t\t\t }\r\n\r\n\t\t\t   button.playButton {\r\n\t\t\t\t   width: 80px;\r\n\t\t\t   }\r\n\t\t\t   button.prevBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t\t   left:-5px;\r\n\t\t\t   }\r\n\t\t\t   button.nextBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   span input, \r\n\t\t\t   div.harmonics svg,\r\n\t\t\t   div.spectrum svg,\r\n\t\t\t   div.filterEditor svg,\r\n\t\t\t   div.fadeInOut svg,\r\n\t\t\t   div.loopEditor svg,\r\n\t\t\t   svg#firstImage \r\n\t\t\t   {\r\n\t\t\t\t   background: black !important;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor {\r\n\t\t\t\t   line-height: 1.25;\r\n\t\t\t   }\r\n\r\n\t\t\t\t.trackContainer .noSelection {\r\n\t\t\t\tbackground: black !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t   #text-content {\r\n\t\t\t\t   font-size: 32px;\r\n\t\t\t\t   line-height: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   #text-content > section > h1 {\r\n\t\t\t\t   color: #C8C8C8;\r\n\t\t\t\t   }\r\n\r\n\t\t\t   html {\r\n\t\t\t\t   font-family: monospace !important;\r\n\t\t\t\t   }\r\n\t\t\t   #octaveScrollBarContainer {\r\n\t\t\t   background-color: black;\r\n\t\t\t   }\t\r\n\t\t   `,\r\n\t\t\t \"shitbox 2.0\": `\r\n\t\t\t:root {\r\n\t\t\t--page-margin: maroon;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: firebrick;\r\n\t\t\t\t\t--primary-text: silver;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(139,69,19,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(220,20,60,0.2);\r\n\t\t\t\t\t--loop-accent: #841;\r\n\t\t\t\t\t--link-accent: #841;\r\n\t\t\t\t\t--ui-widget-background: #800;\r\n\t\t\t\t\t--ui-widget-focus: #a00;\r\n\t\t\t\t\t--pitch-background: #700;\r\n\t\t\t\t\t--tonic: #522;\r\n\t\t\t\t\t--fifth-note: #f75;\r\n\t\t\t\t\t--third-note: #9d3535;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t--pitch1-secondary-channel: #7e4a35;\r\n\t\t\t\t\t--pitch1-primary-channel:   #c27251;\r\n\t\t\t\t\t--pitch1-secondary-note:    #7e4a35;\r\n\t\t\t\t\t--pitch1-primary-note:      #f09571;\r\n\t\t\t\t\t--pitch2-secondary-channel: #998a5c;\r\n\t\t\t\t\t--pitch2-primary-channel:   #d9c27c;\r\n\t\t\t\t\t--pitch2-secondary-note:    #998a5c;\r\n\t\t\t\t\t--pitch2-primary-note:      #fae196;\r\n\t\t\t\t\t--pitch3-secondary-channel: #9c927c;\r\n\t\t\t\t\t--pitch3-primary-channel:   #dbceb0;\r\n\t\t\t\t\t--pitch3-secondary-note:    #9c927c;\r\n\t\t\t\t\t--pitch3-primary-note:      #eddebb;\r\n\t\t\t\t\t--pitch4-secondary-channel: #838060;\r\n\t\t\t\t\t--pitch4-primary-channel:   #ccc795;\r\n\t\t\t\t\t--pitch4-secondary-note:    #838060;\r\n\t\t\t\t\t--pitch4-primary-note:      #f2ecb1;\r\n\t\t\t\t\t--pitch5-secondary-channel: #8b6f47;\r\n\t\t\t\t\t--pitch5-primary-channel:   #d1a76b;\r\n\t\t\t\t\t--pitch5-secondary-note:    #8b6f47;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffcc82;\r\n\t\t\t\t\t--pitch6-secondary-channel: #a96e5b;\r\n\t\t\t\t\t--pitch6-primary-channel:   #e3967d;\r\n\t\t\t\t\t--pitch6-secondary-note:    #a96e5b;\r\n\t\t\t\t\t--pitch6-primary-note:      #ffa68a;\r\n\t\t\t\t\t\t--pitch7-secondary-channel: #7e4a35;\r\n\t\t\t\t\t--pitch7-primary-channel:   #c27251;\r\n\t\t\t\t\t--pitch7-secondary-note:    #7e4a35;\r\n\t\t\t\t\t--pitch7-primary-note:      #f09571;\r\n\t\t\t\t\t--pitch8-secondary-channel: #998a5c;\r\n\t\t\t\t\t--pitch8-primary-channel:   #d9c27c;\r\n\t\t\t\t\t--pitch8-secondary-note:    #998a5c;\r\n\t\t\t\t\t--pitch8-primary-note:      #fae196;\r\n\t\t\t\t\t--pitch9-secondary-channel: #9c927c;\r\n\t\t\t\t\t--pitch9-primary-channel:   #dbceb0;\r\n\t\t\t\t\t--pitch9-secondary-note:    #9c927c;\r\n\t\t\t\t\t--pitch9-primary-note:      #eddebb;\r\n\t\t\t\t\t--pitch10-secondary-channel: #838060;\r\n\t\t\t\t\t--pitch10-primary-channel:   #ccc795;\r\n\t\t\t\t\t--pitch10-secondary-note:    #838060;\r\n\t\t\t\t\t--pitch10-primary-note:      #f2ecb1;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise4-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise4-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise4-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise5-secondary-channel: #996633;\r\n\t\t\t\t\t--noise5-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise5-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise5-primary-note:      #f0d0bb;\r\n         --mod1-secondary-channel: #7e4a35;\r\n\t\t\t\t\t--mod1-primary-channel:   #c27251;\r\n\t\t\t\t\t--mod1-secondary-note:    #7e4a35;\r\n\t\t\t\t\t--mod1-primary-note:      #f09571;\r\n\t\t\t\t\t--mod2-secondary-channel: #998a5c;\r\n\t\t\t\t\t--mod2-primary-channel:   #d9c27c;\r\n\t\t\t\t\t--mod2-secondary-note:    #998a5c;\r\n\t\t\t\t\t--mod2-primary-note:      #fae196;\r\n\t\t\t\t\t--mod3-secondary-channel: #9c927c;\r\n\t\t\t\t\t--mod3-primary-channel:   #dbceb0;\r\n\t\t\t\t\t--mod3-secondary-note:    #9c927c;\r\n\t\t\t\t\t--mod3-primary-note:      #eddebb;\r\n\t\t\t\t\t--mod4-secondary-channel: #838060;\r\n\t\t\t\t\t--mod4-primary-channel:   #ccc795;\r\n\t\t\t\t\t--mod4-secondary-note:    #838060;\r\n\t\t\t\t\t--mod4-primary-note:      #f2ecb1;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"shitbox 3.0\": `\r\n\t\t\t\r\n\t\t\t :root {\r\n\t\t\t\t--page-margin: #252525;\r\n\t\t\t\t--editor-background: #252525;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: #C8C8C8;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #945800;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #444;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #444;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t--mod-title: #C8C8C8;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\t\t\twidth: 8px !important;\r\n\t\t\t\t  }\r\n\r\n\t\t\t\tbutton.playButton {\r\n\t\t\t\t\twidth: 80px;\r\n\t\t\t\t}\r\n\t\t\t\tbutton.prevBarButton {\r\n\t\t\t\t\twidth: 40px;\r\n\t\t\t\t\tleft:-5px;\r\n\t\t\t\t}\r\n\t\t\t\tbutton.nextBarButton {\r\n\t\t\t\t\twidth: 40px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tspan input, \r\n\t\t\t\tdiv.harmonics svg,\r\n\t\t\t\tdiv.spectrum svg,\r\n\t\t\t\tdiv.filterEditor svg,\r\n\t\t\t\tdiv.fadeInOut svg,\r\n\t\t\t\tdiv.loopEditor svg,\r\n\t\t\t\tsvg#firstImage \r\n\t\t\t\t{\r\n\t\t\t\t\tbackground: black !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.beepboxEditor {\r\n\t\t\t\t\tline-height: 1.25;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t#text-content {\r\n\t\t\t\t\tfont-size: 32px;\r\n\t\t\t\t\tline-height: 40px;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.trackContainer .noSelection {\r\n\t\t\t\tbackground: black !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t#text-content > section > h1 {\r\n\t\t\t\t\tcolor: #C8C8C8;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\thtml {\r\n\t\t\t\t\tfont-family: monospace !important;\r\n\t\t\t\t\t}\r\n\t\t\t\t#octaveScrollBarContainer {\r\n\t\t\t\tbackground-color: black;\r\n\t\t\t\t}\t\r\n\t\t\t`,\r\n\t\t\t\"shitbox ModBox 2.0\": `\r\n\t\t\t\r\n\t\t\t:root {\r\n\t\t\t   --page-margin: #252525;\r\n\t\t\t   --editor-background: #252525;\r\n\t\t\t   --hover-preview: white;\r\n\t\t\t   --playhead: white;\r\n\t\t\t   --primary-text: #C8C8C8;\r\n\t\t\t   --secondary-text: #999;\r\n\t\t\t   --inverted-text: black;\r\n\t\t\t   --text-selection: rgba(119,68,255,0.99);\r\n\t\t\t   --box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t   --loop-accent: #00ff00;\r\n\t\t\t   --link-accent: #945800;\r\n\t\t\t   --ui-widget-background: #444;\r\n\t\t\t   --ui-widget-focus: #565656;\r\n\t\t\t   --pitch-background: #444;\r\n\t\t\t   --tonic: #c4ffa3;\r\n\t\t\t\t--fifth-note: #96fffb;\r\n\t\t\t\t--third-note: #9698ff;\r\n\t\t\t\t--octave-scrollbar: #00ff00;\r\n\t\t\t   --white-piano-key: #bbb;\r\n\t\t\t   --black-piano-key: #444;\r\n\t\t\t   --white-piano-key-text: #131200;\r\n\t\t\t   --black-piano-key-text: #fff;\r\n\t\t\t\t   --use-color-formula: false;\r\n\t\t\t\t   --track-editor-bg-pitch: #444;\r\n\t\t\t\t   --track-editor-bg-pitch-dim: #444;\r\n\t\t\t\t   --track-editor-bg-noise: #444;\r\n\t\t\t\t   --track-editor-bg-noise-dim: #444;\r\n\t\t\t\t   --track-editor-bg-mod: #234;\r\n\t\t\t\t   --track-editor-bg-mod-dim: #123;\r\n\t\t\t\t   --multiplicative-mod-slider: #456;\r\n\t\t\t\t   --overwriting-mod-slider: #654;\r\n\t\t\t\t   --indicator-primary: #74f;\r\n\t\t\t\t   --indicator-secondary: #444;\r\n\t\t\t\t   --select2-opt-group: #585858;\r\n\t\t\t\t   --input-box-outline: #333;\r\n\t\t\t\t   --mute-button-normal: #ffa033;\r\n\t\t\t\t   --mute-button-mod: #9a6bff;\r\n\t\t\t\t   \r\n\t\t\t\t   --noise-channel-limit: 3;\r\n\t\t\t  --pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t   --mod-label-primary:        #999;\r\n\t\t\t\t   --mod-label-secondary-text: #333;\r\n\t\t\t\t   --mod-label-primary-text:   black;\r\n\t\t\t\t   --disabled-note-primary:    #999;\r\n\t\t\t\t   --disabled-note-secondary:  #666;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\t\t   width: 8px !important;\r\n\t\t\t\t }\r\n\r\n\t\t\t   button.playButton {\r\n\t\t\t\t   width: 80px;\r\n\t\t\t   }\r\n\t\t\t   button.prevBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t\t   left:-5px;\r\n\t\t\t   }\r\n\t\t\t   button.nextBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t\t#octaveScrollBarContainer {\r\n\t\t\t\tbackground-color: black;\r\n\t\t\t\t}\r\n\r\n\t\t\t   span input, \r\n\t\t\t   div.harmonics svg,\r\n\t\t\t   div.spectrum svg,\r\n\t\t\t   div.filterEditor svg,\r\n\t\t\t   div.fadeInOut svg,\r\n\t\t\t   div.loopEditor svg,\r\n\t\t\t   svg#firstImage \r\n\t\t\t   {\r\n\t\t\t\t   background: black !important;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor {\r\n\t\t\t\t   line-height: 1.25;\r\n\t\t\t   }\r\n\r\n\t\t\t   #text-content {\r\n\t\t\t\t   font-size: 32px;\r\n\t\t\t\t   line-height: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   #text-content > section > h1 {\r\n\t\t\t\t   color: #C8C8C8;\r\n\t\t\t\t   }\r\n\r\n\t\t\t\t.trackContainer .noSelection {\r\n\t\t\t\tbackground: black !important;\r\n\t\t\t\t}\r\n\t\t\t\t   \r\n\t\t\t   html {\r\n\t\t\t\t   font-family: monospace !important;\r\n\t\t\t\t   }\r\n\t\t   `,\r\n\t\t\t\"shitbox Realm\": `\r\n\t\t\t:root {\r\n\t\t\t   --page-margin: #252525;\r\n\t\t\t   --editor-background: #252525;\r\n\t\t\t   --hover-preview: white;\r\n\t\t\t   --playhead: white;\r\n\t\t\t   --primary-text: #6e6e6e;\r\n\t\t\t   --secondary-text: #999;\r\n\t\t\t   --inverted-text: black;\r\n\t\t\t   --text-selection: rgba(119,68,255,0.99);\r\n\t\t\t   --box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t   --loop-accent: #673daf;\r\n\t\t\t   --link-accent: #945800;\r\n\t\t\t   --ui-widget-background: #444;\r\n\t\t\t   --ui-widget-focus: #565656;\r\n\t\t\t   --pitch-background: #444;\r\n\t\t\t   --tonic: #673daf;\r\n\t\t\t   --fifth-note: #673daf;\r\n\t\t\t   --third-note: #673daf;\r\n\t\t\t   --pitch1-background: #673daf;\r\n\t\t\t   --pitch2-background: #673daf;\r\n\t\t\t   --pitch3-background: #673daf;\r\n\t\t\t   --pitch5-background: #673daf;\r\n\t\t\t   --pitch6-background: #673daf;\r\n\t\t\t   --pitch8-background: #673daf;\r\n\t\t\t   --pitch9-background: #673daf;\r\n\t\t\t   --pitch10-background: #673daf;\r\n\t\t\t   --pitch11-background: #673daf;\r\n\t\t\t   --octave-scrollbar: #673daf;\r\n\t\t\t   --white-piano-key: #bbb;\r\n\t\t\t   --black-piano-key: #444;\r\n\t\t\t   --white-piano-key-text: #131200;\r\n\t\t\t   --black-piano-key-text: #fff;\r\n\t\t\t\t   --use-color-formula: false;\r\n\t\t\t\t   --track-editor-bg-pitch: #444;\r\n\t\t\t\t   --track-editor-bg-pitch-dim: #444;\r\n\t\t\t\t   --track-editor-bg-noise: #444;\r\n\t\t\t\t   --track-editor-bg-noise-dim: #444;\r\n\t\t\t\t   --track-editor-bg-mod: #234;\r\n\t\t\t\t   --track-editor-bg-mod-dim: #123;\r\n\t\t\t\t   --multiplicative-mod-slider: #456;\r\n\t\t\t\t   --overwriting-mod-slider: #654;\r\n\t\t\t\t   --indicator-primary: #74f;\r\n\t\t\t\t   --indicator-secondary: #444;\r\n\t\t\t\t   --select2-opt-group: #585858;\r\n\t\t\t\t   --input-box-outline: #333;\r\n\t\t\t\t   --mute-button-normal: #ffa033;\r\n\t\t\t\t   --mute-button-mod: #9a6bff;\r\n\t\t\t\t   \r\n\t\t\t\t   --noise-channel-limit: 3;\r\n\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t--pitch1-secondary-note:    #0099a1;\r\n\t\t\t\t--pitch1-primary-note:      #25f3ff;\r\n\t\t\t\t--pitch2-secondary-channel: #439143;\r\n\t\t\t\t--pitch2-primary-channel:   #44ff44;\r\n\t\t\t\t--pitch2-secondary-note:    #439143;\r\n\t\t\t\t--pitch2-primary-note:      #44ff44;\r\n\t\t\t\t--pitch3-secondary-channel: #a1a100;\r\n\t\t\t\t--pitch3-primary-channel:   #ffff25;\r\n\t\t\t\t--pitch3-secondary-note:    #a1a100;\r\n\t\t\t\t--pitch3-primary-note:      #ffff25;\r\n\t\t\t\t--pitch4-secondary-channel: #c75000;\r\n\t\t\t\t--pitch4-primary-channel:   #ff9752;\r\n\t\t\t\t--pitch4-secondary-note:    #c75000;\r\n\t\t\t\t--pitch4-primary-note:      #ff9752;\r\n\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #d020d0;\r\n\t\t\t\t--pitch5-primary-note:      #ff90ff;\r\n\t\t\t\t--pitch6-secondary-channel: #552377;\r\n\t\t\t\t--pitch6-primary-channel:   #9f31ea;\r\n\t\t\t\t--pitch6-secondary-note:    #552377;\r\n\t\t\t\t--pitch6-primary-note:      #9f31ea;\r\n\t\t\t\t--pitch7-secondary-channel: #221b89;\r\n\t\t\t\t--pitch7-primary-channel:   #2b6aff;\r\n\t\t\t\t--pitch7-secondary-note:    #221b89;\r\n\t\t\t\t--pitch7-primary-note:      #2b6aff;\r\n\t\t\t\t--pitch8-secondary-channel: #00995f;\r\n\t\t\t\t--pitch8-primary-channel:   #00ff9f;\r\n\t\t\t\t--pitch8-secondary-note:    #00995f;\r\n\t\t\t\t--pitch8-primary-note:      #00ff9f;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #991010;\r\n\t\t\t\t--noise1-primary-channel:   #ff1616;\r\n\t\t\t\t--noise1-secondary-note:    #991010;\r\n\t\t\t\t--noise1-primary-note:      #ff1616;\r\n\t\t\t\t--noise2-secondary-channel: #aaaaaa;\r\n\t\t\t\t--noise2-primary-channel:   #ffffff;\r\n\t\t\t\t--noise2-secondary-note:    #aaaaaa;\r\n\t\t\t\t--noise2-primary-note:      #ffffff;\r\n\t\t\t\t--noise3-secondary-channel: #5869BD;\r\n\t\t\t\t--noise3-primary-channel:   #768dfc;\r\n\t\t\t\t--noise3-secondary-note:    #5869BD;\r\n\t\t\t\t--noise3-primary-note:      #768dfc;\r\n\t\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n         --mod1-secondary-channel: #0099a1;\r\n\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t--mod1-secondary-note:    #0099a1;\r\n\t\t\t\t--mod1-primary-note:      #25f3ff;\r\n\t\t\t\t--mod2-secondary-channel: #439143;\r\n\t\t\t\t--mod2-primary-channel:   #44ff44;\r\n\t\t\t\t--mod2-secondary-note:    #439143;\r\n\t\t\t\t--mod2-primary-note:      #44ff44;\r\n\t\t\t\t--mod3-secondary-channel: #a1a100;\r\n\t\t\t\t--mod3-primary-channel:   #ffff25;\r\n\t\t\t\t--mod3-secondary-note:    #a1a100;\r\n\t\t\t\t--mod3-primary-note:      #ffff25;\r\n\t\t\t\t--mod4-secondary-channel: #c75000;\r\n\t\t\t\t--mod4-primary-channel:   #ff9752;\r\n\t\t\t\t--mod4-secondary-note:    #c75000;\r\n\t\t\t\t--mod4-primary-note:      #ff9752;\r\n\t\t\t\t   --mod-label-primary:        #999;\r\n\t\t\t\t   --mod-label-secondary-text: #333;\r\n\t\t\t\t   --mod-label-primary-text:   black;\r\n\t\t\t\t   --disabled-note-primary:    #999;\r\n\t\t\t\t   --disabled-note-secondary:  #666;\r\n\t\t\t\t   --mod-title: #6e6e6e;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\t\t   width: 8px !important;\r\n\t\t\t\t }\r\n\r\n\t\t\t\t.trackContainer .noSelection {\r\n\t\t\t\tbackground: black !important;\r\n\t\t\t\t}\r\n\r\n\t\t\t   button.playButton {\r\n\t\t\t\t   width: 80px;\r\n\t\t\t   }\r\n\t\t\t   button.prevBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t\t   left:-5px;\r\n\t\t\t   }\r\n\t\t\t   button.nextBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   span input, \r\n\t\t\t   div.harmonics svg,\r\n\t\t\t   div.spectrum svg,\r\n\t\t\t   div.filterEditor svg,\r\n\t\t\t   div.fadeInOut svg,\r\n\t\t\t   div.loopEditor svg,\r\n\t\t\t   svg#firstImage \r\n\t\t\t   {\r\n\t\t\t\t   background: black !important;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor {\r\n\t\t\t\t   line-height: 1.25;\r\n\t\t\t   }\r\n\r\n\t\t\t\t#octaveScrollBarContainer {\r\n\t\t\t\tbackground-color: black;\r\n\t\t\t\t}\r\n\r\n\t\t\t   #text-content {\r\n\t\t\t\t   font-size: 32px;\r\n\t\t\t\t   line-height: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   #text-content > section > h1 {\r\n\t\t\t\t   color: #C8C8C8;\r\n\t\t\t\t   }\r\n\r\n\t\t\t   html {\r\n\t\t\t\t   font: monospace !important;\r\n\t\t\t\t   }\r\n\t\t   `,\r\n\t\t\t\"shitbox4\": `\r\n\t\t\t:root {\r\n\t\t\t   font: 20px/2 monospace;\r\n\t\t\t   --page-margin: #252525;\r\n\t\t\t   --editor-background: #252525;\r\n\t\t\t   --hover-preview: white;\r\n\t\t\t   --playhead: white;\r\n\t\t\t   --primary-text: #C8C8C8;\r\n\t\t\t   --secondary-text: #999;\r\n\t\t\t   --inverted-text: black;\r\n\t\t\t   --text-selection: rgba(119,68,255,0.99);\r\n\t\t\t   --box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t   --loop-accent: #74f;\r\n\t\t\t   --link-accent: #945800;\r\n\t\t\t   --ui-widget-background: #444;\r\n\t\t\t   --ui-widget-focus: #777;\r\n\t\t\t   --pitch-background: #444;\r\n\t\t\t   --tonic: #864;\r\n\t\t\t   --fifth-note: #468;\r\n\t\t\t   --third-note: #486;\r\n\t\t\t   --white-piano-key: #bbb;\r\n\t\t\t   --black-piano-key: #444;\r\n\t\t\t   --white-piano-key-text: #131200;\r\n\t\t\t   --black-piano-key-text: #fff;\r\n\t\t\t\t   --use-color-formula: false;\r\n\t\t\t\t   --track-editor-bg-pitch: #444;\r\n\t\t\t\t   --track-editor-bg-pitch-dim: #444;\r\n\t\t\t\t   --track-editor-bg-noise: #444;\r\n\t\t\t\t   --track-editor-bg-noise-dim: #444;\r\n\t\t\t\t   --track-editor-bg-mod: #234;\r\n\t\t\t\t   --track-editor-bg-mod-dim: #123;\r\n\t\t\t\t   --multiplicative-mod-slider: #456;\r\n\t\t\t\t   --overwriting-mod-slider: #654;\r\n\t\t\t\t   --indicator-primary: #74f;\r\n\t\t\t\t   --indicator-secondary: #444;\r\n\t\t\t\t   --select2-opt-group: #585858;\r\n\t\t\t\t   --input-box-outline: #333;\r\n\t\t\t\t   --mute-button-normal: #ffa033;\r\n\t\t\t\t   --mute-button-mod: #9a6bff;\r\n\t\t\t\t   --pitch-channel-limit: 6;\r\n\t\t\t\t   --noise-channel-limit: 3;\r\n\t\t\t   --pitch1-secondary-channel: #0099A1;\r\n\t\t\t   --pitch1-primary-channel:   #25F3FF;\r\n\t\t\t   --pitch1-secondary-note:    #00BDC7;\r\n\t\t\t   --pitch1-primary-note:      #92F9FF;\r\n\t\t\t   --pitch2-secondary-channel: #A1A100;\r\n\t\t\t   --pitch2-primary-channel:   #FFFF25;\r\n\t\t\t   --pitch2-secondary-note:    #C7C700;\r\n\t\t\t   --pitch2-primary-note:      #FFFF92;\r\n\t\t\t   --pitch3-secondary-channel: #C75000;\r\n\t\t\t   --pitch3-primary-channel:   #FF9752;\r\n\t\t\t   --pitch3-secondary-note:    #FF771C;\r\n\t\t\t   --pitch3-primary-note:      #FFCDAB;\r\n\t\t\t   --pitch4-secondary-channel: #00A100;\r\n\t\t\t   --pitch4-primary-channel:   #50FF50;\r\n\t\t\t   --pitch4-secondary-note:    #00C700;\r\n\t\t\t   --pitch4-primary-note:      #A0FFA0;\r\n\t\t\t   --pitch5-secondary-channel: #D020D0;\r\n\t\t\t   --pitch5-primary-channel:   #FF90FF;\r\n\t\t\t   --pitch5-secondary-note:    #E040E0;\r\n\t\t\t   --pitch5-primary-note:      #FFC0FF;\r\n\t\t\t   --pitch6-secondary-channel: #7777B0;\r\n\t\t\t   --pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t   --pitch6-secondary-note:    #8888D0;\r\n\t\t\t   --pitch6-primary-note:      #D0D0FF;\r\n\t\t\t   --pitch7-secondary-channel: #8AA100;\r\n\t\t\t   --pitch7-primary-channel:   #DEFF25;\r\n\t\t\t   --pitch7-secondary-note:    #AAC700;\r\n\t\t\t   --pitch7-primary-note:      #E6FF92;\r\n\t\t\t   --pitch8-secondary-channel: #DF0019;\r\n\t\t\t   --pitch8-primary-channel:   #FF98A4;\r\n\t\t\t   --pitch8-secondary-note:    #FF4E63;\r\n\t\t\t   --pitch8-primary-note:      #FFB2BB;\r\n\t\t\t   --pitch9-secondary-channel: #00A170;\r\n\t\t\t   --pitch9-primary-channel:   #50FFC9;\r\n\t\t\t   --pitch9-secondary-note:    #00C78A;\r\n\t\t\t   --pitch9-primary-note:      #83FFD9;\r\n\t\t\t   --pitch10-secondary-channel:#A11FFF;\r\n\t\t\t   --pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t   --pitch10-secondary-note:   #B757FF;\r\n\t\t\t   --pitch10-primary-note:     #DFACFF;\r\n\t\t\t   --noise1-secondary-channel: #6F6F6F;\r\n\t\t\t   --noise1-primary-channel:   #AAAAAA;\r\n\t\t\t   --noise1-secondary-note:    #A7A7A7;\r\n\t\t\t   --noise1-primary-note:      #E0E0E0;\r\n\t\t\t   --noise2-secondary-channel: #996633;\r\n\t\t\t   --noise2-primary-channel:   #DDAA77;\r\n\t\t\t   --noise2-secondary-note:    #CC9966;\r\n\t\t\t   --noise2-primary-note:      #F0D0BB;\r\n\t\t\t   --noise3-secondary-channel: #4A6D8F;\r\n\t\t\t   --noise3-primary-channel:   #77AADD;\r\n\t\t\t   --noise3-secondary-note:    #6F9FCF;\r\n\t\t\t   --noise3-primary-note:      #BBD7FF;\r\n\t\t\t   --noise4-secondary-channel: #7A4F9A;\r\n\t\t\t   --noise4-primary-channel:   #AF82D2;\r\n\t\t\t   --noise4-secondary-note:    #9E71C1;\r\n\t\t\t   --noise4-primary-note:      #D4C1EA;\r\n\t\t\t   --noise5-secondary-channel: #607837;\r\n\t\t\t   --noise5-primary-channel:   #A2BB77;\r\n\t\t\t   --noise5-secondary-note:    #91AA66;\r\n\t\t\t   --noise5-primary-note:      #C5E2B2;\r\n\t\t --mod1-secondary-channel:   #339955;\r\n\t\t\t\t   --mod1-primary-channel:     #77fc55;\r\n\t\t\t\t   --mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t   --mod1-primary-note:        #cdffee;\r\n\t\t\t\t   --mod2-secondary-channel:   #993355;\r\n\t\t\t\t   --mod2-primary-channel:     #f04960;\r\n\t\t\t\t   --mod2-secondary-note:      #f057a0;\r\n\t\t\t\t   --mod2-primary-note:        #ffb8de;\r\n\t\t\t\t   --mod3-secondary-channel:   #553399;\r\n\t\t\t\t   --mod3-primary-channel:     #8855fc;\r\n\t\t\t\t   --mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t   --mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t   --mod4-secondary-channel:   #a86436;\r\n\t\t\t\t   --mod4-primary-channel:     #c8a825;\r\n\t\t\t\t   --mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t   --mod4-primary-note:        #fff6d3;\r\n\t\t\t\t   --mod-label-primary:        #999;\r\n\t\t\t\t   --mod-label-secondary-text: #333;\r\n\t\t\t\t   --mod-label-primary-text:   black;\r\n\t\t\t\t   --disabled-note-primary:    #999;\r\n\t\t\t\t   --disabled-note-secondary:  #666;\r\n\t\t\t   }\r\n\r\n\t\t\t   .beepboxEditor input[type=\"range\"]::-moz-range-thumb {\r\n\t\t\t\t   width: 8px !important;\r\n\t\t\t\t }\r\n\r\n\t\t\t   button.playButton {\r\n\t\t\t\t   width: 80px;\r\n\t\t\t   }\r\n\t\t\t   button.prevBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t\t   left:-5px;\r\n\t\t\t   }\r\n\t\t\t   button.nextBarButton {\r\n\t\t\t\t   width: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   span input, \r\n\t\t\t   div.harmonics svg,\r\n\t\t\t   div.spectrum svg,\r\n\t\t\t   div.filterEditor svg,\r\n\t\t\t   div.fadeInOut svg,\r\n\t\t\t   div.loopEditor svg,\r\n\t\t\t   svg#firstImage \r\n\t\t\t   {\r\n\t\t\t\t   background: black !important;\r\n\t\t\t   }\r\n\r\n\t\t\t   div.visualizer {\r\n\t\t\t\ttransform: skew(30deg,20deg) scale(0.5);\r\n\t\t\t\t}\r\n\r\n\t\t\t   .beepboxEditor {\r\n\t\t\t\t   line-height: 1.25;\r\n\t\t\t   }\r\n\r\n\t\t\t   #text-content {\r\n\t\t\t\t   font-size: 32px;\r\n\t\t\t\t   line-height: 40px;\r\n\t\t\t   }\r\n\r\n\t\t\t   #text-content > section > h1 {\r\n\t\t\t\t   color: #C8C8C8;\r\n\t\t\t\t   }\r\n\t\t   `,\r\n\t\t\t\"nerdbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 9;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t--pitch1-secondary-channel: #139620;\r\n\t\t\t\t--pitch1-primary-channel:   #25ff3a;\r\n\t\t\t\t--pitch1-secondary-note:    #139620;\r\n\t\t\t\t--pitch1-primary-note:      #25ff3a;\r\n\t\t\t\t--pitch2-secondary-channel: #109986;\r\n\t\t\t\t--pitch2-primary-channel:   #1cffe0;\r\n\t\t\t\t--pitch2-secondary-note:    #109986;\r\n\t\t\t\t--pitch2-primary-note:      #1cffe0;\r\n\t\t\t\t--pitch3-secondary-channel: #127296;\r\n\t\t\t\t--pitch3-primary-channel:   #21c3ff;\r\n\t\t\t\t--pitch3-secondary-note:    #127296;\r\n\t\t\t\t--pitch3-primary-note:      #21c3ff;\r\n\t\t\t\t--pitch4-secondary-channel: #6038a5;\r\n\t\t\t\t--pitch4-primary-channel:   #9456ff;\r\n\t\t\t\t--pitch4-secondary-note:    #6038a5;\r\n\t\t\t\t--pitch4-primary-note:      #ff35e0;\r\n\t\t\t\t--pitch5-secondary-channel: #a52491;\r\n\t\t\t\t--pitch5-primary-channel:   #ff35e0;\r\n\t\t\t\t--pitch5-secondary-note:    #a52491;\r\n\t\t\t\t--pitch5-primary-note:      #af3221;\r\n\t\t\t\t--pitch6-secondary-channel: #af3221;\r\n\t\t\t\t--pitch6-primary-channel:   #ff4a32;\r\n\t\t\t\t--pitch6-secondary-note:    #af3221;\r\n\t\t\t\t--pitch6-primary-note:      #ff4a32;\r\n\t\t\t\t--pitch7-secondary-channel: #ad6e0f;\r\n\t\t\t\t--pitch7-primary-channel:   #ffa216;\r\n\t\t\t\t--pitch7-secondary-note:    #ad6e0f;\r\n\t\t\t\t--pitch7-primary-note:      #ffa216;\r\n\t\t\t\t--pitch8-secondary-channel: #ad6e0f;\r\n\t\t\t\t--pitch8-primary-channel:   #ffa216;\r\n\t\t\t\t--pitch8-secondary-note:    #ad6e0f;\r\n\t\t\t\t--pitch8-primary-note:      #ffa216;\r\n\t\t\t\t--pitch9-secondary-channel: #a7b512;\r\n\t\t\t\t--pitch9-primary-channel:   #ebff19;\r\n\t\t\t\t--pitch9-secondary-note:    #a7b512;\r\n\t\t\t\t--pitch9-primary-note:      #ebff19;\r\n\t\t\t\t--pitch10-secondary-channel:#70ad1b;\r\n\t\t\t\t--pitch10-primary-channel:  #a4ff26;\r\n\t\t\t\t--pitch10-secondary-note:   #70ad1b;\r\n\t\t\t\t--pitch10-primary-note:     #a4ff26;\r\n\t\t\t\t--noise1-secondary-channel: #68706f;\r\n\t\t\t\t--noise1-primary-channel:   #a6b2b1;\r\n\t\t\t\t--noise1-secondary-note:    #68706f;\r\n\t\t\t\t--noise1-primary-note:      #a6b2b1;\r\n\t\t\t\t--noise2-secondary-channel: #665c64;\r\n\t\t\t\t--noise2-primary-channel:   #a396a1;\r\n\t\t\t\t--noise2-secondary-note:    #665c64;\r\n\t\t\t\t--noise2-primary-note:      #a396a1;\r\n\t\t\t\t--noise3-secondary-channel: #60605a;\r\n\t\t\t\t--noise3-primary-channel:   #afaea3;\r\n\t\t\t\t--noise3-secondary-note:    #60605a;\r\n\t\t\t\t--noise3-primary-note:      #afaea3;\r\n\t\t\t--noise4-secondary-channel: #665c64;\r\n\t\t\t--noise4-primary-channel:   #a396a1;\r\n\t\t\t\t--noise4-secondary-note:    #665c64;\r\n\t\t\t\t--noise4-primary-note:      #a396a1;\r\n\t\t\t\t--noise5-secondary-channel: #60605a;\r\n\t\t\t\t--noise5-primary-channel:   #afaea3;\r\n\t\t\t\t--noise5-secondary-note:    #60605a;\r\n\t\t\t\t--noise5-primary-note:      #afaea3;\r\n         --mod1-secondary-channel: #139620;\r\n\t\t\t\t--mod1-primary-channel:   #25ff3a;\r\n\t\t\t\t--mod1-secondary-note:    #139620;\r\n\t\t\t\t--mod1-primary-note:      #25ff3a;\r\n\t\t\t\t--mod2-secondary-channel: #109986;\r\n\t\t\t\t--mod2-primary-channel:   #1cffe0;\r\n\t\t\t\t--mod2-secondary-note:    #109986;\r\n\t\t\t\t--mod2-primary-note:      #1cffe0;\r\n\t\t\t\t--mod3-secondary-channel: #127296;\r\n\t\t\t\t--mod3-primary-channel:   #21c3ff;\r\n\t\t\t\t--mod3-secondary-note:    #127296;\r\n\t\t\t\t--mod3-primary-note:      #21c3ff;\r\n\t\t\t\t--mod4-secondary-channel: #6038a5;\r\n\t\t\t\t--mod4-primary-channel:   #9456ff;\r\n\t\t\t\t--mod4-secondary-note:    #6038a5;\r\n\t\t\t\t--mod4-primary-note:      #ff35e0;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\"nepbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #000;\r\n\t\t\t\t--editor-background: #060606;\r\n\t\t\t\t--hover-preview: #fff;\r\n\t\t\t\t--playhead: rgb(0, 242, 255);\r\n\t\t\t\t--primary-text: #00fff5;\r\n\t\t\t\t--secondary-text: #a82f2f;\r\n\t\t\t\t--inverted-text: #000;\r\n\t\t\t\t--text-selection: rgba(98, 46, 164, .99);\r\n\t\t\t\t--box-selection-fill: #b74a4a;\r\n\t\t\t\t--loop-accent: #7744FF;\r\n\t\t\t\t--link-accent: #ff00e1;\r\n\t\t\t\t--ui-widget-background: #484848;\r\n\t\t\t\t--ui-widget-focus: #3e3e3e;\r\n\t\t\t\t--pitch-background: #0a2d44;\r\n\t\t\t\t--tonic: #9150ff;\r\n\t\t\t\t--fifth-note: #900;\r\n\t\t\t\t--third-note: #258822;\r\n\t\t\t\t--white-piano-key: #353535;\r\n\t\t\t\t--black-piano-key: #fff;\r\n\t\t\t\t--white-piano-key-text: #fff;\r\n\t\t\t\t--black-piano-key-text: #000;\r\n\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t--track-editor-bg-pitch: #424242;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #000;\r\n\t\t\t\t--track-editor-bg-noise: #424242;\r\n\t\t\t\t--track-editor-bg-noise-dim: #000;\r\n\t\t\t\t--track-editor-bg-mod: #3c3c3c;\r\n\t\t\t\t--track-editor-bg-mod-dim: #000;\r\n\t\t\t\t--multiplicative-mod-slider: #fff;\r\n\t\t\t\t--overwriting-mod-slider: #9d9d9d;\r\n\t\t\t\t--indicator-primary: #f00;\r\n\t\t\t\t--indicator-secondary: #919191;\r\n\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t--input-box-outline: #626262;\r\n\t\t\t\t--mute-button-normal: #9a00ff;\r\n\t\t\t\t--mute-button-mod: #00fff7;\r\n\t\t\t\t--mod-label-primary: #2b2b2b;\r\n\t\t\t\t--noise-channel-limit: 2;\r\n\t\t\t\t--pitch1-secondary-channel: #c13cbf;\r\n\t\t\t\t--pitch1-primary-channel: #f75dff;\r\n\t\t\t\t--pitch1-secondary-note: #b930a2;\r\n\t\t\t\t--pitch1-primary-note: #fca5ff;\r\n\t\t\t\t--pitch2-secondary-channel: #800000;\r\n\t\t\t\t--pitch2-primary-channel: #f00;\r\n\t\t\t\t--pitch2-secondary-note: #8c2121;\r\n\t\t\t\t--pitch2-primary-note: #ff5252;\r\n\t\t\t\t--pitch3-secondary-channel: #004bb3;\r\n\t\t\t\t--pitch3-primary-channel: #1792ff;\r\n\t\t\t\t--pitch3-secondary-note: #005cb3;\r\n\t\t\t\t--pitch3-primary-note: #00ffe9;\r\n\t\t\t\t--pitch4-secondary-channel: #a48800;\r\n\t\t\t\t--pitch4-primary-channel: #fb0;\r\n\t\t\t\t--pitch4-secondary-note: #9c4100;\r\n\t\t\t\t--pitch4-primary-note: #ffd84e;\r\n\t\t\t\t--pitch5-secondary-channel: #6c0000;\r\n\t\t\t\t--pitch5-primary-channel:   #ff3e3e;\r\n\t\t\t\t--pitch5-secondary-note:    #6c0000;\r\n\t\t\t\t--pitch5-primary-note:      #ff3e3e;\r\n\t\t\t\t--pitch6-secondary-channel:#d25a00;\r\n\t\t\t\t--pitch6-primary-channel:  #fdff00;\r\n\t\t\t\t--pitch6-secondary-note:   #d25a00;\r\n\t\t\t\t--pitch6-primary-note:     #fdff00;\r\n\t\t\t\t--pitch7-secondary-channel: #046000;\r\n\t\t\t\t--pitch7-primary-channel:   #0c79ff;\r\n\t\t\t\t--pitch7-secondary-note:    #046000;\r\n\t\t\t\t--pitch7-primary-note:      #0c79ff;\r\n\t\t\t\t--pitch8-secondary-channel:#3b2bae;\r\n\t\t\t\t--pitch8-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch8-secondary-note:   #3b2bae;\r\n\t\t\t\t--pitch8-primary-note:     #d85d00;\r\n\t\t\t\t--pitch9-secondary-channel: #d6b03e;\r\n\t\t\t\t--pitch9-primary-channel:   #ffbf00;\r\n\t\t\t\t--pitch9-secondary-note:    #d6b03e;\r\n\t\t\t\t--pitch9-primary-note:      #ffbf00;\r\n\t\t\t\t--pitch10-secondary-channel:#b25915;\r\n\t\t\t\t--pitch10-primary-channel:  #d85d00;\r\n\t\t\t\t--pitch10-secondary-note:   #b25915;\r\n\t\t\t\t--pitch10-primary-note:     #d85d00;\r\n\t\t\t\t--pitch11-secondary-channel:#891a60;\r\n\t\t\t\t--pitch11-primary-channel:  #ff00a1;\r\n\t\t\t\t--pitch11-secondary-note:   #891a60;\r\n\t\t\t\t--pitch11-primary-note:     #ff00a1;\r\n\t\t\t\t--pitch12-secondary-channel:#965cbc;\r\n\t\t\t\t--pitch12-primary-channel:  #c26afc;\r\n\t\t\t\t--pitch12-secondary-note:   #965cbc;\r\n\t\t\t\t--pitch12-primary-note:     #c26afc;\r\n\t\t\t\t--noise1-secondary-channel: #868686;\r\n\t\t\t\t--noise1-primary-channel: #fff;\r\n\t\t\t\t--noise1-secondary-note: #868686;\r\n\t\t\t\t--noise1-primary-note: #fff;\r\n\t\t\t\t--noise2-secondary-channel: #805300;\r\n\t\t\t\t--noise2-primary-channel: #ff8c00;\r\n\t\t\t\t--noise2-secondary-note: #6a3500;\r\n\t\t\t\t--noise2-primary-note: #a85400;\r\n\t\t\t\t--mod1-secondary-channel: #6c0000;\r\n\t\t\t\t--mod1-primary-channel: #ff3e3e;\r\n\t\t\t\t--mod1-secondary-note: #6c0000;\r\n\t\t\t\t--mod1-primary-note: #ff3e3e;\r\n\t\t\t\t--mod2-secondary-channel: #d25a00;\r\n\t\t\t\t--mod2-primary-channel: #fdff00;\r\n\t\t\t\t--mod2-secondary-note: #d25a00;\r\n\t\t\t\t--mod2-primary-note: #fdff00;\r\n\t\t\t\t--mod3-secondary-channel: #046000;\r\n\t\t\t\t--mod3-primary-channel: #23ff1b;\r\n\t\t\t\t--mod3-secondary-note: #046000;\r\n\t\t\t\t--mod3-primary-note: #23ff1b;\r\n\t\t\t\t--mod4-secondary-channel: #3b2bae;\r\n\t\t\t\t--mod4-primary-channel: #0c79ff;\r\n\t\t\t\t--mod4-secondary-note: #3b2bae;\r\n\t\t\t\t--mod4-primary-note: #0c79ff;\r\n\t\t\t\t--disabled-note-primary: #999;\r\n\t\t\t\t--disabled-note-secondary: #696969;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"cardboardbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #0f0700;\r\n--editor-background: #0f0700;\r\n--hover-preview: #75461d;\r\n--playhead: #75461d;\r\n--primary-text: #ddd;\r\n--secondary-text: #8e695b;\r\n--inverted-text: black;\r\n--text-selection: #75461d;\r\n--box-selection-fill: rgba(117, 70, 29,0.5);\r\n--loop-accent: #75461d;\r\n--link-accent: #75461d;\r\n--ui-widget-background: #574a3e;\r\n--ui-widget-focus: #756453;\r\n--pitch-background: #361900;\r\n--tonic: #fdba9a;\r\n--fifth-note: #7f78d2;\r\n--third-note: #886444;\r\n--white-piano-key: #bbb;\r\n--black-piano-key: #444;\r\n--use-color-formula: false;\r\n--pitch-channel-limit: 10;\r\n--track-editor-bg-pitch: #444;\r\n--track-editor-bg-pitch-dim: #333;\r\n--track-editor-bg-noise: #444;\r\n--track-editor-bg-noise-dim: #333;\r\n--track-editor-bg-mod: #234;\r\n--track-editor-bg-mod-dim: #123;\r\n--multiplicative-mod-slider: #456;\r\n--overwriting-mod-slider: #654;\r\n--indicator-primary: #74f;\r\n--indicator-secondary: #444;\r\n--select2-opt-group: #585858;\r\n--input-box-outline: #333;\r\n--mute-button-normal: #ffa033;\r\n--mute-button-mod: #9a6bff;\r\n--pitch1-secondary-channel: #798566;\r\n--pitch1-primary-channel: #9dab86;\r\n--pitch1-secondary-note: #798566;\r\n--pitch1-primary-note: #9dab86;\r\n--pitch2-secondary-channel: #a6733d;\r\n--pitch2-primary-channel: #e6a157;\r\n--pitch2-secondary-note: #a6733d;\r\n--pitch2-primary-note: #e6a157;\r\n--pitch3-secondary-channel: #874c27;\r\n--pitch3-primary-channel: #eb8242;\r\n--pitch3-secondary-note: #874c27;\r\n--pitch3-primary-note: #eb8242;\r\n--pitch4-secondary-channel: #395866;\r\n--pitch4-primary-channel: #537d91;\r\n--pitch4-secondary-note: #395866;\r\n--pitch4-primary-note: #537d91;\r\n--pitch5-secondary-channel: #779992;\r\n--pitch5-primary-channel: #a4d1c8;\r\n--pitch5-secondary-note: #779992;\r\n--pitch5-primary-note: #a4d1c8;\r\n--pitch6-secondary-channel: #7777b0;\r\n--pitch6-primary-channel: #a0a0ff;\r\n--pitch6-secondary-note: #8888d0;\r\n--pitch6-primary-note: #d0d0ff;\r\n--pitch7-secondary-channel: #300707;\r\n--pitch7-primary-channel: #560d0d;\r\n--pitch7-secondary-note: #300707;\r\n--pitch7-primary-note: #560d0d;\r\n--pitch8-secondary-channel: #486312;\r\n--pitch8-primary-channel: #76a21e;\r\n--pitch8-secondary-note: #486312;\r\n--pitch8-primary-note: #76a21e;\r\n--pitch9-secondary-channel: #4a1242;\r\n--pitch9-primary-channel: #721b65;\r\n--pitch9-secondary-note: #4a1242;\r\n--pitch9-primary-note: #721b65;\r\n--pitch10-secondary-channel: #7a312d;\r\n--pitch10-primary-channel: #f8615a;\r\n--pitch10-secondary-note: #7a312d;\r\n--pitch10-primary-note: #f8615a;\r\n--noise1-secondary-channel: #5f6582;\r\n--noise1-primary-channel: #a6b1e1;\r\n--noise1-secondary-note: #5f6582;\r\n--noise1-primary-note: #a6b1e1;\r\n--noise2-secondary-channel: #996633;\r\n--noise2-primary-channel: #ddaa77;\r\n--noise2-secondary-note: #cc9966;\r\n--noise2-primary-note: #f0d0bb;\r\n--noise3-secondary-channel: #4a6d8f;\r\n--noise3-primary-channel: #77aadd;\r\n--noise3-secondary-note: #6f9fcf;\r\n--noise3-primary-note: #bbd7ff;\r\n--noise4-secondary-channel: #6B3E8E;\r\n--noise4-primary-channel: #AF82D2;\r\n--noise4-secondary-note: #9E71C1;\r\n--noise4-primary-note: #D4C1EA;\r\n--noise5-secondary-channel: #996633;\r\n--noise5-primary-channel: #ddaa77;\r\n--noise5-secondary-note: #cc9966;\r\n--noise5-primary-note: #f0d0bb;\r\n--mod1-secondary-channel: #339955;\r\n--mod1-primary-channel: #77fc55;\r\n--mod1-secondary-note: #77ff8a;\r\n--mod1-primary-note: #cdffee;\r\n--mod2-secondary-channel: #993355;\r\n--mod2-primary-channel: #f04960;\r\n--mod2-secondary-note: #f057a0;\r\n--mod2-primary-note: #ffb8de;\r\n--mod3-secondary-channel: #553399;\r\n--mod3-primary-channel: #8855fc;\r\n--mod3-secondary-note: #aa64ff;\r\n--mod3-primary-note: #f8ddff;\r\n--mod4-secondary-channel: #a86436;\r\n--mod4-primary-channel: #c8a825;\r\n--mod4-secondary-note: #e8ba46;\r\n--mod4-primary-note: #fff6d3;\r\n--mod-label-primary: #999;\r\n--mod-label-secondary-text: #333;\r\n--mod-label-primary-text: black;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"blubox classic\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #024ACA;\r\n\t\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t\t--pitch-background: #393e4f;\r\n\t\t\t\t\t--tonic: #725491;\r\n\t\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t\t--third-note: #446288;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t\t--mute-button-normal: #886eae;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch1-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch1-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch2-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch2-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch2-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch2-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch3-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch3-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch3-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch3-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch4-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch4-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch4-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch4-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch5-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch5-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch5-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch5-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch6-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch6-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch6-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch6-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch7-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch7-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch7-secondary-note:\t  #0A89FF;\r\n\t\t\t\t\t--pitch7-primary-note:\t\t\t#024ACA;\r\n\t\t\t\t\t--pitch8-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch8-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch8-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch8-primary-note:      #024ACA;\r\n\t\t\t\t\t--pitch9-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--pitch9-primary-channel:   #024ACA;\r\n\t\t\t\t\t--pitch9-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--pitch9-primary-note:\t\t\t#024ACA;\r\n\t\t\t\t\t--pitch10-secondary-channel:#0A89FF;\r\n\t\t\t\t\t--pitch10-primary-channel:  #024ACA;\r\n\t\t\t\t\t--pitch10-secondary-note:   #0A89FF;\r\n\t\t\t\t\t--pitch10-primary-note:     #024ACA;\r\n\t\t\t\t\t--noise1-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--noise1-primary-channel:   #024ACA;\r\n\t\t\t\t\t--noise1-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--noise1-primary-note:      #024ACA;\r\n\t\t\t\t\t--noise2-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--noise2-primary-channel:   #024ACA;\r\n\t\t\t\t\t--noise2-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--noise2-primary-note:      #024ACA;\r\n\t\t\t\t\t--noise3-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--noise3-primary-channel:   #024ACA;\r\n\t\t\t\t\t--noise3-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--noise3-primary-note:      #024ACA;\r\n\t\t\t\t\t--noise4-secondary-channel: #0A89FF;\r\n\t\t\t\t\t--noise4-primary-channel:   #024ACA;\r\n\t\t\t\t\t--noise4-secondary-note:    #0A89FF;\r\n\t\t\t\t\t--noise4-primary-note:      #024ACA;\r\n\t\t\t\t\t--mod1-secondary-channel:   #0A89FF;\r\n\t\t\t\t\t--mod1-primary-channel:     #024ACA;\r\n\t\t\t\t\t--mod1-secondary-note:      #0A89FF;\r\n\t\t\t\t\t--mod1-primary-note:        #024ACA;\r\n\t\t\t\t\t--mod2-secondary-channel:   #0A89FF;\r\n\t\t\t\t\t--mod2-primary-channel:     #024ACA;\r\n\t\t\t\t\t--mod2-secondary-note:      #0A89FF;\r\n\t\t\t\t\t--mod2-primary-note:        #024ACA;\r\n\t\t\t\t\t--mod3-secondary-channel:   #0A89FF;\r\n\t\t\t\t\t--mod3-primary-channel:     #024ACA;\r\n\t\t\t\t\t--mod3-secondary-note:      #0A89FF;\r\n\t\t\t\t\t--mod3-primary-note:\t\t\t  #024ACA;\r\n\t\t\t\t\t--mod4-secondary-channel:   #0A89FF;\r\n\t\t\t\t\t--mod4-primary-channel:     #024ACA;\r\n\t\t\t\t\t--mod4-secondary-note:      #0A89FF;\r\n\t\t\t\t\t--mod4-primary-note:        #024ACA;\r\n\t\t\t\t\t--mod-label-primary:        #282840;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t\t--mod-label-primary-text:   white;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\"dogebox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t--page-margin: #0d0063;\r\n\t\t\t--editor-background: #0D0063;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: white;\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #999;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t--loop-accent: #74f;\r\n\t\t\t--link-accent: #98f;\r\n\t\t\t--ui-widget-background: #444;\r\n\t\t\t--ui-widget-focus: #777;\r\n\t\t\t--pitch-background: #322c59;\r\n\t\t\t--tonic: #1c1933;\r\n\t\t\t--fifth-note: #7b74ad;\r\n\t\t\t--third-note: #445888;\r\n\t\t\t--white-piano-key: #bbb;\r\n\t\t\t--black-piano-key: #444;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t--indicator-primary: #74f;\r\n\t\t\t--indicator-secondary: #444;\r\n\t\t\t--select2-opt-group: #585858;\r\n\t\t\t--input-box-outline: #333;\r\n\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t--noise-channel-limit: 3;\r\n\t\t\t--pitch1-secondary-channel: #c7ac00;\r\n\t\t\t--pitch1-primary-channel: #fcf403;\r\n\t\t\t--pitch1-secondary-note: #c7c700;\r\n\t\t\t--pitch1-primary-note: #fcf403;\r\n\t\t\t--pitch2-secondary-channel: #9400b5;\r\n\t\t\t--pitch2-primary-channel: #ff00ee;\r\n\t\t\t--pitch2-secondary-note: #9400b5;\r\n\t\t\t--pitch2-primary-note: #ff00ee;\r\n\t\t\t--pitch3-secondary-channel: #b37466;\r\n\t\t\t--pitch3-primary-channel: #ffc6a1;\r\n\t\t\t--pitch3-secondary-note: #b37466;\r\n\t\t\t--pitch3-primary-note: #ffc6a1;\r\n\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t--pitch4-primary-channel: #50ff50;\r\n\t\t\t--pitch4-secondary-note: #00c700;\r\n\t\t\t--pitch4-primary-note: #a0ffa0;\r\n\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t--pitch5-primary-channel: #ff90ff;\r\n\t\t\t--pitch5-secondary-note: #e040e0;\r\n\t\t\t--pitch5-primary-note: #ffc0ff;\r\n\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t--pitch6-primary-channel: #a0a0ff;\r\n\t\t\t--pitch6-secondary-note: #8888d0;\r\n\t\t\t--pitch6-primary-note: #d0d0ff;\r\n\t\t\t--pitch7-secondary-channel: #c7ac00;\r\n\t\t\t--pitch7-primary-channel: #fcf403;\r\n\t\t\t--pitch7-secondary-note: #c7c700;\r\n\t\t\t--pitch7-primary-note: #fcf403;\r\n\t\t\t--pitch8-secondary-channel: #9400b5;\r\n\t\t\t--pitch8-primary-channel: #ff00ee;\r\n\t\t\t--pitch8-secondary-note: #9400b5;\r\n\t\t\t--pitch8-primary-note: #ff00ee;\r\n\t\t\t--pitch9-secondary-channel: #b37466;\r\n\t\t\t--pitch9-primary-channel: #ffc6a1;\r\n\t\t\t--pitch9-secondary-note: #b37466;\r\n\t\t\t--pitch9-primary-note: #ffc6a1;\r\n\t\t\t--pitch10-secondary-channel: #00a100;\r\n\t\t\t--pitch10-primary-channel: #50ff50;\r\n\t\t\t--pitch10-secondary-note: #00c700;\r\n\t\t\t--pitch10-primary-note: #a0ffa0;\r\n\t\t\t--noise1-secondary-channel: #95acad;\r\n\t\t\t--noise1-primary-channel: #cee9eb;\r\n\t\t\t--noise1-secondary-note: #95acad;\r\n\t\t\t--noise1-primary-note: #cee9eb;\r\n\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t--noise2-primary-channel: #ddaa77;\r\n\t\t\t--noise2-secondary-note: #cc9966;\r\n\t\t\t--noise2-primary-note: #f0d0bb;\r\n\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t--noise3-primary-channel: #77aadd;\r\n\t\t\t--noise3-secondary-note: #6f9fcf;\r\n\t\t\t--noise3-primary-note: #bbd7ff;\r\n\t\t\t--noise4-secondary-channel: #7c9b42;\r\n\t\t\t--noise4-primary-channel:   #a5ff00;\r\n\t\t\t--noise4-secondary-note:    #7c9b42;\r\n\t\t\t--noise4-primary-note:      #a5ff00;\r\n\t\t\t--noise5-secondary-channel: #7c9b42;\r\n\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t--noise5-primary-note:      #C5E2B2;\r\n      \t \t--mod1-secondary-channel: #c7ac00;\r\n\t\t\t--mod1-primary-channel: #fcf403;\r\n\t\t\t--mod1-secondary-note: #c7c700;\r\n\t\t\t--mod1-primary-note: #fcf403;\r\n\t\t\t--mod2-secondary-channel: #9400b5;\r\n\t\t\t--mod2-primary-channel: #ff00ee;\r\n\t\t\t--mod2-secondary-note: #9400b5;\r\n\t\t\t--mod2-primary-note: #ff00ee;\r\n\t\t\t--mod3-secondary-channel: #b37466;\r\n\t\t\t--mod3-primary-channel: #ffc6a1;\r\n\t\t\t--mod3-secondary-note: #b37466;\r\n\t\t\t--mod3-primary-note: #ffc6a1;\r\n\t\t\t--mod4-secondary-channel: #00a100;\r\n\t\t\t--mod4-primary-channel: #50ff50;\r\n\t\t\t--mod4-secondary-note: #00c700;\r\n\t\t\t--mod4-primary-note: #a0ffa0;\r\n\t\t\t--mod-label-primary:        #999;\r\n\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t  \"dogebox dark\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #000;\r\n\t\t\t\t\t--editor-background: #000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #000;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: #000;\r\n\t\t\t\t\t--box-selection-fill: #000;\r\n\t\t\t\t\t--loop-accent: #000;\r\n\t\t\t\t\t--link-accent: #000;\r\n\t\t\t\t\t--ui-widget-background: #000;\r\n\t\t\t\t\t--ui-widget-focus: #000;\r\n\t\t\t\t\t--pitch-background: #000;\r\n\t\t\t\t\t--tonic: #000;\r\n\t\t\t\t\t--fifth-note: #000;\r\n\t\t\t\t\t--third-note: #000;\r\n\t\t\t\t\t--white-piano-key: #000;\r\n\t\t\t\t\t--black-piano-key: #000;\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t    \"todbox classic\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t\t--tonic: #864;\r\n\t\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t\t--third-note: #486;\r\n\t\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t\t--mute-button-mod: #9a6bff;s\r\n\t\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t\t--pitch1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch2-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch3-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch4-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch4-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--pitch5-secondary-channel: #d020d0;\r\n\t\t\t\t\t--pitch5-primary-channel:   #ff90ff;\r\n\t\t\t\t\t--pitch5-secondary-note:    #e040e0;\r\n\t\t\t\t\t--pitch5-primary-note:      #ffc0ff;\r\n\t\t\t\t\t--pitch6-secondary-channel: #7777b0;\r\n\t\t\t\t\t--pitch6-primary-channel:   #a0a0ff;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #0099a1;\r\n\t\t\t\t\t--pitch7-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--pitch7-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--pitch7-primary-note:      #92f9ff;\r\n\t\t\t\t\t--pitch8-secondary-channel: #a1a100;\r\n\t\t\t\t\t--pitch8-primary-channel:   #ffff25;\r\n\t\t\t\t\t--pitch8-secondary-note:    #c7c700;\r\n\t\t\t\t\t--pitch8-primary-note:      #ffff92;\r\n\t\t\t\t\t--pitch9-secondary-channel: #c75000;\r\n\t\t\t\t\t--pitch9-primary-channel:   #ff9752;\r\n\t\t\t\t\t--pitch9-secondary-note:    #ff771c;\r\n\t\t\t\t\t--pitch9-primary-note:      #ffcdab;\r\n\t\t\t\t\t--pitch10-secondary-channel: #00a100;\r\n\t\t\t\t\t--pitch10-primary-channel:   #50ff50;\r\n\t\t\t\t\t--pitch10-secondary-note:    #00c700;\r\n\t\t\t\t\t--pitch10-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--noise1-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise1-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise1-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise1-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise2-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--noise3-secondary-channel: #4a6d8f;\r\n\t\t\t\t\t--noise3-primary-channel:   #77aadd;\r\n\t\t\t\t\t--noise3-secondary-note:    #6f9fcf;\r\n\t\t\t\t\t--noise3-primary-note:      #bbd7ff;\r\n\t\t\t\t\t--noise4-secondary-channel: #6f6f6f;\r\n\t\t\t\t\t--noise4-primary-channel:   #aaaaaa;\r\n\t\t\t\t\t--noise4-secondary-note:    #a7a7a7;\r\n\t\t\t\t\t--noise4-primary-note:      #e0e0e0;\r\n\t\t\t\t\t--noise5-secondary-channel: #996633;\r\n\t\t\t\t\t--noise5-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise5-secondary-note:    #cc9966;\r\n\t\t\t\t\t--noise5-primary-note:      #f0d0bb;\r\n\t\t\t\t\t--mod1-secondary-channel: #0099a1;\r\n\t\t\t\t\t--mod1-primary-channel:   #25f3ff;\r\n\t\t\t\t\t--mod1-secondary-note:    #00bdc7;\r\n\t\t\t\t\t--mod1-primary-note:      #92f9ff;\r\n\t\t\t\t\t--mod2-secondary-channel: #a1a100;\r\n\t\t\t\t\t--mod2-primary-channel:   #ffff25;\r\n\t\t\t\t\t--mod2-secondary-note:    #c7c700;\r\n\t\t\t\t\t--mod2-primary-note:      #ffff92;\r\n\t\t\t\t\t--mod3-secondary-channel: #c75000;\r\n\t\t\t\t\t--mod3-primary-channel:   #ff9752;\r\n\t\t\t\t\t--mod3-secondary-note:    #ff771c;\r\n\t\t\t\t\t--mod3-primary-note:      #ffcdab;\r\n\t\t\t\t\t--mod4-secondary-channel: #00a100;\r\n\t\t\t\t\t--mod4-primary-channel:   #50ff50;\r\n\t\t\t\t\t--mod4-secondary-note:    #00c700;\r\n\t\t\t\t\t--mod4-primary-note:      #a0ffa0;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"todbox dark mode\": `\r\n\t\t\t:root {\r\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t\t--page-margin: black;\r\n\t\t\t\t\t--editor-background: black;\r\n\t\t\t\t\t--hover-preview: #999999;\r\n\t\t\t\t\t--playhead: #999999;\r\n\t\t\t\t\t--primary-text: #999999;\r\n\t\t\t\t\t--secondary-text: #444444;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: #999999;\r\n\t\t\t\t\t--box-selection-fill: #999999;\r\n\t\t\t\t\t--loop-accent: #999999;\r\n\t\t\t\t\t--link-accent: #999999;\r\n\t\t\t\t\t--ui-widget-background: #222222;\r\n\t\t\t\t\t--ui-widget-focus: #444444;\r\n\t\t\t\t--pitch-background: #101010;\r\n\t\t\t\t\t--tonic: #404040;\r\n\t\t\t\t\t--fifth-note: #202020;\r\n\t\t\t\t\t--third-note: #2d3c27;\r\n\t\t\t\t\t--white-piano-key: #999999;\r\n\t\t\t\t\t--black-piano-key: #101010;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t\t--pitch1-secondary-channel: #004444;\r\n\t\t\t\t\t--pitch1-primary-channel:   #009999;\r\n\t\t\t\t\t--pitch1-secondary-note:    #004444;\r\n\t\t\t\t\t--pitch1-primary-note:      #009999;\r\n\t\t\t\t\t--pitch2-secondary-channel: #444400;\r\n\t\t\t\t\t--pitch2-primary-channel:   #999900;\r\n\t\t\t\t\t--pitch2-secondary-note:    #444400;\r\n\t\t\t\t\t--pitch2-primary-note:      #999900;\r\n\t\t\t\t\t--pitch3-secondary-channel: #443300;\r\n\t\t\t\t\t--pitch3-primary-channel:   #996600;\r\n\t\t\t\t\t--pitch3-secondary-note:    #443300;\r\n\t\t\t\t\t--pitch3-primary-note:      #996600;\r\n\t\t\t\t\t--pitch4-secondary-channel: #004400;\r\n\t\t\t\t\t--pitch4-primary-channel:   #009900;\r\n\t\t\t\t\t--pitch4-secondary-note:    #004400;\r\n\t\t\t\t\t--pitch4-primary-note:      #009900;\r\n\t\t\t\t\t--pitch5-secondary-channel: #440044;\r\n\t\t\t\t\t--pitch5-primary-channel:   #990099;\r\n\t\t\t\t\t--pitch5-secondary-note:    #440044;\r\n\t\t\t\t\t--pitch5-primary-note:      #990099;\r\n\t\t\t\t\t--pitch6-secondary-channel: #333344;\r\n\t\t\t\t\t--pitch6-primary-channel:   #666699;\r\n\t\t\t\t\t--pitch6-secondary-note:    #333344;\r\n\t\t\t\t\t--pitch6-primary-note:      #666699;\r\n\t\t\t\t\t--pitch7-secondary-channel: #444400;\r\n\t\t\t\t\t--pitch7-primary-channel:   #999900;\r\n\t\t\t\t\t--pitch7-secondary-note:    #444400;\r\n\t\t\t\t\t--pitch7-primary-note:      #999900;\r\n\t\t\t\t\t--pitch8-secondary-channel: #824E54;\r\n\t\t\t\t\t--pitch8-primary-channel:   #C4757E;\r\n\t\t\t\t\t--pitch8-secondary-note:    #824E54;\r\n\t\t\t\t\t--pitch8-primary-note:      #C4757E;\r\n\t\t\t\t\t--pitch9-secondary-channel: #006342;\r\n\t\t\t\t\t--pitch9-primary-channel:   #008E5F;\r\n\t\t\t\t\t--pitch9-secondary-note:    #006342;\r\n\t\t\t\t\t--pitch9-primary-note:      #008E5F;\r\n\t\t\t\t\t--pitch10-secondary-channel: #561291;\r\n\t\t\t\t\t--pitch10-primary-channel:   #7819C1;\r\n\t\t\t\t\t--pitch10-secondary-note:    #561291;\r\n\t\t\t\t\t--pitch10-primary-note:      #7819C1;\r\n\t\t\t\t\t--noise1-secondary-channel: #444444;\r\n\t\t\t\t\t--noise1-primary-channel:   #999999;\r\n\t\t\t\t\t--noise1-secondary-note:    #444444;\r\n\t\t\t\t\t--noise1-primary-note:      #999999;\r\n\t\t\t\t\t--noise2-secondary-channel: #443311;\r\n\t\t\t\t\t--noise2-primary-channel:   #996633;\r\n\t\t\t\t\t--noise2-secondary-note:    #443311;\r\n\t\t\t\t\t--noise2-primary-note:      #996633;\r\n\t\t\t\t\t--noise3-secondary-channel: #113344;\r\n\t\t\t\t\t--noise3-primary-channel:   #336699;\r\n\t\t\t\t\t--noise3-secondary-note:    #113344;\r\n\t\t\t\t\t--noise3-primary-note:      #336699;\r\n\t\t\t\t\t--noise4-secondary-channel: #444444;\r\n\t\t\t\t\t--noise4-primary-channel:   #999999;\r\n\t\t\t\t\t--noise4-secondary-note:    #444444;\r\n\t\t\t\t\t--noise4-primary-note:      #999999;\r\n\t\t\t\t\t--noise5-secondary-channel: #443311;\r\n\t\t\t\t\t--noise5-primary-channel:   #996633;\r\n\t\t\t\t\t--noise5-secondary-note:    #443311;\r\n\t\t\t\t\t--noise5-primary-note:      #996633;\r\n          --mod1-secondary-channel: #004444;\r\n\t\t\t\t\t--mod1-primary-channel:   #009999;\r\n\t\t\t\t\t--mod1-secondary-note:    #004444;\r\n\t\t\t\t\t--mod1-primary-note:      #009999;\r\n\t\t\t\t\t--mod2-secondary-channel: #444400;\r\n\t\t\t\t\t--mod2-primary-channel:   #999900;\r\n\t\t\t\t\t--mod2-secondary-note:    #444400;\r\n\t\t\t\t\t--mod2-primary-note:      #999900;\r\n\t\t\t\t\t--mod3-secondary-channel: #443300;\r\n\t\t\t\t\t--mod3-primary-channel:   #996600;\r\n\t\t\t\t\t--mod3-secondary-note:    #443300;\r\n\t\t\t\t\t--mod3-primary-note:      #996600;\r\n\t\t\t\t\t--mod4-secondary-channel: #004400;\r\n\t\t\t\t\t--mod4-primary-channel:   #009900;\r\n\t\t\t\t\t--mod4-secondary-note:    #004400;\r\n\t\t\t\t\t--mod4-primary-note:      #009900;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t.beepboxEditor button, .beepboxEditor select, button {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"mainbox 1.0\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #2F1C40;\r\n\t\t\t\t--link-accent: #543873;\r\n\t\t\t\t--ui-widget-background: #2F1C40;\r\n\t\t\t\t--ui-widget-focus: #543873;\r\n\t\t\t\t--pitch-background: #2F1C40;\r\n\t\t\t\t--tonic: #42286D;\r\n\t\t\t\t--fifth-note: #37416B;\r\n\t\t\t\t--third-note: #884487;\r\n\t\t\t\t--white-piano-key: #156CB6;\r\n\t\t\t\t--black-piano-key: #130D14;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t\t--pitch1-secondary-channel: #156C99;\r\n\t\t\t\t\t--pitch1-primary-channel:   #00CFDF;\r\n\t\t\t\t\t--pitch1-secondary-note:    #0080A8;\r\n\t\t\t\t\t--pitch1-primary-note:      #009FC6;\r\n\t\t\t\t\t--pitch2-secondary-channel: #AD923A;\r\n\t\t\t\t\t--pitch2-primary-channel:   #FFD552;\r\n\t\t\t\t\t--pitch2-secondary-note:    #C49736;\r\n\t\t\t\t\t--pitch2-primary-note:      #EFC742;\r\n\t\t\t\t\t--pitch3-secondary-channel: #7A401E;\r\n\t\t\t\t\t--pitch3-primary-channel:   #C14E30;\r\n\t\t\t\t\t--pitch3-secondary-note:    #89381B;\r\n\t\t\t\t\t--pitch3-primary-note:      #E15427;\r\n\t\t\t\t\t--pitch4-secondary-channel: #0B6030;\r\n\t\t\t\t\t--pitch4-primary-channel:   #00915C;\r\n\t\t\t\t\t--pitch4-secondary-note:    #004337;\r\n\t\t\t\t\t--pitch4-primary-note:      #00915E;\r\n\t\t\t\t\t--pitch5-secondary-channel: #543873;\r\n\t\t\t\t\t--pitch5-primary-channel:   #695B95;\r\n\t\t\t\t\t--pitch5-secondary-note:    #8188BE;\r\n\t\t\t\t\t--pitch5-primary-note:      #848ED8;\r\n\t\t\t\t\t--pitch6-secondary-channel: #585882;\r\n\t\t\t\t\t--pitch6-primary-channel:   #5A72DD;\r\n\t\t\t\t\t--pitch6-secondary-note:    #8888d0;\r\n\t\t\t\t\t--pitch6-primary-note:      #d0d0ff;\r\n\t\t\t\t\t--pitch7-secondary-channel: #7D7C2E;\r\n\t\t\t\t\t--pitch7-primary-channel:   #B0C952;\r\n\t\t\t\t\t--pitch7-secondary-note:    #7D7C2E;\r\n\t\t\t\t\t--pitch7-primary-note:      #B0C952;\r\n\t\t\t\t\t--pitch8-secondary-channel: #7F426A;\r\n\t\t\t\t\t--pitch8-primary-channel:   #B75297;\r\n\t\t\t\t\t--pitch8-secondary-note:    #7F426A;\r\n\t\t\t\t\t--pitch8-primary-note:      #B75297;\r\n\t\t\t\t\t--pitch9-secondary-channel: #2A6B65;\r\n\t\t\t\t\t--pitch9-primary-channel:   #3BA590;\r\n\t\t\t\t\t--pitch9-secondary-note:    #2A6B65;\r\n\t\t\t\t\t--pitch9-primary-note:      #3BA590;\r\n\t\t\t\t\t--pitch10-secondary-channel: #713EA0;\r\n\t\t\t\t\t--pitch10-primary-channel:   #925EC9;\r\n\t\t\t\t\t--pitch10-secondary-note:    #713EA0;\r\n\t\t\t\t\t--pitch10-primary-note:      #925EC9;\r\n\t\t\t\t\t--noise1-secondary-channel: #6C6C8E;\r\n\t\t\t\t\t--noise1-primary-channel:   #8A7F96;\r\n\t\t\t\t\t--noise1-secondary-note:    #A1A3B7;\r\n\t\t\t\t\t--noise1-primary-note:      #DDBADD;\r\n\t\t\t\t\t--noise2-secondary-channel: #865E40;\r\n\t\t\t\t\t--noise2-primary-channel:   #ddaa77;\r\n\t\t\t\t\t--noise2-secondary-note:    #C7B47A;\r\n\t\t\t\t\t--noise2-primary-note:      #CFC587;\r\n\t\t\t\t\t--noise3-secondary-channel: #7E7068;\r\n\t\t\t\t\t--noise3-primary-channel:   #B19998;\r\n\t\t\t\t\t--noise3-secondary-note:    #BAA6BC;\r\n\t\t\t\t\t--noise3-primary-note:      #EDDCEC;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel: #156C99;\r\n\t\t\t\t\t--mod1-primary-channel:   #00CFDF;\r\n\t\t\t\t\t--mod1-secondary-note:    #0080A8;\r\n\t\t\t\t\t--mod1-primary-note:      #009FC6;\r\n\t\t\t\t\t--mod2-secondary-channel: #AD923A;\r\n\t\t\t\t\t--mod2-primary-channel:   #FFD552;\r\n\t\t\t\t\t--mod2-secondary-note:    #C49736;\r\n\t\t\t\t\t--mod2-primary-note:      #EFC742;\r\n\t\t\t\t\t--mod3-secondary-channel: #7A401E;\r\n\t\t\t\t\t--mod3-primary-channel:   #C14E30;\r\n\t\t\t\t\t--mod3-secondary-note:    #89381B;\r\n\t\t\t\t\t--mod3-primary-note:      #E15427;\r\n\t\t\t\t\t--mod4-secondary-channel: #0B6030;\r\n\t\t\t\t\t--mod4-primary-channel:   #00915C;\r\n\t\t\t\t\t--mod4-secondary-note:    #004337;\r\n\t\t\t\t\t--mod4-primary-note:      #00915E;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"fogbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #252525;\r\n\t\t\t\t--editor-background: #252525;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"foxbox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #ADD8E6;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\t\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t \"wackybox\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: black;\r\n\t\t\t\t--editor-background: black;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: white;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #444;\r\n\t\t\t\t--ui-widget-focus: #777;\r\n\t\t\t\t--pitch-background: #444;\r\n\t\t\t\t--tonic: #864;\r\n\t\t\t\t--fifth-note: #468;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #bbb;\r\n\t\t\t\t--black-piano-key: #444;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--track-editor-bg-pitch: #444;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-noise: #444;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #333;\r\n\t\t\t\t\t--track-editor-bg-mod: #234;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #123;\r\n\t\t\t\t\t--multiplicative-mod-slider: #456;\r\n\t\t\t\t\t--overwriting-mod-slider: #654;\r\n\t\t\t\t\t--indicator-primary: #74f;\r\n\t\t\t\t\t--indicator-secondary: #444;\r\n\t\t\t\t\t--select2-opt-group: #585858;\r\n\t\t\t\t\t--input-box-outline: #333;\r\n\t\t\t\t\t--mute-button-normal: #ffa033;\r\n\t\t\t\t\t--mute-button-mod: #9a6bff;\r\n\t\t\t\t\t--pitch-channel-limit: 6;\r\n\t\t\t\t\t--noise-channel-limit: 3;\r\n\t\t\t\t--pitch1-secondary-channel: #0099A1;\r\n\t\t\t\t--pitch1-primary-channel:   #25F3FF;\r\n\t\t\t\t--pitch1-secondary-note:    #00BDC7;\r\n\t\t\t\t--pitch1-primary-note:      #92F9FF;\r\n\t\t\t\t--pitch2-secondary-channel: #A1A100;\r\n\t\t\t\t--pitch2-primary-channel:   #FFFF25;\r\n\t\t\t\t--pitch2-secondary-note:    #C7C700;\r\n\t\t\t\t--pitch2-primary-note:      #FFFF92;\r\n\t\t\t\t--pitch3-secondary-channel: #C75000;\r\n\t\t\t\t--pitch3-primary-channel:   #FF9752;\r\n\t\t\t\t--pitch3-secondary-note:    #FF771C;\r\n\t\t\t\t--pitch3-primary-note:      #FFCDAB;\r\n\t\t\t\t--pitch4-secondary-channel: #00A100;\r\n\t\t\t\t--pitch4-primary-channel:   #50FF50;\r\n\t\t\t\t--pitch4-secondary-note:    #00C700;\r\n\t\t\t\t--pitch4-primary-note:      #A0FFA0;\r\n\t\t\t\t--pitch5-secondary-channel: #D020D0;\r\n\t\t\t\t--pitch5-primary-channel:   #FF90FF;\r\n\t\t\t\t--pitch5-secondary-note:    #E040E0;\r\n\t\t\t\t--pitch5-primary-note:      #FFC0FF;\r\n\t\t\t\t--pitch6-secondary-channel: #7777B0;\r\n\t\t\t\t--pitch6-primary-channel:   #A0A0FF;\r\n\t\t\t\t--pitch6-secondary-note:    #8888D0;\r\n\t\t\t\t--pitch6-primary-note:      #D0D0FF;\r\n\t\t\t\t--pitch7-secondary-channel: #8AA100;\r\n\t\t\t\t--pitch7-primary-channel:   #DEFF25;\r\n\t\t\t\t--pitch7-secondary-note:    #AAC700;\r\n\t\t\t\t--pitch7-primary-note:      #E6FF92;\r\n\t\t\t\t--pitch8-secondary-channel: #DF0019;\r\n\t\t\t\t--pitch8-primary-channel:   #FF98A4;\r\n\t\t\t\t--pitch8-secondary-note:    #FF4E63;\r\n\t\t\t\t--pitch8-primary-note:      #FFB2BB;\r\n\t\t\t\t--pitch9-secondary-channel: #00A170;\r\n\t\t\t\t--pitch9-primary-channel:   #50FFC9;\r\n\t\t\t\t--pitch9-secondary-note:    #00C78A;\r\n\t\t\t\t--pitch9-primary-note:      #83FFD9;\r\n\t\t\t\t--pitch10-secondary-channel:#A11FFF;\r\n\t\t\t\t--pitch10-primary-channel:  #CE8BFF;\r\n\t\t\t\t--pitch10-secondary-note:   #B757FF;\r\n\t\t\t\t--pitch10-primary-note:     #DFACFF;\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          --mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t}\r\n\r\n\t\t\t* {\r\n\t\t\t\tcursor: url('./image_assets/wackybox_cursor.png'), auto;\r\n\t\t\t}\r\n\r\n\r\n.beepboxEditor {\r\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\r\n}\r\n\t\t\r\n.beepboxEditor .tip {\r\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor .prompt label {\r\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor .layout-option {\r\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor select {\r\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.select2-selection__rendered {\r\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.select2-container--default .select2-results__group {\r\n    cursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor button {\r\n\t cursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor canvas {\r\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n.beepboxEditor input {\r\n\tcursor: url('./image_assets/wackybox_cursor.png'), auto !important;;\r\n}\r\n\r\n\t\t\t`,\r\n\t\t\t \"microbox\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #000000;\r\n\t\t\t\t\t--editor-background: #000000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #93B6AD;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: rgba(47,255,250,0.99);\r\n\t\t\t\t\t--box-selection-fill: #03B068;\r\n\t\t\t\t\t--loop-accent: #FF0061;\r\n\t\t\t\t\t--link-accent: #FFC800;\r\n\t\t\t\t\t--ui-widget-background: #38554E;\r\n\t\t\t\t\t--ui-widget-focus: #2A7E69;\r\n\t\t\t\t\t--pitch-background: #281F23;\r\n\t\t\t\t\t--tonic: #004634;\r\n\t\t\t\t\t--fifth-note: #463400;\r\n\t\t\t\t\t--third-note: #886744;\r\n\t\t\t\t\t--white-piano-key: #edc;\r\n\t\t\t\t\t--black-piano-key: #456;\r\n\t\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t\t--track-editor-bg-pitch: #333333;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #000000;\r\n\t\t\t\t\t--track-editor-bg-noise: #463400;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #000000;\r\n\t\t\t\t\t--track-editor-bg-mod: #004634;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #000000;\r\n\t\t\t\t\t--multiplicative-mod-slider: #FFC800;\r\n\t\t\t\t\t--overwriting-mod-slider: #00ffc0;\r\n\t\t\t\t\t--indicator-primary: #333333;\r\n\t\t\t\t\t--indicator-secondary: #00ffc0;\r\n\t\t\t\t\t--select2-opt-group: #2B2B2B;\r\n\t\t\t\t\t--input-box-outline: #69BFC6;\r\n\t\t\t\t\t--mute-button-normal: #00ffc0;\r\n\t\t\t\t\t--mute-button-mod: #FFC800;\r\n\t\t\t\t\t--mod-label-primary: #38554E;\r\n\t\t\t\t\t--mod-label-secondary-text: rgb(0, 43, 45);\r\n\t\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"paandorasbox\": `\r\n\t\t\t:root {\r\n\t\t\t --page-margin: #200000;\r\n\t\t\t  --editor-background: #200000;\r\n\t\t\t  --hover-preview: white;\r\n\t\t\t  --playhead: white;\r\n\t\t\t  --primary-text: white;\r\n\t\t\t  --secondary-text: #999;\r\n\t\t\t  --inverted-text: black;\r\n\t\t\t  --text-selection: #FF5100;\r\n\t\t\t  --box-selection-fill: rgba(255,255,255,0.2);\r\n\t\t\t  --loop-accent: #FF5100;\r\n\t\t\t  --link-accent: #0F0;\r\n\t\t\t  --ui-widget-background: #562334;\r\n\t\t\t  --ui-widget-focus: #6D1B36;\r\n\t\t\t  --pitch-background: #6D1B36;\r\n\t\t\t  --tonic: #FF5100;\r\n\t\t\t  --fifth-note: #00B6FF;\r\n\t\t\t  --third-note: #bf32b0;\r\n\t\t\t  --white-piano-key: #bbb;\r\n\t\t\t  --black-piano-key: #444;\r\n\t\t\t  --use-color-formula: false;\r\n\t\t\t  --pitch-channel-limit: 10;\r\n\t\t\t  --track-editor-bg-pitch: #380C14;\r\n\t\t\t  --track-editor-bg-pitch-dim: #200000;\r\n\t\t\t  --track-editor-bg-noise: #233323;\r\n\t\t\t  --track-editor-bg-noise-dim: #101A0F;\r\n\t\t\t  --track-editor-bg-mod: #234C82;\r\n\t\t\t  --track-editor-bg-mod-dim: #0D1D33;\r\n\t\t\t  --multiplicative-mod-slider: #456;\r\n\t\t\t  --overwriting-mod-slider: #654;\r\n\t\t\t  --indicator-primary: #FF5100;\r\n\t\t\t  --indicator-secondary: #444;\r\n\t\t\t  --select2-opt-group: #585858;\r\n\t\t\t  --input-box-outline: #333;\r\n\t\t\t  --mute-button-normal: #ffa033;\r\n\t\t\t  --mute-button-mod: #9a6bff;\r\n\t\t\t  --pitch1-secondary-channel: #00B200;\r\n\t\t\t  --pitch1-primary-channel: #0F0;\r\n\t\t\t  --pitch1-secondary-note: #00B200;\r\n\t\t\t  --pitch1-primary-note: #0F0;\r\n\t\t\t  --pitch2-secondary-channel: #00B282;\r\n\t\t\t  --pitch2-primary-channel: #00FFBF;\r\n\t\t\t  --pitch2-secondary-note: #00B282;\r\n\t\t\t  --pitch2-primary-note: #00FFBF;\r\n\t\t\t  --pitch3-secondary-channel: #00B2B2;\r\n\t\t\t  --pitch3-primary-channel: #0FF;\r\n\t\t\t  --pitch3-secondary-note: #00B2B2;\r\n\t\t\t  --pitch3-primary-note: #0FF;\r\n\t\t\t  --pitch4-secondary-channel: #2623B2;\r\n\t\t\t  --pitch4-primary-channel: #3631FF;\r\n\t\t\t  --pitch4-secondary-note: #2623B2;\r\n\t\t\t  --pitch4-primary-note: #3631FF;\r\n\t\t\t  --pitch5-secondary-channel: #7700B2;\r\n\t\t\t  --pitch5-primary-channel: #A0F;\r\n\t\t\t  --pitch5-secondary-note: #7700B2;\r\n\t\t\t  --pitch5-primary-note: #A0F;\r\n\t\t\t  --pitch6-secondary-channel: #B200B2;\r\n\t\t\t  --pitch6-primary-channel: #F0F;\r\n\t\t\t  --pitch6-secondary-note: #B200B2;\r\n\t\t\t  --pitch6-primary-note: #F0F;\r\n\t\t\t  --pitch7-secondary-channel: #B20000;\r\n\t\t\t  --pitch7-primary-channel: #F00;\r\n\t\t\t  --pitch7-secondary-note: #B20000;\r\n\t\t\t  --pitch7-primary-note: #F00;\r\n\t\t\t  --pitch8-secondary-channel: #00B200;\r\n\t\t\t  --pitch8-primary-channel: #0F0;\r\n\t\t\t  --pitch8-secondary-note: #00B200;\r\n\t\t\t  --pitch8-primary-note: #0F0;\r\n\t\t\t  --pitch9-secondary-channel: #00B282;\r\n\t\t\t  --pitch9-primary-channel: #0FF;\r\n\t\t\t  --pitch9-secondary-note: #00B282;\r\n\t\t\t  --pitch9-primary-note: #0FF;\r\n\t\t\t  --pitch10-secondary-channel: #0071B2;\r\n\t\t\t  --pitch10-primary-channel: #009EFF;\r\n\t\t\t  --pitch10-secondary-note: #0071B2;\r\n\t\t\t  --pitch10-primary-note: #009EFF;\r\n\t\t\t  --noise1-secondary-channel: #32B221;\r\n\t\t\t  --noise1-primary-channel: #44FF2F;\r\n\t\t\t  --noise1-secondary-note: #32B221;\r\n\t\t\t  --noise1-primary-note: #44FF2F;\r\n\t\t\t  --noise2-secondary-channel: #216FB2;\r\n\t\t\t  --noise2-primary-channel: #2F9DFF;\r\n\t\t\t  --noise2-secondary-note: #216FB2;\r\n\t\t\t  --noise2-primary-note: #2F9DFF;\r\n\t\t\t  --noise3-secondary-channel: #2623B2;\r\n\t\t\t  --noise3-primary-channel: #3631FF;\r\n\t\t\t  --noise3-secondary-note: #2623B2;\r\n\t\t\t  --noise3-primary-note: #3631FF;\r\n\t\t\t  --noise4-secondary-channel: #7223B2;\r\n\t\t\t  --noise4-primary-channel: #A531FF;\r\n\t\t\t  --noise4-secondary-note: #7223B2;\r\n\t\t\t  --noise4-primary-note: #A531FF;\r\n\t\t\t  --noise5-secondary-channel: #B2235A;\r\n\t\t\t  --noise5-primary-channel: #FF317E;\r\n\t\t\t  --noise5-secondary-note: #B2235A;\r\n\t\t\t  --noise5-primary-note: #FF317E;\r\n\t\t\t  --mod1-secondary-channel: #17B274;\r\n\t\t\t  --mod1-primary-channel: #21FFA8;\r\n\t\t\t  --mod1-secondary-note: #17B274;\r\n\t\t\t  --mod1-primary-note: #21FFA8;\r\n\t\t\t  --mod2-secondary-channel: #1783B2;\r\n\t\t\t  --mod2-primary-channel: #1FBAFF;\r\n\t\t\t  --mod2-secondary-note: #1783B2;\r\n\t\t\t  --mod2-primary-note: #1FBAFF;\r\n\t\t\t  --mod3-secondary-channel: #553399;\r\n\t\t\t  --mod3-primary-channel: #8855fc;\r\n\t\t\t  --mod3-secondary-note: #aa64ff;\r\n\t\t\t  --mod3-primary-note: #f8ddff;\r\n\t\t\t  --mod4-secondary-channel: #B20E6B;\r\n\t\t\t  --mod4-primary-channel: #FF1291;\r\n\t\t\t  --mod4-secondary-note: #B20E6B;\r\n\t\t\t  --mod4-primary-note: #FF1291;\r\n\t\t\t  --mod-label-primary: #994038;\r\n\t\t\t  --mod-label-secondary-text: #331512;\r\n\t\t\t  --mod-label-primary-text: #331512;\r\n\t\t\t  --disabled-note-primary: #994038;\r\n\t\t\t  --disabled-note-secondary: #331512;\r\n\r\n\t\t\t  \r\n\t\t\t  \r\n\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"midbox\":\r\n\t\t`:root {\r\n\t\t\t--page-margin: #010a1e;\r\n\t\t\t--editor-background: #010a1e;\r\n\t\t\t--hover-preview: #dfe9fe;\r\n\t\t\t--playhead: #e7f5f6;\r\n\t\t\t--primary-text: #f0fdff;\r\n\t\t\t--secondary-text: #c4c7d7;\r\n\t\t\t--inverted-text: #0f0623;\r\n\t\t\t--text-selection: #3f0ab4;\r\n\t\t\t--box-selection-fill: #32afb3;\r\n\t\t\t--loop-accent: #1719ff;\r\n\t\t\t--link-accent: #83a6ed;\r\n\t\t\t--ui-widget-background: #222856;\r\n\t\t\t--ui-widget-focus: #21417c;\r\n\t\t\t--pitch-background: #10264a;\r\n\t\t\t--tonic: #0797ce;\r\n\t\t\t--fifth-note: #3e2fb5;\r\n\t\t\t--third-note: #44887e;\r\n\t\t\t--white-piano-key: #ebf3f4;\r\n\t\t\t--black-piano-key: #253353;\r\n\t\t\t--oscilloscope-line-L: #72dcfc;\r\n\t\t\t--oscilloscope-line-R: #304eff;\r\n\t\t\t--use-color-formula: true;\r\n\t\t\t--track-editor-bg-pitch: #183b65; \r\n\t\t\t--track-editor-bg-pitch-dim: #1f2c3d;\r\n\t\t\t--track-editor-bg-noise: #2e196d;\r\n\t\t\t--track-editor-bg-noise-dim: #212038;\r\n\t\t\t--track-editor-bg-mod: #066433;\r\n\t\t\t--track-editor-bg-mod-dim: #152b1f;\r\n\t\t\t--multiplicative-mod-slider: #1242a4;\r\n\t\t\t--overwriting-mod-slider: #2218db;\r\n\t\t\t--indicator-primary: #1698d3;\r\n\t\t\t--indicator-secondary: #1b478e;\r\n\t\t\t--select2-opt-group: #312f6d;\r\n\t\t\t--input-box-outline: #788b96;\r\n\t\t\t--mute-button-normal: #1d34f2;\r\n\t\t\t--mute-button-mod: #06bad6;\r\n\t\t\t--mod-label-primary: #14383f;\r\n\t\t\t--mod-label-secondary-text: #1d7080;\r\n\t\t\t--mod-label-primary-text: #b7e9f2;\r\n\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t\t--disabled-note-primary:    #53527b;\r\n\t\t\t--disabled-note-secondary:  #1c1b30;\r\n\r\n\t\t\t\r\n\t\t\t\r\n\t\t}`,\r\n\t\t\"dogebox2\": `\r\n\t\t\t:root {\r\n\t\t\t\t--page-margin: #000015;\r\n\t\t\t\t--editor-background: #000015;\r\n\t\t\t\t--hover-preview: #00ffff;\r\n\t\t\t\t--playhead: #00ffff;\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #999;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(255, 127, 80, 0.99);\r\n\t\t\t\t--box-selection-fill: rgba(255, 255, 255, 0.2);\r\n\t\t\t\t--loop-accent: #ff00ff;\r\n\t\t\t\t--link-accent: #00ffff;\r\n\t\t\t\t--ui-widget-background: #222222;\r\n\t\t\t\t--ui-widget-focus: #444444;\r\n\t\t\t\t--pitch-background: #222222;\r\n\t\t\t\t--tonic: #ab382c;\r\n\t\t\t\t--fifth-note: #2a76a8;\r\n\t\t\t\t--third-note: #70ab2c;\r\n\t\t\t\t--white-piano-key: #ffffff;\r\n\t\t\t\t--black-piano-key: #222222;\r\n\t\t\t\t--white-piano-key-text: #000000;\r\n\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t--track-editor-bg-pitch: #222222;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #111111;\r\n\t\t\t\t--track-editor-bg-noise: #222222;\r\n\t\t\t\t--track-editor-bg-noise-dim: #111111;\r\n\t\t\t\t--track-editor-bg-mod: #333333;\r\n\t\t\t\t--track-editor-bg-mod-dim: #111111;\r\n\t\t\t\t--multiplicative-mod-slider: #666666;\r\n\t\t\t\t--overwriting-mod-slider: #666666;\r\n\t\t\t\t--indicator-primary: #ff00ff;\r\n\t\t\t\t--indicator-secondary: #00ffff;\r\n\t\t\t\t--select2-opt-group: #333333;\r\n\t\t\t\t--input-box-outline: #444444;\r\n\t\t\t\t--mute-button-normal: #ff00ff;\r\n\t\t\t\t--mute-button-mod: #00ffff;\r\n\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t--pitch1-secondary-channel: #bd9909;\r\n\t\t\t\t--pitch1-primary-channel: #fbff8e;\r\n\t\t\t\t--pitch1-secondary-note: #c79d3a;\r\n\t\t\t\t--pitch1-primary-note: #fdffb2;\r\n\t\t\t\t--pitch2-secondary-channel: #b86e0d;\r\n\t\t\t\t--pitch2-primary-channel: #ffb28e;\r\n\t\t\t\t--pitch2-secondary-note: #ba643a;\r\n\t\t\t\t--pitch2-primary-note: #fbac92;\r\n\t\t\t\t--pitch3-secondary-channel: #a81b08;\r\n\t\t\t\t--pitch3-primary-channel: #f56c67;\r\n\t\t\t\t--pitch3-secondary-note: #94352b;\r\n\t\t\t\t--pitch3-primary-note: #f56147;\r\n\t\t\t\t--pitch4-secondary-channel: #2a7722;\r\n\t\t\t\t--pitch4-primary-channel: #6ebf5e;\r\n\t\t\t\t--pitch4-secondary-note: #1c5c18;\r\n\t\t\t\t--pitch4-primary-note: #88cf82;\r\n\t\t\t\t--pitch5-secondary-channel: #8c8b3c;\r\n\t\t\t\t--pitch5-primary-channel: #c3c168;\r\n\t\t\t\t--pitch5-secondary-note: #747330;\r\n\t\t\t\t--pitch5-primary-note: #d4d394;\r\n\t\t\t\t--pitch6-secondary-channel: #3f9577;\r\n\t\t\t\t--pitch6-primary-channel: #6fc4b4;\r\n\t\t\t\t--pitch6-secondary-note: #2c6a5c;\r\n\t\t\t\t--pitch6-primary-note: #8fdad0;\r\n\t\t\t\t--pitch7-secondary-channel: #204a80;\r\n\t\t\t\t--pitch7-primary-channel: #6d9fc2;\r\n\t\t\t\t--pitch7-secondary-note: #132f5a;\r\n\t\t\t\t--pitch7-primary-note: #9dbed8;\r\n\t\t\t\t--pitch8-secondary-channel: #a531ad;\r\n\t\t\t\t--pitch8-primary-channel: #db68e3;\r\n\t\t\t\t--pitch8-secondary-note: #8d2f94;\r\n\t\t\t\t--pitch8-primary-note: #e66cbf;\r\n\t\t\t\t--pitch9-secondary-channel: #03a1a1;\r\n\t\t\t\t--pitch9-primary-channel: #52fffb;\r\n\t\t\t\t--pitch9-secondary-note: #34baba;\r\n\t\t\t\t--pitch9-primary-note: #60fbfb;\r\n\t\t\t\t--pitch10-secondary-channel: #4208a1;\r\n\t\t\t\t--pitch10-primary-channel: #9282ff;\r\n\t\t\t\t--pitch10-secondary-note: #5735b5;\r\n\t\t\t\t--pitch10-primary-note: #ab52fb;\r\n\t\t\t\t--noise1-secondary-channel: #2a5555;\r\n\t\t\t\t--noise1-primary-channel: #4c7878;\r\n\t\t\t\t--noise1-secondary-note: #6e9a9a;\r\n\t\t\t\t--noise1-primary-note: #90bcbc;\r\n\t\t\t\t--noise2-secondary-channel: #553355;\r\n\t\t\t\t--noise2-primary-channel: #775577;\r\n\t\t\t\t--noise2-secondary-note: #997799;\r\n\t\t\t\t--noise2-primary-note: #bbaa99;\r\n\t\t\t\t--noise3-secondary-channel: #2a6622;\r\n\t\t\t\t--noise3-primary-channel: #4c8844;\r\n\t\t\t\t--noise3-secondary-note: #6eaa66;\r\n\t\t\t\t--noise3-primary-note: #90cc88;\r\n\t\t\t\t--noise4-secondary-channel: #664400;\r\n\t\t\t\t--noise4-primary-channel: #886600;\r\n\t\t\t\t--noise4-secondary-note: #aa8800;\r\n\t\t\t\t--noise4-primary-note: #cccc00;\r\n\t\t\t\t--noise5-secondary-channel: #006633;\r\n\t\t\t\t--noise5-primary-channel: #008855;\r\n\t\t\t\t--noise5-secondary-note: #00aa77;\r\n\t\t\t\t--noise5-primary-note: #00cc99;\r\n\t\t\t\t--mod1-secondary-channel: #fe00ff;\r\n\t\t\t\t--mod1-primary-channel: #ff72ff;\r\n\t\t\t\t--mod1-secondary-note: #ff92ff;\r\n\t\t\t\t--mod1-primary-note: #ffb2fb;\r\n\t\t\t\t--mod2-secondary-channel: #00fe00;\r\n\t\t\t\t--mod2-primary-channel: #8eff8e;\r\n\t\t\t\t--mod2-secondary-note: #92ff92;\r\n\t\t\t\t--mod2-primary-note: #b2ffb2;\r\n\t\t\t\t--mod3-secondary-channel: #feff00;\r\n\t\t\t\t--mod3-primary-channel: #fffb8e;\r\n\t\t\t\t--mod3-secondary-note: #fffd92;\r\n\t\t\t\t--mod3-primary-note: #fffe92;\r\n\t\t\t\t--mod4-secondary-channel: #00fffe;\r\n\t\t\t\t--mod4-primary-channel: #82fffb;\r\n\t\t\t\t--mod4-secondary-note: #92ffff;\r\n\t\t\t\t--mod4-primary-note: #b2fffb;\r\n\t\t\t\t--disabled-note-primary: #c6c6c6;\r\n\t\t\t\t--disabled-note-secondary: #8c8c8c;\r\n\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t}`,\r\n\t\t\t\t\"birdbox dark\": `\r\n\t\t\t\t:root {\r\n\t\t\t\t\t--page-margin: #000;\r\n\t\t\t\t\t--editor-background: #000;\r\n\t\t\t\t\t--hover-preview: white;\r\n\t\t\t\t\t--playhead: white;\r\n\t\t\t\t\t--primary-text: white;\r\n\t\t\t\t\t--secondary-text: #000;\r\n\t\t\t\t\t--inverted-text: black;\r\n\t\t\t\t\t--text-selection: #000;\r\n\t\t\t\t\t--box-selection-fill: #000;\r\n\t\t\t\t\t--loop-accent: #000;\r\n\t\t\t\t\t--link-accent: #000;\r\n\t\t\t\t\t--ui-widget-background: #000;\r\n\t\t\t\t\t--ui-widget-focus: #000;\r\n\t\t\t\t\t--pitch-background: #000;\r\n\t\t\t\t\t--tonic: #000;\r\n\t\t\t\t\t--fifth-note: #000;\r\n\t\t\t\t\t--third-note: #000;\r\n\t\t\t\t\t--white-piano-key: #000;\r\n\t\t\t\t\t--black-piano-key: #000;\r\n\t\t\t\t}\r\n\r\n\t\t\t\thtml {\r\n\t\t\t\tfilter: brightness(0);\r\n\t\t\t\t}\r\n\t\t\t`,\r\n\t\t\t\"birdbox light\": `\r\n\t\t\t:root {\r\n\t\t\t\t-webkit-text-stroke-width: 0.5px;\r\n\t\t\t\t--page-margin: #685d88;\r\n\t\t\t\t--editor-background: white;\r\n\t\t\t\t--hover-preview: black;\r\n\t\t\t\t--playhead: rgba(0,0,0,0.5);\r\n\t\t\t\t--primary-text: black;\r\n\t\t\t\t--secondary-text: #777;\r\n\t\t\t\t--inverted-text: white;\r\n\t\t\t\t--text-selection: rgba(200,170,255,0.99);\r\n\t\t\t\t--box-selection-fill: rgba(0,0,0,0.1);\r\n\t\t\t\t--loop-accent: #98f;\r\n\t\t\t\t--link-accent: #74f;\r\n\t\t\t\t--ui-widget-background: #ececec;\r\n\t\t\t\t--ui-widget-focus: #eee;\r\n\t\t\t\t--pitch-background: #ececec;\r\n\t\t\t\t--tonic: #f0d6b6;\r\n\t\t\t\t--fifth-note: #bbddf0;\r\n\t\t\t\t--third-note: #bbf0ce;\r\n\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t\t\t--use-color-formula: false;\r\n\t\t\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t\t\t--track-editor-bg-pitch: #ececec;\r\n\t\t\t\t\t--track-editor-bg-pitch-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-noise: #ececec;\r\n\t\t\t\t\t--track-editor-bg-noise-dim: #fdfdfd;\r\n\t\t\t\t\t--track-editor-bg-mod: #dbecfd;\r\n\t\t\t\t\t--track-editor-bg-mod-dim: #ecfdff;\r\n\t\t\t\t\t--multiplicative-mod-slider: #789;\r\n\t\t\t\t\t--overwriting-mod-slider: #987;\r\n\t\t\t\t\t--indicator-primary: #98f;\r\n\t\t\t\t\t--indicator-secondary: #cde;\r\n\t\t\t\t\t--select2-opt-group: #cecece;\r\n\t\t\t\t\t--input-box-outline: #ddd;\r\n\t\t\t\t\t--mute-button-normal: #c0b47f;\r\n\t\t\t\t\t--mute-button-mod: #bd7fc0;\r\n\t\t\t\t--pitch1-secondary-channel: #6CD9ED;\r\n\t\t\t\t--pitch1-primary-channel:   #00A0BD;\r\n\t\t\t\t--pitch1-secondary-note:    #34C2DC;\r\n\t\t\t\t--pitch1-primary-note:      #00758A;\r\n\t\t\t\t--pitch2-secondary-channel: #E3C941;\r\n\t\t\t\t--pitch2-primary-channel:   #B49700;\r\n\t\t\t\t--pitch2-secondary-note:    #D1B628;\r\n\t\t\t\t--pitch2-primary-note:      #836E00;\r\n\t\t\t\t--pitch3-secondary-channel: #FF9D61;\r\n\t\t\t\t--pitch3-primary-channel:   #E14E00;\r\n\t\t\t\t--pitch3-secondary-note:    #F67D3C;\r\n\t\t\t\t--pitch3-primary-note:      #B64000;\r\n\t\t\t\t--pitch4-secondary-channel: #4BE24B;\r\n\t\t\t\t--pitch4-primary-channel:   #00A800;\r\n\t\t\t\t--pitch4-secondary-note:    #2DC82D;\r\n\t\t\t\t--pitch4-primary-note:      #008000;\r\n\t\t\t\t--pitch5-secondary-channel: #FF90FF;\r\n\t\t\t\t--pitch5-primary-channel:   #E12EDF;\r\n\t\t\t\t--pitch5-secondary-note:    #EC6EEC;\r\n\t\t\t\t--pitch5-primary-note:      #A600A5;\r\n\t\t\t\t--pitch6-secondary-channel: #B5B5FE;\r\n\t\t\t\t--pitch6-primary-channel:   #6969FD;\r\n\t\t\t\t--pitch6-secondary-note:    #9393FE;\r\n\t\t\t\t--pitch6-primary-note:      #4A4AD7;\r\n\t\t\t\t--pitch7-secondary-channel: #C2D848;\r\n\t\t\t\t--pitch7-primary-channel:   #8EA800;\r\n\t\t\t\t--pitch7-secondary-note:    #B0C82D;\r\n\t\t\t\t--pitch7-primary-note:      #6C8000;\r\n\t\t\t\t--pitch8-secondary-channel: #FF90A4;\r\n\t\t\t\t--pitch8-primary-channel:   #E12E4D;\r\n\t\t\t\t--pitch8-secondary-note:    #EC6E85;\r\n\t\t\t\t--pitch8-primary-note:      #A6001D;\r\n\t\t\t\t--pitch9-secondary-channel: #41E3B5;\r\n\t\t\t\t--pitch9-primary-channel:   #00B481;\r\n\t\t\t\t--pitch9-secondary-note:    #28D1A1;\r\n\t\t\t\t--pitch9-primary-note:      #00835E;\r\n\t\t\t\t--pitch10-secondary-channel:#CA77FF;\r\n\t\t\t\t--pitch10-primary-channel:  #9609FF;\r\n\t\t\t\t--pitch10-secondary-note:   #B54FFF;\r\n\t\t\t\t--pitch10-primary-note:     #8400E3;\r\n\t\t\t\t--noise1-secondary-channel: #C1C1C1;\r\n\t\t\t\t--noise1-primary-channel:   #898989;\r\n\t\t\t\t--noise1-secondary-note:    #ADADAD;\r\n\t\t\t\t--noise1-primary-note:      #6C6C6C;\r\n\t\t\t\t--noise2-secondary-channel: #E8BB8C;\r\n\t\t\t\t--noise2-primary-channel:   #BD7D3A;\r\n\t\t\t\t--noise2-secondary-note:    #D1A374;\r\n\t\t\t\t--noise2-primary-note:      #836342;\r\n\t\t\t\t--noise3-secondary-channel: #9BC4EB;\r\n\t\t\t\t--noise3-primary-channel:   #4481BE;\r\n\t\t\t\t--noise3-secondary-note:    #7CA7D3;\r\n\t\t\t\t--noise3-primary-note:      #476685;\r\n\t\t\t\t--noise4-secondary-channel: #C5A5E0;\r\n\t\t\t\t--noise4-primary-channel:   #8553AE;\r\n\t\t\t\t--noise4-secondary-note:    #B290CC;\r\n\t\t\t\t--noise4-primary-note:      #684F7D;\r\n\t\t\t\t--noise5-secondary-channel: #B8CE93;\r\n\t\t\t\t--noise5-primary-channel:   #87A74F;\r\n\t\t\t\t--noise5-secondary-note:    #ABC183;\r\n\t\t\t\t--noise5-primary-note:      #68784C;\r\n\t\t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77dd55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #2ad84a;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ba124a;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:        #7a1caa;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #a86810;\r\n\t\t\t\t\t--mod-label-primary:        #dddddd;\r\n\t\t\t\t\t--mod-label-secondary-text: #777;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #666;\r\n\t\t\t\t\t--disabled-note-secondary:  #aaa;\r\n\t\t\t}\r\n\r\n\t\t\thtml {\r\n\t\t\t\tfilter: brightness(2000);\r\n\t\t\t\t}\r\n\r\n\t\t\t.promptContainerBG::before {\r\n\t\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t\t}\r\n\r\n\t\t\t.beepboxEditor button, .beepboxEditor select, button {\r\n\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t}\r\n\r\n\t\t\t\t.select2-selection__rendered {\r\n\t\t\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t\t\t}\r\n\t\t`,\r\n\t\t\"azur lane\":`\r\n\t\t:root {\r\n\t\t\t--page-margin: #19337e;\r\n\t\t\t--editor-background: #000333cf;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t--primary-text: #9af9ff;\r\n\t\t\t--secondary-text: #4072dd;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t--loop-accent: #950d0d;\r\n\t\t\t--link-accent: #0072ff;\r\n\t\t\t--ui-widget-background: #255bb3;\r\n\t\t\t--ui-widget-focus: #757575;\r\n\t\t\t--pitch-background: #20468b73;\r\n\t\t\t--tonic: #c9c9c9;\r\n\t\t\t--fifth-note: #731d1d;\r\n\t\t\t--third-note: #486;\r\n\t\t\t--white-piano-key: #eee;\r\n\t\t\t--black-piano-key: #000;\r\n\t\t\t--white-piano-key-text: #131200;\r\n\t\t\t--black-piano-key-text: #fff;\r\n\t\t\t--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\t\t\t--track-editor-bg-pitch: #535a73;\r\n\t\t\t--track-editor-bg-pitch-dim: #353643;\r\n\t\t\t--track-editor-bg-noise: #770000;\r\n\t\t\t--track-editor-bg-noise-dim: #430000;\r\n\t\t\t--track-editor-bg-mod: #5d1d06;\r\n\t\t\t--track-editor-bg-mod-dim: #270000;\r\n\t\t\t--multiplicative-mod-slider: #bb0000;\r\n\t\t\t--overwriting-mod-slider: #ad0000;\r\n\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t--input-box-outline: #002957;\r\n\t\t\t--mute-button-normal: #ffffff;\r\n\t\t\t--mute-button-mod: #4f4f4f;\r\n\t\t\t--mod-label-primary: #531313;\r\n\t\t\t--pitch1-secondary-channel: #80858d;\r\n\t\t  --pitch1-primary-channel: #f2f7ff;\r\n\t\t  --pitch1-secondary-note: #80858d;\r\n\t\t  --pitch1-primary-note: #f2f7ff;\r\n\t\t  --pitch2-secondary-channel: #7392ad;\r\n\t\t  --pitch2-primary-channel: #a8d6ff;\r\n\t\t  --pitch2-secondary-note: #7392ad;\r\n\t\t  --pitch2-primary-note: #a8d6ff;\r\n\t\t  --pitch3-secondary-channel: #4b7eaa;\r\n\t\t  --pitch3-primary-channel: #71bdff;\r\n\t\t  --pitch3-secondary-note: #4b7eaa;\r\n\t\t  --pitch3-primary-note: #71bdff;\r\n\t\t  --pitch4-secondary-channel: #3594b1;\r\n\t\t  --pitch4-primary-channel: #48d4ff;\r\n\t\t  --pitch4-secondary-note: #3594b1;\r\n\t\t  --pitch4-primary-note: #48d4ff;\r\n\t\t  --pitch5-secondary-channel: #1b98b1;\r\n\t\t  --pitch5-primary-channel: #30f1ff;\r\n\t\t  --pitch5-secondary-note: #1b98b1;\r\n\t\t  --pitch5-primary-note: #30f1ff;\r\n\t\t  --pitch6-secondary-channel: #9e0000;\r\n\t\t  --pitch6-primary-channel: #db0000;\r\n\t\t  --pitch6-secondary-note: #9e0000;\r\n\t\t  --pitch6-primary-note: #db0000;\r\n\t\t  --pitch7-secondary-channel: #7c1717;\r\n\t\t  --pitch7-primary-channel: #9e0000;\r\n\t\t  --pitch7-secondary-note: #7c1717;\r\n\t\t  --pitch7-primary-note: #9e0000;\r\n\t\t  --pitch8-secondary-channel: #5c1f1f;\r\n\t\t  --pitch8-primary-channel: #7c1717;\r\n\t\t  --pitch8-secondary-note: #5c1f1f;\r\n\t\t  --pitch8-primary-note: #7c1717;\r\n\t\t  --pitch9-secondary-channel: #3e2020;\r\n\t\t  --pitch9-primary-channel: #5c1f1f;\r\n\t\t  --pitch9-secondary-note: #3e2020;\r\n\t\t  --pitch9-primary-note: #5c1f1f;\r\n\t\t  --pitch10-secondary-channel: #2f1c1c;\r\n\t\t  --pitch10-primary-channel: #5c1f1f;\r\n\t\t  --pitch10-secondary-note: #2f1c1c;\r\n\t\t  --pitch10-primary-note: #5c1f1f;\r\n\t\t  --noise1-secondary-channel: #828282;\r\n\t\t  --noise1-primary-channel: #cacaca;\r\n\t\t  --noise1-secondary-note: #828282;\r\n\t\t  --noise1-primary-note: #cacaca;\r\n\t\t  --noise2-secondary-channel: #2f8baf;\r\n\t\t  --noise2-primary-channel: #3de2ff;\r\n\t\t  --noise2-secondary-note: #2f8baf;\r\n\t\t  --noise2-primary-note: #3de2ff;\r\n\t\t  --noise3-secondary-channel: #6f50b1;\r\n\t\t  --noise3-primary-channel: #8567ff;\r\n\t\t  --noise3-secondary-note: #6f50b1;\r\n\t\t  --noise3-primary-note: #8567ff;\r\n\t\t  --noise4-secondary-channel: #d38900;\r\n\t\t  --noise4-primary-channel: #ffb500;\r\n\t\t  --noise4-secondary-note: #d38900;\r\n\t\t  --noise4-primary-note: #ffb500;\r\n\t\t  --noise5-secondary-channel: #af0008;\r\n\t\t  --noise5-primary-channel: #00d70e;\r\n\t\t  --noise5-secondary-note: #29b700;\r\n\t\t  --noise5-primary-note: #00f7ff;\r\n\t\t  --mod1-secondary-channel: #9d5bb9;\r\n\t\t  --mod1-primary-channel: #e16bff;\r\n\t\t  --mod1-secondary-note: #3a3ea4;\r\n\t\t  --mod1-primary-note: #fff;\r\n\t\t  --mod2-secondary-channel: #3a8d58;\r\n\t\t  --mod2-primary-channel: #42ffff;\r\n\t\t  --mod2-secondary-note: #3a8d58;\r\n\t\t  --mod2-primary-note: #42ffff;\r\n\t\t  --mod3-secondary-channel: #af6c00;\r\n\t\t  --mod3-primary-channel: #fa0;\r\n\t\t  --mod3-secondary-note: #0001a2;\r\n\t\t  --mod3-primary-note: #970000;\r\n\t\t  --mod4-secondary-channel: #d3d3d3;\r\n\t\t  --mod4-primary-channel: #759bff;\r\n\t\t  --mod4-secondary-note: #a00000;\r\n\t\t  --mod4-primary-note: #fff;\r\n\t\t  --disabled-note-primary: #3a3a3a;\r\n\t\t  --disabled-note-secondary: #000;\r\n\r\n\t\t  \r\n\t\t  \r\n\t\t\t}\r\n\r\n\t\t.promptContainerBG::before {\r\n\t\t\tbox-shadow: inset 0 0 2000px rgba(255, 255, 255, .5);\r\n\t\t}\r\n\r\n\t\r\n\t\t/* replaces hotdog (in a hacky way) with an image of the girls using the same scratch sprites from the 404 page*/\r\n\t\t#Hotdog {\r\n\t\tdisplay: none;\r\n\t\t}\r\n\t\t.instructions-column > section:first-of-type > p:first-of-type:after {\r\n\t\tdisplay: block;\r\n\t\tcontent: url(\"./image_assets/UltraboxAzurLaneThemeStarterSquad.png\");\r\n\t\twidth: 100%;\r\n\t\ttext-align: center;\r\n\t\tmargin-top: 25px;\r\n\t\t}\r\n\t\t/* sets cursor */\r\n\t\t* {\r\n\t\tcursor: url(\"./image_assets/UltraBoxAzurLaneThemeMouse.png\"), auto !important;\r\n\t\t}\r\n\t\t/* sets background image */\r\n\t\tbody {\r\n\t\tbackground-image: url(\"./image_assets/UltraBoxAzurLaneThemeMemoryTaskBackground.png\") !important;\r\n\t\tbackground-size: cover;\r\n\t\tbackground-position: center;\r\n\t\tbackground-repeat: no-repeat;\r\n\t\t\t}\r\n\t\t\t/* make editor background transparent */\r\n\t\t#beepboxEditorContainer, .beepboxEditor, #text-content {\r\n\t\tbackground: #0400257d !important;\r\n\t\t}\r\n\t\t\t#text-content > section > h1 > font {\r\n\t\tdisplay: none;\r\n\t\t}\r\n\t\t#text-content > section > h1 {\r\n\t\tmargin: auto;\r\n\t\tcontent: url(\"./image_assets/UltraBoxALThemeLogo.png\");\r\n\t\t}\r\n\t}`,\r\n\"WeebBox\": `\r\n\t:root {\r\n\t\t--page-margin: #040410;\r\n\t\t--editor-background: #040410;\r\n\t\t--hover-preview: white;\r\n\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t--primary-text: white;\r\n\t\t--secondary-text: #84859a;\r\n\t\t--inverted-text: black;\r\n\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t--box-selection-fill: #044b94;\r\n\t\t--loop-accent: #74f;\r\n\t\t--link-accent: #98f;\r\n\t\t--ui-widget-background: #393e4f;\r\n\t\t--ui-widget-focus: #6d6886;\r\n\t\t--pitch-background: #393e4f55;\r\n\t\t--tonic: #725491;\r\n\t\t--fifth-note: #54547a;\r\n\t\t--third-note: #3b4b71;\r\n\t\t--white-piano-key: #eee;\r\n\t\t--black-piano-key: #666;\r\n\t\t--white-piano-key-text: #131200;\r\n\t\t--black-piano-key-text: #fff;\r\n\t\t--use-color-formula: true;\r\n\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t--track-editor-bg-mod: #283560;\r\n\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t--indicator-primary: #9c64f7;\r\n\t\t--indicator-secondary: #393e4f;\r\n\t\t--select2-opt-group: #5d576f;\r\n\t\t--input-box-outline: #222;\r\n\t\t--mute-button-normal: #dda85d;\r\n\t\t--mute-button-mod: #886eae;\r\n\t\t--mod-label-primary: #282840;\r\n\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t--mod-label-primary-text: white;\r\n\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t--pitch-secondary-channel-hue-scale: 6.5;\r\n\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t--pitch-primary-channel-hue: 0;\r\n\t\t--pitch-primary-channel-hue-scale: 6.5;\r\n\t\t--pitch-primary-channel-sat: 100;\r\n\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t--pitch-secondary-note-hue: 0;\r\n\t\t--pitch-secondary-note-hue-scale: 6.5;\r\n\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t--pitch-secondary-note-lum: 25;\r\n\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t--pitch-primary-note-hue: 0;\r\n\t\t--pitch-primary-note-hue-scale: 6.5;\r\n\t\t--pitch-primary-note-sat: 100;\r\n\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t--noise-secondary-channel-hue: 0;\r\n\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t--noise-secondary-channel-sat: 25;\r\n\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t--noise-secondary-channel-lum: 42;\r\n\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t--noise-primary-channel-hue: 0;\r\n\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t--noise-primary-channel-sat: 33;\r\n\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t--noise-secondary-note-hue: 0;\r\n\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t--noise-secondary-note-lum: 55;\r\n\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t--noise-primary-note-hue: 0;\r\n\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t--noise-primary-note-sat: 46.5;\r\n\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t--noise-primary-note-lum: 74;\r\n\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t--mod-secondary-channel-hue: 192;\r\n\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t--mod-secondary-channel-sat: 88;\r\n\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t--mod-secondary-channel-lum: 50;\r\n\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t--mod-primary-channel-hue: 192;\r\n\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t--mod-primary-channel-sat: 96;\r\n\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t--mod-primary-channel-lum: 80;\r\n\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t--mod-secondary-note-hue: 192;\r\n\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t--mod-secondary-note-sat: 92;\r\n\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t--mod-secondary-note-lum: 45;\r\n\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t--mod-primary-note-hue: 192;\r\n\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t--mod-primary-note-sat: 96;\r\n\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t--mod-primary-note-lum: 85;\r\n\t\t--mod-primary-note-lum-scale: 0;\r\n\t\t--disabled-note-primary:    #91879f;\r\n\t\t--disabled-note-secondary:  #6a677a;\r\n\r\n\t\t\r\n\t\t\r\n\t}\r\n\t#firstImage {\r\n\t\tbackground-image: url(\"https://choptop84.github.io/choptop84s-image-repository/weebboxbackground.jpg\") !important;\r\n\t\tbackground-repeat: no-repeat !important;\r\n\t\tbackground-size: 100% 100% !important;\r\n\t}\r\n\r\n\t#firstImage rect {\r\n\t\topacity: 0.8 !important;\r\n\t}\r\n`,\r\n\t\"BoxBeep Dark\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: #97a277;\r\n\t\t\t--editor-background: black;\r\n\t\t\t--hover-preview: white;\r\n\t\t\t--playhead: rgba(255,255,255,255.5);\r\n\t\t\t--primary-text: white;\r\n\t\t\t--secondary-text: #888;\r\n\t\t\t--inverted-text: black;\r\n\t\t\t--text-selection: rgba(55, 85, 0, 0.99);\r\n\t\t\t--box-selection-fill: rgba(225,255,255,0.1);\r\n\t\t\t--loop-accent: #670;\r\n\t\t\t--link-accent: #8b0;\r\n\t\t\t--ui-widget-background: #131313;\r\n\t\t\t--ui-widget-focus: #111;\r\n\t\t\t--pitch-background: #131313;\r\n\t\t\t--tonic: #0f2949;\r\n\t\t\t--fifth-note: #44220f;\r\n\t\t\t--third-note: #440f31;\r\n\t\t\t--white-piano-key: #111111;\r\n\t\t\t--black-piano-key: #999999;\r\n\t\t\t--white-piano-key-text: #fff;\r\n\t\t\t--black-piano-key-text: #000;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\r\n\t\t\t--pitch1-secondary-channel: #932612;\r\n\t\t\t--pitch1-primary-channel:   #ff5f42;\r\n\t\t\t--pitch1-secondary-note:    #cb3d23;\r\n\t\t\t--pitch1-primary-note:      #ff8a75;\r\n\r\n\t\t\t--pitch2-secondary-channel: #1c36be;\r\n\t\t\t--pitch2-primary-channel:   #4b68ff;\r\n\t\t\t--pitch2-secondary-note:    #2e49d7;\r\n\t\t\t--pitch2-primary-note:      #7c91ff;\r\n\r\n\t\t\t--pitch3-secondary-channel: #00629e;\r\n\t\t\t--pitch3-primary-channel:   #1eb1ff;\r\n\t\t\t--pitch3-secondary-note:    #0982c3;\r\n\t\t\t--pitch3-primary-note:      #49bfff;\r\n\r\n\t\t\t--pitch4-secondary-channel: #b41db4;\r\n\t\t\t--pitch4-primary-channel:   #ff57ff;\r\n\t\t\t--pitch4-secondary-note:    #d237d2;\r\n\t\t\t--pitch4-primary-note:      #ff7fff;\r\n\r\n\t\t\t--pitch5-secondary-channel: #006f00;\r\n\t\t\t--pitch5-primary-channel:   #1ed120;\r\n\t\t\t--pitch5-secondary-note:    #139113;\r\n\t\t\t--pitch5-primary-note:      #59ff5a;\r\n\r\n\t\t\t--pitch6-secondary-channel: #4a4a01;\r\n\t\t\t--pitch6-primary-channel:   #969602;\r\n\t\t\t--pitch6-secondary-note:    #6c6c01;\r\n\t\t\t--pitch6-primary-note:      #b5b528;\r\n\r\n\t\t\t--pitch7-secondary-channel: #3d27b7;\r\n\t\t\t--pitch7-primary-channel:   #7157ff;\r\n\t\t\t--pitch7-secondary-note:    #4f37d2;\r\n\t\t\t--pitch7-primary-note:      #937fff;\r\n\r\n\t\t\t--pitch8-secondary-channel: #006f5b;\r\n\t\t\t--pitch8-primary-channel:   #1ed1b2;\r\n\t\t\t--pitch8-secondary-note:    #13917a;\r\n\t\t\t--pitch8-primary-note:      #59ffe2;\r\n\r\n\t\t\t--pitch9-secondary-channel: #be1c4a;\r\n\t\t\t--pitch9-primary-channel:   #ff4b7e;\r\n\t\t\t--pitch9-secondary-note:    #d72e5e;\r\n\t\t\t--pitch9-primary-note:      #ff7ca1;\r\n\r\n\t\t\t--pitch10-secondary-channel:#358800;\r\n\t\t\t--pitch10-primary-channel:  #69f600;\r\n\t\t\t--pitch10-secondary-note:   #4ab000;\r\n\t\t\t--pitch10-primary-note:     #7bff1c;\r\n\r\n\t\t\t--noise1-secondary-channel: #3e3e3e;\r\n\t\t\t--noise1-primary-channel:   #767676;\r\n\t\t\t--noise1-secondary-note:    #525252;\r\n\t\t\t--noise1-primary-note:      #939393;\r\n\r\n\t\t\t--noise2-secondary-channel: #174473;\r\n\t\t\t--noise2-primary-channel:   #4282c5;\r\n\t\t\t--noise2-secondary-note:    #2e5c8b;\r\n\t\t\t--noise2-primary-note:      #7c9cbd;\r\n\r\n\t\t\t--noise3-secondary-channel: #643b14;\r\n\t\t\t--noise3-primary-channel:   #bb7e41;\r\n\t\t\t--noise3-secondary-note:    #83582c;\r\n\t\t\t--noise3-primary-note:      #b8997a;\r\n\r\n\t\t\t--noise4-secondary-channel: #3a5a1f;\r\n\t\t\t--noise4-primary-channel:   #7aac51;\r\n\t\t\t--noise4-secondary-note:    #4d6f33;\r\n\t\t\t--noise4-primary-note:      #97b082;\r\n\r\n\t\t\t--noise5-secondary-channel: #47316c;\r\n\t\t\t--noise5-primary-channel:   #87A74F;\r\n\t\t\t--noise5-secondary-note:    #7858b0;\r\n\t\t\t--noise5-primary-note:      #9787b3;\r\n\t\t}\r\n\t\t\r\n\t\t.beepboxEditor button, .beepboxEditor select, button {\r\n\t\t\tbox-shadow: inset 0 0 0 1px var(--secondary-text);\r\n\t\t}\r\n\t\t\r\n\t\ta.tip {\r\n\t\t\tdisplay:none;\r\n\t\t}\r\n\r\n\t\tdiv.visualizer {\r\n\t\t\ttransform: scaleX(-1);\r\n\t\t}\r\n\r\n\t\t`,\r\n\t\t\"BoxBeep light\": `\r\n\t\t:root {\r\n\t\t\t--page-margin: white;\r\n\t\t\t--editor-background: white;\r\n\t\t\t--hover-preview: black;\r\n\t\t\t--playhead: black;\r\n\t\t\t--primary-text: black;\r\n\t\t\t--secondary-text: #666666;\r\n\t\t\t--inverted-text: white;\r\n\t\t\t--text-selection: rgba(136, 187, 0,0.99);\r\n\t\t\t--box-selection-fill: rgba(0,0,0,0.2);\r\n\t\t\t--loop-accent: #88bb00;\r\n\t\t\t--link-accent: #667700;\r\n\t\t\t--ui-widget-background: #bbbbbb;\r\n\t\t\t--ui-widget-focus: #888888;\r\n\t\t\t--pitch-background: #bbbbbb;\r\n\t\t\t--tonic: #7799bb;\r\n\t\t\t--fifth-note: #bb9977;\r\n\t\t\t--third-note: #a877bb;\r\n\t\t\t--white-piano-key: #444444;\r\n\t\t\t--black-piano-key: #bbbbbb;\r\n\t\t\t--white-piano-key-text: #fff;\r\n\t\t\t--black-piano-key-text: #000;\r\n\t\t\t--pitch-channel-limit: 10;\r\n\r\n\t\t\t--pitch1-secondary-channel: #ff665e;\r\n\t\t\t--pitch1-primary-channel:   #da0c00;\r\n\t\t\t--pitch1-secondary-note:    #ff4238;\r\n\t\t\t--pitch1-primary-note:      #6d0600;\r\n\r\n\t\t\t--pitch2-secondary-channel: #5e5eff;\r\n\t\t\t--pitch2-primary-channel:   #0000da;\r\n\t\t\t--pitch2-secondary-note:   \t#3838ff;\r\n\t\t\t--pitch2-primary-note:      #00006d;\r\n\r\n\t\t\t--pitch3-secondary-channel: #38afff;\r\n\t\t\t--pitch3-primary-channel:   #0068ad;\r\n\t\t\t--pitch3-secondary-note:    #0088e3;\r\n\t\t\t--pitch3-primary-note:      #003254;\r\n\r\n\t\t\t--pitch4-secondary-channel: #ff5eff;\r\n\t\t\t--pitch4-primary-channel:   #af00af;\r\n\t\t\t--pitch4-secondary-note:    #ff38ff;\r\n\t\t\t--pitch4-primary-note:      #5f005f;\r\n\r\n\t\t\t--pitch5-secondary-channel: #2fdf2f;\r\n\t\t\t--pitch5-primary-channel:   #006f00;\r\n\t\t\t--pitch5-secondary-note:    #1fbf1f;\r\n\t\t\t--pitch5-primary-note:      #003f00;\r\n\r\n\t\t\t--pitch6-secondary-channel: #88884f;\r\n\t\t\t--pitch6-primary-channel:   #5f5f00;\r\n\t\t\t--pitch6-secondary-note:    #77772f;\r\n\t\t\t--pitch6-primary-note:      #2f2f00;\r\n\r\n\t\t\t--pitch7-secondary-channel: #755eff;\r\n\t\t\t--pitch7-primary-channel:   #2100da;\r\n\t\t\t--pitch7-secondary-note:    #5538ff;\r\n\t\t\t--pitch7-primary-note:      #19006d;\r\n\r\n\t\t\t--pitch8-secondary-channel: #20ffe6;\r\n\t\t\t--pitch8-primary-channel:   #00675b;\r\n\t\t\t--pitch8-secondary-note:    #00b19c;\r\n\t\t\t--pitch8-primary-note:      #004d44;\r\n\r\n\t\t\t--pitch9-secondary-channel: #ff5e8f;\r\n\t\t\t--pitch9-primary-channel:   #af0036;\r\n\t\t\t--pitch9-secondary-note:    #ff3875;\r\n\t\t\t--pitch9-primary-note:      #7c0026;\r\n\r\n\t\t\t--pitch10-secondary-channel:#5ee000;\r\n\t\t\t--pitch10-primary-channel:  #317400;\r\n\t\t\t--pitch10-secondary-note:   #48a800;\r\n\t\t\t--pitch10-primary-note:     #205300;\r\n\r\n\t\t\t--noise1-secondary-channel: #909090;\r\n\t\t\t--noise1-primary-channel:   #555555;\r\n\t\t\t--noise1-secondary-note:    #585858;\r\n\t\t\t--noise1-primary-note:      #1f1f1f;\r\n\r\n\t\t\t--noise2-secondary-channel: #6699cc;\r\n\t\t\t--noise2-primary-channel:   #225588;\r\n\t\t\t--noise2-secondary-note:    #336699;\r\n\t\t\t--noise2-primary-note:      #0f2f44;\r\n\r\n\t\t\t--noise3-secondary-channel: #b59270;\r\n\t\t\t--noise3-primary-channel:   #885522;\r\n\t\t\t--noise3-secondary-note:    #906030;\r\n\t\t\t--noise3-primary-note:      #442800;\r\n\r\n\t\t\t--noise4-secondary-channel: #85b065;\r\n\t\t\t--noise4-primary-channel:   #507d2d;\r\n\t\t\t--noise4-secondary-note:    #618e3e;\r\n\t\t\t--noise4-primary-note:      #2b3e15;\r\n\r\n\t\t\t--noise5-secondary-channel: #9f87c8;\r\n\t\t\t--noise5-primary-channel:   #5d4488;\r\n\t\t\t--noise5-secondary-note:    #6e5599;\r\n\t\t\t--noise5-primary-note:      #3a1d4d;\r\n\t\t}\r\n\r\n\t\tdiv.visualizer {\r\n\t\t\ttransform: scaleX(-1);\r\n\t\t}\r\n\r\n\t\ta.tip {\r\n\t\t\tdisplay:none;\r\n\t\t}\r\n\t\t`,\r\n\r\n\t\t\"Protanopia\": `\r\n:root { \r\n--page-margin: #000000; \r\n--editor-background: #000000; \r\n--hover-preview: white; \r\n--playhead: rgba(255, 255, 255, 0.9); \r\n--primary-text: #ffffff; \r\n--secondary-text: #e5e5e5; \r\n--inverted-text: #000000; \r\n--text-selection: rgba(119,68,255,0.99); \r\n--box-selection-fill: #044b94; \r\n--loop-accent: #ffffff; \r\n--link-accent: #8915c8; \r\n--ui-widget-background: #676767; \r\n--ui-widget-focus: #696969; \r\n--pitch-background: #302f36; \r\n--tonic: #19181c; \r\n--fifth-note: #1b1924; \r\n--third-note: #192415;\r\n--white-piano-key: #a6a6a6; \r\n--black-piano-key: #484848; \r\n--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n--track-editor-bg-pitch: #666666; \r\n--track-editor-bg-pitch-dim: #383838; \r\n--track-editor-bg-noise: #438240; \r\n--track-editor-bg-noise-dim: #1e361d; \r\n--track-editor-bg-mod: #5f419c; \r\n--track-editor-bg-mod-dim: #3e2b66; \r\n--multiplicative-mod-slider: #b62326; \r\n--overwriting-mod-slider: #5f1214; \r\n--indicator-primary: #ccffdb; \r\n--indicator-secondary: #55dee6; \r\n--select2-opt-group: #595959; \r\n--input-box-outline: #ffffff; \r\n--mute-button-normal: #f11d22; \r\n--mute-button-mod: #4b57c2; \r\n--mod-label-primary: #0909ff; \r\n--mod-label-secondary-text: #ffffff; \r\n--mod-label-primary-text: #c8ecfd; \r\n\t\t\t\t--pitch1-secondary-channel: #160740;\r\n\t\t\t\t--pitch1-primary-channel:   #482d8a;\r\n\r\n\t\t\t\t--pitch1-secondary-note:    #160740;\r\n\t\t\t\t--pitch1-primary-note:      #482d8a;\r\n\r\n\t\t\t\t--pitch2-secondary-channel: #0b555e;\r\n\t\t\t\t--pitch2-primary-channel:   #126e7a;\r\n\r\n\t\t\t\t--pitch2-secondary-note:    #0b555e;\r\n\t\t\t\t--pitch2-primary-note:      #126e7a;\r\n\r\n\t\t\t\t--pitch3-secondary-channel: #1d898c;\r\n\t\t\t\t--pitch3-primary-channel:   #2fa9ad;\r\n\r\n\t\t\t\t--pitch3-secondary-note:    #1d898c;\r\n\t\t\t\t--pitch3-primary-note:      #2fa9ad;\r\n\r\n\t\t\t\t--pitch4-secondary-channel: #3f9160;\r\n\t\t\t\t--pitch4-primary-channel:   #55ad78;\r\n\r\n\t\t\t\t--pitch4-secondary-note:    #3f9160;\r\n\t\t\t\t--pitch4-primary-note:      #55ad78;\r\n\r\n\t\t\t\t--pitch5-secondary-channel: #69b051;\r\n\t\t\t\t--pitch5-primary-channel:   #97e07e;\r\n\r\n\t\t\t\t--pitch5-secondary-note:    #69b051;\r\n\t\t\t\t--pitch5-primary-note:      #97e07e;\r\n\r\n\t\t\t\t--pitch6-secondary-channel: #bbcc8f;\r\n\t\t\t\t--pitch6-primary-channel:   #d4e3ac;\r\n\r\n\t\t\t\t--pitch6-secondary-note:    #bbcc8f;\r\n\t\t\t\t--pitch6-primary-note:      #d4e3ac;\r\n\r\n\t\t\t\t--pitch7-secondary-channel: #8f7657;\r\n\t\t\t\t--pitch7-primary-channel:   #b5a28a;\r\n\r\n\t\t\t\t--pitch7-secondary-note:    #8f7657;\r\n\t\t\t\t--pitch7-primary-note:      #b5a28a;\r\n\r\n\t\t\t\t--pitch8-secondary-channel: #804d3c;\r\n\t\t\t\t--pitch8-primary-channel:   #a16a58;\r\n\r\n\t\t\t\t--pitch8-secondary-note:    #804d3c;\r\n\t\t\t\t--pitch8-primary-note:      #a16a58;\r\n\r\n\t\t\t\t--pitch9-secondary-channel: #a62b2b;\r\n\t\t\t\t--pitch9-primary-channel:   #ba3c3c;\r\n\r\n\t\t\t\t--pitch9-secondary-note:    #a62b2b;\r\n\t\t\t\t--pitch9-primary-note:      #ba3c3c;\r\n\r\n\t\t\t\t--pitch10-secondary-channel:#ba497c;\r\n\t\t\t\t--pitch10-primary-channel:  #d46195;\r\n\r\n\t\t\t\t--pitch10-secondary-note:   #ba497c;\r\n\t\t\t\t--pitch10-primary-note:     #d46195;\r\n\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          \t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n}\r\n\r\n\t\t\t`,\r\n\t\t\"Tritanopia\": `\r\n:root { \r\n--page-margin: #000000; \r\n--editor-background: #000000; \r\n--hover-preview: white; \r\n--playhead: rgba(255, 255, 255, 0.9); \r\n--primary-text: #ffffff; \r\n--secondary-text: #e5e5e5; \r\n--inverted-text: #000000; \r\n--text-selection: rgba(119,68,255,0.99); \r\n--box-selection-fill: #044b94; \r\n--loop-accent: #ffffff; \r\n--link-accent: #8915c8; \r\n--ui-widget-background: #676767; \r\n--ui-widget-focus: #696969; \r\n--pitch-background: #302f36; \r\n--tonic: #19181c; \r\n--fifth-note: #1b1924; \r\n--third-note: #192415;\r\n--white-piano-key: #a6a6a6; \r\n--black-piano-key: #484848; \r\n--use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10; \r\n--track-editor-bg-pitch: #666666; \r\n--track-editor-bg-pitch-dim: #383838; \r\n--track-editor-bg-noise: #438240; \r\n--track-editor-bg-noise-dim: #1e361d; \r\n--track-editor-bg-mod: #5f419c; \r\n--track-editor-bg-mod-dim: #3e2b66; \r\n--multiplicative-mod-slider: #b62326; \r\n--overwriting-mod-slider: #5f1214; \r\n--indicator-primary: #ccffdb; \r\n--indicator-secondary: #55dee6; \r\n--select2-opt-group: #595959; \r\n--input-box-outline: #ffffff; \r\n--mute-button-normal: #f11d22; \r\n--mute-button-mod: #4b57c2; \r\n--mod-label-primary: #0909ff; \r\n--mod-label-secondary-text: #ffffff; \r\n--mod-label-primary-text: #c8ecfd; \r\n\t\t\t\t--pitch1-secondary-channel: #9C0000;\r\n\t\t\t\t--pitch1-primary-channel:   #FF0000;\r\n\r\n\t\t\t\t--pitch1-secondary-note:    #9C0000;\r\n\t\t\t\t--pitch1-primary-note:      #FF0000;\r\n\r\n\t\t\t\t--pitch2-secondary-channel: #8E009C;\r\n\t\t\t\t--pitch2-primary-channel:   #EB25FF;\r\n\r\n\t\t\t\t--pitch2-secondary-note:    #8E009C;\r\n\t\t\t\t--pitch2-primary-note:      #EB25FF;\r\n\r\n\t\t\t\t--pitch3-secondary-channel: #00069C;\r\n\t\t\t\t--pitch3-primary-channel:   #3D45FF;\r\n\r\n\t\t\t\t--pitch3-secondary-note:    #00069C;\r\n\t\t\t\t--pitch3-primary-note:      #3D45FF;\r\n\r\n\t\t\t\t--pitch4-secondary-channel: #00829C;\r\n\t\t\t\t--pitch4-primary-channel:   #24DBFF;\r\n\r\n\t\t\t\t--pitch4-secondary-note:    #00829C;\r\n\t\t\t\t--pitch4-primary-note:      #24DBFF;\r\n\r\n\t\t\t\t--pitch5-secondary-channel: #009C18;\r\n\t\t\t\t--pitch5-primary-channel:   #70FF86;\r\n\r\n\t\t\t\t--pitch5-secondary-note:    #009C18;\r\n\t\t\t\t--pitch5-primary-note:      #70FF86;\r\n\r\n\t\t\t\t--pitch6-secondary-channel: #8E9C00;\r\n\t\t\t\t--pitch6-primary-channel:   #DBEF16;\r\n\r\n\t\t\t\t--pitch6-secondary-note:    #8E9C00;\r\n\t\t\t\t--pitch6-primary-note:      #DBEF16;\r\n\r\n\t\t\t\t--pitch7-secondary-channel: #9C6A00;\r\n\t\t\t\t--pitch7-primary-channel:   #F7AC0E;\r\n\r\n\t\t\t\t--pitch7-secondary-note:    #9C6A00;\r\n\t\t\t\t--pitch7-primary-note:      #F7AC0E;\r\n\r\n\t\t\t\t--pitch8-secondary-channel: #9C2300;\r\n\t\t\t\t--pitch8-primary-channel:   #F53700;\r\n\r\n\t\t\t\t--pitch8-secondary-note:    #9C2300;\r\n\t\t\t\t--pitch8-primary-note:      #F53700;\r\n\r\n\t\t\t\t--pitch9-secondary-channel: #441A0D;\r\n\t\t\t\t--pitch9-primary-channel:   #9E3F22;\r\n\r\n\t\t\t\t--pitch9-secondary-note:    #441A0D;\r\n\t\t\t\t--pitch9-primary-note:      #9E3F22;\r\n\r\n\t\t\t\t--pitch10-secondary-channel:#2C0D44;\r\n\t\t\t\t--pitch10-primary-channel:  #7436A4;\r\n\r\n\t\t\t\t--pitch10-secondary-note:   #2C0D44;\r\n\t\t\t\t--pitch10-primary-note:     #7436A4;\r\n\r\n\t\t\t\t--noise1-secondary-channel: #6F6F6F;\r\n\t\t\t\t--noise1-primary-channel:   #AAAAAA;\r\n\r\n\t\t\t\t--noise1-secondary-note:    #A7A7A7;\r\n\t\t\t\t--noise1-primary-note:      #E0E0E0;\r\n\r\n\t\t\t\t--noise2-secondary-channel: #996633;\r\n\t\t\t\t--noise2-primary-channel:   #DDAA77;\r\n\t\t\t\t--noise2-secondary-note:    #CC9966;\r\n\t\t\t\t--noise2-primary-note:      #F0D0BB;\r\n\t\t\t\t--noise3-secondary-channel: #4A6D8F;\r\n\t\t\t\t--noise3-primary-channel:   #77AADD;\r\n\t\t\t\t--noise3-secondary-note:    #6F9FCF;\r\n\t\t\t\t--noise3-primary-note:      #BBD7FF;\r\n\t\t\t\t--noise4-secondary-channel: #7A4F9A;\r\n\t\t\t\t--noise4-primary-channel:   #AF82D2;\r\n\t\t\t\t--noise4-secondary-note:    #9E71C1;\r\n\t\t\t\t--noise4-primary-note:      #D4C1EA;\r\n\t\t\t\t--noise5-secondary-channel: #607837;\r\n\t\t\t\t--noise5-primary-channel:   #A2BB77;\r\n\t\t\t\t--noise5-secondary-note:    #91AA66;\r\n\t\t\t\t--noise5-primary-note:      #C5E2B2;\r\n          \t\t\t\t--mod1-secondary-channel:   #339955;\r\n\t\t\t\t\t--mod1-primary-channel:     #77fc55;\r\n\t\t\t\t\t--mod1-secondary-note:      #77ff8a;\r\n\t\t\t\t\t--mod1-primary-note:        #cdffee;\r\n\t\t\t\t\t--mod2-secondary-channel:   #993355;\r\n\t\t\t\t\t--mod2-primary-channel:     #f04960;\r\n\t\t\t\t\t--mod2-secondary-note:      #f057a0;\r\n\t\t\t\t\t--mod2-primary-note:        #ffb8de;\r\n\t\t\t\t\t--mod3-secondary-channel:   #553399;\r\n\t\t\t\t\t--mod3-primary-channel:     #8855fc;\r\n\t\t\t\t\t--mod3-secondary-note:      #aa64ff;\r\n\t\t\t\t\t--mod3-primary-note:\t    #f8ddff;\r\n\t\t\t\t\t--mod4-secondary-channel:   #a86436;\r\n\t\t\t\t\t--mod4-primary-channel:     #c8a825;\r\n\t\t\t\t\t--mod4-secondary-note:      #e8ba46;\r\n\t\t\t\t\t--mod4-primary-note:        #fff6d3;\r\n\t\t\t\t\t--mod-label-primary:        #999;\r\n\t\t\t\t\t--mod-label-secondary-text: #333;\r\n\t\t\t\t\t--mod-label-primary-text:   black;\r\n\t\t\t\t\t--disabled-note-primary:    #999;\r\n\t\t\t\t\t--disabled-note-secondary:  #666;\r\n\t\t\t\t\t\r\n\t\t\t\t\t\r\n}\r\n\r\n\t\t\t`,\r\n\t\t\"Deuteranopia\": `\r\n    :root {\r\n    --page-margin: #000;\r\n    --editor-background: #060606;\r\n    --hover-preview: #fff;\r\n    --playhead: rgb(255, 255, 255);\r\n    --primary-text: #fff;\r\n    --secondary-text: #fff;\r\n    --inverted-text: #000;\r\n    --text-selection: rgba(126, 126, 126, .99);\r\n    --box-selection-fill: #b74a4a;\r\n    --loop-accent: #7744FF;\r\n    --link-accent: #7744FF;\r\n    --ui-widget-background: #484848;\r\n    --ui-widget-focus: #3e3e3e;\r\n    --pitch-background: #3e3e3e;\r\n    --tonic: #861057;\r\n    --fifth-note: #7e7e7e;\r\n\t--third-note: #486;\r\n    --use-color-formula: false;\r\n\t\t\t--pitch-channel-limit: 10;\r\n    --track-editor-bg-pitch: #666161;\r\n    --track-editor-bg-pitch-dim: #3e3e3e;\r\n    --track-editor-bg-noise: #474747;\r\n    --track-editor-bg-noise-dim: #1a1a1a;\r\n    --track-editor-bg-mod: #474747;\r\n    --track-editor-bg-mod-dim: #1a1a1a;\r\n    --multiplicative-mod-slider: #868686;\r\n    --overwriting-mod-slider: #fff;\r\n    --indicator-primary: #fff;\r\n    --indicator-secondary: #535353;\r\n    --select2-opt-group: #5d576f;\r\n    --input-box-outline: #626262;\r\n    --mute-button-normal: #ffdc00;\r\n    --mute-button-mod: #0027ff;\r\n    --mod-label-primary: #2b2b2b;\r\n\r\n    --pitch1-secondary-channel: #0082BB;\r\n  --pitch1-primary-channel: #B1E8FF;\r\n  --pitch1-secondary-note: #0082BB;\r\n  --pitch1-primary-note: #B1E8FF;\r\n  --pitch2-secondary-channel: #005F88;\r\n  --pitch2-primary-channel: #00B2FF;\r\n  --pitch2-secondary-note: #005F88;\r\n  --pitch2-primary-note: #00B2FF;\r\n  --pitch3-secondary-channel: #0E0090;\r\n  --pitch3-primary-channel: #5196ff;\r\n  --pitch3-secondary-note: #0E0090;\r\n  --pitch3-primary-note: #5196ff;\r\n  --pitch4-secondary-channel: #001540;\r\n  --pitch4-primary-channel: #0041CA;\r\n  --pitch4-secondary-note: #001b55;\r\n  --pitch4-primary-note: #0041CA;\r\n  --pitch5-secondary-channel: #936e21;\r\n  --pitch5-primary-channel: #ffb300;\r\n  --pitch5-secondary-note: #936e21;\r\n  --pitch5-primary-note: #ffbe23;\r\n  --pitch6-secondary-channel: #ca5b00;\r\n  --pitch6-primary-channel: #faff52;\r\n  --pitch6-secondary-note: #ca5b00;\r\n  --pitch6-primary-note: #faff52;\r\n  --pitch7-secondary-channel: #75714a;\r\n  --pitch7-primary-channel: #fff3b8;\r\n  --pitch7-secondary-note: #75714a;\r\n  --pitch7-primary-note: #fff3b8;\r\n  --pitch8-secondary-channel: #9c4100;\r\n  --pitch8-primary-channel: #fc0;\r\n  --pitch8-secondary-note: #9c4100;\r\n  --pitch8-primary-note: #fc0;\r\n  --pitch9-secondary-channel: #8d4d00;\r\n  --pitch9-primary-channel: #ff9b20;\r\n  --pitch9-secondary-note: #8d4d00;\r\n  --pitch9-primary-note: #ff9b20;\r\n  --pitch10-secondary-channel: #a28f00;\r\n  --pitch10-primary-channel: #ffac55;\r\n  --pitch10-secondary-note: #a28f00;\r\n  --pitch10-primary-note: #ffac55;\r\n  --noise1-secondary-channel: #868686;\r\n  --noise1-primary-channel: #fff;\r\n  --noise1-secondary-note: #868686;\r\n  --noise1-primary-note: #fff;\r\n  --noise2-secondary-channel: #ad5600;\r\n  --noise2-primary-channel: #ffd300;\r\n  --noise2-secondary-note: #ad5600;\r\n  --noise2-primary-note: #ffd300;\r\n  --noise3-secondary-channel: #4f2f00;\r\n  --noise3-primary-channel: #fff3bc;\r\n  --noise3-secondary-note: #4f2f00;\r\n  --noise3-primary-note: #fff3bc;\r\n  --noise4-secondary-channel: #0070ff;\r\n  --noise4-primary-channel: #84f1ff;\r\n  --noise4-secondary-note: #0070ff;\r\n  --noise4-primary-note: #84f1ff;\r\n  --noise5-secondary-channel: #00c4b2;\r\n  --noise5-primary-channel: #4198ff;\r\n  --noise5-secondary-note: #00c4b2;\r\n  --noise5-primary-note: #4198ff;\r\n  --mod1-secondary-channel: #00046c;\r\n  --mod1-primary-channel: #00faff;\r\n  --mod1-secondary-note: #00046c;\r\n  --mod1-primary-note: #00faff;\r\n  --mod2-secondary-channel: #d25a00;\r\n  --mod2-primary-channel: #fdff00;\r\n  --mod2-secondary-note: #d25a00;\r\n  --mod2-primary-note: #fdff00;\r\n  --mod3-secondary-channel: #5a5a5a;\r\n  --mod3-primary-channel: #fff;\r\n  --mod3-secondary-note: #5a5a5a;\r\n  --mod3-primary-note: #fff;\r\n  --mod4-secondary-channel: #006dfb;\r\n  --mod4-primary-channel: #0ce7ff;\r\n  --mod4-secondary-note: #006dfb;\r\n  --mod4-primary-note: #0ce7ff;\r\n  --disabled-note-primary: #8d8d8d;\r\n  --disabled-note-secondary: #363636;\r\n\r\n  \r\n  \r\n    }\r\n\r\n\t\t\t`,\r\n\t\t\t  \"custom\": `${localStorage.getItem(\"customColors\") || `:root {\r\n\t\t\t\t--page-margin: #040410;\r\n\t\t\t\t--editor-background: #040410;\r\n\t\t\t\t--hover-preview: white;\r\n\t\t\t\t--playhead: rgba(255, 255, 255, 0.9);\r\n\t\t\t\t--primary-text: white;\r\n\t\t\t\t--secondary-text: #84859a;\r\n\t\t\t\t--inverted-text: black;\r\n\t\t\t\t--text-selection: rgba(119,68,255,0.99);\r\n\t\t\t\t--box-selection-fill: #044b94;\r\n\t\t\t\t--loop-accent: #74f;\r\n\t\t\t\t--link-accent: #98f;\r\n\t\t\t\t--ui-widget-background: #393e4f;\r\n\t\t\t\t--ui-widget-focus: #6d6886;\r\n\t\t\t\t--pitch-background: #393e4f99;\r\n\t\t\t\t--tonic: #725491;\r\n\t\t\t\t--fifth-note: #54547a;\r\n\t\t\t\t--third-note: #486;\r\n\t\t\t\t--white-piano-key: #eee;\r\n\t\t\t\t--black-piano-key: #666;\r\n\t\t\t\t--use-color-formula: true;\r\n\t\t\t\t--track-editor-bg-pitch: #393e4f;\r\n\t\t\t\t--track-editor-bg-pitch-dim: #1c1d28;\r\n\t\t\t\t--track-editor-bg-noise: #3d3535;\r\n\t\t\t\t--track-editor-bg-noise-dim: #161313;\r\n\t\t\t\t--track-editor-bg-mod: #283560;\r\n\t\t\t\t--track-editor-bg-mod-dim: #0a101f;\r\n\t\t\t\t--multiplicative-mod-slider: #606c9f;\r\n\t\t\t\t--overwriting-mod-slider: #6850b5;\r\n\t\t\t\t--indicator-primary: #9c64f7;\r\n\t\t\t\t--indicator-secondary: #393e4f;\r\n\t\t\t\t--select2-opt-group: #5d576f;\r\n\t\t\t\t--input-box-outline: #222;\r\n\t\t\t\t--mute-button-normal: #dda85d;\r\n\t\t\t\t--mute-button-mod: #886eae;\r\n\t\t\t\t--mod-label-primary: #282840;\r\n\t\t\t\t--mod-label-secondary-text: rgb(87, 86, 120);\r\n\t\t\t\t--mod-label-primary-text: white;\r\n\t\t\t\t--pitch-secondary-channel-hue: 0;\r\n\t\t\t\t--pitch-secondary-channel-hue-scale: 6.1;\r\n\t\t\t\t--pitch-secondary-channel-sat: 83.3;\r\n\t\t\t\t--pitch-secondary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-channel-lum: 40;\r\n\t\t\t\t--pitch-secondary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-channel-hue: 0;\r\n\t\t\t\t--pitch-primary-channel-hue-scale: 6.1;\r\n\t\t\t\t--pitch-primary-channel-sat: 100;\r\n\t\t\t\t--pitch-primary-channel-sat-scale: 0.1;\r\n\t\t\t\t--pitch-primary-channel-lum: 67.5;\r\n\t\t\t\t--pitch-primary-channel-lum-scale: 0.05;\r\n\t\t\t\t--pitch-secondary-note-hue: 0;\r\n\t\t\t\t--pitch-secondary-note-hue-scale: 6.1;\r\n\t\t\t\t--pitch-secondary-note-sat: 93.9;\r\n\t\t\t\t--pitch-secondary-note-sat-scale: 0.1;\r\n\t\t\t\t--pitch-secondary-note-lum: 25;\r\n\t\t\t\t--pitch-secondary-note-lum-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-hue: 0;\r\n\t\t\t\t--pitch-primary-note-hue-scale: 6.1;\r\n\t\t\t\t--pitch-primary-note-sat: 100;\r\n\t\t\t\t--pitch-primary-note-sat-scale: 0.05;\r\n\t\t\t\t--pitch-primary-note-lum: 85.6;\r\n\t\t\t\t--pitch-primary-note-lum-scale: 0.025;\r\n\t\t\t\t--noise-secondary-channel-hue: 0;\r\n\t\t\t\t--noise-secondary-channel-hue-scale: 2;\r\n\t\t\t\t--noise-secondary-channel-sat: 25;\r\n\t\t\t\t--noise-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-channel-lum: 42;\r\n\t\t\t\t--noise-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-primary-channel-hue: 0;\r\n\t\t\t\t--noise-primary-channel-hue-scale: 2;\r\n\t\t\t\t--noise-primary-channel-sat: 33;\r\n\t\t\t\t--noise-primary-channel-sat-scale: 0;\r\n\t\t\t\t--noise-primary-channel-lum: 63.5;\r\n\t\t\t\t--noise-primary-channel-lum-scale: 0;\r\n\t\t\t\t--noise-secondary-note-hue: 0;\r\n\t\t\t\t--noise-secondary-note-hue-scale: 2;\r\n\t\t\t\t--noise-secondary-note-sat: 33.5;\r\n\t\t\t\t--noise-secondary-note-sat-scale: 0;\r\n\t\t\t\t--noise-secondary-note-lum: 55;\r\n\t\t\t\t--noise-secondary-note-lum-scale: 0;\r\n\t\t\t\t--noise-primary-note-hue: 0;\r\n\t\t\t\t--noise-primary-note-hue-scale: 2;\r\n\t\t\t\t--noise-primary-note-sat: 46.5;\r\n\t\t\t\t--noise-primary-note-sat-scale: 0;\r\n\t\t\t\t--noise-primary-note-lum: 74;\r\n\t\t\t\t--noise-primary-note-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-hue: 192;\r\n\t\t\t\t--mod-secondary-channel-hue-scale: 1.5;\r\n\t\t\t\t--mod-secondary-channel-sat: 88;\r\n\t\t\t\t--mod-secondary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-channel-lum: 50;\r\n\t\t\t\t--mod-secondary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-primary-channel-hue: 192;\r\n\t\t\t\t--mod-primary-channel-hue-scale: 1.5;\r\n\t\t\t\t--mod-primary-channel-sat: 96;\r\n\t\t\t\t--mod-primary-channel-sat-scale: 0;\r\n\t\t\t\t--mod-primary-channel-lum: 80;\r\n\t\t\t\t--mod-primary-channel-lum-scale: 0;\r\n\t\t\t\t--mod-secondary-note-hue: 192;\r\n\t\t\t\t--mod-secondary-note-hue-scale: 1.5;\r\n\t\t\t\t--mod-secondary-note-sat: 92;\r\n\t\t\t\t--mod-secondary-note-sat-scale: 0;\r\n\t\t\t\t--mod-secondary-note-lum: 45;\r\n\t\t\t\t--mod-secondary-note-lum-scale: 0;\r\n\t\t\t\t--mod-primary-note-hue: 192;\r\n\t\t\t\t--mod-primary-note-hue-scale: 1.5;\r\n\t\t\t\t--mod-primary-note-sat: 96;\r\n\t\t\t\t--mod-primary-note-sat-scale: 0;\r\n\t\t\t\t--mod-primary-note-lum: 85;\r\n\t\t\t\t--mod-primary-note-lum-scale: 0;\r\n\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}`}`,\r\n    };\r\n\r\n    public static readonly pageMargin: string = \"var(--page-margin)\";\r\n    public static readonly editorBackground: string = \"var(--editor-background)\";\r\n    public static readonly hoverPreview: string = \"var(--hover-preview)\";\r\n    public static readonly playhead: string = \"var(--playhead)\";\r\n    public static readonly primaryText: string = \"var(--primary-text)\";\r\n    public static readonly secondaryText: string = \"var(--secondary-text)\";\r\n    public static readonly invertedText: string = \"var(--inverted-text)\";\r\n    public static readonly textSelection: string = \"var(--text-selection)\";\r\n    public static readonly boxSelectionFill: string = \"var(--box-selection-fill)\";\r\n    public static readonly loopAccent: string = \"var(--loop-accent)\";\r\n    public static readonly sampleFailed: string = \"var(--sample-failed, #f00)\";\r\n    public static readonly linkAccent: string = \"var(--link-accent)\";\r\n    public static readonly uiWidgetBackground: string = \"var(--ui-widget-background)\";\r\n    public static readonly uiWidgetFocus: string = \"var(--ui-widget-focus)\";\r\n    public static readonly pitchBackground: string = \"var(--pitch-background)\";\r\n    public static readonly tonic: string = \"var(--tonic)\";\r\n    public static readonly fifthNote: string = \"var(--fifth-note)\";\r\n\tpublic static readonly thirdNote: string = \"var(--third-note)\";\r\n\r\n\tpublic static readonly dimmedArea: string = \"var(--dimmed-area, var(--editor-background))\";\r\n\r\n\tpublic static readonly pitch1Background: string = \"var(--pitch1-background)\";\r\n\tpublic static readonly pitch2Background: string = \"var(--pitch2-background)\";\r\n\tpublic static readonly pitch3Background: string = \"var(--pitch3-background)\";\r\n\t// no need for a 4th since that's the --third-note's job\r\n\tpublic static readonly pitch5Background: string = \"var(--pitch5-background)\";\r\n\tpublic static readonly pitch6Background: string = \"var(--pitch6-background)\";\r\n\t// no need for a 7th since that's the --fifth-note's job\r\n\tpublic static readonly pitch8Background: string = \"var(--pitch8-background)\";\r\n\tpublic static readonly pitch9Background: string = \"var(--pitch9-background)\";\r\n\tpublic static readonly pitch10Background: string = \"var(--pitch10-background)\";\r\n\tpublic static readonly pitch11Background: string = \"var(--pitch11-background)\";\r\n\r\n    public static readonly whitePianoKey: string = \"var(--white-piano-key)\";\r\n    public static readonly blackPianoKey: string = \"var(--black-piano-key)\";\r\n    public static readonly whitePianoKeyText: string = \"var(--white-piano-key-text)\";\r\n    public static readonly blackPianoKeyText: string = \"var(--black-piano-key-text)\";\r\n\t// public static readonly oscilloscopeLineL: string = \"var(--oscilloscope-line-L)\";\r\n\t// public static readonly oscilloscopeLineR: string = \"var(--oscilloscope-line-R)\";\r\n\t// modTitle can stay uncommented until it's used somwhere that's not index.html\r\n\t// public static readonly modTitle: string = \"var(--mod-title)\";\r\n\tpublic static readonly songPlayerMargin: string = \"var(--song-player-margin)\";\r\n\tpublic static readonly progressBar: string = \"var(--progress-bar)\";\r\n    public static readonly useColorFormula: string = \"var(--use-color-formula)\";\r\n    public static readonly pitchSecondaryChannelHue: string = \"var(--pitch-secondary-channel-hue)\";\r\n    public static readonly pitchSecondaryChannelHueScale: string = \"var(--pitch-secondary-channel-hue-scale)\";\r\n    public static readonly pitchSecondaryChannelSat: string = \"var(--pitch-secondary-channel-sat)\";\r\n    public static readonly pitchSecondaryChannelSatScale: string = \"var(--pitch-secondary-channel-sat-scale)\";\r\n    public static readonly pitchSecondaryChannelLum: string = \"var(--pitch-secondary-channel-lum)\";\r\n    public static readonly pitchSecondaryChannelLumScale: string = \"var(--pitch-secondary-channel-lum-scale)\";\r\n    public static readonly pitchPrimaryChannelHue: string = \"var(--pitch-primary-channel-hue)\";\r\n    public static readonly pitchPrimaryChannelHueScale: string = \"var(--pitch-primary-channel-hue-scale)\";\r\n    public static readonly pitchPrimaryChannelSat: string = \"var(--pitch-primary-channel-sat)\";\r\n    public static readonly pitchPrimaryChannelSatScale: string = \"var(--pitch-primary-channel-sat-scale)\";\r\n    public static readonly pitchPrimaryChannelLum: string = \"var(--pitch-primary-channel-lum)\";\r\n    public static readonly pitchPrimaryChannelLumScale: string = \"var(--pitch-primary-channel-lum-scale)\";\r\n    public static readonly pitchSecondaryNoteHue: string = \"var(--pitch-secondary-note-hue)\";\r\n    public static readonly pitchSecondaryNoteHueScale: string = \"var(--pitch-secondary-note-hue-scale)\";\r\n    public static readonly pitchSecondaryNoteSat: string = \"var(--pitch-secondary-note-sat)\";\r\n    public static readonly pitchSecondaryNoteSatScale: string = \"var(--pitch-secondary-note-sat-scale)\";\r\n    public static readonly pitchSecondaryNoteLum: string = \"var(--pitch-secondary-note-lum)\";\r\n    public static readonly pitchSecondaryNoteLumScale: string = \"var(--pitch-secondary-note-lum-scale)\";\r\n    public static readonly pitchPrimaryNoteHue: string = \"var(--pitch-primary-note-hue)\";\r\n    public static readonly pitchPrimaryNoteHueScale: string = \"var(--pitch-primary-note-hue-scale)\";\r\n    public static readonly pitchPrimaryNoteSat: string = \"var(--pitch-primary-note-sat)\";\r\n    public static readonly pitchPrimaryNoteSatScale: string = \"var(--pitch-primary-note-sat-scale)\";\r\n    public static readonly pitchPrimaryNoteLum: string = \"var(--pitch-primary-note-lum)\";\r\n    public static readonly pitchPrimaryNoteLumScale: string = \"var(--pitch-primary-note-lum-scale)\";\r\n    public static readonly modSecondaryChannelHue: string = \"var(--mod-secondary-channel-hue)\";\r\n    public static readonly modSecondaryChannelHueScale: string = \"var(--mod-secondary-channel-hue-scale)\";\r\n    public static readonly modSecondaryChannelSat: string = \"var(--mod-secondary-channel-sat)\";\r\n    public static readonly modSecondaryChannelSatScale: string = \"var(--mod-secondary-channel-sat-scale)\";\r\n    public static readonly modSecondaryChannelLum: string = \"var(--mod-secondary-channel-lum)\";\r\n    public static readonly modSecondaryChannelLumScale: string = \"var(--mod-secondary-channel-lum-scale)\";\r\n    public static readonly modPrimaryChannelHue: string = \"var(--mod-primary-channel-hue)\";\r\n    public static readonly modPrimaryChannelHueScale: string = \"var(--mod-primary-channel-hue-scale)\";\r\n    public static readonly modPrimaryChannelSat: string = \"var(--mod-primary-channel-sat)\";\r\n    public static readonly modPrimaryChannelSatScale: string = \"var(--mod-primary-channel-sat-scale)\";\r\n    public static readonly modPrimaryChannelLum: string = \"var(--mod-primary-channel-lum)\";\r\n    public static readonly modPrimaryChannelLumScale: string = \"var(--mod-primary-channel-lum-scale)\";\r\n    public static readonly modSecondaryNoteHue: string = \"var(--mod-secondary-note-hue)\";\r\n    public static readonly modSecondaryNoteHueScale: string = \"var(--mod-secondary-note-hue-scale)\";\r\n    public static readonly modSecondaryNoteSat: string = \"var(--mod-secondary-note-sat)\";\r\n    public static readonly modSecondaryNoteSatScale: string = \"var(--mod-secondary-note-sat-scale)\";\r\n    public static readonly modSecondaryNoteLum: string = \"var(--mod-secondary-note-lum)\";\r\n    public static readonly modSecondaryNoteLumScale: string = \"var(--mod-secondary-note-lum-scale)\";\r\n    public static readonly modPrimaryNoteHue: string = \"var(--mod-primary-note-hue)\";\r\n    public static readonly modPrimaryNoteHueScale: string = \"var(--mod-primary-note-hue-scale)\";\r\n    public static readonly modPrimaryNoteSat: string = \"var(--mod-primary-note-sat)\";\r\n    public static readonly modPrimaryNoteSatScale: string = \"var(--mod-primary-note-sat-scale)\";\r\n    public static readonly modPrimaryNoteLum: string = \"var(--mod-primary-note-lum)\";\r\n    public static readonly modPrimaryNoteLumScale: string = \"var(--mod-primary-note-lum-scale)\";\r\n    public static readonly noiseSecondaryChannelHue: string = \"var(--noise-secondary-channel-hue)\";\r\n    public static readonly noiseSecondaryChannelHueScale: string = \"var(--noise-secondary-channel-hue-scale)\";\r\n    public static readonly noiseSecondaryChannelSat: string = \"var(--noise-secondary-channel-sat)\";\r\n    public static readonly noiseSecondaryChannelSatScale: string = \"var(--noise-secondary-channel-sat-scale)\";\r\n    public static readonly noiseSecondaryChannelLum: string = \"var(--noise-secondary-channel-lum)\";\r\n    public static readonly noiseSecondaryChannelLumScale: string = \"var(--noise-secondary-channel-lum-scale)\";\r\n    public static readonly noisePrimaryChannelHue: string = \"var(--noise-primary-channel-hue)\";\r\n    public static readonly noisePrimaryChannelHueScale: string = \"var(--noise-primary-channel-hue-scale)\";\r\n    public static readonly noisePrimaryChannelSat: string = \"var(--noise-primary-channel-sat)\";\r\n    public static readonly noisePrimaryChannelSatScale: string = \"var(--noise-primary-channel-sat-scale)\";\r\n    public static readonly noisePrimaryChannelLum: string = \"var(--noise-primary-channel-lum)\";\r\n    public static readonly noisePrimaryChannelLumScale: string = \"var(--noise-primary-channel-lum-scale)\";\r\n    public static readonly noiseSecondaryNoteHue: string = \"var(--noise-secondary-note-hue)\";\r\n    public static readonly noiseSecondaryNoteHueScale: string = \"var(--noise-secondary-note-hue-scale)\";\r\n    public static readonly noiseSecondaryNoteSat: string = \"var(--noise-secondary-note-sat)\";\r\n    public static readonly noiseSecondaryNoteSatScale: string = \"var(--noise-secondary-note-sat-scale)\";\r\n    public static readonly noiseSecondaryNoteLum: string = \"var(--noise-secondary-note-lum)\";\r\n    public static readonly noiseSecondaryNoteLumScale: string = \"var(--noise-secondary-note-lum-scale)\";\r\n    public static readonly noisePrimaryNoteHue: string = \"var(--noise-primary-note-hue)\";\r\n    public static readonly noisePrimaryNoteHueScale: string = \"var(--noise-primary-note-hue-scale)\";\r\n    public static readonly noisePrimaryNoteSat: string = \"var(--noise-primary-note-sat)\";\r\n    public static readonly noisePrimaryNoteSatScale: string = \"var(--noise-primary-note-sat-scale)\";\r\n    public static readonly noisePrimaryNoteLum: string = \"var(--noise-primary-note-lum)\";\r\n    public static readonly noisePrimaryNoteLumScale: string = \"var(--noise-primary-note-lum-scale)\";\r\n    public static readonly trackEditorBgPitch: string = \"var(--track-editor-bg-pitch)\";\r\n    public static readonly trackEditorBgPitchDim: string = \"var(--track-editor-bg-pitch-dim)\";\r\n    public static readonly trackEditorBgNoise: string = \"var(--track-editor-bg-noise)\";\r\n    public static readonly trackEditorBgNoiseDim: string = \"var(--track-editor-bg-noise-dim)\";\r\n    public static readonly trackEditorBgMod: string = \"var(--track-editor-bg-mod)\";\r\n    public static readonly trackEditorBgModDim: string = \"var(--track-editor-bg-mod-dim)\";\r\n    public static readonly multiplicativeModSlider: string = \"var(--multiplicative-mod-slider)\";\r\n    public static readonly overwritingModSlider: string = \"var(--overwriting-mod-slider)\";\r\n    public static readonly indicatorPrimary: string = \"var(--indicator-primary)\";\r\n    public static readonly indicatorSecondary: string = \"var(--indicator-secondary)\";\r\n    public static readonly select2OptGroup: string = \"var(--select2-opt-group)\";\r\n    public static readonly inputBoxOutline: string = \"var(--input-box-outline)\";\r\n    public static readonly muteButtonNormal: string = \"var(--mute-button-normal)\";\r\n    public static readonly muteButtonMod: string = \"var(--mute-button-mod)\";\r\n    public static readonly modLabelPrimary: string = \"var(--mod-label-primary)\";\r\n    public static readonly modLabelSecondaryText: string = \"var(--mod-label-secondary-text)\";\r\n    public static readonly modLabelPrimaryText: string = \"var(--mod-label-primary-text)\";\r\n    public static readonly disabledNotePrimary: string = \"var(--disabled-note-primary)\";\r\n    public static readonly disabledNoteSecondary: string = \"var(--disabled-note-secondary)\";\r\n\tpublic static readonly scrollbarColor: string = \"var(--scrollbar-color)\";\r\n\tpublic static readonly scrollbarBackground: string = \"var(--scrollbar-background)\";\r\n\r\n\tpublic static c_pitchSecondaryChannelHue: number = 0;\r\n\tpublic static c_pitchSecondaryChannelHueScale: number = 0;\r\n\tpublic static c_pitchSecondaryChannelSat: number = 0;\r\n\tpublic static c_pitchSecondaryChannelSatScale: number = 0;\r\n\tpublic static c_pitchSecondaryChannelLum: number = 0;\r\n\tpublic static c_pitchSecondaryChannelLumScale: number = 0;\r\n\tpublic static c_pitchPrimaryChannelHue: number = 0;\r\n\tpublic static c_pitchPrimaryChannelHueScale: number = 0;\r\n\tpublic static c_pitchPrimaryChannelSat: number = 0;\r\n\tpublic static c_pitchPrimaryChannelSatScale: number = 0;\r\n\tpublic static c_pitchPrimaryChannelLum: number = 0;\r\n\tpublic static c_pitchPrimaryChannelLumScale: number = 0;\r\n\tpublic static c_pitchSecondaryNoteHue: number = 0;\r\n\tpublic static c_pitchSecondaryNoteHueScale: number = 0;\r\n\tpublic static c_pitchSecondaryNoteSat: number = 0;\r\n\tpublic static c_pitchSecondaryNoteSatScale: number = 0;\r\n\tpublic static c_pitchSecondaryNoteLum: number = 0;\r\n\tpublic static c_pitchSecondaryNoteLumScale: number = 0;\r\n\tpublic static c_pitchPrimaryNoteHue: number = 0;\r\n\tpublic static c_pitchPrimaryNoteHueScale: number = 0;\r\n\tpublic static c_pitchPrimaryNoteSat: number = 0;\r\n\tpublic static c_pitchPrimaryNoteSatScale: number = 0;\r\n\tpublic static c_pitchPrimaryNoteLum: number = 0;\r\n\tpublic static c_pitchPrimaryNoteLumScale: number = 0;\r\n\tpublic static c_modSecondaryChannelHue: number = 0;\r\n\tpublic static c_modSecondaryChannelHueScale: number = 0;\r\n\tpublic static c_modSecondaryChannelSat: number = 0;\r\n\tpublic static c_modSecondaryChannelSatScale: number = 0;\r\n\tpublic static c_modSecondaryChannelLum: number = 0;\r\n\tpublic static c_modSecondaryChannelLumScale: number = 0;\r\n\tpublic static c_modPrimaryChannelHue: number = 0;\r\n\tpublic static c_modPrimaryChannelHueScale: number = 0;\r\n\tpublic static c_modPrimaryChannelSat: number = 0;\r\n\tpublic static c_modPrimaryChannelSatScale: number = 0;\r\n\tpublic static c_modPrimaryChannelLum: number = 0;\r\n\tpublic static c_modPrimaryChannelLumScale: number = 0;\r\n\tpublic static c_modSecondaryNoteHue: number = 0;\r\n\tpublic static c_modSecondaryNoteHueScale: number = 0;\r\n\tpublic static c_modSecondaryNoteSat: number = 0;\r\n\tpublic static c_modSecondaryNoteSatScale: number = 0;\r\n\tpublic static c_modSecondaryNoteLum: number = 0;\r\n\tpublic static c_modSecondaryNoteLumScale: number = 0;\r\n\tpublic static c_modPrimaryNoteHue: number = 0;\r\n\tpublic static c_modPrimaryNoteHueScale: number = 0;\r\n\tpublic static c_modPrimaryNoteSat: number = 0;\r\n\tpublic static c_modPrimaryNoteSatScale: number = 0;\r\n\tpublic static c_modPrimaryNoteLum: number = 0;\r\n\tpublic static c_modPrimaryNoteLumScale: number = 0;\r\n\tpublic static c_noiseSecondaryChannelHue: number = 0;\r\n\tpublic static c_noiseSecondaryChannelHueScale: number = 0;\r\n\tpublic static c_noiseSecondaryChannelSat: number = 0;\r\n\tpublic static c_noiseSecondaryChannelSatScale: number = 0;\r\n\tpublic static c_noiseSecondaryChannelLum: number = 0;\r\n\tpublic static c_noiseSecondaryChannelLumScale: number = 0;\r\n\tpublic static c_noisePrimaryChannelHue: number = 0;\r\n\tpublic static c_noisePrimaryChannelHueScale: number = 0;\r\n\tpublic static c_noisePrimaryChannelSat: number = 0;\r\n\tpublic static c_noisePrimaryChannelSatScale: number = 0;\r\n\tpublic static c_noisePrimaryChannelLum: number = 0;\r\n\tpublic static c_noisePrimaryChannelLumScale: number = 0;\r\n\tpublic static c_noiseSecondaryNoteHue: number = 0;\r\n\tpublic static c_noiseSecondaryNoteHueScale: number = 0;\r\n\tpublic static c_noiseSecondaryNoteSat: number = 0;\r\n\tpublic static c_noiseSecondaryNoteSatScale: number = 0;\r\n\tpublic static c_noiseSecondaryNoteLum: number = 0;\r\n\tpublic static c_noiseSecondaryNoteLumScale: number = 0;\r\n\tpublic static c_noisePrimaryNoteHue: number = 0;\r\n\tpublic static c_noisePrimaryNoteHueScale: number = 0;\r\n\tpublic static c_noisePrimaryNoteSat: number = 0;\r\n\tpublic static c_noisePrimaryNoteSatScale: number = 0;\r\n\tpublic static c_noisePrimaryNoteLum: number = 0;\r\n\tpublic static c_noisePrimaryNoteLumScale: number = 0;\r\n\r\n\tpublic static c_invertedText: string = \"\";\r\n\tpublic static c_trackEditorBgNoiseDim: string = \"\";\r\n\tpublic static c_trackEditorBgNoise: string = \"\";\r\n\tpublic static c_trackEditorBgModDim: string = \"\";\r\n\tpublic static c_trackEditorBgMod: string = \"\";\r\n\tpublic static c_trackEditorBgPitchDim: string = \"\";\r\n\tpublic static c_trackEditorBgPitch: string = \"\";\r\n\r\n    public static readonly pitchChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n        {\r\n            name: \"pitch1\", // cyan\r\n            secondaryChannel: \"var(--pitch1-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch1-primary-channel)\",\r\n            secondaryNote: \"var(--pitch1-secondary-note)\",\r\n            primaryNote: \"var(--pitch1-primary-note)\",\r\n        }, {\r\n            name: \"pitch2\", // yellow\r\n            secondaryChannel: \"var(--pitch2-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch2-primary-channel)\",\r\n            secondaryNote: \"var(--pitch2-secondary-note)\",\r\n            primaryNote: \"var(--pitch2-primary-note)\",\r\n        }, {\r\n            name: \"pitch3\", // orange\r\n            secondaryChannel: \"var(--pitch3-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch3-primary-channel)\",\r\n            secondaryNote: \"var(--pitch3-secondary-note)\",\r\n            primaryNote: \"var(--pitch3-primary-note)\",\r\n        }, {\r\n            name: \"pitch4\", // green\r\n            secondaryChannel: \"var(--pitch4-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch4-primary-channel)\",\r\n            secondaryNote: \"var(--pitch4-secondary-note)\",\r\n            primaryNote: \"var(--pitch4-primary-note)\",\r\n        }, {\r\n            name: \"pitch5\", // magenta\r\n            secondaryChannel: \"var(--pitch5-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch5-primary-channel)\",\r\n            secondaryNote: \"var(--pitch5-secondary-note)\",\r\n            primaryNote: \"var(--pitch5-primary-note)\",\r\n        }, {\r\n            name: \"pitch6\", // blue\r\n            secondaryChannel: \"var(--pitch6-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch6-primary-channel)\",\r\n            secondaryNote: \"var(--pitch6-secondary-note)\",\r\n            primaryNote: \"var(--pitch6-primary-note)\",\r\n        }, {\r\n            name: \"pitch7\", // olive\r\n            secondaryChannel: \"var(--pitch7-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch7-primary-channel)\",\r\n            secondaryNote: \"var(--pitch7-secondary-note)\",\r\n            primaryNote: \"var(--pitch7-primary-note)\",\r\n        }, {\r\n            name: \"pitch8\", // red\r\n            secondaryChannel: \"var(--pitch8-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch8-primary-channel)\",\r\n            secondaryNote: \"var(--pitch8-secondary-note)\",\r\n            primaryNote: \"var(--pitch8-primary-note)\",\r\n        }, {\r\n            name: \"pitch9\", // teal\r\n            secondaryChannel: \"var(--pitch9-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch9-primary-channel)\",\r\n            secondaryNote: \"var(--pitch9-secondary-note)\",\r\n            primaryNote: \"var(--pitch9-primary-note)\",\r\n        }, {\r\n            name: \"pitch10\", // purple\r\n            secondaryChannel: \"var(--pitch10-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch10-primary-channel)\",\r\n            secondaryNote: \"var(--pitch10-secondary-note)\",\r\n            primaryNote: \"var(--pitch10-primary-note)\",\r\n        },\r\n\t\t{\r\n            name: \"pitch11\", // teal\r\n            secondaryChannel: \"var(--pitch11-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch11-primary-channel)\",\r\n            secondaryNote: \"var(--pitch11-secondary-note)\",\r\n            primaryNote: \"var(--pitch11-primary-note)\",\r\n        }, {\r\n            name: \"pitch12\", // purple\r\n            secondaryChannel: \"var(--pitch12-secondary-channel)\",\r\n            primaryChannel: \"var(--pitch12-primary-channel)\",\r\n            secondaryNote: \"var(--pitch12-secondary-note)\",\r\n            primaryNote: \"var(--pitch12-primary-note)\",\r\n        },\r\n    ]);\r\n    public static readonly noiseChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n        {\r\n            name: \"noise1\", // gray\r\n            secondaryChannel: \"var(--noise1-secondary-channel)\",\r\n            primaryChannel: \"var(--noise1-primary-channel)\",\r\n            secondaryNote: \"var(--noise1-secondary-note)\",\r\n            primaryNote: \"var(--noise1-primary-note)\",\r\n        }, {\r\n            name: \"noise2\", // brown\r\n            secondaryChannel: \"var(--noise2-secondary-channel)\",\r\n            primaryChannel: \"var(--noise2-primary-channel)\",\r\n            secondaryNote: \"var(--noise2-secondary-note)\",\r\n            primaryNote: \"var(--noise2-primary-note)\",\r\n        }, {\r\n            name: \"noise3\", // azure\r\n            secondaryChannel: \"var(--noise3-secondary-channel)\",\r\n            primaryChannel: \"var(--noise3-primary-channel)\",\r\n            secondaryNote: \"var(--noise3-secondary-note)\",\r\n            primaryNote: \"var(--noise3-primary-note)\",\r\n        }, {\r\n            name: \"noise4\", // purple\r\n            secondaryChannel: \"var(--noise4-secondary-channel)\",\r\n            primaryChannel: \"var(--noise4-primary-channel)\",\r\n            secondaryNote: \"var(--noise4-secondary-note)\",\r\n            primaryNote: \"var(--noise4-primary-note)\",\r\n        }, {\r\n            name: \"noise5\", // sage\r\n            secondaryChannel: \"var(--noise5-secondary-channel)\",\r\n            primaryChannel: \"var(--noise5-primary-channel)\",\r\n            secondaryNote: \"var(--noise5-secondary-note)\",\r\n            primaryNote: \"var(--noise5-primary-note)\",\r\n        },\r\n    ]);\r\n    public static readonly modChannels: DictionaryArray<ChannelColors> = toNameMap([\r\n        {\r\n            name: \"mod1\",\r\n            secondaryChannel: \"var(--mod1-secondary-channel)\",\r\n            primaryChannel: \"var(--mod1-primary-channel)\",\r\n            secondaryNote: \"var(--mod1-secondary-note)\",\r\n            primaryNote: \"var(--mod1-primary-note)\",\r\n        }, {\r\n            name: \"mod2\",\r\n            secondaryChannel: \"var(--mod2-secondary-channel)\",\r\n            primaryChannel: \"var(--mod2-primary-channel)\",\r\n            secondaryNote: \"var(--mod2-secondary-note)\",\r\n            primaryNote: \"var(--mod2-primary-note)\",\r\n        }, {\r\n            name: \"mod3\",\r\n            secondaryChannel: \"var(--mod3-secondary-channel)\",\r\n            primaryChannel: \"var(--mod3-primary-channel)\",\r\n            secondaryNote: \"var(--mod3-secondary-note)\",\r\n            primaryNote: \"var(--mod3-primary-note)\",\r\n        }, {\r\n            name: \"mod4\",\r\n            secondaryChannel: \"var(--mod4-secondary-channel)\",\r\n            primaryChannel: \"var(--mod4-primary-channel)\",\r\n            secondaryNote: \"var(--mod4-secondary-note)\",\r\n            primaryNote: \"var(--mod4-primary-note)\",\r\n        },\r\n    ]);\r\n\r\n    public static resetColors() {\r\n        this.colorLookup.clear();\r\n    }\r\n\r\n\tpublic static getArbitaryChannelColor(type: string, channel: number): ChannelColors {\r\n\r\n        if (!this.usesColorFormula) {\r\n            let base: ChannelColors;\r\n            switch (type) {\r\n                case (\"noise\"): {\r\n                    base = ColorConfig.getComputed(\"--noise-channel-limit\") == \"\"\r\n\t\t\t\t\t? ColorConfig.noiseChannels[channel % ColorConfig.noiseChannels.length] \r\n\t\t\t\t\t: ColorConfig.noiseChannels[channel % (Number(ColorConfig.getComputed(\"--noise-channel-limit\")) % ColorConfig.noiseChannels.length)];\r\n                    break;\r\n                }\r\n                case (\"mod\"): {\r\n                    base = ColorConfig.getComputed(\"--mod-channel-limit\") == \"\"\r\n\t\t\t\t\t? ColorConfig.modChannels[channel % ColorConfig.modChannels.length] \r\n\t\t\t\t\t: ColorConfig.modChannels[channel % (Number(ColorConfig.getComputed(\"--mod-channel-limit\")) % ColorConfig.modChannels.length)];\r\n                    break;\r\n                }\r\n                case (\"pitch\"):\r\n                default: {\r\n                    base = ColorConfig.getComputed(\"--pitch-channel-limit\") == \"\"\r\n\t\t\t\t\t? ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length] \r\n\t\t\t\t\t: ColorConfig.pitchChannels[channel % (Number(ColorConfig.getComputed(\"--pitch-channel-limit\")) % ColorConfig.pitchChannels.length)];\r\n                    break;\r\n                }\r\n            }\r\n            var regex = /\\(([^)]+)\\)/;\r\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n        }\r\n        switch (type) {\r\n            case (\"noise\"): {\r\n                const noiseSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n                const noiseSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n                const noiseSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n                const noiseSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n                const noiseSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n                const noiseSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n                const noisePrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n                const noisePrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n                const noisePrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n                const noisePrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n                const noisePrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n                const noisePrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n                const noiseSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n                const noiseSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n                const noiseSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n                const noiseSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n                const noiseSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n                const noiseSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n                const noisePrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n                const noisePrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n                const noisePrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n                const noisePrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n                const noisePrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n                const noisePrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n                let newChannelSecondary: string = \"hsl(\" + ((+noiseSecondaryChannelHue + ((channel * +noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+noiseSecondaryChannelSat + channel * +noiseSecondaryChannelSatScale) + \"%,\"\r\n                    + (+noiseSecondaryChannelLum + channel * +noiseSecondaryChannelLumScale) + \"%)\";\r\n                let newChannelPrimary: string = \"hsl(\" + ((+noisePrimaryChannelHue + ((channel * +noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+noisePrimaryChannelSat + channel * +noisePrimaryChannelSatScale) + \"%,\"\r\n                    + (+noisePrimaryChannelLum + channel * +noisePrimaryChannelLumScale) + \"%)\";\r\n                let newNoteSecondary: string = \"hsl(\" + ((+noiseSecondaryNoteHue + ((channel * +noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+noiseSecondaryNoteSat + channel * +noiseSecondaryNoteSatScale) + \"%,\"\r\n                    + (+noiseSecondaryNoteLum + channel * +noiseSecondaryNoteLumScale) + \"%)\";\r\n                let newNotePrimary: string = \"hsl(\" + ((+noisePrimaryNoteHue + ((channel * +noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+noisePrimaryNoteSat + channel * +noisePrimaryNoteSatScale) + \"%,\"\r\n                    + (+noisePrimaryNoteLum + channel * +noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                return newChannelColors;\r\n            } case (\"mod\"): {\r\n                // Mod formula\r\n                const modSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n                const modSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n                const modSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n                const modSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n                const modSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n                const modSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n                const modPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n                const modPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n                const modPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n                const modPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n                const modPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n                const modPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n                const modSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n                const modSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n                const modSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n                const modSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n                const modSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n                const modSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n                const modPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n                const modPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n                const modPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n                const modPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n                const modPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n                const modPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n                let newChannelSecondary: string = \"hsl(\" + ((+modSecondaryChannelHue + ((channel * +modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+modSecondaryChannelSat + channel * +modSecondaryChannelSatScale) + \"%,\"\r\n                    + (+modSecondaryChannelLum + channel * +modSecondaryChannelLumScale) + \"%)\";\r\n                let newChannelPrimary: string = \"hsl(\" + ((+modPrimaryChannelHue + ((channel * +modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+modPrimaryChannelSat + channel * +modPrimaryChannelSatScale) + \"%,\"\r\n                    + (+modPrimaryChannelLum + channel * +modPrimaryChannelLumScale) + \"%)\";\r\n                let newNoteSecondary: string = \"hsl(\" + ((+modSecondaryNoteHue + ((channel * +modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+modSecondaryNoteSat + channel * +modSecondaryNoteSatScale) + \"%,\"\r\n                    + (+modSecondaryNoteLum + channel * +modSecondaryNoteLumScale) + \"%)\";\r\n                let newNotePrimary: string = \"hsl(\" + ((+modPrimaryNoteHue + ((channel * +modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+modPrimaryNoteSat + channel * +modPrimaryNoteSatScale) + \"%,\"\r\n                    + (+modPrimaryNoteLum + channel * +modPrimaryNoteLumScale) + \"%)\";\r\n\r\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                return newChannelColors;\r\n            }\r\n            case (\"pitch\"):\r\n            default: {\r\n                const pitchSecondaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n                const pitchSecondaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n                const pitchSecondaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n                const pitchSecondaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n                const pitchSecondaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n                const pitchSecondaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n                const pitchPrimaryChannelHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n                const pitchPrimaryChannelHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n                const pitchPrimaryChannelSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n                const pitchPrimaryChannelSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n                const pitchPrimaryChannelLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n                const pitchPrimaryChannelLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n                const pitchSecondaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n                const pitchSecondaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n                const pitchSecondaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n                const pitchSecondaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n                const pitchSecondaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n                const pitchSecondaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n                const pitchPrimaryNoteHue: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n                const pitchPrimaryNoteHueScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n                const pitchPrimaryNoteSat: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n                const pitchPrimaryNoteSatScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n                const pitchPrimaryNoteLum: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n                const pitchPrimaryNoteLumScale: number = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n                let newChannelSecondary: string = \"hsl(\" + ((+pitchSecondaryChannelHue + (channel * +pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+pitchSecondaryChannelSat * (1 - (+pitchSecondaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                    + (+pitchSecondaryChannelLum * (1 - (+pitchSecondaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n                let newChannelPrimary: string = \"hsl(\" + ((+pitchPrimaryChannelHue + (channel * +pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+pitchPrimaryChannelSat * (1 - (+pitchPrimaryChannelSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                    + (+pitchPrimaryChannelLum * (1 - (+pitchPrimaryChannelLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n                let newNoteSecondary: string = \"hsl(\" + ((+pitchSecondaryNoteHue + (channel * +pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+pitchSecondaryNoteSat * (1 - (+pitchSecondaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                    + (+pitchSecondaryNoteLum * (1 - (+pitchSecondaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n                let newNotePrimary: string = \"hsl(\" + ((+pitchPrimaryNoteHue + (channel * +pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 256) + \",\"\r\n                    + (+pitchPrimaryNoteSat * (1 - (+pitchPrimaryNoteSatScale * Math.floor(channel / 7)))) + \"%,\"\r\n                    + (+pitchPrimaryNoteLum * (1 - (+pitchPrimaryNoteLumScale * Math.floor(channel / 7)))) + \"%)\";\r\n\r\n                let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                return newChannelColors;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Same as below, but won't return var colors\r\n    public static getComputedChannelColor(song: Song, channel: number): ChannelColors {\r\n        if (!this.usesColorFormula) {\r\n            let base: ChannelColors = ColorConfig.getChannelColor(song, channel);\r\n            // Trim away \"var(...)\"\r\n            var regex = /\\(([^)]+)\\)/;\r\n            let newChannelSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryChannel) as RegExpExecArray)[1] as string);\r\n            let newChannelPrimary: string = ColorConfig.getComputed((regex.exec(base.primaryChannel) as RegExpExecArray)[1] as string);\r\n            let newNoteSecondary: string = ColorConfig.getComputed((regex.exec(base.secondaryNote) as RegExpExecArray)[1] as string);\r\n            let newNotePrimary: string = ColorConfig.getComputed((regex.exec(base.primaryNote) as RegExpExecArray)[1] as string);\r\n            return <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n        }\r\n        else {\r\n            return ColorConfig.getChannelColor(song, channel);\r\n        }\r\n    };\r\n\r\n    public static getChannelColor(song: Song, channel: number): ChannelColors {\r\n        if (!this.usesColorFormula) {\r\n            // Set colors, not defined by formula\r\n\t\t\tif (channel < song.pitchChannelCount) {\r\n\t\t\t\treturn ColorConfig.getComputed(\"--pitch-channel-limit\") == \"\"\r\n\t\t\t\t? ColorConfig.pitchChannels[channel % ColorConfig.pitchChannels.length] \r\n\t\t\t\t: ColorConfig.pitchChannels[(channel % Number(ColorConfig.getComputed(\"--pitch-channel-limit\"))) % ColorConfig.pitchChannels.length];\r\n            } else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n                return ColorConfig.getComputed(\"--noise-channel-limit\") == \"\"\r\n\t\t\t\t? ColorConfig.noiseChannels[(channel - song.pitchChannelCount) % ColorConfig.noiseChannels.length] \r\n\t\t\t\t: ColorConfig.noiseChannels[((channel - song.pitchChannelCount) % Number(ColorConfig.getComputed(\"--noise-channel-limit\"))) % ColorConfig.noiseChannels.length];\r\n            } else {\r\n                return ColorConfig.getComputed(\"--mod-channel-limit\") == \"\"\r\n\t\t\t\t? ColorConfig.modChannels[(channel - song.pitchChannelCount - song.noiseChannelCount) % ColorConfig.modChannels.length] \r\n\t\t\t\t: ColorConfig.modChannels[((channel - song.pitchChannelCount - song.noiseChannelCount) % Number(ColorConfig.getComputed(\"--mod-channel-limit\"))) % ColorConfig.modChannels.length];\r\n            }\r\n        }\r\n        else {\r\n            // Determine if color is cached\r\n            if (ColorConfig.colorLookup.has(channel)) {\r\n                return ColorConfig.colorLookup.get(channel) as ChannelColors;\r\n            }\r\n            else {\r\n                // Formulaic color definition\r\n                if (channel < song.pitchChannelCount) {\r\n                    // Pitch formula\r\n\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_pitchSecondaryChannelHue + (channel * this.c_pitchSecondaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_pitchSecondaryChannelSat * (1 - (this.c_pitchSecondaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\r\n\t\t\t\t\t+ (this.c_pitchSecondaryChannelLum * (1 - (this.c_pitchSecondaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\r\n\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_pitchPrimaryChannelHue + (channel * this.c_pitchPrimaryChannelHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_pitchPrimaryChannelSat * (1 - (this.c_pitchPrimaryChannelSatScale * Math.floor(channel / 9)))) + \"%,\"\r\n\t\t\t\t\t+ (this.c_pitchPrimaryChannelLum * (1 - (this.c_pitchPrimaryChannelLumScale * Math.floor(channel / 9)))) + \"%)\";\r\n\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_pitchSecondaryNoteHue + (channel * this.c_pitchSecondaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_pitchSecondaryNoteSat * (1 - (this.c_pitchSecondaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\r\n\t\t\t\t\t+ (this.c_pitchSecondaryNoteLum * (1 - (this.c_pitchSecondaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\r\n\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_pitchPrimaryNoteHue + (channel * this.c_pitchPrimaryNoteHueScale / Config.pitchChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_pitchPrimaryNoteSat * (1 - (this.c_pitchPrimaryNoteSatScale * Math.floor(channel / 9)))) + \"%,\"\r\n\t\t\t\t\t+ (this.c_pitchPrimaryNoteLum * (1 - (this.c_pitchPrimaryNoteLumScale * Math.floor(channel / 9)))) + \"%)\";\r\n\r\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                    return newChannelColors;\r\n\r\n                }\r\n                else if (channel < song.pitchChannelCount + song.noiseChannelCount) {\r\n                    // Noise formula\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_noiseSecondaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_noiseSecondaryChannelSat + channel * this.c_noiseSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t+ (this.c_noiseSecondaryChannelLum + channel * this.c_noiseSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_noisePrimaryChannelHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryChannelHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_noisePrimaryChannelSat + channel * this.c_noisePrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t+ (this.c_noisePrimaryChannelLum + channel * this.c_noisePrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_noiseSecondaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noiseSecondaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_noiseSecondaryNoteSat + channel * this.c_noiseSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t+ (this.c_noiseSecondaryNoteLum + channel * this.c_noiseSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_noisePrimaryNoteHue + (((channel - song.pitchChannelCount) * this.c_noisePrimaryNoteHueScale) / Config.noiseChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t+ (this.c_noisePrimaryNoteSat + channel * this.c_noisePrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t+ (this.c_noisePrimaryNoteLum + channel * this.c_noisePrimaryNoteLumScale) + \"%)\";\r\n\r\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                    return newChannelColors;\r\n                }\r\n                else {\r\n                    // Mod formula\r\n\t\t\t\t\tlet newChannelSecondary: string = \"hsl(\" + ((this.c_modSecondaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryChannelHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_modSecondaryChannelSat + channel * this.c_modSecondaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_modSecondaryChannelLum + channel * this.c_modSecondaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newChannelPrimary: string = \"hsl(\" + ((this.c_modPrimaryChannelHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryChannelHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_modPrimaryChannelSat + channel * this.c_modPrimaryChannelSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_modPrimaryChannelLum + channel * this.c_modPrimaryChannelLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNoteSecondary: string = \"hsl(\" + ((this.c_modSecondaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modSecondaryNoteHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_modSecondaryNoteSat + channel * this.c_modSecondaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_modSecondaryNoteLum + channel * this.c_modSecondaryNoteLumScale) + \"%)\";\r\n\t\t\t\t\tlet newNotePrimary: string = \"hsl(\" + ((this.c_modPrimaryNoteHue + (((channel - song.pitchChannelCount - song.noiseChannelCount) * this.c_modPrimaryNoteHueScale) / Config.modChannelCountMax) * 256) % 360) + \",\"\r\n\t\t\t\t\t\t+ (this.c_modPrimaryNoteSat + channel * this.c_modPrimaryNoteSatScale) + \"%,\"\r\n\t\t\t\t\t\t+ (this.c_modPrimaryNoteLum + channel * this.c_modPrimaryNoteLumScale) + \"%)\";\r\n\r\n                    let newChannelColors = <ChannelColors>{ secondaryChannel: newChannelSecondary, primaryChannel: newChannelPrimary, secondaryNote: newNoteSecondary, primaryNote: newNotePrimary };\r\n                    ColorConfig.colorLookup.set(channel, newChannelColors);\r\n                    return newChannelColors;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({ type: \"text/css\" }));\r\n\r\n\tpublic static setThemeProperty(name: string, value: string): void {\r\n\t\t//this._styleElement.sheet?.cssRules[0].style.setProperty(name, value);\r\n\t\t(this._styleElement.sheet?.cssRules[0] as CSSStyleRule).style.setProperty(name, value);\r\n\t}\r\n\r\n\tpublic static getThemeProperties(): string {\r\n\t\treturn this._styleElement.sheet?.cssRules[0].cssText as string;\r\n\t}\r\n\r\n\tpublic static getFullTheme(): string {\r\n\t\treturn this._styleElement.textContent as string;\r\n\t}\r\n\r\n    public static setTheme(name: string): void {\r\n\t\tlet theme: string = this.themes[name];\r\n\t\tif (theme == undefined) theme = this.themes[\"AbyssBox Classic\"];\r\n\t\tthis._styleElement.textContent = theme;\r\n\t\tthis.currentSetTheme = name;\r\n\r\n        const themeColor = <HTMLMetaElement>document.querySelector(\"meta[name='theme-color']\");\r\n        if (themeColor != null) {\r\n            themeColor.setAttribute(\"content\", getComputedStyle(document.documentElement).getPropertyValue('--ui-widget-background'));\r\n        }\r\n\t\r\n        this.resetColors();\r\n\r\n\t\tthis.usesColorFormula = (getComputedStyle(this._styleElement).getPropertyValue(\"--use-color-formula\").trim() == \"true\");\r\n\t\tthis.usesPianoScheme = (getComputedStyle(this._styleElement).getPropertyValue(\"--use-piano-scheme\").trim() == \"true\");\r\n\r\n\t\tthis.c_invertedText = getComputedStyle(this._styleElement).getPropertyValue(\"--inverted-text\");\r\n\t\tthis.c_trackEditorBgNoiseDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise-dim\");\r\n\t\tthis.c_trackEditorBgNoise = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-noise\");\r\n\t\tthis.c_trackEditorBgModDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod-dim\");\r\n\t\tthis.c_trackEditorBgMod = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-mod\");\r\n\t\tthis.c_trackEditorBgPitchDim = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch-dim\");\r\n\t\tthis.c_trackEditorBgPitch = getComputedStyle(this._styleElement).getPropertyValue(\"--track-editor-bg-pitch\");\r\n\r\n\t\tif (this.usesColorFormula) {\r\n\t\t\tthis.c_pitchSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue\");\r\n\t\t\tthis.c_pitchSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-hue-scale\");\r\n\t\t\tthis.c_pitchSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat\");\r\n\t\t\tthis.c_pitchSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-sat-scale\");\r\n\t\t\tthis.c_pitchSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum\");\r\n\t\t\tthis.c_pitchSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-channel-lum-scale\");\r\n\t\t\tthis.c_pitchPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue\");\r\n\t\t\tthis.c_pitchPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-hue-scale\");\r\n\t\t\tthis.c_pitchPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat\");\r\n\t\t\tthis.c_pitchPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-sat-scale\");\r\n\t\t\tthis.c_pitchPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum\");\r\n\t\t\tthis.c_pitchPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-channel-lum-scale\");\r\n\t\t\tthis.c_pitchSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue\");\r\n\t\t\tthis.c_pitchSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-hue-scale\");\r\n\t\t\tthis.c_pitchSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat\");\r\n\t\t\tthis.c_pitchSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-sat-scale\");\r\n\t\t\tthis.c_pitchSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum\");\r\n\t\t\tthis.c_pitchSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-secondary-note-lum-scale\");\r\n\t\t\tthis.c_pitchPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue\");\r\n\t\t\tthis.c_pitchPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-hue-scale\");\r\n\t\t\tthis.c_pitchPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat\");\r\n\t\t\tthis.c_pitchPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-sat-scale\");\r\n\t\t\tthis.c_pitchPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum\");\r\n\t\t\tthis.c_pitchPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--pitch-primary-note-lum-scale\");\r\n\r\n\t\t\tthis.c_noiseSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue\");\r\n\t\t\tthis.c_noiseSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-hue-scale\");\r\n\t\t\tthis.c_noiseSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat\");\r\n\t\t\tthis.c_noiseSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-sat-scale\");\r\n\t\t\tthis.c_noiseSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum\");\r\n\t\t\tthis.c_noiseSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-channel-lum-scale\");\r\n\t\t\tthis.c_noisePrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue\");\r\n\t\t\tthis.c_noisePrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-hue-scale\");\r\n\t\t\tthis.c_noisePrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat\");\r\n\t\t\tthis.c_noisePrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-sat-scale\");\r\n\t\t\tthis.c_noisePrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum\");\r\n\t\t\tthis.c_noisePrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-channel-lum-scale\");\r\n\t\t\tthis.c_noiseSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue\");\r\n\t\t\tthis.c_noiseSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-hue-scale\");\r\n\t\t\tthis.c_noiseSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat\");\r\n\t\t\tthis.c_noiseSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-sat-scale\");\r\n\t\t\tthis.c_noiseSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum\");\r\n\t\t\tthis.c_noiseSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-secondary-note-lum-scale\");\r\n\t\t\tthis.c_noisePrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue\");\r\n\t\t\tthis.c_noisePrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-hue-scale\");\r\n\t\t\tthis.c_noisePrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat\");\r\n\t\t\tthis.c_noisePrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-sat-scale\");\r\n\t\t\tthis.c_noisePrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum\");\r\n\t\t\tthis.c_noisePrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--noise-primary-note-lum-scale\");\r\n\r\n\t\t\tthis.c_modSecondaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue\");\r\n\t\t\tthis.c_modSecondaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-hue-scale\");\r\n\t\t\tthis.c_modSecondaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat\");\r\n\t\t\tthis.c_modSecondaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-sat-scale\");\r\n\t\t\tthis.c_modSecondaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum\");\r\n\t\t\tthis.c_modSecondaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-channel-lum-scale\");\r\n\t\t\tthis.c_modPrimaryChannelHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue\");\r\n\t\t\tthis.c_modPrimaryChannelHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-hue-scale\");\r\n\t\t\tthis.c_modPrimaryChannelSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat\");\r\n\t\t\tthis.c_modPrimaryChannelSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-sat-scale\");\r\n\t\t\tthis.c_modPrimaryChannelLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum\");\r\n\t\t\tthis.c_modPrimaryChannelLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-channel-lum-scale\");\r\n\t\t\tthis.c_modSecondaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue\");\r\n\t\t\tthis.c_modSecondaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-hue-scale\");\r\n\t\t\tthis.c_modSecondaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat\");\r\n\t\t\tthis.c_modSecondaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-sat-scale\");\r\n\t\t\tthis.c_modSecondaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum\");\r\n\t\t\tthis.c_modSecondaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-secondary-note-lum-scale\");\r\n\t\t\tthis.c_modPrimaryNoteHue = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue\");\r\n\t\t\tthis.c_modPrimaryNoteHueScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-hue-scale\");\r\n\t\t\tthis.c_modPrimaryNoteSat = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat\");\r\n\t\t\tthis.c_modPrimaryNoteSatScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-sat-scale\");\r\n\t\t\tthis.c_modPrimaryNoteLum = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum\");\r\n\t\t\tthis.c_modPrimaryNoteLumScale = +getComputedStyle(this._styleElement).getPropertyValue(\"--mod-primary-note-lum-scale\");\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    public static getComputed(name: string): string {\r\n        return getComputedStyle(this._styleElement).getPropertyValue(name);\r\n    }\r\n}\r\n\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { DictionaryArray, BeepBoxOption, InstrumentType, toNameMap, TypePresets } from \"../synth/SynthConfig\";\r\n\r\nexport interface PresetCategory extends BeepBoxOption {\r\n    readonly presets: DictionaryArray<Preset>;\r\n}\r\n\r\nexport interface Preset extends BeepBoxOption {\r\n    readonly isNoise?: boolean;\r\n    readonly isMod?: boolean;\r\n    readonly generalMidi?: boolean;\r\n    readonly midiProgram?: number;\r\n    readonly midiSubharmonicOctaves?: number;\r\n    readonly customType?: InstrumentType;\r\n    readonly settings?: any;\r\n    \r\n}\r\n\r\nexport const isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\r\n\r\nexport function prettyNumber(value: number): string {\r\n    return value.toFixed(2).replace(/\\.?0*$/, \"\");\r\n}\r\n\r\nexport class EditorConfig {\r\n    public static readonly version: string = \"1.6.1\"; // Using patch versions in display right now, maybe TODAY. // choptop84 here who wrote this??\r\n    public static readonly versionDisplayName: string = \"AbyssBox \" + EditorConfig.version;\r\n\r\n    public static readonly releaseNotesURL: string = \"./patch_notes.html\";\r\n\r\n    public static readonly isOnMac: boolean = /^Mac/i.test(navigator.platform) || /Mac OS X/i.test(navigator.userAgent) || /^(iPhone|iPad|iPod)/i.test(navigator.platform) || /(iPhone|iPad|iPod)/i.test(navigator.userAgent);\r\n    public static readonly ctrlSymbol: string = EditorConfig.isOnMac ? \"⌘\" : \"Ctrl+\";\r\n    public static readonly ctrlName: string = EditorConfig.isOnMac ? \"command\" : \"control\";\r\n\r\n    public static customSamples: string[] | null;\r\n\t\r\n    public static showSongDetailsAlert: boolean = true;\r\n\t\r\n    public static readonly presetCategories: DictionaryArray<PresetCategory> = toNameMap([\r\n        {\r\n            name: \"Custom Instruments\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: TypePresets[InstrumentType.chip], customType: InstrumentType.chip },\r\n                { name: TypePresets[InstrumentType.fm], customType: InstrumentType.fm },\r\n                { name: TypePresets[InstrumentType.noise], customType: InstrumentType.noise },\r\n                { name: TypePresets[InstrumentType.spectrum], customType: InstrumentType.spectrum },\r\n                { name: TypePresets[InstrumentType.drumset], customType: InstrumentType.drumset },\r\n                { name: TypePresets[InstrumentType.harmonics], customType: InstrumentType.harmonics },\r\n                { name: TypePresets[InstrumentType.pwm], customType: InstrumentType.pwm },\r\n                { name: TypePresets[InstrumentType.pickedString], customType: InstrumentType.pickedString },\r\n                { name: TypePresets[InstrumentType.supersaw], customType: InstrumentType.supersaw },\r\n                { name: TypePresets[InstrumentType.customChipWave], customType: InstrumentType.customChipWave },\r\n                { name: TypePresets[InstrumentType.fm6op], customType: InstrumentType.fm6op },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Retro Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"square wave\", midiProgram: 80, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"square\", \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"triangle wave\", midiProgram: 71, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"chord\": \"arpeggio\", \"wave\": \"triangle\", \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"square lead\", midiProgram: 80, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"square\", \"unison\": \"hum\", \"envelopes\": [] } },\r\n                { name: \"sawtooth lead 1\", midiProgram: 81, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"shimmer\", \"envelopes\": [] } },\r\n                { name: \"sawtooth lead 2\", midiProgram: 81, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }], \"effects\": [\"vibrato\", \"aliasing\"], \"vibrato\": \"light\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [] } },\r\n                { name: \"chip noise\", midiProgram: 116, isNoise: true, settings: { \"type\": \"noise\", \"transition\": \"hard\", \"effects\": [\"aliasing\"], \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"retro\" } },\r\n                { name: \"FM twang\", midiProgram: 32, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\r\n                { name: \"FM bass\", midiProgram: 36, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"20×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 }] } },\r\n                { name: \"FM flute\", midiProgram: 73, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }] } },\r\n                { name: \"FM organ\", midiProgram: 16, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"2×\", \"amplitude\": 11 }], \"envelopes\": [] } },\r\n                { name: \"NES Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"vibrato\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -23, -23, -23, -23, -22, -22, -22, -22, -21, -21, -21, -21, -20, -20, -20, -20, -19, -19, -19, -19, -18, -18, -18, -18, -17, -17, -17, -17, 24, 24, 24, 24, 23, 23, 23, 23, 22, 22, 22, 22, 21, 21, 21, 21, 20, 20, 20, 20, 19, 19, 19, 19, 18, 18, 18, 18, 17, 17, 17, 17] } },\r\n                { name: \"Gameboy Pulse\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -17, -15, -13, -13, -11, -11, -11, -9, -9, -9, -9, -7, -7, -7, -7, -7, -5, -5, -5, -5, -5, -5, -3, -3, -3, -3, -3, -3, -3, -3, 24, 20, 17, 15, 13, 13, 11, 11, 11, 9, 9, 9, 9, 7, 7, 7, 7, 7, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3] } },\r\n                { name: \"VRC6 Sawtooth\", midiProgram: 81, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -20, -16, -13, -10, -8, -6, -5, -4, -4, 0, 0, 0, 0, 4, 4, 4, 4, 4, 4, 8, 8, 8, 8, 8, 8, 8, 8, 12, 12, 12, 12, 12, 12, 12, 12, 16, 16, 16, 16, 16, 16, 16, 16, 20, 20, 20, 20, 20, 20, 20, 20, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24] } },\r\n                { name: \"Atari Square\", midiProgram: 80, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -23, -23, -23, -22, -22, -22, -21, -21, -21, -20, -20, -20, -19, -19, -19, -18, -18, -18, -17, -17, -17, -16, -16, -16, -15, -15, -15, -14, -14, -14, -13, -13, -13, 24, 24, 24, 23, 23, 23, 22, 22, 22, 21, 21, 21, 20, 20, 20, 19, 19, 19, 18, 18, 18, 17, 17, 17, 16, 16, 15, 15] } },\r\n                { name: \"Atari Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"interrupt\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, 24, -24, -24, -24, 24, 24, -24, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, -24, -24, 24, 24, 24, 24, 24, -24, -24, -24, -24, 24, 24, -24, -24, 24, 24] } },\r\n                { name: \"Sunsoft Bass\", midiProgram: 36, settings: { \"type\": \"custom chip\", \"effects\": [\"aliasing\"], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }], \"unison\": \"none\", \"envelopes\": [], \"customChipWave\": [24, 24, 15, 15, 9, 9, -4, -4, 0, 0, -13, -13, -19, -19, -24, -24, -24, -24, -10, -10, 0, 0, -7, -7, -7, -7, 0, 0, 6, 6, -4, -4, 3, 3, -4, -4, 3, 3, 3, 3, 9, 9, 15, 15, 15, 15, 6, 6, -4, -4, -4, -4, -4, -4, -4, -4, -4, -4, 3, 3, 12, 12, 24, 24] } },\r\n                { name: \"FM sine\", midiProgram: 55, settings: { \"type\": \"FM\", \"transition\": \"seemless\", \"effects\": \"none\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n            ]),\r\n        },\r\n        {\r\n            name: \"Keyboard Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"grand piano 1\", midiProgram: 0, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":148.65,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":2.8284}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"effects\":[\"note filter\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.125}],\"panDelay\":10,\"reverb\":68,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"harmonics\":[100,100,86,86,86,71,71,71,0,86,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],\"unison\":\"piano\",\"stringSustain\":79,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"note size\"}]}},\r\n                { name: \"grand piano 2\", midiProgram: 0, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.125 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 29], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" }] } },\r\n\t\t        { name: \"grand piano 3\", midiProgram: 0, generalMidi: true, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":148.65,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":4},{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":4},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":0.25}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.0884}],\"reverb\":67,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"harmonics\":[100,100,86,86,86,71,71,71,0,71,71,71,71,57,57,71,57,14,57,57,57,57,57,57,57,57,29,57],\"unison\":\"piano\",\"stringSustain\":86,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1}] } },\r\n                { name: \"bright piano\", midiProgram: 1, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.5 }, { \"type\": \"peak\", \"cutoffHz\": 3363.59, \"linearGain\": 1.4142 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 86, 71, 71, 0, 71, 71, 71, 71, 71, 71, 14, 57, 57, 57, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"piano\", \"stringSustain\": 86, \"envelopes\": [] } },\r\n                { name: \"electric grand\", midiProgram: 2, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"1/8 pulse\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"honky-tonk piano\", midiProgram: 3, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 86, 71, 86, 71, 43, 71, 43, 43, 57, 57, 57, 29, 57, 57, 57, 57, 57, 57, 43, 57, 57, 57, 43, 43, 43, 43], \"unison\": \"honky tonk\", \"stringSustain\": 71, \"envelopes\": [] } },\r\n                { name: \"electric piano 1\", midiProgram: 4, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 71, 71, 57, 57, 43, 43, 43, 29, 29, 29, 14, 14, 14, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"electric piano 2\", midiProgram: 5, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"16×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\r\n                { name: \"harpsichord\", midiProgram: 6, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 11313.71, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"harmonics\": [100, 100, 100, 86, 57, 86, 86, 86, 86, 57, 57, 71, 71, 86, 86, 71, 71, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71], \"unison\": \"none\", \"stringSustain\": 79, \"envelopes\": [] } },\r\n                { name: \"clavinet\", midiProgram: 7, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.3536 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"8×\", \"amplitude\": 4 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"dulcimer\", midiProgram: 15, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 100, 86, 100, 86, 57, 100, 100, 86, 100, 86, 100, 86, 100, 71, 57, 71, 71, 100, 86, 71, 86, 86, 100, 86, 86, 86], \"unison\": \"piano\", \"stringSustain\": 79, \"envelopes\": [] } },\r\n\r\n            ])\r\n        },\r\n        {\r\n            name: \"Idiophone Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"celesta\", midiProgram: 8, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"3×\", \"amplitude\": 1, \"envelope\": \"twang 2\" }] } },\r\n                { name: \"glockenspiel\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 2, \"envelope\": \"twang 1\" }] } },\r\n                { name: \"music box 1\", midiProgram: 10, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 0, 0, 100, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 71, 0], \"unison\": \"none\", \"stringSustain\": 64, \"envelopes\": [] } },\r\n                { name: \"music box 2\", midiProgram: 10, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 0.7071 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 57, 57, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"stringSustain\": 29, \"envelopes\": [] } },\r\n                { name: \"vibraphone\", midiProgram: 11, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n                { name: \"marimba\", midiProgram: 12, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"kalimba\", midiProgram: 108, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 3, \"envelope\": \"twang 2\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"xylophone\", midiProgram: 13, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 6, \"envelope\": \"twang 1\" }] } },\r\n                { name: \"tubular bell\", midiProgram: 14, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.5 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 96, \"chord\": \"strum\", \"harmonics\": [43, 71, 0, 100, 0, 100, 0, 86, 0, 0, 86, 0, 14, 71, 14, 14, 57, 14, 14, 43, 14, 14, 43, 14, 14, 43, 14, 14], \"unison\": \"shimmer\", \"stringSustain\": 86, \"envelopes\": [] } },\r\n                { name: \"bell synth\", midiProgram: 14, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 6, \"envelope\": \"twang 3\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"rain drop\", midiProgram: 96, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 3, \"envelope\": \"twang 1\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"tremolo1\" }] } },\r\n                { name: \"crystal\", midiProgram: 98, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }] } },\r\n                { name: \"tinkle bell\", midiProgram: 112, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 7, \"envelope\": \"custom\" }] } },\r\n                { name: \"agogo\", midiProgram: 113, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"5×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 11, \"envelope\": \"custom\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Guitar Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"nylon guitar\", midiProgram: 24, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n                { name: \"steel guitar\", midiProgram: 25, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"harmonics\": [100, 100, 86, 71, 71, 71, 86, 86, 71, 57, 43, 43, 43, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [] } },\r\n                { name: \"jazz guitar\", midiProgram: 26, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 57, 71, 71, 43, 57, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n                { name: \"clean guitar\", midiProgram: 27, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 100, 100, 100, 86, 57, 86, 100, 100, 100, 71, 57, 43, 71, 86, 71, 57, 57, 71, 71, 71, 71, 57, 57, 57, 57, 57, 43] } },\r\n                { name: \"muted guitar\", midiProgram: 28, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Picked Bass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"acoustic bass\", midiProgram: 32, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14] } },\r\n                { name: \"fingered bass\", midiProgram: 33, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 86, 71, 57, 71, 43, 57, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n                { name: \"picked bass\", midiProgram: 34, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 1, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }] } },\r\n                { name: \"fretless bass\", midiProgram: 35, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"flare 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 86, 71, 71, 57, 57, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 14] } },\r\n                { name: \"slap bass 1\", midiProgram: 36, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 86, 71, 57, 29, 29, 43, 43, 57, 71, 57, 29, 29, 43, 57, 57, 57, 43, 43, 43, 57, 71, 71, 71, 71] } },\r\n                { name: \"slap bass 2\", midiProgram: 37, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"13×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n                { name: \"bass synth 1\", midiProgram: 38, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 13, \"envelope\": \"twang 2\" }] } },\r\n                { name: \"bass synth 2\", midiProgram: 39, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1000, \"filterResonance\": 57, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"steady\" }, { \"frequency\": \"3×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"bass & lead\", midiProgram: 87, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 86, \"filterEnvelope\": \"twang 2\", \"wave\": \"sawtooth\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n                { name: \"dubstep yoi yoi\", midiProgram: 87, settings: { \"type\": \"chip\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.7071 }], \"effects\": [\"note filter\", \"bitcrusher\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 594.6, \"linearGain\": 11.3137 }], \"bitcrusherOctave\": 1.5, \"bitcrusherQuantization\": 0, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"wave\": \"sawtooth\", \"unison\": \"none\", \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"flare 2\", \"index\": 0 }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Picked String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"pizzicato strings\", midiProgram: 45, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"steady\" }] } },\r\n                { name: \"harp\", midiProgram: 46, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }] } },\r\n                { name: \"sitar\", midiProgram: 104, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 57, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"twang 3\" }, { \"frequency\": \"9×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"16×\", \"amplitude\": 9, \"envelope\": \"swell 3\" }] } },\r\n                { name: \"banjo\", midiProgram: 105, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 3, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n                { name: \"ukulele\", midiProgram: 105, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"9×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n                { name: \"shamisen\", midiProgram: 106, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 4, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }] } },\r\n                { name: \"koto\", midiProgram: 107, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 2\", \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"twang 3\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Distortion Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"overdrive guitar\", midiProgram: 29, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.5 }], \"effects\": [\"note filter\", \"distortion\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.7071 }], \"distortion\": 71, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\r\n                { name: \"distortion guitar\", midiProgram: 30, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1 }, { \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 0.3536 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.25 }], \"effects\": [\"note filter\", \"distortion\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 353.55, \"linearGain\": 2 }, { \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 1 }], \"distortion\": 86, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 12, \"chord\": \"strum\", \"harmonics\": [86, 100, 100, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57, 57], \"unison\": \"none\", \"stringSustain\": 71, \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"note size\", \"index\": 1 }] } },\r\n                { name: \"charango synth\", midiProgram: 84, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 11313.71, \"linearGain\": 1 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 13 }, { \"frequency\": \"~1×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 6 }, { \"frequency\": \"3×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"guitar harmonics\", midiProgram: 31, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12 }, { \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 2 }, { \"frequency\": \"~1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 3 }] } },\r\n                { name: \"PWM overdrive\", midiProgram: 29, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1.4142 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 17.67767, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"punch\" }] } },\r\n                { name: \"PWM distortion\", midiProgram: 30, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"delayed\", \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"pulseWidth\": 50, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"swell 1\" }] } },\r\n                { name: \"FM overdrive\", midiProgram: 29, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"~2×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 12 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"twang 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"punch\" }] } },\r\n                { name: \"FM distortion\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 2 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"strum\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 11 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"~2×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 3 }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Bellows Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"drawbar organ 1\", midiProgram: 16, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 0, 86, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"drawbar organ 2\", midiProgram: 16, midiSubharmonicOctaves: 1, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [86, 29, 71, 86, 71, 14, 0, 100, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 0, 57, 0, 0, 0, 29, 0, 0, 0, 0] } },\r\n                { name: \"percussive organ\", midiProgram: 17, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"light\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n                { name: \"rock organ\", midiProgram: 18, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n                { name: \"pipe organ\", midiProgram: 19, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n                { name: \"reed organ\", midiProgram: 20, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 100, 86, 71, 100, 57, 71, 71, 71, 43, 43, 43, 71, 43, 71, 57, 57, 57, 57, 57, 57, 57, 29, 43, 29, 29, 14] } },\r\n                { name: \"accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"double saw\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n                { name: \"bandoneon\", midiProgram: 23, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [86, 86, 86, 57, 71, 86, 57, 71, 71, 71, 57, 43, 57, 43, 71, 43, 71, 57, 57, 43, 43, 43, 57, 43, 43, 29, 29, 29] } },\r\n                { name: \"bagpipe\", midiProgram: 109, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"punch\", \"interval\": \"hum\", \"vibrato\": \"none\", \"harmonics\": [71, 86, 86, 100, 100, 86, 57, 100, 86, 71, 71, 71, 57, 57, 57, 71, 57, 71, 57, 71, 43, 57, 57, 43, 43, 43, 43, 43] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"String Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"violin 1\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1→2\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9 }, { \"frequency\": \"3×\", \"amplitude\": 9 }, { \"frequency\": \"2×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"viola\", midiProgram: 41, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"13×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }] } },\r\n                { name: \"cello\", midiProgram: 42, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 0.1768 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"peak\", \"cutoffHz\": 4756.83, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.0884 }], \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 9 }, { \"frequency\": \"6×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }] } },\r\n                { name: \"contrabass\", midiProgram: 43, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"fiddle\", midiProgram: 110, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n                { name: \"tremolo strings\", midiProgram: 44, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"tremolo4\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"custom\" }] } },\r\n                { name: \"strings\", midiProgram: 48, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 3, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"slow strings\", midiProgram: 49, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"swell 2\", \"vibrato\": \"none\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"flare 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"strings synth 1\", midiProgram: 50, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"soft fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"wave\": \"sawtooth\", \"interval\": \"hum\", \"vibrato\": \"delayed\" } },\r\n                { name: \"strings synth 2\", midiProgram: 51, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }] } },\r\n                { name: \"orchestra hit 1\", midiProgram: 55, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"twang 3\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"flare 3\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"flare 2\" }, { \"frequency\": \"8×\", \"amplitude\": 15, \"envelope\": \"flare 1\" }] } },\r\n                { name: \"violin 2\", midiProgram: 40, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 105.11, \"linearGain\": 0.3536 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 6, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"twang 3\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"7×\", \"amplitude\": 8, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"orchestra hit 2\", midiProgram: 55, midiSubharmonicOctaves: 1, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"decay 1\", \"vibrato\": \"delayed\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 14, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 14, \"envelope\": \"custom\" }] } },\r\n                { name: \"supersaw string\",  midiProgram:  41, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.1768}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":500,\"linearGain\":0.1768}],\"reverb\":33,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":6,\"pulseWidth\":35.35534,\"dynamism\":83,\"spread\":8,\"shape\":50,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0}]}},\r\n                { name: \"supersaw string 2\", midiProgram: 41, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":4756.83,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":4756.83,\"linearGain\":2}],\"effects\":[\"note filter\",\"chorus\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1}],\"chorus\":57,\"reverb\":42,\"fadeInSeconds\":0.0575,\"fadeOutTicks\":-6,\"pulseWidth\":50,\"dynamism\":67,\"spread\":58,\"shape\":0,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"punch\"},{\"target\":\"pulseWidth\",\"envelope\":\"flare 2\"}]}},\r\n            \r\n            ])\r\n        },\r\n        {\r\n            name: \"Vocal Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"choir soprano\", midiProgram: 94, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }, { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 24, \"harmonics\": [100, 100, 86, 57, 29, 29, 57, 71, 57, 29, 14, 14, 14, 29, 43, 57, 43, 29, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"choir tenor\", midiProgram: 52, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"choir bass\", midiProgram: 52, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"chorus\", \"reverb\"], \"vibrato\": \"shaky\", \"chorus\": 100, \"reverb\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"solo soprano\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }, { \"type\": \"peak\", \"cutoffHz\": 1189.21, \"linearGain\": 5.6569 }, { \"type\": \"high-pass\", \"cutoffHz\": 707.11, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 2000, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.25 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 86, 43, 14, 14, 57, 71, 57, 14, 14, 14, 14, 14, 43, 57, 43, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"solo tenor\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 11.3137 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"high-pass\", \"cutoffHz\": 297.3, \"linearGain\": 0.7071 }, { \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"harmonics\": [86, 100, 100, 86, 71, 57, 43, 29, 29, 29, 29, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"solo bass\", midiProgram: 85, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 594.6, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 1681.79, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 707.11, \"linearGain\": 0.0884 }, { \"type\": \"peak\", \"cutoffHz\": 840.9, \"linearGain\": 8 }, { \"type\": \"high-pass\", \"cutoffHz\": 210.22, \"linearGain\": 1.4142 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"shaky\", \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": 12, \"chord\": \"simultaneous\", \"harmonics\": [71, 86, 100, 100, 86, 86, 57, 43, 29, 29, 29, 29, 29, 29, 43, 43, 43, 43, 43, 29, 29, 29, 29, 14, 14, 14, 14, 14], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"voice ooh\", midiProgram: 53, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"shaky\", \"harmonics\": [100, 57, 43, 43, 14, 14, 0, 0, 0, 14, 29, 29, 14, 0, 14, 29, 29, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"voice synth\", midiProgram: 54, generalMidi: true, settings: { \"type\": \"chip\", \"transition\": \"medium fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"wave\": \"rounded\", \"interval\": \"union\", \"vibrato\": \"light\" } },\r\n                { name: \"vox synth lead\", midiProgram: 85, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"9×\", \"amplitude\": 5, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 1, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n                { name: \"tiny robot\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"delayed\", \"reverb\": 33, \"transition\": \"slide\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"~1×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 1 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"yowie\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"tremolo5\", \"vibrato\": \"none\", \"algorithm\": \"1←2←(3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 12, \"feedbackEnvelope\": \"tremolo3\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"mouse\", midiProgram: 85, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"light\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\r\n                { name: \"gumdrop\", midiProgram: 85, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"7×\", \"amplitude\": 15, \"envelope\": \"punch\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"twang 1\" }] } },\r\n                { name: \"echo drop\", midiProgram: 102, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"~2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 5, \"envelope\": \"swell 3\" }] } },\r\n                { name: \"dark choir\", midiProgram: 85, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"spectrum\": [43, 14, 14, 14, 14, 14, 14, 100, 14, 14, 14, 57, 14, 14, 100, 14, 43, 14, 43, 14, 14, 43, 14, 29, 14, 29, 14, 14, 29, 0] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Brass Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"trumpet\", midiProgram: 56, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 5, \"envelope\": \"flare 2\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"trombone\", midiProgram: 57, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"tuba\", midiProgram: 58, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 8, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"muted trumpet\", midiProgram: 59, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 2.8284 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 5 }, { \"frequency\": \"9×\", \"amplitude\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 2\" }] } },\r\n                { name: \"french horn\", midiProgram: 60, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 2.8284 }], \"effects\": [\"reverb\"], \"reverb\": 33, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 1\" }] } },\r\n                { name: \"brass section\", midiProgram: 61, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 10, \"envelope\": \"swell 1\" }] } },\r\n                { name: \"brass synth 1\", midiProgram: 62, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"envelope\": \"flare 2\" }] } },\r\n                { name: \"brass synth 2\", midiProgram: 63, generalMidi: true, settings: { \"type\": \"FM\", \"transition\": \"soft\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"twang 3\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"flare 1\" }, { \"frequency\": \"~1×\", \"amplitude\": 7, \"envelope\": \"flare 1\" }] } },\r\n                { name: \"pulse brass\", midiProgram: 62, settings: { \"type\": \"PWM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"pulseWidth\": 50, \"pulseEnvelope\": \"flare 3\", \"vibrato\": \"none\" } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Reed Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"soprano sax\", midiProgram: 64, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 4, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"5×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n                { name: \"alto sax\", midiProgram: 65, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"punch\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"steady\" }] } },\r\n                { name: \"tenor sax\", midiProgram: 66, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 6, \"feedbackEnvelope\": \"swell 1\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"8×\", \"amplitude\": 3, \"envelope\": \"steady\" }] } },\r\n                { name: \"baritone sax\", midiProgram: 67, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"swell 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 4, \"envelope\": \"punch\" }] } },\r\n                { name: \"sax synth\", midiProgram: 64, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 4, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"shehnai\", midiProgram: 111, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"light\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"oboe\", midiProgram: 68, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 7, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"steady\" }] } },\r\n                { name: \"english horn\", midiProgram: 69, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2←(3 4)\", \"feedbackType\": \"2⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"4×\", \"amplitude\": 12, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 8, \"envelope\": \"punch\" }, { \"frequency\": \"8×\", \"amplitude\": 4, \"envelope\": \"steady\" }] } },\r\n                { name: \"bassoon\", midiProgram: 70, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 707, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 2, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 11, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 6, \"envelope\": \"steady\" }, { \"frequency\": \"6×\", \"amplitude\": 6, \"envelope\": \"swell 1\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n                { name: \"clarinet\", midiProgram: 71, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n                { name: \"harmonica\", midiProgram: 22, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"swell 1\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 9, \"feedbackEnvelope\": \"tremolo5\", \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"~2×\", \"amplitude\": 2, \"envelope\": \"twang 3\" }, { \"frequency\": \"1×\", \"amplitude\": 0, \"envelope\": \"steady\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Flute Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"flute 1\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 4, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 3, \"envelope\": \"steady\" }, { \"frequency\": \"~1×\", \"amplitude\": 1, \"envelope\": \"punch\" }] } },\r\n                { name: \"recorder\", midiProgram: 74, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"swell 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 43, 57, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0] } },\r\n                { name: \"whistle\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"ocarina\", midiProgram: 79, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 14, 57, 14, 29, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n                { name: \"piccolo\", midiProgram: 72, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 43, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"4⟲\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"~2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 5, \"envelope\": \"punch\" }] } },\r\n                { name: \"shakuhachi\", midiProgram: 77, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"vibrato\": \"delayed\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 3, \"envelope\": \"punch\" }, { \"frequency\": \"~1×\", \"amplitude\": 4, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 15, \"envelope\": \"steady\" }] } },\r\n                { name: \"pan flute\", midiProgram: 75, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 5.6569 }], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 71, 0, 0, 14, 0, 57, 0, 29, 14, 29, 14, 14, 29, 14, 29, 14, 14, 29, 14], \"envelopes\": [{ \"target\": \"noteFilterFreq\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"punch\" }] } },\r\n                { name: \"blown bottle\", midiProgram: 76, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"chorus & reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 57, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 7, \"feedbackEnvelope\": \"twang 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 4, \"envelope\": \"custom\" }, { \"frequency\": \"6×\", \"amplitude\": 2, \"envelope\": \"custom\" }, { \"frequency\": \"11×\", \"amplitude\": 2, \"envelope\": \"custom\" }] } },\r\n                { name: \"calliope\", midiProgram: 82, generalMidi: true, settings: { \"type\": \"spectrum\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 0, 0, 0, 0, 0, 0, 86, 0, 0, 0, 71, 0, 0, 57, 0, 43, 0, 29, 14, 14, 29, 14, 14, 14, 14, 14, 14, 14, 14] } },\r\n                { name: \"chiffer\", midiProgram: 83, generalMidi: true, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"spectrum\": [86, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 71, 0, 0, 57, 0, 57, 0, 43, 14, 14, 43, 14, 29, 14, 29, 29, 29, 29, 14] } },\r\n                { name: \"breath noise\", midiProgram: 121, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"chord type\", \"note filter\", \"reverb\"], \"chord\": \"strum\", \"noteFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 0.3536 }, { \"type\": \"low-pass\", \"cutoffHz\": 16000, \"linearGain\": 0.3536 }], \"reverb\": 33, \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 12, \"spectrum\": [71, 0, 0, 0, 0, 0, 0, 29, 0, 0, 0, 71, 0, 0, 29, 0, 100, 29, 14, 29, 100, 29, 100, 14, 14, 71, 0, 29, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }] } },\r\n                { name: \"flute 2\", midiProgram: 73, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"delayed\", \"harmonics\": [100, 43, 86, 57, 86, 71, 86, 71, 71, 71, 71, 71, 71, 43, 71, 71, 57, 57, 57, 57, 57, 57, 43, 43, 43, 29, 14, 0] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Pad Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"new age pad\", midiProgram: 88, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 4 }, { \"frequency\": \"6×\", \"amplitude\": 3 }, { \"frequency\": \"13×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 3\" }] } },\r\n                { name: \"warm pad\", midiProgram: 89, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 3363.59, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 7, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"1×\", \"amplitude\": 6 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 1\", \"index\": 1 }] } },\r\n                { name: \"polysynth pad\", midiProgram: 90, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"honky tonk\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"space voice pad\", midiProgram: 91, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 5.6569 }, { \"type\": \"peak\", \"cutoffHz\": 1414.21, \"linearGain\": 0.1768 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2 3)←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 2 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\r\n                { name: \"bowed glass pad\", midiProgram: 92, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }] } },\r\n                { name: \"metallic pad\", midiProgram: 93, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 13, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 9 }, { \"frequency\": \"1×\", \"amplitude\": 7 }, { \"frequency\": \"11×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"sweep pad\", midiProgram: 95, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\r\n                { name: \"atmosphere\", midiProgram: 99, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 }], \"effects\": [\"chorus\", \"reverb\"], \"chorus\": 100, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"strum\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 10 }, { \"frequency\": \"3×\", \"amplitude\": 7 }, { \"frequency\": \"1×\", \"amplitude\": 7 }], \"envelopes\": [{ \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 3 }] } },\r\n                { name: \"brightness\", midiProgram: 100, generalMidi: true, settings: { \"type\": \"Picked String\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 2 }], \"effects\": [\"chorus\"], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"harmonics\": [100, 86, 86, 86, 43, 57, 43, 71, 43, 43, 43, 57, 43, 43, 57, 71, 57, 43, 29, 43, 57, 57, 43, 29, 29, 29, 29, 14], \"unison\": \"octave\", \"stringSustain\": 86, \"envelopes\": [] } },\r\n                { name: \"goblins\", midiProgram: 101, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2828.43, \"linearGain\": 11.3137 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"simultaneous\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 3\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 3\" }] } },\r\n                { name: \"sci-fi\", midiProgram: 103, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 9513.66, \"linearGain\": 2.8284 }], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 0.5 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←3←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 13 }, { \"frequency\": \"2×\", \"amplitude\": 10 }, { \"frequency\": \"5×\", \"amplitude\": 5 }, { \"frequency\": \"11×\", \"amplitude\": 8 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo5\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"flutter pad\", midiProgram: 90, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"vibrato\", \"note filter\", \"chorus\"], \"vibrato\": \"delayed\", \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4000, \"linearGain\": 4 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"algorithm\": \"(1 2)←(3 4)\", \"feedbackType\": \"1⟲ 2⟲ 3⟲\", \"feedbackAmplitude\": 9, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 13 }, { \"frequency\": \"5×\", \"amplitude\": 7 }, { \"frequency\": \"7×\", \"amplitude\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 3 }] } },\r\n                { name: \"feedback pad\", midiProgram: 89, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 2378.41, \"linearGain\": 8 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": 96, \"chord\": \"custom interval\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 8, \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"~1×\", \"amplitude\": 15 }], \"envelopes\": [{ \"target\": \"feedbackAmplitude\", \"envelope\": \"swell 2\" }] } },\r\n                { name: \"supersaw pad\", midiProgram: 93, settings: {\"type\":\"supersaw\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.1768}],\"effects\":[\"reverb\"],\"reverb\":100,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":24,\"pulseWidth\":50,\"dynamism\":100,\"spread\":58,\"shape\":0,\"envelopes\":[]}},\r\n            ])\r\n        },\r\n        {\r\n            name: \"Drum Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"standard drumset\", midiProgram: 116, isNoise: true, settings: { \"type\": \"drumset\", \"effects\": \"reverb\", \"drums\": [{ \"filterEnvelope\": \"twang 1\", \"spectrum\": [57, 71, 71, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 100, 71, 71, 57, 86, 57, 57, 57, 71, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 100, 57, 43, 43, 29, 57, 43, 29, 71, 43, 43, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 29, 43, 43, 43] }, { \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 0, 0, 0, 0, 71, 57, 43, 43, 43, 57, 57, 43, 29, 57, 43, 43, 43, 29, 43, 57, 43, 43, 43, 43, 43, 43, 29, 43, 43] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [0, 14, 29, 43, 86, 71, 29, 43, 43, 43, 43, 29, 71, 29, 71, 29, 43, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 57, 57, 57] }, { \"filterEnvelope\": \"decay 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 57, 57, 57, 57, 43, 43, 43] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 43, 43, 71, 29, 29, 43, 43, 43, 29, 43, 43, 43, 29, 29, 43, 43, 29, 29, 29, 57, 14, 57, 43, 43, 57, 43, 43, 57, 57] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [29, 43, 43, 43, 43, 29, 29, 43, 29, 29, 43, 29, 14, 29, 43, 29, 43, 29, 57, 29, 43, 57, 43, 71, 43, 71, 57, 57, 71, 71] }, { \"filterEnvelope\": \"twang 3\", \"spectrum\": [43, 29, 29, 43, 29, 29, 29, 57, 29, 29, 29, 57, 43, 43, 29, 29, 57, 43, 43, 43, 71, 43, 43, 71, 57, 71, 71, 71, 71, 71] }, { \"filterEnvelope\": \"decay 3\", \"spectrum\": [57, 57, 57, 43, 57, 57, 43, 43, 57, 43, 43, 43, 71, 57, 43, 57, 86, 71, 57, 86, 71, 57, 86, 100, 71, 86, 86, 86, 86, 86] }, { \"filterEnvelope\": \"flare 1\", \"spectrum\": [0, 0, 14, 14, 14, 14, 29, 29, 29, 43, 43, 43, 57, 57, 71, 71, 86, 86, 100, 100, 100, 100, 100, 100, 100, 100, 86, 57, 29, 0] }, { \"filterEnvelope\": \"decay 2\", \"spectrum\": [14, 14, 14, 14, 29, 14, 14, 29, 14, 43, 14, 43, 57, 86, 57, 57, 100, 57, 43, 43, 57, 100, 57, 43, 29, 14, 0, 0, 0, 0] }] } },\r\n                { name: \"steel pan\", midiProgram: 114, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\", \"chorus\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"chorus\": 67, \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 24, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 14 }, { \"frequency\": \"7×\", \"amplitude\": 3 }, { \"frequency\": \"3×\", \"amplitude\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 4 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"decay 2\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 3 }] } },\r\n                { name: \"steel pan synth\", midiProgram: 114, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 13454.34, \"linearGain\": 0.25 }], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"algorithm\": \"1 2 3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 5, \"operators\": [{ \"frequency\": \"~1×\", \"amplitude\": 12 }, { \"frequency\": \"2×\", \"amplitude\": 15 }, { \"frequency\": \"4×\", \"amplitude\": 14 }, { \"frequency\": \"~1×\", \"amplitude\": 3 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 2\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" }] } },\r\n                { name: \"timpani\", midiProgram: 47, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"peak\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"effects\": [\"pitch shift\", \"note filter\", \"reverb\"], \"pitchShiftSemitones\": 15, \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [100, 0, 0, 0, 86, 0, 0, 71, 0, 14, 43, 14, 43, 43, 0, 29, 43, 29, 29, 29, 43, 29, 43, 29, 43, 43, 43, 43, 43, 43], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 1\" }, { \"target\": \"pitchShift\", \"envelope\": \"twang 1\" }] } },\r\n                { name: \"dark strike\", midiProgram: 47, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 0.7071 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 14, 14, 14, 29, 29, 43, 43, 86, 43, 43, 43, 29, 86, 29, 29, 29, 86, 29, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"woodblock\", midiProgram: 115, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [0, 14, 29, 43, 43, 57, 86, 86, 71, 57, 57, 43, 43, 57, 86, 86, 43, 43, 71, 57, 57, 57, 57, 57, 86, 86, 71, 71, 71, 71] } },\r\n                { name: \"taiko drum\", midiProgram: 116, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [71, 100, 100, 43, 43, 71, 71, 43, 43, 43, 43, 43, 43, 57, 29, 57, 43, 57, 43, 43, 57, 43, 43, 43, 43, 43, 43, 43, 43, 43] } },\r\n                { name: \"melodic drum\", midiProgram: 117, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2828, \"filterResonance\": 43, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 71, 71, 57, 57, 43, 43, 71, 43, 43, 43, 57, 43, 43, 57, 43, 43, 43, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n                { name: \"drum synth\", midiProgram: 118, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 43, \"filterEnvelope\": \"decay 1\", \"spectrum\": [100, 86, 71, 57, 43, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29, 29] } },\r\n                { name: \"tom-tom\", midiProgram: 116, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 1\", \"spectrum\": [100, 29, 14, 0, 0, 86, 14, 43, 29, 86, 29, 14, 29, 57, 43, 43, 43, 43, 57, 43, 43, 43, 29, 57, 43, 43, 43, 43, 43, 43] } },\r\n                { name: \"metal pipe\", midiProgram: 117, isNoise: true, midiSubharmonicOctaves: -1.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"spectrum\": [29, 43, 86, 43, 43, 43, 43, 43, 100, 29, 14, 14, 100, 14, 14, 0, 0, 0, 0, 0, 14, 29, 29, 14, 0, 0, 14, 29, 0, 0] } },\r\n                { name: \"synth kick\", midiProgram: 47, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"8×\", \"amplitude\": 15 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"operatorFrequency\", \"envelope\": \"twang 1\", \"index\": 0 }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\r\n            ])\r\n        },\r\n        {\r\n            name: \"Novelty Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n                { name: \"guitar fret noise\", midiProgram: 120, generalMidi: true, settings: { \"type\": \"spectrum\", \"eqFilter\": [{ \"type\": \"high-pass\", \"cutoffHz\": 1000, \"linearGain\": 0.1768 }], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 5.6569 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 29, 14, 0, 0, 43, 0, 43, 0, 71, 43, 0, 57, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }, { \"target\": \"noteVolume\", \"envelope\": \"twang 2\" }] } },\r\n                { name: \"fifth saw lead\", midiProgram: 86, generalMidi: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 1.4142 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0, \"fadeOutTicks\": 48, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 3\" }] } },\r\n                { name: \"fifth swell\", midiProgram: 86, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2000, \"linearGain\": 2 }], \"chorus\": 100, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"swell 3\" }] } },\r\n                { name: \"soundtrack\", midiProgram: 97, generalMidi: true, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\", \"chorus\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2378.41, \"linearGain\": 0.5 }], \"chorus\": 67, \"transition\": \"normal\", \"fadeInSeconds\": 0.0413, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"wave\": \"sawtooth\", \"unison\": \"fifth\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 3\" }] } },\r\n                { name: \"reverse cymbal\", midiProgram: 119, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"none\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [29, 57, 57, 29, 57, 57, 29, 29, 43, 29, 29, 43, 29, 29, 57, 57, 14, 57, 14, 57, 71, 71, 57, 86, 57, 100, 86, 86, 86, 86] } },\r\n                { name: \"seashore\", midiProgram: 122, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"transition\": \"soft fade\", \"effects\": \"reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 0, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 43, 43, 43, 57, 57, 57, 57, 57, 57, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 71, 57] } },\r\n                { name: \"bird tweet\", midiProgram: 123, generalMidi: true, settings: { \"type\": \"harmonics\", \"eqFilter\": [], \"effects\": [\"chord type\", \"vibrato\", \"reverb\"], \"chord\": \"strum\", \"vibrato\": \"heavy\", \"reverb\": 67, \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"harmonics\": [0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"hum\", \"envelopes\": [{ \"target\": \"noteVolume\", \"envelope\": \"decay 1\" }] } },\r\n                { name: \"telephone ring\", midiProgram: 124, generalMidi: true, settings: { \"type\": \"FM\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 5656.85, \"linearGain\": 1 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"arpeggio\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [{ \"frequency\": \"2×\", \"amplitude\": 12 }, { \"frequency\": \"1×\", \"amplitude\": 4 }, { \"frequency\": \"20×\", \"amplitude\": 1 }, { \"frequency\": \"1×\", \"amplitude\": 0 }], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"tremolo4\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"tremolo1\", \"index\": 1 }] } },\r\n                { name: \"helicopter\", midiProgram: 125, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -0.5, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 1414, \"filterResonance\": 14, \"filterEnvelope\": \"tremolo4\", \"spectrum\": [14, 43, 43, 57, 57, 57, 71, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 71, 71, 71, 57, 57] } },\r\n                { name: \"applause\", midiProgram: 126, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -3, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 3\", \"spectrum\": [14, 14, 29, 29, 29, 43, 43, 57, 71, 71, 86, 86, 86, 71, 71, 57, 57, 57, 71, 86, 86, 86, 86, 86, 71, 71, 57, 57, 57, 57] } },\r\n                { name: \"gunshot\", midiProgram: 127, generalMidi: true, isNoise: true, midiSubharmonicOctaves: -2, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"strum\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"twang 1\", \"spectrum\": [14, 29, 43, 43, 57, 57, 57, 71, 71, 71, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 71, 71, 71, 71, 57, 57, 57, 57, 43] } },\r\n                { name: \"scoot\", midiProgram: 92, settings: { \"type\": \"chip\", \"eqFilter\": [], \"effects\": [\"note filter\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 707.11, \"linearGain\": 4 }], \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": -3, \"chord\": \"simultaneous\", \"wave\": \"double saw\", \"unison\": \"shimmer\", \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"flare 1\" }] } },\r\n                { name: \"buzz saw\", midiProgram: 30, settings: { \"type\": \"FM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.5 }], \"effects\": [], \"transition\": \"normal\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"chord\": \"custom interval\", \"algorithm\": \"1←2←3←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 4, \"operators\": [{ \"frequency\": \"5×\", \"amplitude\": 13 }, { \"frequency\": \"1×\", \"amplitude\": 10 }, { \"frequency\": \"~1×\", \"amplitude\": 6 }, { \"frequency\": \"11×\", \"amplitude\": 12 }], \"envelopes\": [] } },\r\n                { name: \"mosquito\", midiProgram: 93, settings: { \"type\": \"PWM\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 2828.43, \"linearGain\": 2 }], \"effects\": [\"vibrato\"], \"vibrato\": \"shaky\", \"transition\": \"normal\", \"fadeInSeconds\": 0.0575, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"pulseWidth\": 4.41942, \"envelopes\": [{ \"target\": \"pulseWidth\", \"envelope\": \"tremolo6\" }] } },\r\n                { name: \"breathing\", midiProgram: 126, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 14, \"filterEnvelope\": \"swell 2\", \"spectrum\": [14, 14, 14, 29, 29, 29, 29, 29, 43, 29, 29, 43, 43, 43, 29, 29, 71, 43, 86, 86, 57, 100, 86, 86, 86, 86, 71, 86, 71, 57] } },\r\n                { name: \"klaxon synth\", midiProgram: 125, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"slide\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 86, \"filterEnvelope\": \"steady\", \"wave\": \"buzz\" } },\r\n                { name: \"theremin\", midiProgram: 40, settings: { \"type\": \"harmonics\", \"eqFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 8000, \"linearGain\": 0.7071 }], \"effects\": [\"vibrato\", \"reverb\"], \"vibrato\": \"heavy\", \"reverb\": 33, \"transition\": \"slide in pattern\", \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -6, \"chord\": \"simultaneous\", \"harmonics\": [100, 71, 57, 43, 29, 29, 14, 14, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"unison\": \"none\", \"envelopes\": [] } },\r\n                { name: \"sonar ping\", midiProgram: 121, settings: { \"type\": \"spectrum\", \"eqFilter\": [], \"effects\": [\"note filter\", \"reverb\"], \"noteFilter\": [{ \"type\": \"low-pass\", \"cutoffHz\": 1681.79, \"linearGain\": 0.5 }], \"reverb\": 33, \"transition\": \"normal\", \"fadeInSeconds\": 0.0125, \"fadeOutTicks\": 72, \"chord\": \"simultaneous\", \"spectrum\": [100, 43, 29, 29, 14, 14, 14, 14, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], \"envelopes\": [{ \"target\": \"noteFilterAllFreqs\", \"envelope\": \"twang 2\" }] } },\r\n            ])\r\n        },\r\n\r\n        { name: \"Modbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n\t\t\t{ name: \"modbox theepsynth\", settings: { \"type\": \"FM\", \"effects\": \"none\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 14, \"filterEnvelope\": \"custom\", \"vibrato\": \"none\", \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 11, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 7, \"envelope\": \"steady\" }, { \"frequency\": \"1×\", \"amplitude\": 11, \"envelope\": \"steady\" }] } },\r\n        ]) },\r\n\r\n\t\t{ name: \"Sandbox Presets\", presets: toNameMap([\r\n            { name: \"sandbox netsky hollow\", generalMidi: false, isNoise: true, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"spectrum\": [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45] } },\r\n            { name: \"sandbox abnormality\", generalMidi: false, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"none\", \"transition\": \"seamless\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"wave\": \"spiky\", \"interval\": \"fifth\", \"vibrato\": \"none\" } },\r\n            { name: \"sandbox playstation\", generalMidi: false, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"wave\": \"glitch\", \"interval\": \"shimmer\", \"vibrato\": \"none\" } },\r\n            { name: \"sandbox harmony pulse\", generalMidi: false, midiSubharmonicOctaves: 1, settings: { \"type\": \"chip\", \"effects\": \"chorus\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 4000, \"filterResonance\": 29, \"filterEnvelope\": \"punch\", \"wave\": \"double pulse\", \"interval\": \"union\", \"vibrato\": \"none\" } },\r\n            { name: \"sandbox pink ping\", generalMidi: false, midiSubharmonicOctaves: -1, settings: { \"type\": \"spectrum\", \"effects\": \"reverb\", \"transition\": \"soft\", \"chord\": \"harmony\", \"filterCutoffHz\": 3000, \"filterResonance\": 0, \"filterEnvelope\": \"tripolo6\", \"spectrum\": [0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] } },\r\n            { name: \"sandbox tv static\", generalMidi: false, isNoise: true, midiSubharmonicOctaves: 1, settings: { \"type\": \"noise\", \"effects\": \"reverb\", \"transition\": \"medium fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 40, \"filterEnvelope\": \"steady\", \"wave\": \"static\" } },\r\n            { name: \"sandbox clean pulse\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"hard\", \"effects\": \"none\", \"chord\": \"arpeggio\", \"filterCutoffHz\": 4000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [-24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -24, -24, -24, -24, -24, -24, -24, -24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1] } },\r\n\t\t\t{ name: \"sandbox snp chorus\", generalMidi: false, settings: { \"type\": \"FM\", \"transition\": \"hard\", \"effects\": \"chorus & reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1→2→3→4\", \"feedbackAmplitude\": 1, \"feedbackEnvelope\": \"flare 1\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 10, \"envelope\": \"custom\" }, { \"frequency\": \"3×\", \"amplitude\": 6, \"envelope\": \"custom\" }] } },\r\n\t\t\t{ name: \"sandbox snp echo\", generalMidi: false, settings: { \"type\": \"FM\", \"transition\": \"hard fade\", \"effects\": \"chorus\", \"chord\": \"strum\", \"filterCutoffHz\": 8000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"2×\", \"amplitude\": 15, \"envelope\": \"custom\" }, { \"frequency\": \"20×\", \"amplitude\": 9, \"envelope\": \"twang 1\" }, { \"frequency\": \"20×\", \"amplitude\": 5, \"envelope\": \"twang 2\" }] } },\r\n            { name: \"sandbox tori synth lead\", generalMidi: false, settings: { \"type\": \"harmonics\", \"effects\": \"chorus\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 2000, \"filterResonance\": 0, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"harmonics\": [100, 100, 100, 100, 71, 71, 43, 43, 43, 29, 29, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 43, 29, 14, 0, 0, 0, 86] } },\r\n            { name: \"sandbox glorious piano 1\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [24, 24, -16, -15, -15, -14, -13, -13, -12, -11, -11, -10, -9, -8, -8, -7, -6, -5, -5, -4, -3, -2, -2, 23, 22, 22, 21, 20, 20, 19, 19, 18, 18, 17, 16, 15, 15, 14, 13, 12, 12, 11, 0, -1, -1, -2, -3, -3, -4, -5, -5, -6, -20, -19, -17, -17, -14, -11, -8, -5, -2, -23, -24, -24] } },\r\n            { name: \"sandbox glorious piano 2\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"hard fade\", \"effects\": \"chorus & reverb\", \"chord\": \"harmony\", \"filterCutoffHz\": 2828, \"filterResonance\": 14, \"filterEnvelope\": \"punch\", \"interval\": \"shimmer\", \"vibrato\": \"light\", \"customChipWave\": [24, 24, -16, -15, -15, -14, -13, -13, -12, 12, 9, 5, 2, -3, -7, -10, -6, -5, -5, -4, -3, -2, -2, 23, 22, 22, 21, 20, 20, 19, 19, 18, 18, 17, 16, 15, 15, 0, 4, 8, 15, 21, 0, -1, -1, -2, -3, -3, -4, -5, -5, -6, -20, -19, -17, -17, -2, -2, -8, 2, -2, -5, -24, -24] } },\r\n            { name: \"sandbox muffled katrumpet\", generalMidi: false, settings: { \"type\": \"custom chip\", \"transition\": \"cross fade\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 29, \"filterEnvelope\": \"steady\", \"interval\": \"union\", \"vibrato\": \"light\", \"customChipWave\": [24, 23, 22, 22, 22, 22, 22, 21, 21, 19, 19, 15, 11, 7, 5, -2, -5, -11, -13, -14, -16, -17, -17, -17, -17, -17, -17, -17, -17, -13, -10, -1, 4, 6, 8, 10, 11, 14, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16, 15, 15, 14, 11, 8, 4, 2, -4, -7, -11, -12, -13, -14, -15, -15, -15] } },\r\n            { name: \"sandbox ehruthing\", generalMidi: false, settings: { \"type\": \"custom chip\", \"hard fade\": \"seamless\", \"effects\": \"reverb\", \"chord\": \"strum\", \"filterCutoffHz\": 5657, \"filterResonance\": 14, \"filterEnvelope\": \"twang 2\", \"interval\": \"union\", \"vibrato\": \"none\", \"customChipWave\": [24, 24, 23, 22, 21, 21, 20, 19, 18, 18, 17, 16, 15, -22, -20, -18, -16, -14, -13, -11, -10, -7, -6, -4, -3, -2, 0, 2, 4, 17, 16, 15, 13, 12, 11, 9, 8, 6, 5, 4, 3, 2, 1, -1, -1, -2, -3, -4, -6, -6, -7, -8, -8, -9, -10, -10, -11, -13, -15, -16, -17, -3, -4, -5] } },\r\n\t\t\t{ name: \"sandbox wurtz organ\", generalMidi: false, settings: { \"type\": \"FM\", \"transition\": \"seamless\", \"effects\": \"chorus\", \"chord\": \"harmony\", \"filterCutoffHz\": 1414, \"filterResonance\": 0, \"filterEnvelope\": \"punch\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 3, \"feedbackEnvelope\": \"decay 2\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 14, \"envelope\": \"tremolo6\" }, { \"frequency\": \"2×\", \"amplitude\": 9, \"envelope\": \"tripolo3\" }, { \"frequency\": \"4×\", \"amplitude\": 5, \"envelope\": \"pentolo3\" }, { \"frequency\": \"8×\", \"amplitude\": 2, \"envelope\": \"pentolo6\" }] } },\r\n        //some of these dont load, I need to fix them\r\n\t\t]) },\r\n\r\n        { name: \"Blackbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n            { name: \"blackbox deep key\", midiProgram: 9, generalMidi: true, settings: { \"type\": \"harmonics\", \"effects\": \"reverb\", \"transition\": \"hard fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 8000, \"filterResonance\": 32, \"filterEnvelope\": \"twang 1\", \"interval\": \"shimmer\", \"vibrato\": \"light\", \"harmonics\": [100, 86, 86, 86, 86, 71, 71, 57, 0, 57, 29, 43, 57, 57, 57, 43, 43, 0, 29, 43, 43, 43, 43, 43, 43, 29, 0, 30] } },\r\n\t\t\t{ name: \"blackbox ring ding\", midiProgram: 78, generalMidi: true, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"hard\", \"chord\": \"strum\", \"filterCutoffHz\": 1500, \"filterResonance\": 16, \"filterEnvelope\": \"twang 2\", \"vibrato\": \"none\", \"algorithm\": \"1 2 3 4\", \"feedbackType\": \"1⟲ 2⟲\", \"feedbackAmplitude\": 0, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"1×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"4×\", \"amplitude\": 8, \"envelope\": \"custom\" }, { \"frequency\": \"12×\", \"amplitude\": 9, \"envelope\": \"custom\" }, { \"frequency\": \"22×\", \"amplitude\": 4, \"envelope\": \"twang 2\" }] } },\r\n\t\t\t//blackbox adds LITERALLY TWO presets. that's it.\r\n\t\t]) },\r\n\r\n\t\t{ name: \"Todbox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n            { name: \"todbox accordion\", midiProgram: 21, generalMidi: true, settings: { \"type\": \"chip\", \"effects\": \"reverb\", \"transition\": \"cross fade\", \"chord\": \"harmony\", \"filterCutoffHz\": 5657, \"filterResonance\": 0, \"filterEnvelope\": \"swell 1\", \"wave\": \"todbox accordian\", \"interval\": \"honky tonk\", \"vibrato\": \"none\" } },\r\n\t\t\t{ name: \"todbox wind\", generalMidi: false, settings: { \"type\": \"FM\", \"effects\": \"reverb\", \"transition\": \"seamless\", \"chord\": \"harmony\", \"filterCutoffHz\": 200, \"filterResonance\": 2950, \"filterEnvelope\": \"steady\", \"vibrato\": \"none\", \"algorithm\": \"1→3 2→4\", \"feedbackType\": \"1→3 2→4\", \"feedbackAmplitude\": 15, \"feedbackEnvelope\": \"steady\", \"operators\": [{ \"frequency\": \"16×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 0, \"envelope\": \"custom\" }, { \"frequency\": \"16×\", \"amplitude\": 15, \"envelope\": \"steady\" }, { \"frequency\": \"16×\", \"amplitude\": 0, \"envelope\": \"flare 2\" }] } },\r\n\t\t]) },\r\n\r\n        { name: \"Midbox Misc Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n            //{ name: \"Name\", generalMidi: false, settings: {} },\r\n            { name: \"Broken Music Box\", midiProgram: 21, generalMidi: true, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":0.5},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":500,\"linearGain\":1.4142}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":0.5},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":500,\"linearGain\":1.4142}],\"effects\":[\"transition type\",\"chord type\",\"vibrato\",\"note filter\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"chord\":\"strum\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"vibrato\":\"custom\",\"vibratoDepth\":0.72,\"vibratoDelay\":19,\"vibratoSpeed\":30,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.0884}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.0884}],\"bitcrusherOctave\":3,\"bitcrusherQuantization\":29,\"panDelay\":10,\"chorus\":29,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":23,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"wave\":\"rounded\",\"unison\":\"none\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":64,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0}]} },\r\n\t\t\t{ name: \"Enhanced Synth Kick\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":19027.31,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":62.5,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":0.25}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":19027.31,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":62.5,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":0.25}],\"effects\":[\"pitch shift\",\"vibrato\",\"note filter\",\"distortion\",\"bitcrusher\",\"chorus\"],\"pitchShiftSemitones\":24,\"vibrato\":\"custom\",\"vibratoDepth\":2,\"vibratoDelay\":0,\"vibratoSpeed\":30,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"peak\",\"cutoffHz\":148.65,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":148.65,\"linearGain\":11.3137}],\"distortion\":71,\"aliases\":false,\"bitcrusherOctave\":4,\"bitcrusherQuantization\":57,\"panDelay\":10,\"chorus\":29,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1 2←(3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":13,\"operators\":[{\"frequency\":\"20×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"16×\",\"amplitude\":8,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorFrequency\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"noteVolume\",\"envelope\":\"twang 3\"},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 1\"},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 1\",\"index\":1},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 2\"}]} },\r\n            { name: \"Scratch String\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.1768},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":0.25}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.1768},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":0.25}],\"effects\":[\"transition type\",\"vibrato\",\"note filter\",\"distortion\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"vibrato\":\"light\",\"vibratoDepth\":0.15,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1189.21,\"linearGain\":0.3536}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1189.21,\"linearGain\":0.3536}],\"distortion\":100,\"aliases\":false,\"panDelay\":10,\"echoSustain\":29,\"echoDelayBeats\":0.75,\"reverb\":29,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"algorithm\":\"1←2←(3 4)\",\"feedbackType\":\"1→4\",\"feedbackAmplitude\":3,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"~2×\",\"amplitude\":8,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"~2×\",\"amplitude\":3,\"waveform\":\"sawtooth\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"swell 1\",\"index\":3},{\"target\":\"operatorAmplitude\",\"envelope\":\"tremolo1\",\"index\":1}]} },\r\n            { name: \"Xylophone Saw\", generalMidi: false, settings: {\"type\":\"custom chip\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.1768}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.1768}],\"effects\":[\"chord type\",\"pitch shift\",\"vibrato\",\"bitcrusher\",\"chorus\",\"echo\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":true,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":24,\"vibrato\":\"light\",\"vibratoDepth\":0.15,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":0,\"bitcrusherOctave\":5.5,\"bitcrusherQuantization\":14,\"panDelay\":10,\"chorus\":29,\"echoSustain\":43,\"echoDelayBeats\":0.75,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"wave\":\"square\",\"unison\":\"none\",\"customChipWave\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":24,\"7\":24,\"8\":24,\"9\":24,\"10\":24,\"11\":-12,\"12\":-12,\"13\":-12,\"14\":-12,\"15\":-12,\"16\":24,\"17\":24,\"18\":24,\"19\":24,\"20\":24,\"21\":24,\"22\":12,\"23\":12,\"24\":12,\"25\":12,\"26\":12,\"27\":-24,\"28\":-24,\"29\":-24,\"30\":-24,\"31\":-24,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":24,\"39\":24,\"40\":24,\"41\":24,\"42\":24,\"43\":-11,\"44\":-11,\"45\":-11,\"46\":-11,\"47\":-11,\"48\":24,\"49\":24,\"50\":24,\"51\":24,\"52\":24,\"53\":24,\"54\":12,\"55\":12,\"56\":12,\"57\":12,\"58\":12,\"59\":12,\"60\":12,\"61\":12,\"62\":12,\"63\":12},\"customChipWaveIntegral\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0},\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"}]} },\r\n            { name: \"Bow Bass\", generalMidi: false, settings: {\"type\":\"custom chip\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.1768}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.1768}],\"effects\":[\"chord type\",\"pitch shift\",\"vibrato\",\"note filter\",\"bitcrusher\",\"chorus\",\"echo\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":true,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":19,\"vibrato\":\"custom\",\"vibratoDepth\":0.36,\"vibratoDelay\":0,\"vibratoSpeed\":30,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":2.8284}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":2.8284}],\"bitcrusherOctave\":6,\"bitcrusherQuantization\":29,\"panDelay\":10,\"chorus\":29,\"echoSustain\":43,\"echoDelayBeats\":0.75,\"fadeInSeconds\":0,\"fadeOutTicks\":6,\"wave\":\"square\",\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":12,\"unisonOffset\":-12,\"unisonExpression\":1,\"unisonSign\":1,\"customChipWave\":{\"0\":-24,\"1\":-24,\"2\":-24,\"3\":-24,\"4\":-24,\"5\":-24,\"6\":24,\"7\":24,\"8\":24,\"9\":24,\"10\":24,\"11\":24,\"12\":24,\"13\":24,\"14\":24,\"15\":24,\"16\":24,\"17\":24,\"18\":24,\"19\":24,\"20\":24,\"21\":24,\"22\":24,\"23\":24,\"24\":24,\"25\":24,\"26\":24,\"27\":24,\"28\":24,\"29\":24,\"30\":24,\"31\":24,\"32\":24,\"33\":24,\"34\":24,\"35\":24,\"36\":24,\"37\":24,\"38\":24,\"39\":24,\"40\":24,\"41\":24,\"42\":24,\"43\":24,\"44\":24,\"45\":24,\"46\":24,\"47\":24,\"48\":24,\"49\":24,\"50\":24,\"51\":24,\"52\":24,\"53\":24,\"54\":24,\"55\":24,\"56\":24,\"57\":24,\"58\":24,\"59\":24,\"60\":24,\"61\":24,\"62\":24,\"63\":24},\"customChipWaveIntegral\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0},\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 2\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 2\",\"index\":1}]} },\r\n            { name: \"Depths\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1681.79,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":4000,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":62.5,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1681.79,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":4000,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":62.5,\"linearGain\":2}],\"effects\":[\"transition type\",\"chord type\",\"pitch shift\",\"detune\",\"vibrato\",\"note filter\",\"bitcrusher\",\"chorus\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"chord\":\"strum\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":0,\"detuneCents\":-52,\"vibrato\":\"custom\",\"vibratoDepth\":0.56,\"vibratoDelay\":0,\"vibratoSpeed\":1,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.0884}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.0884}],\"bitcrusherOctave\":3,\"bitcrusherQuantization\":29,\"panDelay\":10,\"chorus\":100,\"reverb\":71,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←2←3←4\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"pulse width\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":8,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":3,\"waveform\":\"ramp\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"tremolo4\",\"index\":0}]} },\r\n            { name: \"Disco Vocal Lead\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"transition type\",\"pitch shift\",\"note filter\",\"distortion\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.0884},{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":4}],\"noteSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.0884},{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":4}],\"distortion\":100,\"aliases\":false,\"panDelay\":10,\"chorus\":100,\"echoSustain\":29,\"echoDelayBeats\":1,\"reverb\":19,\"fadeInSeconds\":0,\"fadeOutTicks\":6,\"harmonics\":[43,71,100,0,0,100,0,57,0,0,0,86,29,0,0,0,0,14,0,14,14,0,0,0,0,43,0,0],\"unison\":\"piano\",\"stringSustain\":93,\"envelopes\":[]} },\r\n            { name: \"Blessed Piano\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":4}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":4}],\"effects\":[\"chord type\",\"pitch shift\",\"vibrato\",\"note filter\",\"distortion\",\"bitcrusher\",\"chorus\"],\"chord\":\"strum\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":12,\"vibrato\":\"custom\",\"vibratoDepth\":0.48,\"vibratoDelay\":11,\"vibratoSpeed\":16,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.0884}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.0884}],\"distortion\":14,\"aliases\":false,\"bitcrusherOctave\":4,\"bitcrusherQuantization\":29,\"panDelay\":10,\"chorus\":86,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"wave\":\"triangle\",\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":6,\"unisonOffset\":6.5,\"unisonExpression\":0.8,\"unisonSign\":1,\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"noteVolume\",\"envelope\":\"punch\"}]} },\r\n            { name: \"Sawtooth Pluck\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.25}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.25}],\"effects\":[\"transition type\",\"chord type\",\"pitch shift\",\"vibrato\",\"note filter\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"chord\":\"arpeggio\",\"fastTwoNoteArp\":true,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":24,\"vibrato\":\"light\",\"vibratoDepth\":0.15,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":4000,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":8000,\"linearGain\":4}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":4000,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":8000,\"linearGain\":4}],\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"wave\":\"sawtooth\",\"unison\":\"none\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":1},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"swell 1\",\"index\":2}]} },\r\n            { name: \"Desolated Piano\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.5}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.5}],\"effects\":[\"pitch shift\",\"vibrato\",\"bitcrusher\",\"chorus\",\"reverb\"],\"pitchShiftSemitones\":24,\"vibrato\":\"custom\",\"vibratoDepth\":0.6,\"vibratoDelay\":1,\"vibratoSpeed\":18,\"vibratoType\":0,\"bitcrusherOctave\":3.5,\"bitcrusherQuantization\":0,\"panDelay\":10,\"chorus\":29,\"reverb\":26,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":7,\"operators\":[{\"frequency\":\"~1×\",\"amplitude\":15,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"3×\",\"amplitude\":3,\"waveform\":\"trapezoid\",\"pulseWidth\":5},{\"frequency\":\"8×\",\"amplitude\":4,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"vibratoDepth\",\"envelope\":\"twang 2\"},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 2\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"decay 1\",\"index\":1},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 1\",\"index\":2},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 1\",\"index\":2}]} },\r\n            { name: \"Distorted Guitar 1\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":0.5}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":0.5}],\"effects\":[\"note filter\",\"distortion\",\"chorus\",\"echo\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":297.3,\"linearGain\":2},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":0.1768}],\"noteSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":297.3,\"linearGain\":2},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":0.1768}],\"distortion\":71,\"aliases\":false,\"panDelay\":10,\"chorus\":14,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":39,\"fadeInSeconds\":0,\"fadeOutTicks\":6,\"harmonics\":[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,57],\"unison\":\"none\",\"stringSustain\":71,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":1}]} },\r\n            { name: \"Distorted Guitar 2\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.125},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":0.5}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.125},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":0.5}],\"effects\":[\"note filter\",\"bitcrusher\",\"chorus\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"peak\",\"cutoffHz\":210.22,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":1.4142},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":11.3137},{\"type\":\"low-pass\",\"cutoffHz\":2000,\"linearGain\":2.8284}],\"noteSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":210.22,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":1.4142},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":11.3137},{\"type\":\"low-pass\",\"cutoffHz\":2000,\"linearGain\":2.8284}],\"bitcrusherOctave\":6.5,\"bitcrusherQuantization\":71,\"panDelay\":10,\"chorus\":43,\"reverb\":52,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"algorithm\":\"(1 2 3)←4\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":2,\"operators\":[{\"frequency\":\"2×\",\"amplitude\":14,\"waveform\":\"trapezoid\",\"pulseWidth\":5},{\"frequency\":\"~2×\",\"amplitude\":13,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"4×\",\"amplitude\":10,\"waveform\":\"pulse width\",\"pulseWidth\":5},{\"frequency\":\"8×\",\"amplitude\":3,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[]} },\r\n            { name: \"Distorted Guitar 3\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":13454.34,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":500,\"linearGain\":4}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":13454.34,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":500,\"linearGain\":4}],\"effects\":[\"pitch shift\",\"note filter\",\"distortion\",\"chorus\",\"reverb\"],\"pitchShiftSemitones\":24,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":840.9,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":0.3536}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":840.9,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":0.3536}],\"distortion\":100,\"aliases\":false,\"panDelay\":10,\"chorus\":14,\"reverb\":6,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"harmonics\":[100,0,86,0,43,0,100,43,0,29,0,100,0,0,0,71,43,0,0,0,14,0,0,0,0,0,0,29],\"unison\":\"none\",\"stringSustain\":0,\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang 1\"}]} },\r\n            { name: \"High Pad\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":8}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":8}],\"effects\":[\"pitch shift\",\"vibrato\",\"note filter\",\"chorus\"],\"pitchShiftSemitones\":12,\"vibrato\":\"custom\",\"vibratoDepth\":0.28,\"vibratoDelay\":19,\"vibratoSpeed\":30,\"vibratoType\":0,\"noteFilterType\":true,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":19027.31,\"linearGain\":0.7071}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":19027.31,\"linearGain\":0.7071}],\"panDelay\":10,\"chorus\":86,\"fadeInSeconds\":0.0125,\"fadeOutTicks\":24,\"algorithm\":\"1←3 2←4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲\",\"feedbackAmplitude\":11,\"operators\":[{\"frequency\":\"4×\",\"amplitude\":13,\"waveform\":\"pulse width\",\"pulseWidth\":3},{\"frequency\":\"0.12×\",\"amplitude\":13,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"3×\",\"amplitude\":1,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"4×\",\"amplitude\":8,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"swell 1\"},{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"swell 1\"},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 1\"},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 1\"},{\"target\":\"feedbackAmplitude\",\"envelope\":\"twang 1\"},{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 1\",\"index\":1},{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"swell 1\"}]} },\r\n            { name: \"Magical Pulse\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":0.0884}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":0.0884}],\"effects\":[\"transition type\",\"pitch shift\",\"vibrato\",\"chorus\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":24,\"vibrato\":\"custom\",\"vibratoDepth\":0.56,\"vibratoDelay\":27,\"vibratoSpeed\":14,\"vibratoType\":0,\"panDelay\":10,\"chorus\":57,\"fadeInSeconds\":0,\"fadeOutTicks\":6,\"wave\":\"sawtooth\",\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":0.03,\"unisonOffset\":-0.02,\"unisonExpression\":0.85,\"unisonSign\":0.7,\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"swell 3\"}]} },\r\n            { name: \"Distorted Lead\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"transition type\",\"distortion\",\"bitcrusher\",\"chorus\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":2,\"bitcrusherQuantization\":0,\"panDelay\":10,\"chorus\":100,\"fadeInSeconds\":0,\"fadeOutTicks\":6,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":11,\"waveform\":\"trapezoid\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":7,\"waveform\":\"pulse width\",\"pulseWidth\":7},{\"frequency\":\"1×\",\"amplitude\":8,\"waveform\":\"ramp\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":5,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[]} },\r\n            { name: \"FM Punch Bass\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":2.8284}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":2.8284}],\"effects\":[\"note filter\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":2.8284}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":2.8284}],\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":4,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":7,\"waveform\":\"pulse width\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":4,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"ramp\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"feedbackAmplitude\",\"envelope\":\"punch\"},{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"}]} },\r\n            { name: \"Rough Glistening Piano\", generalMidi: false, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":210.22,\"linearGain\":1.4142},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.1768}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":210.22,\"linearGain\":1.4142},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.1768}],\"effects\":[\"chord type\",\"note filter\",\"chorus\",\"echo\",\"reverb\"],\"chord\":\"strum\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.5}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.5}],\"panDelay\":10,\"chorus\":29,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":23,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"harmonics\":[100,71,43,29,29,14,14,43,0,43,0,57,71,0,71,43,0,0,57,0,57,0,71,0,71,0,57,0],\"unison\":\"honky tonk\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 2\",\"index\":0}]} },\r\n            { name: \"Soft Glistening Piano\", generalMidi: false, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.3536}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":210.22,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.3536}],\"effects\":[\"chord type\",\"detune\",\"note filter\",\"chorus\",\"reverb\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"detuneCents\":-20,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.5}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.5}],\"panDelay\":10,\"chorus\":29,\"reverb\":97,\"fadeInSeconds\":0.135,\"fadeOutTicks\":48,\"harmonics\":[100,0,0,29,29,14,14,0,0,0,0,0,0,0,0,0,0,0,0,29,0,0,43,14,0,0,0,0],\"unison\":\"honky tonk\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 2\",\"index\":0}]} },\r\n            { name: \"Jingle Bells\", generalMidi: false, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":707.11,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":707.11,\"linearGain\":2}],\"effects\":[\"chord type\",\"pitch shift\",\"detune\",\"note filter\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":24,\"detuneCents\":8,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":2},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":2.8284}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":2},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":2.8284}],\"bitcrusherOctave\":5,\"bitcrusherQuantization\":0,\"panDelay\":10,\"chorus\":29,\"echoSustain\":57,\"echoDelayBeats\":1.667,\"reverb\":77,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"harmonics\":[100,29,57,71,0,0,0,0,0,0,0,14,43,14,0,0,0,0,0,0,14,0,14,14,0,0,0,0],\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"}]} },\r\n            { name: \"Odd Snare\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"pitch shift\",\"detune\",\"note filter\",\"distortion\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"pitchShiftSemitones\":24,\"detuneCents\":200,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":176.78,\"linearGain\":2.8284}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":176.78,\"linearGain\":2.8284}],\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":4.5,\"bitcrusherQuantization\":43,\"panDelay\":10,\"chorus\":29,\"echoSustain\":43,\"echoDelayBeats\":0.083,\"reverb\":3,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"algorithm\":\"(1 2)←3←4\",\"feedbackType\":\"2⟲ 3⟲ 4⟲\",\"feedbackAmplitude\":15,\"operators\":[{\"frequency\":\"16×\",\"amplitude\":15,\"waveform\":\"pulse width\",\"pulseWidth\":5},{\"frequency\":\"0.12×\",\"amplitude\":12,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"2×\",\"amplitude\":11,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"13×\",\"amplitude\":6,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 3\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"pitchShift\",\"envelope\":\"twang 3\"},{\"target\":\"operatorFrequency\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"swell 1\",\"index\":1},{\"target\":\"operatorFrequency\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"operatorFrequency\",\"envelope\":\"twang 1\",\"index\":0}]} },\r\n            { name: \"Otherworldly Kick\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"pitch shift\",\"vibrato\",\"distortion\",\"bitcrusher\",\"chorus\"],\"pitchShiftSemitones\":12,\"vibrato\":\"custom\",\"vibratoDepth\":0.92,\"vibratoDelay\":18,\"vibratoSpeed\":30,\"vibratoType\":0,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":6,\"bitcrusherQuantization\":57,\"panDelay\":10,\"chorus\":14,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"20×\",\"amplitude\":15,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorFrequency\",\"envelope\":\"twang 1\",\"index\":0},{\"target\":\"noteVolume\",\"envelope\":\"twang 3\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"operatorFrequency\",\"envelope\":\"twang 1\",\"index\":0}]} },\r\n            { name: \"Bitcrushed Piano\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":500,\"linearGain\":1.4142}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":500,\"linearGain\":1.4142}],\"effects\":[\"transition type\",\"chord type\",\"pitch shift\",\"vibrato\",\"note filter\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"chord\":\"strum\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"pitchShiftSemitones\":24,\"vibrato\":\"custom\",\"vibratoDepth\":0.72,\"vibratoDelay\":19,\"vibratoSpeed\":30,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.0884}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.0884}],\"bitcrusherOctave\":3,\"bitcrusherQuantization\":29,\"panDelay\":10,\"chorus\":29,\"echoSustain\":29,\"echoDelayBeats\":0.75,\"reverb\":23,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"wave\":\"triangle\",\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":0.000211,\"unisonOffset\":-0.3,\"unisonExpression\":0.8,\"unisonSign\":1,\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 1\",\"index\":0}]} },\r\n            { name: \"Boop Pad\", generalMidi: false, settings: {\"type\":\"custom chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.1768}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.1768}],\"effects\":[\"transition type\",\"note filter\",\"reverb\"],\"transition\":\"interrupt\",\"clicklessTransition\":false,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.0884}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.0884}],\"panDelay\":10,\"reverb\":48,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"wave\":\"square\",\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":0.000211,\"unisonOffset\":-0.3,\"unisonExpression\":0.8,\"unisonSign\":1,\"customChipWave\":{\"0\":-1,\"1\":1,\"2\":-1,\"3\":-4,\"4\":-6,\"5\":-8,\"6\":-11,\"7\":-12,\"8\":-15,\"9\":-16,\"10\":-18,\"11\":-19,\"12\":-21,\"13\":-22,\"14\":-24,\"15\":-24,\"16\":-24,\"17\":-24,\"18\":-23,\"19\":-22,\"20\":-21,\"21\":-19,\"22\":-17,\"23\":-16,\"24\":-14,\"25\":-13,\"26\":-10,\"27\":-8,\"28\":-6,\"29\":-4,\"30\":-2,\"31\":-1,\"32\":2,\"33\":3,\"34\":5,\"35\":7,\"36\":10,\"37\":12,\"38\":14,\"39\":16,\"40\":18,\"41\":19,\"42\":20,\"43\":21,\"44\":23,\"45\":23,\"46\":24,\"47\":24,\"48\":24,\"49\":24,\"50\":24,\"51\":24,\"52\":24,\"53\":24,\"54\":24,\"55\":24,\"56\":24,\"57\":24,\"58\":23,\"59\":22,\"60\":21,\"61\":19,\"62\":16,\"63\":14},\"customChipWaveIntegral\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0},\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"},{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 2\",\"index\":0}]} },\r\n            { name: \"Spectrum Pad\", generalMidi: false, settings: {\"type\":\"spectrum\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2196.8,\"linearGain\":1}],\"eqFilterType\":true,\"eqSimpleCut\":6,\"eqSimplePeak\":2,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters1\":[],\"effects\":[\"vibrato\",\"distortion\",\"bitcrusher\",\"reverb\"],\"vibrato\":\"delayed\",\"vibratoDepth\":0.3,\"vibratoDelay\":18.5,\"vibratoSpeed\":10,\"vibratoType\":0,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":4.5,\"bitcrusherQuantization\":43,\"panDelay\":10,\"reverb\":26,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"spectrum\":[100,0,0,0,0,0,0,71,0,0,0,57,0,0,57,0,43,0,43,0,0,29,0,29,0,14,14,14,0,0],\"envelopes\":[]} },\r\n            { name: \"Countdown Pulse\", generalMidi: false, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":2828.43,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":2828.43,\"linearGain\":2}],\"effects\":[\"transition type\",\"pitch shift\",\"detune\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":16,\"detuneCents\":196,\"panDelay\":10,\"chorus\":14,\"echoSustain\":29,\"echoDelayBeats\":0.5,\"reverb\":13,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"pulseWidth\":42,\"decimalOffset\":0,\"unison\":\"none\",\"envelopes\":[{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"},{\"target\":\"pitchShift\",\"envelope\":\"twang 1\"}]} },\r\n            { name: \"Ambient Pulse 1\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":250,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.3536},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.25}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":250,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.3536},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.25}],\"effects\":[\"note filter\",\"echo\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":2.8284}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":2.8284}],\"panDelay\":10,\"echoSustain\":29,\"echoDelayBeats\":1.333,\"reverb\":35,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"4⟲\",\"feedbackAmplitude\":9,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":13,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":13,\"waveform\":\"pulse width\",\"pulseWidth\":6},{\"frequency\":\"3×\",\"amplitude\":0,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"~2×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"flare 1\",\"index\":2}]} },\r\n            { name: \"Saturn Pad\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":1.4142}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":707.11,\"linearGain\":1.4142}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":0.5}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2828.43,\"linearGain\":0.5}],\"panDelay\":10,\"reverb\":26,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"harmonics\":[0,100,100,100,0,0,0,0,43,43,0,86,0,100,0,29,0,0,0,0,71,57,0,0,86,0,0,43],\"unison\":\"shimmer\",\"stringSustain\":93,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"tremolo3\"},{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"}]} },\r\n            { name: \"Build-Up Pad\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":250,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.3536}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":250,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.3536}],\"effects\":[\"note filter\",\"reverb\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.3536}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.3536}],\"panDelay\":10,\"reverb\":32,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"4⟲\",\"feedbackAmplitude\":9,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":13,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":13,\"waveform\":\"pulse width\",\"pulseWidth\":6},{\"frequency\":\"3×\",\"amplitude\":0,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"~2×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"flare 1\",\"index\":2}]} },\r\n            { name: \"Ambient Pulse 2\", generalMidi: false, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1189.21,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":1.4142},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":8}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1189.21,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":594.6,\"linearGain\":1.4142},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":8}],\"effects\":[\"chord type\",\"note filter\",\"reverb\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1681.79,\"linearGain\":1}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1681.79,\"linearGain\":1}],\"panDelay\":10,\"reverb\":32,\"fadeInSeconds\":0,\"fadeOutTicks\":72,\"harmonics\":[57,57,71,57,43,43,43,71,43,43,43,57,71,86,100,86,57,57,43,43,43,57,43,29,43,57,57,43],\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":0.0018,\"unisonOffset\":0,\"unisonExpression\":0.85,\"unisonSign\":1.6,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"tremolo5\"}]} },\r\n            { name: \"Hyper Synth Saw\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":19027.31,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":1.4142}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":19027.31,\"linearGain\":11.3137},{\"type\":\"peak\",\"cutoffHz\":1681.79,\"linearGain\":1.4142}],\"effects\":[\"chord type\",\"detune\",\"vibrato\",\"distortion\",\"chorus\",\"echo\",\"reverb\"],\"chord\":\"arpeggio\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"detuneCents\":16,\"vibrato\":\"delayed\",\"vibratoDepth\":0.3,\"vibratoDelay\":18.5,\"vibratoSpeed\":10,\"vibratoType\":0,\"distortion\":14,\"aliases\":false,\"panDelay\":10,\"chorus\":86,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":58,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"wave\":\"sawtooth\",\"unison\":\"custom\",\"unisonVoices\":2,\"unisonSpread\":0.0018,\"unisonOffset\":0,\"unisonExpression\":0.85,\"unisonSign\":1.6,\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[]} },\r\n            { name: \"Mechanical Blip\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":19027.31,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.3536}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":19027.31,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.25},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.3536}],\"effects\":[\"transition type\",\"detune\",\"note filter\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"detuneCents\":16,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":500,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":500,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":11.3137}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":19027.31,\"linearGain\":0.7071}],\"bitcrusherOctave\":4.5,\"bitcrusherQuantization\":43,\"panDelay\":10,\"chorus\":43,\"echoSustain\":57,\"echoDelayBeats\":1.5,\"reverb\":23,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"wave\":\"rounded\",\"unison\":\"none\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":64,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[]} },\r\n            { name: \"Another Piano\", generalMidi: false, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":9513.66,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":1.4142},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":9513.66,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":2378.41,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":3363.59,\"linearGain\":1.4142},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1}],\"effects\":[\"detune\",\"note filter\",\"reverb\"],\"detuneCents\":16,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.125}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.125}],\"panDelay\":10,\"reverb\":26,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"pulseWidth\":44,\"decimalOffset\":0,\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"punch\"},{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"},{\"target\":\"unison\",\"envelope\":\"twang 1\"},{\"target\":\"unison\",\"envelope\":\"twang 1\"},{\"target\":\"unison\",\"envelope\":\"twang 1\"},{\"target\":\"unison\",\"envelope\":\"twang 1\"},{\"target\":\"unison\",\"envelope\":\"twang 1\"}]} },\r\n        ]) },\r\n\r\n        { name: \"Midbox Dubstep Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n            //{ name: \"Name\", generalMidi: false, settings: {} },\r\n            { name: \"Dubstep Bwayyyy\", generalMidi: false, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":0.5}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":0.5}],\"effects\":[\"transition type\",\"vibrato\",\"note filter\",\"distortion\",\"chorus\",\"reverb\"],\"transition\":\"continue\",\"clicklessTransition\":false,\"vibrato\":\"custom\",\"vibratoDepth\":0.44,\"vibratoDelay\":23,\"vibratoSpeed\":26,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":2000,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":2000,\"linearGain\":11.3137}],\"distortion\":100,\"aliases\":false,\"panDelay\":10,\"chorus\":71,\"reverb\":32,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"pulseWidth\":30,\"decimalOffset\":0,\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"swell 3\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"swell 2\",\"index\":0}]} },\r\n            { name: \"Dubstep Bass Hum\", generalMidi: false, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":16000,\"linearGain\":2}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.1768},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":2},{\"type\":\"peak\",\"cutoffHz\":420.45,\"linearGain\":0.5},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":16000,\"linearGain\":2}],\"effects\":[\"transition type\",\"pitch shift\",\"vibrato\",\"note filter\",\"distortion\",\"bitcrusher\",\"chorus\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":0,\"vibrato\":\"custom\",\"vibratoDepth\":0.44,\"vibratoDelay\":23,\"vibratoSpeed\":26,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":2,\"bitcrusherQuantization\":14,\"panDelay\":10,\"chorus\":43,\"reverb\":32,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"pulseWidth\":10,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"flare 1\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"flare 3\",\"index\":0}]} },\r\n            { name: \"Dubstep Yaa\", generalMidi: false, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.3536}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.3536}],\"effects\":[\"transition type\",\"pitch shift\",\"vibrato\",\"note filter\",\"bitcrusher\",\"chorus\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":0,\"vibrato\":\"custom\",\"vibratoDepth\":0.44,\"vibratoDelay\":23,\"vibratoSpeed\":26,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"bitcrusherOctave\":2.5,\"bitcrusherQuantization\":29,\"panDelay\":10,\"chorus\":86,\"reverb\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"pulseWidth\":8,\"decimalOffset\":0,\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"swell 1\",\"index\":0}]} },\r\n            { name: \"Dubstep Yeoww\", generalMidi: false, settings: {\"type\":\"PWM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.3536}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":297.3,\"linearGain\":1},{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":0.3536},{\"type\":\"high-pass\",\"cutoffHz\":105.11,\"linearGain\":0.3536}],\"effects\":[\"transition type\",\"chord type\",\"vibrato\",\"note filter\",\"distortion\",\"bitcrusher\",\"chorus\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"chord\":\"simultaneous\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"vibrato\":\"custom\",\"vibratoDepth\":0.44,\"vibratoDelay\":23,\"vibratoSpeed\":26,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":11.3137}],\"distortion\":100,\"aliases\":false,\"bitcrusherOctave\":4,\"bitcrusherQuantization\":0,\"panDelay\":10,\"chorus\":86,\"reverb\":35,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"pulseWidth\":40,\"decimalOffset\":0,\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"twang 3\",\"index\":0},{\"target\":\"pulseWidth\",\"envelope\":\"tremolo6\"}]} },\r\n            { name: \"Dubstep Lead\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.0884}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":1189.21,\"linearGain\":0.0884}],\"effects\":[\"transition type\",\"pitch shift\",\"note filter\",\"distortion\",\"bitcrusher\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":5.6569},{\"type\":\"low-pass\",\"cutoffHz\":1000,\"linearGain\":2}],\"noteSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":594.6,\"linearGain\":5.6569},{\"type\":\"low-pass\",\"cutoffHz\":1000,\"linearGain\":2}],\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":6.5,\"bitcrusherQuantization\":86,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":15,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":0},{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":1}]} },\r\n            { name: \"Dubstep Dyaii\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.5},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":11313.71,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1000,\"linearGain\":0.0884}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.5},{\"type\":\"low-pass\",\"cutoffHz\":3363.59,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":11313.71,\"linearGain\":2.8284},{\"type\":\"peak\",\"cutoffHz\":1000,\"linearGain\":0.0884}],\"effects\":[\"transition type\",\"vibrato\",\"note filter\",\"distortion\",\"bitcrusher\",\"chorus\",\"reverb\"],\"transition\":\"slide\",\"clicklessTransition\":false,\"vibrato\":\"custom\",\"vibratoDepth\":0.44,\"vibratoDelay\":23,\"vibratoSpeed\":26,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":707.11,\"linearGain\":8},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":707.11,\"linearGain\":8},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":3,\"bitcrusherQuantization\":71,\"panDelay\":10,\"chorus\":71,\"reverb\":32,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"harmonics\":[100,0,71,86,0,0,100,86,86,71,57,57,29,14,57,71,0,0,0,0,0,0,0,0,0,0,0,0],\"unison\":\"none\",\"stringSustain\":100,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"note size\"},{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"}]} },\r\n            { name: \"Dubstep Alarm\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.5}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"peak\",\"cutoffHz\":2000,\"linearGain\":0.0884},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.5}],\"effects\":[\"transition type\",\"pitch shift\",\"note filter\",\"distortion\",\"bitcrusher\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"pitchShiftSemitones\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"noteSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":1414.21,\"linearGain\":11.3137}],\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":6.5,\"bitcrusherQuantization\":100,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"1←(2 3 4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":6,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":0}]} },\r\n        ]) },\r\n\r\n        { name: \"Midbox Noise Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n            //{ name: \"Name\", generalMidi: false, settings: {} },\r\n            { name: \"Hollow Retro Riser\", isNoise: true, generalMidi: false, settings: {\"type\":\"noise\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.3536}],\"eqFilterType\":true,\"eqSimpleCut\":8,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters1\":[],\"effects\":[\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"bitcrusherOctave\":4,\"bitcrusherQuantization\":43,\"panDelay\":10,\"chorus\":29,\"echoSustain\":57,\"echoDelayBeats\":0.5,\"reverb\":29,\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"wave\":\"hollow\",\"unison\":\"none\",\"envelopes\":[]} },\r\n            ]) },\r\n\r\n\t\t{ name: \"UltraBox Presets\", presets: <DictionaryArray<Preset>>toNameMap([\r\n            //custom presets ultrabox\r\n            { name: \"nes white\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\" ], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit white\", \"envelopes\": [] } }, \r\n\t\t\t{ name: \"nes ping\", midiProgram: 116, generalMidi: true, isNoise: true, settings: { \"type\": \"noise\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 8, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\" ], \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": 0, \"wave\": \"1-bit metallic\", \"envelopes\": [] } }, \r\n\t\t\t{ name: \"distorted pulse vocal\", generalMidi: false, settings: { \"type\": \"chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.0884 } ], \"effects\": [ \"panning\", \"transition type\", \"pitch shift\", \"vibrato\", \"note filter\", \"bitcrusher\", \"echo\", \"reverb\" ], \"transition\": \"normal\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [ { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 } ], \"noteSubFilters0\": [ { \"type\": \"high-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 }, { \"type\": \"low-pass\", \"cutoffHz\": 297.3, \"linearGain\": 8 }, { \"type\": \"peak\", \"cutoffHz\": 500, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 62.5, \"linearGain\": 1.4142 }, { \"type\": \"peak\", \"cutoffHz\": 176.78, \"linearGain\": 11.3137 }, { \"type\": \"high-pass\", \"cutoffHz\": 250, \"linearGain\": 11.3137 } ], \"bitcrusherOctave\": 6.5, \"bitcrusherQuantization\": 71, \"pan\": 0, \"panDelay\": 10, \"echoSustain\": 14, \"echoDelayBeats\": 0.167, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"wave\": \"1/8 pulse\", \"unison\": \"none\", \"envelopes\": [] } },\r\n            { name: \"dubsteb bwah\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 } ], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"chord type\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 10, \"operators\": [ { \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteVolume\", \"envelope\": \"note size\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"swell 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"punch\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 } ] } },\r\n            { name: \"FM cool bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1 }, { \"type\": \"high-pass\", \"cutoffHz\": 88.39, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 1000, \"linearGain\": 0.7071 } ], \"effects\": [ \"panning\", \"transition type\", \"note filter\", \"reverb\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"noteFilterType\": true, \"noteSimpleCut\": 9, \"noteSimplePeak\": 2, \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 } ], \"noteSubFilters1\": [ { \"type\": \"low-pass\", \"cutoffHz\": 7231.23, \"linearGain\": 1 } ], \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1←(2 3←4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"2×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 7, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"13×\", \"amplitude\": 11, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 3\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"twang 2\", \"index\": 3 } ] } },\r\n            { name: \"FM funky bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 9513.66, \"linearGain\": 0.1768 } ], \"eqFilterType\": true, \"eqSimpleCut\": 5, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"reverb\" ], \"transition\": \"normal\", \"clicklessTransition\": false, \"pan\": 0, \"panDelay\": 10, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3 4)\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 0, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"noteVolume\", \"envelope\": \"punch\" }, { \"target\": \"noteVolume\", \"envelope\": \"note size\" } ] } },\r\n            { name: \"mrow\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [], \"effects\": [ \"panning\", \"chord type\", \"reverb\" ], \"chord\": \"custom interval\", \"fastTwoNoteArp\": false, \"arpeggioSpeed\": 12, \"pan\": 0, \"panDelay\": 10, \"reverb\": 35, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"algorithm\": \"1←3 2←4\", \"feedbackType\": \"1⟲ 2⟲ 3⟲ 4⟲\", \"feedbackAmplitude\": 5, \"operators\": [ { \"frequency\": \"4×\", \"amplitude\": 15, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 13, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 8, \"waveform\": \"sine\", \"pulseWidth\": 5 }, { \"frequency\": \"~2×\", \"amplitude\": 9, \"waveform\": \"sine\", \"pulseWidth\": 5 } ], \"envelopes\": [ { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 1\", \"index\": 0 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 1 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"flare 3\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"flare 1\" } ] } },\r\n            { name: \"talking bass\", generalMidi: false, settings: { \"type\": \"FM\", \"volume\": 0, \"eqFilter\": [], \"effects\": [ \"chord type\" ], \"chord\": \"custom interval\", \"fadeInSeconds\": 0, \"fadeOutTicks\": -3, \"algorithm\": \"1←(2 3)←4\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 15, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 15 }, { \"frequency\": \"2×\", \"amplitude\": 8 }, { \"frequency\": \"2×\", \"amplitude\": 5 }, { \"frequency\": \"1×\", \"amplitude\": 12 } ], \"envelopes\": [ { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 2 }, { \"target\": \"operatorAmplitude\", \"envelope\": \"note size\", \"index\": 3 }, { \"target\": \"feedbackAmplitude\", \"envelope\": \"note size\" } ] } },\r\n            { name: \"synth marimba\", generalMidi: false, settings: { \"type\": \"Picked String\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"high-pass\", \"cutoffHz\": 176.78, \"linearGain\": 1 }, { \"type\": \"peak\", \"cutoffHz\": 4000, \"linearGain\": 0.5 } ], \"effects\": [ \"note filter\", \"echo\" ], \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6727.17, \"linearGain\": 1.4142 } ], \"echoSustain\": 71, \"echoDelayBeats\": 0.5, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"harmonics\": [ 86, 100, 29, 29, 0, 0, 0, 100, 0, 0, 0, 86, 29, 0, 14, 100, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 86 ], \"unison\": \"fifth\", \"stringSustain\": 7, \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"punch\" } ] } }, \r\n\t\t    { name: \"italian accordian\", generalMidi: false, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 6000, \"linearGain\": 0.5 } ], \"eqFilterType\": true, \"eqSimpleCut\": 8, \"eqSimplePeak\": 1, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"chorus\", \"reverb\" ], \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 45, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"wave\": \"square\", \"unison\": \"honky tonk\", \"customChipWave\": { \"0\": -24, \"1\": -24, \"2\": -24, \"3\": -24, \"4\": -24, \"5\": -24, \"6\": -24, \"7\": -24, \"8\": -24, \"9\": -24, \"10\": -24, \"11\": -24, \"12\": -24, \"13\": -24, \"14\": -24, \"15\": -24, \"16\": 24, \"17\": 24, \"18\": 24, \"19\": 24, \"20\": 24, \"21\": 24, \"22\": 24, \"23\": 24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": -24, \"32\": -24, \"33\": -24, \"34\": -24, \"35\": -24, \"36\": -24, \"37\": -24, \"38\": -24, \"39\": -24, \"40\": 24, \"41\": 24, \"42\": 24, \"43\": 24, \"44\": 24, \"45\": 24, \"46\": 24, \"47\": 24, \"48\": -24, \"49\": -24, \"50\": -24, \"51\": -24, \"52\": -24, \"53\": -24, \"54\": -24, \"55\": -24, \"56\": -24, \"57\": -24, \"58\": -24, \"59\": -24, \"60\": -24, \"61\": -24, \"62\": -24, \"63\": -24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\r\n            { name: \"chip supersaw\", generalMidi: false, settings: { \"type\": \"custom chip\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 0.7071 } ], \"eqFilterType\": true, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters1\": [], \"effects\": [ \"panning\", \"transition type\", \"vibrato\", \"chorus\", \"reverb\" ], \"transition\": \"interrupt\", \"clicklessTransition\": false, \"vibrato\": \"delayed\", \"vibratoDepth\": 0.3, \"vibratoDelay\": 18.5, \"vibratoSpeed\": 10, \"vibratoType\": 0, \"pan\": 0, \"panDelay\": 10, \"chorus\": 29, \"reverb\": 29, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"wave\": \"square\", \"unison\": \"dissonant\", \"customChipWave\": { \"0\": 22, \"1\": 22, \"2\": 16, \"3\": 6, \"4\": 0, \"5\": -3, \"6\": -8, \"7\": -10, \"8\": -13, \"9\": -16, \"10\": -19, \"11\": -19, \"12\": -20, \"13\": -22, \"14\": -22, \"15\": -24, \"16\": -24, \"17\": -24, \"18\": -24, \"19\": -24, \"20\": -24, \"21\": -24, \"22\": -24, \"23\": -24, \"24\": -24, \"25\": -24, \"26\": -24, \"27\": -24, \"28\": -24, \"29\": -24, \"30\": -24, \"31\": 24, \"32\": 24, \"33\": 16, \"34\": 9, \"35\": 6, \"36\": 4, \"37\": 2, \"38\": 0, \"39\": -1, \"40\": -3, \"41\": -4, \"42\": -4, \"43\": -6, \"44\": -6, \"45\": -6, \"46\": -6, \"47\": -5, \"48\": -5, \"49\": -4, \"50\": -2, \"51\": -2, \"52\": 1, \"53\": 4, \"54\": 6, \"55\": 8, \"56\": 10, \"57\": 12, \"58\": 14, \"59\": 16, \"60\": 18, \"61\": 19, \"62\": 22, \"63\": 24 }, \"customChipWaveIntegral\": { \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0, \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0, \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0, \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"37\": 0, \"38\": 0, \"39\": 0, \"40\": 0, \"41\": 0, \"42\": 0, \"43\": 0, \"44\": 0, \"45\": 0, \"46\": 0, \"47\": 0, \"48\": 0, \"49\": 0, \"50\": 0, \"51\": 0, \"52\": 0, \"53\": 0, \"54\": 0, \"55\": 0, \"56\": 0, \"57\": 0, \"58\": 0, \"59\": 0, \"60\": 0, \"61\": 0, \"62\": 0, \"63\": 0, \"64\": 0 }, \"envelopes\": [] } },\r\n            { name: \"fm supersaw\", generalMidi: false, settings: { \"type\": \"FM6op\", \"volume\": 0, \"eqFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 } ], \"eqFilterType\": false, \"eqSimpleCut\": 10, \"eqSimplePeak\": 0, \"eqSubFilters0\": [ { \"type\": \"low-pass\", \"cutoffHz\": 19027.31, \"linearGain\": 1.4142 }, { \"type\": \"high-pass\", \"cutoffHz\": 148.65, \"linearGain\": 0.7071 } ], \"effects\": [ \"panning\", \"transition type\", \"pitch shift\", \"note filter\", \"chorus\", \"reverb\" ], \"transition\": \"continue\", \"clicklessTransition\": false, \"pitchShiftSemitones\": 0, \"noteFilterType\": false, \"noteSimpleCut\": 10, \"noteSimplePeak\": 0, \"noteFilter\": [], \"noteSubFilters0\": [], \"noteSubFilters1\": [ { \"type\": \"low-pass\", \"cutoffHz\": 4756.83, \"linearGain\": 1 } ], \"pan\": 0, \"panDelay\": 10, \"chorus\": 71, \"reverb\": 0, \"fadeInSeconds\": 0, \"fadeOutTicks\": -1, \"algorithm\": \"1 2 3 4 5 6\", \"feedbackType\": \"1⟲\", \"feedbackAmplitude\": 0, \"operators\": [ { \"frequency\": \"1×\", \"amplitude\": 13, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"~1×\", \"amplitude\": 15, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"2×\", \"amplitude\": 10, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"3×\", \"amplitude\": 7, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"4×\", \"amplitude\": 9, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 }, { \"frequency\": \"8×\", \"amplitude\": 6, \"waveform\": \"sawtooth\", \"pulseWidth\": 5 } ], \"envelopes\": [] } },\r\n\t\t //THANKS ANSWEARING MACHINE\r\n\t\t    { name: \"obama why\", generalMidi: false, settings:{ \"type\": \"harmonics\", \"volume\": 0, \"eqFilter\": [], \"effects\": [ \"note filter\", \"panning\", \"reverb\" ], \"noteFilter\": [ { \"type\": \"low-pass\", \"cutoffHz\": 840.9, \"linearGain\": 11.3137 } ], \"pan\": 0, \"reverb\": 0, \"fadeInSeconds\": 0.0263, \"fadeOutTicks\": -3, \"harmonics\": [ 100, 86, 29, 29, 14, 14, 0, 14, 14, 43, 71, 100, 100, 86, 71, 71, 57, 57, 43, 43, 43, 43, 43, 0, 0, 0, 0, 0 ], \"unison\": \"octave\", \"envelopes\": [ { \"target\": \"noteFilterAllFreqs\", \"envelope\": \"note size\" } ] } },\r\n\t\t //thanks to nobo ig? (this is from a beepcord inside joke)\r\n\t\t]) },\r\n\r\n        {   name: \"AbyssBox 0.8 to 1.2 Presets\", presets: <DictionaryArray<Preset>>toNameMap([ // weeb shit - me\r\n            { name: \"Demonic Bell\", generalMidi: false, settings:  {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.0884}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":353.55,\"linearGain\":0.7071},{\"type\":\"peak\",\"cutoffHz\":1414.21,\"linearGain\":0.0884}],\"effects\":[\"detune\",\"distortion\",\"bitcrusher\",\"echo\",\"reverb\"],\"detuneCents\":-52,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":4.5,\"bitcrusherQuantization\":29,\"panDelay\":10,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":68,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"harmonics\":[43,71,71,100,86,100,43,86,71,57,86,29,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,14],\"unison\":\"shimmer\",\"stringSustain\":64,\"envelopes\":[]} },\r\n            { name: \"Spacey Triangle\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":11.3137},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":4}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":11.3137},{\"type\":\"high-pass\",\"cutoffHz\":176.78,\"linearGain\":4}],\"effects\":[\"transition type\",\"vibrato\",\"distortion\",\"bitcrusher\",\"chorus\",\"echo\",\"reverb\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"vibrato\":\"shaky\",\"vibratoDepth\":0.1,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":1,\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":5.5,\"bitcrusherQuantization\":14,\"panDelay\":10,\"chorus\":86,\"echoSustain\":43,\"echoDelayBeats\":1,\"reverb\":26,\"fadeInSeconds\":0,\"fadeOutTicks\":96,\"wave\":\"triangle\",\"unison\":\"dirty\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":32,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[]} },\r\n            { name: \"Harmonic Piano\", generalMidi: false, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.125},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.3536},{\"type\":\"peak\",\"cutoffHz\":353.55,\"linearGain\":0.125},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1}],\"effects\":[\"transition type\"],\"transition\":\"interrupt\",\"clicklessTransition\":false,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"harmonics\":[100,57,57,57,14,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],\"unison\":\"none\",\"envelopes\":[]} },\r\n            { name: \"Organic Synth\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.1768}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":0.1768}],\"effects\":[\"chord type\",\"reverb\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":false,\"arpeggioSpeed\":12,\"panDelay\":10,\"reverb\":71,\"fadeInSeconds\":0.0263,\"fadeOutTicks\":96,\"algorithm\":\"(1 2 3)←4\",\"feedbackType\":\"1⟲ 2⟲ 3⟲\",\"feedbackAmplitude\":2,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"5×\",\"amplitude\":3,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"8×\",\"amplitude\":7,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"operatorAmplitude\",\"envelope\":\"twang 1\",\"index\":3},{\"target\":\"noteVolume\",\"envelope\":\"twang 2\"}]} },\r\n            { name: \"Nokia Ringtone\", generalMidi: false, settings: {\"type\":\"FM\",\"eqFilter\":[],\"effects\":[\"transition type\",\"chord type\"],\"transition\":\"interrupt\",\"chord\":\"custom interval\",\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"algorithm\":\"(1 2)←(3 4)\",\"feedbackType\":\"1→2\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":2},{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":15},{\"frequency\":\"1×\",\"amplitude\":15}],\"envelopes\":[]} },\r\n        ])},\r\n\r\n        {   name: \"AbyssBox 1.3+ Presets\", presets: <DictionaryArray<Preset>>toNameMap([ // weeb shit - me\r\n            { name: \"Supersaw Pluck\", generalMidi: false, settings: {\"type\":\"supersaw\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":9,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"eqSubFilters1\":[],\"effects\":[\"chord type\",\"note filter\",\"chorus\",\"echo\",\"reverb\"],\"chord\":\"simultaneous\",\"fastTwoNoteArp\":true,\"arpeggioSpeed\":12,\"noteFilterType\":true,\"noteSimpleCut\":7,\"noteSimplePeak\":1,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3828.43,\"linearGain\":0.5}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":3828.43,\"linearGain\":0.5}],\"panDelay\":10,\"chorus\":14,\"echoSustain\":29,\"echoDelayBeats\":1,\"reverb\":0,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"pulseWidth\":40,\"decimalOffset\":0,\"dynamism\":67,\"spread\":50,\"shape\":0,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 1\"}]} },\r\n            { name: \"Credits Bass\", generalMidi: false, settings: {\"type\":\"chip\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":8,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"effects\":[\"transition type\",\"chord type\",\"note filter\"],\"transition\":\"interrupt\",\"clicklessTransition\":false,\"chord\":\"arpeggio\",\"fastTwoNoteArp\":true,\"arpeggioSpeed\":9,\"noteFilterType\":true,\"noteSimpleCut\":8,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.3536}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":16000,\"linearGain\":0.3536}],\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"wave\":\"alto sax\",\"unison\":\"none\",\"isUsingAdvancedLoopControls\":false,\"chipWaveLoopStart\":0,\"chipWaveLoopEnd\":2,\"chipWaveLoopMode\":0,\"chipWavePlayBackwards\":false,\"chipWaveStartOffset\":0,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"decay 1\"}]} },\r\n            { name: \"FM Violin\", generalMidi: false, settings: {\"type\":\"FM6op\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"transition type\",\"vibrato\",\"distortion\",\"chorus\",\"echo\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"vibrato\":\"light\",\"vibratoDepth\":0.15,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":0,\"distortion\":43,\"aliases\":false,\"panDelay\":10,\"chorus\":14,\"echoSustain\":14,\"echoDelayBeats\":1,\"fadeInSeconds\":0,\"fadeOutTicks\":6,\"algorithm\":\"Custom\",\"feedbackType\":\"Custom\",\"feedbackAmplitude\":4,\"customAlgorithm\":{\"mods\":[[6,2,3,4,5],[],[],[],[],[]],\"carrierCount\":2},\"customFeedback\":{\"mods\":[[1],[],[],[],[],[]]},\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"2×\",\"amplitude\":12,\"waveform\":\"rounded\",\"pulseWidth\":5},{\"frequency\":\"6×\",\"amplitude\":6,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"0.5×\",\"amplitude\":11,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"16×\",\"amplitude\":5,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"4×\",\"amplitude\":7,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang 3\"},{\"target\":\"noteVolume\",\"envelope\":\"swell 2\"}]} },\r\n            { name: \"Shamisen 2\", generalMidi: false, settings: {\"type\":\"FM6op\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"chord type\",\"note filter\",\"reverb\"],\"chord\":\"strum\",\"fastTwoNoteArp\":true,\"arpeggioSpeed\":12,\"noteFilterType\":true,\"noteSimpleCut\":8,\"noteSimplePeak\":1,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":6000,\"linearGain\":0.5}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":6000,\"linearGain\":0.5}],\"panDelay\":10,\"reverb\":0,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"algorithm\":\"Custom\",\"feedbackType\":\"Custom\",\"feedbackAmplitude\":4,\"customAlgorithm\":{\"mods\":[[6,2,3,4,5],[],[],[],[],[]],\"carrierCount\":2},\"customFeedback\":{\"mods\":[[1],[],[],[],[],[]]},\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"2×\",\"amplitude\":12,\"waveform\":\"rounded\",\"pulseWidth\":5},{\"frequency\":\"6×\",\"amplitude\":6,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"0.5×\",\"amplitude\":11,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"16×\",\"amplitude\":5,\"waveform\":\"triangle\",\"pulseWidth\":5},{\"frequency\":\"4×\",\"amplitude\":7,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 1\"}]} },\r\n            { name: \"Picked Dist Guitar\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"vibrato\",\"note filter\",\"distortion\",\"bitcrusher\"],\"vibrato\":\"custom\",\"vibratoDepth\":0.32,\"vibratoDelay\":19,\"vibratoSpeed\":10,\"vibratoType\":0,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":13454.34,\"linearGain\":0.7071},{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.5}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":13454.34,\"linearGain\":0.7071},{\"type\":\"low-pass\",\"cutoffHz\":9513.66,\"linearGain\":0.5}],\"distortion\":43,\"aliases\":false,\"bitcrusherOctave\":5.5,\"bitcrusherQuantization\":14,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"harmonics\":[86,86,86,86,71,57,71,71,14,14,14,29,57,43,43,57,43,29,29,29,29,29,29,43,43,43,0,71],\"unison\":\"none\",\"stringSustain\":71,\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 3\"},{\"target\":\"noteVolume\",\"envelope\":\"punch\"}]} },\r\n            { name: \"Heavy Knock\", generalMidi: false, isNoise: true, settings: {\"type\":\"noise\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"vibrato\",\"note filter\",\"reverb\"],\"vibrato\":\"delayed\",\"vibratoDepth\":0.3,\"vibratoDelay\":18.5,\"vibratoSpeed\":10,\"vibratoType\":0,\"noteFilterType\":true,\"noteSimpleCut\":7,\"noteSimplePeak\":1,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":3828.43,\"linearGain\":0.5}],\"noteSubFilters1\":[{\"type\":\"low-pass\",\"cutoffHz\":3828.43,\"linearGain\":0.5}],\"panDelay\":10,\"reverb\":0,\"fadeInSeconds\":0,\"fadeOutTicks\":48,\"wave\":\"white\",\"unison\":\"none\",\"envelopes\":[{\"target\":\"noteFilterAllFreqs\",\"envelope\":\"twang 2\"}]} },\r\n            { name: \"Future Keys\", generalMidi: false, settings: {\"type\":\"harmonics\",\"eqFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.25}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":1,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":125,\"linearGain\":0.25}],\"effects\":[\"chorus\",\"echo\",\"reverb\",\"phaser\"],\"phaserMix\":100,\"phaserFreq\":94,\"phaserFeedback\":42,\"phaserStages\":97,\"panDelay\":10,\"chorus\":43,\"echoSustain\":43,\"echoDelayBeats\":0.75,\"reverb\":19,\"fadeInSeconds\":0,\"fadeOutTicks\":-1,\"harmonics\":[100,100,100,86,86,86,71,71,57,29,14,14,14,0,29,57,29,0,29,43,57,57,29,14,14,29,43,29],\"unison\":\"none\",\"envelopes\":[{\"target\":\"phaserFreq\",\"envelope\":\"tremolo6\"},{\"target\":\"noteVolume\",\"envelope\":\"twang -1\"}]} },\r\n            { name: \"Light Bell\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":1},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"effects\":[\"reverb\",\"ring modulation\"],\"ringMod\":71,\"ringModHz\":90,\"rmWaveformIndex\":0,\"rmPulseWidth\":0,\"panDelay\":10,\"reverb\":39,\"fadeInSeconds\":0,\"fadeOutTicks\":24,\"harmonics\":[43,71,0,100,0,100,0,86,0,0,86,0,14,71,14,14,57,14,14,43,14,14,43,14,14,43,14,43],\"unison\":\"shimmer\",\"stringSustain\":71,\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang 3\"}]} },\r\n            { name: \"Distortion Bass\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.25},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":1000,\"linearGain\":0.5}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.25},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":8000,\"linearGain\":0.5},{\"type\":\"peak\",\"cutoffHz\":1000,\"linearGain\":0.5}],\"effects\":[\"note filter\",\"distortion\",\"bitcrusher\",\"phaser\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":0.5}],\"noteSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":1.4142},{\"type\":\"low-pass\",\"cutoffHz\":4000,\"linearGain\":0.5}],\"distortion\":43,\"aliases\":false,\"bitcrusherOctave\":6,\"bitcrusherQuantization\":0,\"phaserMix\":65,\"phaserFreq\":19,\"phaserFeedback\":61,\"phaserStages\":52,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":6,\"harmonics\":[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,71],\"unison\":\"none\",\"stringSustain\":64,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":1},{\"target\":\"phaserFeedback\",\"envelope\":\"twang 3\"}]} },\r\n            { name: \"Phased Overdrive Guitar\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":250,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":1.4142},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":0.3536}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":250,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":1.4142},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":0.3536}],\"effects\":[\"note filter\",\"distortion\",\"bitcrusher\",\"phaser\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":297.3,\"linearGain\":2},{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.7071}],\"noteSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":297.3,\"linearGain\":2},{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.7071}],\"distortion\":71,\"aliases\":false,\"bitcrusherOctave\":6,\"bitcrusherQuantization\":0,\"phaserMix\":100,\"phaserFreq\":19,\"phaserFeedback\":61,\"phaserStages\":52,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"harmonics\":[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,71],\"unison\":\"none\",\"stringSustain\":64,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":1},{\"target\":\"phaserFeedback\",\"envelope\":\"twang 2\"}]} },\r\n            { name: \"Phased Picked Guitar\", generalMidi: false, settings: {\"type\":\"Picked String\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":250,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":1.4142},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":0.3536}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":4756.83,\"linearGain\":0.7071},{\"type\":\"high-pass\",\"cutoffHz\":250,\"linearGain\":1},{\"type\":\"low-pass\",\"cutoffHz\":6727.17,\"linearGain\":1.4142},{\"type\":\"peak\",\"cutoffHz\":840.9,\"linearGain\":0.3536}],\"effects\":[\"note filter\",\"distortion\",\"bitcrusher\",\"chorus\",\"echo\",\"phaser\"],\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"high-pass\",\"cutoffHz\":297.3,\"linearGain\":2},{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.7071}],\"noteSubFilters0\":[{\"type\":\"high-pass\",\"cutoffHz\":297.3,\"linearGain\":2},{\"type\":\"low-pass\",\"cutoffHz\":2378.41,\"linearGain\":0.7071}],\"distortion\":29,\"aliases\":false,\"bitcrusherOctave\":6,\"bitcrusherQuantization\":0,\"phaserMix\":77,\"phaserFreq\":19,\"phaserFeedback\":61,\"phaserStages\":52,\"panDelay\":10,\"chorus\":43,\"echoSustain\":43,\"echoDelayBeats\":1,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"harmonics\":[86,100,100,86,86,86,86,71,71,71,71,71,71,71,71,71,71,57,57,57,57,57,57,57,57,57,57,71],\"unison\":\"none\",\"stringSustain\":64,\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"note size\",\"index\":1},{\"target\":\"phaserMix\",\"envelope\":\"twang -1\"}]} },\r\n            ])},\r\n\r\n        {   name: \"AbyssBox's Spooky Presets\", presets: <DictionaryArray<Preset>>toNameMap([ // weeb shit - me\r\n            { name: \"Ghost House\", generalMidi: false, settings:  {\"type\":\"FM\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"transition type\",\"vibrato\",\"bitcrusher\"],\"transition\":\"normal\",\"clicklessTransition\":false,\"vibrato\":\"heavy\",\"vibratoDepth\":0.45,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":0,\"bitcrusherOctave\":3.5,\"bitcrusherQuantization\":43,\"panDelay\":10,\"fadeInSeconds\":0,\"fadeOutTicks\":-3,\"algorithm\":\"1←(2 3←4)\",\"feedbackType\":\"1⟲\",\"feedbackAmplitude\":0,\"operators\":[{\"frequency\":\"1×\",\"amplitude\":15,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":4,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":6,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":7,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5},{\"frequency\":\"1×\",\"amplitude\":0,\"waveform\":\"sine\",\"pulseWidth\":5}],\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"punch\"}] } },\r\n            { name: \"Chipwave Music Box\", generalMidi: false, settings: {\"type\":\"custom chip\",\"eqFilter\":[],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[],\"effects\":[\"vibrato\",\"note filter\",\"bitcrusher\",\"chorus\",\"echo\"],\"vibrato\":\"shaky\",\"vibratoDepth\":0.1,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":1,\"noteFilterType\":false,\"noteSimpleCut\":10,\"noteSimplePeak\":0,\"noteFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":2.8284}],\"noteSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":5656.85,\"linearGain\":4},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":2.8284}],\"bitcrusherOctave\":4.5,\"bitcrusherQuantization\":14,\"panDelay\":10,\"chorus\":14,\"echoSustain\":29,\"echoDelayBeats\":1,\"fadeInSeconds\":0,\"fadeOutTicks\":12,\"wave\":\"square\",\"unison\":\"none\",\"customChipWave\":{\"0\":24,\"1\":24,\"2\":24,\"3\":23,\"4\":23,\"5\":22,\"6\":21,\"7\":19,\"8\":17,\"9\":14,\"10\":11,\"11\":7,\"12\":3,\"13\":-1,\"14\":-5,\"15\":-8,\"16\":-10,\"17\":-12,\"18\":-14,\"19\":-16,\"20\":-17,\"21\":-18,\"22\":-19,\"23\":-20,\"24\":-21,\"25\":-22,\"26\":-23,\"27\":-23,\"28\":-24,\"29\":-24,\"30\":-24,\"31\":-24,\"32\":-24,\"33\":-24,\"34\":-24,\"35\":-24,\"36\":-23,\"37\":-23,\"38\":-22,\"39\":-21,\"40\":-20,\"41\":-19,\"42\":-18,\"43\":-17,\"44\":-16,\"45\":-14,\"46\":-12,\"47\":-10,\"48\":-8,\"49\":-5,\"50\":-1,\"51\":3,\"52\":7,\"53\":11,\"54\":14,\"55\":17,\"56\":19,\"57\":21,\"58\":22,\"59\":23,\"60\":23,\"61\":24,\"62\":24,\"63\":24},\"customChipWaveIntegral\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0},\"envelopes\":[{\"target\":\"noteFilterFreq\",\"envelope\":\"decay 3\",\"index\":1},{\"target\":\"noteVolume\",\"envelope\":\"punch\"},{\"target\":\"noteVolume\",\"envelope\":\"decay 3\"}]}},\r\n            { name: \"Chipwave Spooky Pad\", generalMidi: false, settings: {\"type\":\"custom chip\",\"eqFilter\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":2.8284},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":2.8284}],\"eqFilterType\":false,\"eqSimpleCut\":10,\"eqSimplePeak\":0,\"envelopeSpeed\":12,\"discreteEnvelope\":false,\"eqSubFilters0\":[{\"type\":\"low-pass\",\"cutoffHz\":11313.71,\"linearGain\":2.8284},{\"type\":\"high-pass\",\"cutoffHz\":88.39,\"linearGain\":2.8284}],\"effects\":[\"vibrato\",\"bitcrusher\",\"chorus\",\"echo\",\"phaser\"],\"vibrato\":\"shaky\",\"vibratoDepth\":0.1,\"vibratoDelay\":0,\"vibratoSpeed\":10,\"vibratoType\":1,\"bitcrusherOctave\":5.5,\"bitcrusherQuantization\":14,\"phaserMix\":100,\"phaserFreq\":16,\"phaserFeedback\":23,\"phaserStages\":32,\"panDelay\":10,\"chorus\":71,\"echoSustain\":43,\"echoDelayBeats\":1,\"fadeInSeconds\":0.0125,\"fadeOutTicks\":24,\"wave\":\"square\",\"unison\":\"none\",\"customChipWave\":{\"0\":24,\"1\":24,\"2\":24,\"3\":23,\"4\":23,\"5\":22,\"6\":21,\"7\":19,\"8\":17,\"9\":14,\"10\":11,\"11\":7,\"12\":3,\"13\":-1,\"14\":-5,\"15\":-8,\"16\":-10,\"17\":-12,\"18\":-14,\"19\":-16,\"20\":-17,\"21\":-18,\"22\":-19,\"23\":-20,\"24\":-21,\"25\":-22,\"26\":-23,\"27\":-23,\"28\":-24,\"29\":-24,\"30\":-24,\"31\":-24,\"32\":-24,\"33\":-24,\"34\":-24,\"35\":-24,\"36\":-23,\"37\":-23,\"38\":-22,\"39\":-21,\"40\":-20,\"41\":-19,\"42\":-18,\"43\":-17,\"44\":-16,\"45\":-14,\"46\":-12,\"47\":-10,\"48\":-8,\"49\":-5,\"50\":-1,\"51\":3,\"52\":7,\"53\":11,\"54\":14,\"55\":17,\"56\":19,\"57\":21,\"58\":22,\"59\":23,\"60\":23,\"61\":24,\"62\":24,\"63\":24},\"customChipWaveIntegral\":{\"0\":0,\"1\":0,\"2\":0,\"3\":0,\"4\":0,\"5\":0,\"6\":0,\"7\":0,\"8\":0,\"9\":0,\"10\":0,\"11\":0,\"12\":0,\"13\":0,\"14\":0,\"15\":0,\"16\":0,\"17\":0,\"18\":0,\"19\":0,\"20\":0,\"21\":0,\"22\":0,\"23\":0,\"24\":0,\"25\":0,\"26\":0,\"27\":0,\"28\":0,\"29\":0,\"30\":0,\"31\":0,\"32\":0,\"33\":0,\"34\":0,\"35\":0,\"36\":0,\"37\":0,\"38\":0,\"39\":0,\"40\":0,\"41\":0,\"42\":0,\"43\":0,\"44\":0,\"45\":0,\"46\":0,\"47\":0,\"48\":0,\"49\":0,\"50\":0,\"51\":0,\"52\":0,\"53\":0,\"54\":0,\"55\":0,\"56\":0,\"57\":0,\"58\":0,\"59\":0,\"60\":0,\"61\":0,\"62\":0,\"63\":0,\"64\":0},\"envelopes\":[{\"target\":\"noteVolume\",\"envelope\":\"twang 3\"}]} },\r\n        ])},\r\n\r\n    ]);\r\n\r\n    public static valueToPreset(presetValue: number): Preset | null {\r\n        const categoryIndex: number = presetValue >> 6;\r\n        const presetIndex: number = presetValue & 0x3F;\r\n        return EditorConfig?.presetCategories[categoryIndex].presets[presetIndex];\r\n    }\r\n\r\n    public static midiProgramToPresetValue(program: number): number | null {\r\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n                const preset: Preset = category.presets[presetIndex];\r\n                if (preset.generalMidi && preset.midiProgram == program) return (categoryIndex << 6) + presetIndex;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static nameToPresetValue(presetName: string): number | null {\r\n        for (let categoryIndex: number = 0; categoryIndex < EditorConfig.presetCategories.length; categoryIndex++) {\r\n            const category: PresetCategory = EditorConfig.presetCategories[categoryIndex];\r\n            for (let presetIndex: number = 0; presetIndex < category.presets.length; presetIndex++) {\r\n                const preset: Preset = category.presets[presetIndex];\r\n                if (preset.name == presetName) return (categoryIndex << 6) + presetIndex;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static instrumentToPreset(instrument: InstrumentType): Preset | null {\r\n        return EditorConfig.presetCategories[0].presets.dictionary?.[TypePresets?.[instrument]];\r\n    }\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\n// interface shared by number[], Float32Array, and other typed arrays in JavaScript.\ninterface NumberArray {\n\tlength: number;\n\t[index: number]: number;\n}\n\n// A basic FFT operation scales the overall magnitude of elements by the\n// square root of the length of the array, √N. Performing a forward FFT and\n// then an inverse FFT results in the original array, but multiplied by N.\n// This helper function can be used to compensate for that. \nexport function scaleElementsByFactor(array: NumberArray, factor: number): void {\n\tfor (let i: number = 0; i < array.length; i++) {\n\t\tarray[i] *= factor;\n\t}\n}\n\nfunction isPowerOf2(n: number): boolean {\n\treturn !!n && !(n & (n - 1));\n}\n\nfunction countBits(n: number): number {\n\tif (!isPowerOf2(n)) throw new Error(\"FFT array length must be a power of 2.\");\n\treturn Math.round(Math.log(n) / Math.log(2));\n}\n\n// Rearranges the elements of the array, swapping the element at an index\n// with an element at an index that is the bitwise reverse of the first\n// index in base 2. Useful for computing the FFT.\nfunction reverseIndexBits(array: NumberArray, fullArrayLength: number): void {\n\tconst bitCount: number = countBits(fullArrayLength);\n\tif (bitCount > 16) throw new Error(\"FFT array length must not be greater than 2^16.\");\n\tconst finalShift: number = 16 - bitCount;\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\t// Dear Javascript: Please support bit order reversal intrinsics. Thanks! :D\n\t\tlet j: number;\n\t\tj = ((i & 0xaaaa) >> 1) | ((i & 0x5555) << 1);\n\t\tj = ((j & 0xcccc) >> 2) | ((j & 0x3333) << 2);\n\t\tj = ((j & 0xf0f0) >> 4) | ((j & 0x0f0f) << 4);\n\t\t\tj = ((j           >> 8) | ((j &   0xff) << 8)) >> finalShift;\n\t\tif (j > i) {\n\t\t\tlet temp: number = array[i];\n\t\t\tarray[i] = array[j];\n\t\t\tarray[j] = temp;\n\t\t}\n\t}\n}\n\n// Provided for educational purposes. Easier to read than\n// fastFourierTransform(), but computes the same result.\n// Takes two parallel arrays representing the real and imaginary elements,\n// respectively, and returns an array containing two new arrays, which\n// contain the complex result of the transform.\nexport function discreteFourierTransform(realArray: NumberArray, imagArray: NumberArray): number[][] {\n\tconst fullArrayLength: number = realArray.length;\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\tconst realOut: number[] = [];\n\tconst imagOut: number[] = [];\n\tfor (let i: number = 0; i < fullArrayLength; i++) {\n\t\trealOut[i] = 0.0;\n\t\timagOut[i] = 0.0;\n\t\tfor (let j: number = 0; j < fullArrayLength; j++) {\n\t\t\tconst radians: number = -6.2831853 * j * i / fullArrayLength;\n\t\t\tconst c: number = Math.cos(radians);\n\t\t\tconst s: number = Math.sin(radians);\n\t\t\trealOut[i] += realArray[j] * c - imagArray[j] * s;\n\t\t\timagOut[i] += realArray[j] * s + imagArray[j] * c;\n\t\t}\n\t}\n\treturn [realOut, imagOut];\n}\n\n// Performs a Fourier transform in O(N log(N)) operations. Overwrites the\n// input real and imaginary arrays. Can be used for both forward and inverse\n// transforms: swap the order of the arguments for the inverse.\nexport function fastFourierTransform(realArray: NumberArray, imagArray: NumberArray): void {\n\tconst fullArrayLength: number = realArray.length;\n\tif (!isPowerOf2(fullArrayLength)) throw new Error(\"FFT array length must be a power of 2.\");\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\tif (fullArrayLength != imagArray.length) throw new Error(\"FFT arrays must be the same length.\");\n\t\t\n\treverseIndexBits(realArray, fullArrayLength);\n\treverseIndexBits(imagArray, fullArrayLength);\n\t\t\n\t// First two passes, with strides of 2 and 4, can be combined and optimized.\n\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += 4) {\n\t\tconst startIndex1: number = startIndex + 1;\n\t\tconst startIndex2: number = startIndex + 2;\n\t\tconst startIndex3: number = startIndex + 3;\n\t\t\tconst real0: number = realArray[startIndex ];\n\t\tconst real1: number = realArray[startIndex1];\n\t\tconst real2: number = realArray[startIndex2];\n\t\tconst real3: number = realArray[startIndex3];\n\t\t\tconst imag0: number = imagArray[startIndex ];\n\t\tconst imag1: number = imagArray[startIndex1];\n\t\tconst imag2: number = imagArray[startIndex2];\n\t\tconst imag3: number = imagArray[startIndex3];\n\t\tconst realTemp0: number = real0 + real1;\n\t\tconst realTemp1: number = real0 - real1;\n\t\tconst realTemp2: number = real2 + real3;\n\t\tconst realTemp3: number = real2 - real3;\n\t\tconst imagTemp0: number = imag0 + imag1;\n\t\tconst imagTemp1: number = imag0 - imag1;\n\t\tconst imagTemp2: number = imag2 + imag3;\n\t\tconst imagTemp3: number = imag2 - imag3;\n\t\t\trealArray[startIndex ] = realTemp0 + realTemp2;\n\t\trealArray[startIndex1] = realTemp1 + imagTemp3;\n\t\trealArray[startIndex2] = realTemp0 - realTemp2;\n\t\trealArray[startIndex3] = realTemp1 - imagTemp3;\n\t\t\timagArray[startIndex ] = imagTemp0 + imagTemp2;\n\t\timagArray[startIndex1] = imagTemp1 - realTemp3;\n\t\timagArray[startIndex2] = imagTemp0 - imagTemp2;\n\t\timagArray[startIndex3] = imagTemp1 + realTemp3;\n\t}\n\t\t\n\tfor (let stride: number = 8; stride <= fullArrayLength; stride += stride) {\n\t\tconst halfLength: number = stride >>> 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tlet c: number = 1.0;\n\t\t\tlet s: number = 0.0;\n\t\t\tlet cPrev: number = cosIncrement;\n\t\t\tlet sPrev: number = sinIncrement;\n\t\t\tconst secondHalf: number = startIndex + halfLength;\n\t\t\tfor (let i: number = startIndex; i < secondHalf; i++) {\n\t\t\t\tconst j: number = i + halfLength;\n\t\t\t\tconst real0: number = realArray[i];\n\t\t\t\tconst imag0: number = imagArray[i];\n\t\t\t\tconst real1: number = realArray[j] * c - imagArray[j] * s;\n\t\t\t\tconst imag1: number = realArray[j] * s + imagArray[j] * c;\n\t\t\t\trealArray[i] = real0 + real1;\n\t\t\t\timagArray[i] = imag0 + imag1;\n\t\t\t\trealArray[j] = real0 - real1;\n\t\t\t\timagArray[j] = imag0 - imag1;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the Fourier transform from an array of real-valued time-domain\n// samples. The output is specially formatted for space efficieny: elements\n// 0 through N/2 represent cosine wave amplitudes in ascending frequency,\n// and elements N/2+1 through N-1 represent sine wave amplitudes in\n// descending frequency. Overwrites the input array.\nexport function forwardRealFourierTransform(array: NumberArray): void {\n\tconst fullArrayLength: number = array.length;\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\t\t\n\treverseIndexBits(array, fullArrayLength);\n\t\t\n\t// First and second pass.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\t// no imaginary elements yet since the input is fully real.\n\t\tconst tempA: number = real0 + real1;\n\t\tconst tempB: number = real2 + real3;\n\t\t\tarray[index ] = tempA + tempB;\n\t\tarray[index1] = real0 - real1;\n\t\tarray[index2] = tempA - tempB;\n\t\tarray[index3] = real2 - real3;\n\t}\n\t\t\n\t// Third pass.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index7: number = index + 7;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst imag3: number = array[index3];\n\t\tconst real4: number = array[index4];\n\t\tconst real5: number = array[index5];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = (real5 - imag7) * sqrt2over2;\n\t\tconst tempB: number = (real5 + imag7) * sqrt2over2;\n\t\t\tarray[index ] = real0 + real4;\n\t\tarray[index1] = real1 + tempA;\n\t\tarray[index3] = real1 - tempA;\n\t\tarray[index4] = real0 - real4;\n\t\tarray[index5] = tempB - imag3;\n\t\tarray[index7] = tempB + imag3;\n\t}\n\t\t\n\t// Handle remaining passes.\n\tfor (let pass: number = 3; pass < totalPasses; pass++) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst realStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + realStartB;\n\t\t\tarray[startIndexB] = realStartA - realStartB;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst imag0: number = array[indexA1];\n\t\t\t\tconst real1: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real1 * c + imag1 * s;\n\t\t\t\tconst tempB: number = real1 * s - imag1 * c;\n\t\t\t\tarray[indexA0] = real0 + tempA;\n\t\t\t\tarray[indexA1] = real0 - tempA;\n\t\t\t\t\tarray[indexB0] =-imag0 - tempB;\n\t\t\t\tarray[indexB1] = imag0 - tempB;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n}\n\n// Computes the inverse Fourier transform from a specially formatted array of\n// scalar values. Elements 0 through N/2 are expected to be the real values of\n// the corresponding complex elements, representing cosine wave amplitudes in\n// ascending frequency, and elements N/2+1 through N-1 correspond to the\n// imaginary values, representing sine wave amplitudes in descending frequency.\n// Generates real-valued time-domain samples. Overwrites the input array.\nexport function inverseRealFourierTransform(array: NumberArray, fullArrayLength: number): void {\n\tconst totalPasses: number = countBits(fullArrayLength);\n\tif (fullArrayLength < 4) throw new Error(\"FFT array length must be at least 4.\");\n\n\t// Perform all but the last few passes in reverse.\n\tfor (let pass: number = totalPasses - 1; pass >= 2; pass--) {\n\t\tconst subStride: number = 1 << pass;\n\t\tconst midSubStride: number = subStride >> 1;\n\t\tconst stride: number = subStride << 1;\n\t\tconst radiansIncrement: number = Math.PI * 2.0 / stride;\n\t\tconst cosIncrement: number = Math.cos(radiansIncrement);\n\t\tconst sinIncrement: number = Math.sin(radiansIncrement);\n\t\tconst oscillatorMultiplier: number = 2.0 * cosIncrement;\n\t\t\t\n\t\tfor (let startIndex: number = 0; startIndex < fullArrayLength; startIndex += stride) {\n\t\t\tconst startIndexA: number = startIndex;\n\t\t\tconst midIndexA: number = startIndexA + midSubStride;\n\t\t\tconst startIndexB: number = startIndexA + subStride;\n\t\t\tconst midIndexB: number = startIndexB + midSubStride;\n\t\t\tconst stopIndex: number = startIndexB + subStride;\n\t\t\tconst realStartA: number = array[startIndexA];\n\t\t\tconst imagStartB: number = array[startIndexB];\n\t\t\tarray[startIndexA] = realStartA + imagStartB;\n\t\t\tarray[midIndexA] *= 2;\n\t\t\tarray[startIndexB] = realStartA - imagStartB;\n\t\t\tarray[midIndexB] *= 2;\n\t\t\tlet c: number = cosIncrement;\n\t\t\tlet s: number = -sinIncrement;\n\t\t\tlet cPrev: number = 1.0;\n\t\t\tlet sPrev: number = 0.0;\n\t\t\tfor (let index: number = 1; index < midSubStride; index++) {\n\t\t\t\tconst indexA0: number = startIndexA + index;\n\t\t\t\tconst indexA1: number = startIndexB - index;\n\t\t\t\tconst indexB0: number = startIndexB + index;\n\t\t\t\t\tconst indexB1: number = stopIndex   - index;\n\t\t\t\tconst real0: number = array[indexA0];\n\t\t\t\tconst real1: number = array[indexA1];\n\t\t\t\tconst imag0: number = array[indexB0];\n\t\t\t\tconst imag1: number = array[indexB1];\n\t\t\t\tconst tempA: number = real0 - real1;\n\t\t\t\tconst tempB: number = imag0 + imag1;\n\t\t\t\tarray[indexA0] = real0 + real1;\n\t\t\t\tarray[indexA1] = imag1 - imag0;\n\t\t\t\tarray[indexB0] = tempA * c - tempB * s;\n\t\t\t\tarray[indexB1] = tempB * c + tempA * s;\n\t\t\t\tconst cTemp: number = oscillatorMultiplier * c - cPrev;\n\t\t\t\tconst sTemp: number = oscillatorMultiplier * s - sPrev;\n\t\t\t\tcPrev = c;\n\t\t\t\tsPrev = s;\n\t\t\t\tc = cTemp;\n\t\t\t\ts = sTemp;\n\t\t\t}\n\t\t}\n\t}\n\t/*\n\t// Commented out this block (and compensated with an extra pass above)\n\t// because it's slower in my testing so far.\n\t// Pass with stride 8.\n\tconst sqrt2over2: number = Math.sqrt(2.0) / 2.0;\n\tfor (let index: number = 0; index < fullArrayLength; index += 8) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\tconst index4: number = index + 4;\n\t\tconst index5: number = index + 5;\n\t\tconst index6: number = index + 6;\n\t\tconst index7: number = index + 7;\n\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1];\n\t\tconst real2: number = array[index2];\n\t\tconst real3: number = array[index3];\n\t\tconst imag4: number = array[index4];\n\t\tconst imag5: number = array[index5];\n\t\tconst imag6: number = array[index6];\n\t\tconst imag7: number = array[index7];\n\t\tconst tempA: number = real1 - real3;\n\t\tconst tempB: number = imag5 + imag7;\n\t\tarray[index ] = real0 + imag4;\n\t\tarray[index1] = real1 + real3;\n\t\tarray[index2] = real2 * 2;\n\t\tarray[index3] = imag7 - imag5;\n\t\tarray[index4] = real0 - imag4;\n\t\tarray[index5] = (tempA + tempB) * sqrt2over2;\n\t\tarray[index6] = imag6 * 2;\n\t\tarray[index7] = (tempB - tempA) * sqrt2over2;\n\t}\n\t*/\n\t// The final passes with strides 4 and 2, combined into one loop.\n\tfor (let index: number = 0; index < fullArrayLength; index += 4) {\n\t\tconst index1: number = index + 1;\n\t\tconst index2: number = index + 2;\n\t\tconst index3: number = index + 3;\n\t\t\tconst real0: number = array[index ];\n\t\tconst real1: number = array[index1] * 2;\n\t\tconst imag2: number = array[index2];\n\t\tconst imag3: number = array[index3] * 2;\n\t\tconst tempA: number = real0 + imag2;\n\t\tconst tempB: number = real0 - imag2;\n\t\t\tarray[index ] = tempA + real1;\n\t\tarray[index1] = tempA - real1;\n\t\tarray[index2] = tempB + imag3;\n\t\tarray[index3] = tempB - imag3;\n\t}\n\t\t\n\treverseIndexBits(array, fullArrayLength);\n}\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\n\nexport class Deque<T> {\n\tprivate _capacity: number = 1;\n\tprivate _buffer: Array<T | undefined> = [undefined];\n\tprivate _mask: number = 0;\n\tprivate _offset: number = 0;\n\tprivate _count: number = 0;\n\n\tpublic pushFront(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._offset = (this._offset - 1) & this._mask;\n\t\tthis._buffer[this._offset] = element;\n\t\tthis._count++;\n\t}\n\tpublic pushBack(element: T): void {\n\t\tif (this._count >= this._capacity) this._expandCapacity();\n\t\tthis._buffer[(this._offset + this._count) & this._mask] = element;\n\t\tthis._count++;\n\t}\n\tpublic popFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tconst element: T = <T>this._buffer[this._offset];\n\t\tthis._buffer[this._offset] = undefined;\n\t\tthis._offset = (this._offset + 1) & this._mask;\n\t\tthis._count--;\n\t\treturn element;\n\t}\n\tpublic popBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\tthis._count--;\n\t\tconst index: number = (this._offset + this._count) & this._mask;\n\t\tconst element: T = <T>this._buffer[index];\n\t\tthis._buffer[index] = undefined;\n\t\treturn element;\n\t}\n\tpublic peakFront(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[this._offset];\n\t}\n\tpublic peakBack(): T {\n\t\tif (this._count <= 0) throw new Error(\"No elements left to pop.\");\n\t\treturn <T>this._buffer[(this._offset + this._count - 1) & this._mask];\n\t}\n\tpublic count(): number {\n\t\treturn this._count;\n\t}\n\tpublic set(index: number, element: T): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tthis._buffer[(this._offset + index) & this._mask] = element;\n\t}\n\tpublic get(index: number): T {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\treturn <T>this._buffer[(this._offset + index) & this._mask];\n\t}\n\tpublic remove(index: number): void {\n\t\tif (index < 0 || index >= this._count) throw new Error(\"Invalid index\");\n\t\tif (index <= (this._count >> 1)) {\n\t\t\twhile (index > 0) {\n\t\t\t\tthis.set(index, this.get(index - 1));\n\t\t\t\tindex--;\n\t\t\t}\n\t\t\tthis.popFront();\n\t\t} else {\n\t\t\tindex++;\n\t\t\twhile (index < this._count) {\n\t\t\t\tthis.set(index - 1, this.get(index));\n\t\t\t\tindex++;\n\t\t\t}\n\t\t\tthis.popBack();\n\t\t}\n\t}\n\tprivate _expandCapacity(): void {\n\t\tif (this._capacity >= 0x40000000) throw new Error(\"Capacity too big.\");\n\t\tthis._capacity = this._capacity << 1;\n\t\tconst oldBuffer: Array<T | undefined> = this._buffer;\n\t\tconst newBuffer: Array<T | undefined> = new Array(this._capacity);\n\t\tconst size: number = this._count | 0;\n\t\tconst offset: number = this._offset | 0;\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tnewBuffer[i] = oldBuffer[(offset + i) & this._mask];\n\t\t}\n\t\tfor (let i = size; i < this._capacity; i++) {\n\t\t\tnewBuffer[i] = undefined;\n\t\t}\n\t\tthis._offset = 0;\n\t\tthis._buffer = newBuffer;\n\t\tthis._mask = this._capacity - 1;\n\t}\n}","//A simple events system for effectively direct links without actualy linking files or references\nclass EventManager { \n    private activeEvents:string[] = [];\n    private listeners:any = {};\n\n    constructor() {\n        this.activeEvents = [];\n        this.listeners = {};\n    }\n\n\n    public raise(eventType: string, eventData: any, extraEventData?: any): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.activeEvents.push(eventType);\n        for (let i: number = 0; i < this.listeners[eventType].length; i++) {\n            this.listeners[eventType][i](eventData,extraEventData)\n        }\n        this.activeEvents.pop();\n    }\n\n    public listen(eventType:string,callback:Function): void {\n        if (this.listeners[eventType] == undefined) {\n            this.listeners[eventType] = []\n        }\n        this.listeners[eventType].push(callback)\n    }\n\n    public unlisten(eventType: string, callback: Function): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        const lisen = this.listeners[eventType].indexOf(callback);\n        if (lisen != -1) {\n            this.listeners[eventType].splice(lisen, 1);\n        }\n    }\n    public unlistenAll(eventType: string): void {\n        if (this.listeners[eventType] == undefined) {\n            return;\n        }\n        this.listeners[eventType]=[];\n    }\n}\n\nexport const events:EventManager = new EventManager()","/*\r\nThis file contains code to compute digital audio filter coefficients based on\r\nthe desired type, cutoff frequency, and other parameters. You can use these\r\ncoefficients to apply the filter to audio samples. It also contains code to\r\nanalyze these filters, which is useful for graphically displaying their effects.\r\n\r\nAll of the filters in this file are known as \"Infinite Impulse Response\" or IIR\r\nfilters, because older output samples contribute feedback to newer output\r\nsamples and thus contribute to all future samples, although typically filters\r\nare design to reduce the contribution of older samples over time.\r\n\r\nLow-pass filters aka high-cut filters preserve audio signals below the cutoff\r\nfrequency, and attenuate audio signals above the cutoff frequency. High-pass\r\nfilters aka low-cut filters are the reverse. All-pass filters do not affect the\r\nvolume of the signal at all but induce phase changes above the cutoff frequency.\r\nPeak/Notch filters maintain the volume on either side of the cutoff frequency,\r\nbut raise or lower the volume at that frequency. \r\n\r\nThe number of old samples used in the filter determines the \"order\" of the\r\nfilter. First-order filters generally have shallower slopes, and second-order\r\nfilters generally have steeper slopes and can be configured to \"resonate\",\r\nmeaning they have a louder peak at the cutoff frequency. This file contains\r\nfirst-order filters and second-order filters, meaning one or two older samples\r\nare involved, as well as the current input sample.\r\n\r\nThe class FilterCoefficients is defined lower in this file. You can use it to\r\nset up a first order filter like this:\r\n\r\n\tconst cutoffRadiansPerSample: number = 2 * Math.PI * cutoffHz / sampleRate;\r\n\tconst filter: FilterCoefficients = new FilterCoefficients();\r\n\tfilter.lowPass1stOrderButterworth(cutoffRadiansPerSample);\r\n\t// output sample coefficients are conventionally called a0, a1, etc. Note\r\n\t// that a[0] is typically normalized to 1.0 and need not be used directly.\r\n\tconst a: number[] = filter.a;\r\n\t// input sample coefficients are conventionally called b0, b1, etc\r\n\tconst b: number[] = filter.b;\r\n\t// filter input samples, x[0] is the most recent, x[1] is the previous one, etc.\r\n\tconst x: number[] = [0, 0, 0];\r\n\t// filter output samples, y[0] will be computed by the filter based on input\r\n\t// samples and older output samples.\r\n\tconst y: number[] = [0, 0, 0];\r\n\r\nThen to apply the first-order filter to samples inside a loop, using the current\r\ninput sample (x[0]) as well as previous input and output samples, do this:\r\n\r\n\t// Compute the next output sample y[0]:\r\n\ty[0] = b[0] * x[0] + b[1] * x[1] - a[1] * y[1];\r\n\t// Remember the input and output samples for next time:\r\n\tx[1] = x[0];\r\n\ty[1] = y[0];\r\n\r\n2nd order filters are similar, but have more parameters and require more old\r\nsamples:\r\n\r\n\t// Compute the next output sample y[0]:\r\n\ty[0] = b[0] * x[0] + b[1] * x[1] + b[2] * x[2] - a[1] * y[1] - a[2] * y[2];\r\n\t// Remember the input and output samples for next time:\r\n\tx[2] = x[1];\r\n\tx[1] = x[0];\r\n\ty[2] = y[1];\r\n\ty[1] = y[0];\r\n\r\nYou can compose multiple filters into a higher order filter, although doing so\r\nreduces the numerical stability of the filter:\r\n\r\n\tfilter3.combination(filter1, filter2);\r\n\t// filter3.order will equal: filter1.order + filter2.order\r\n\t// The number of coefficients in filter3.a and filter3.b will be: order + 1\r\n\r\nThis file also contains a class called FrequencyResponse. You can use it to\r\ndetermine how much gain or attenuation a filter would apply to sounds at a\r\nspecific input frequency, as well as the phase offset:\r\n\r\n\tconst inputRadians: number = 2 * Math.PI * cutoffHz / sampleRate;\r\n\tconst response: FrequencyResponse = new FrequencyResponse();\r\n\tresponse.analyze(filter, inputRadians);\r\n\tconst gainResponse = response.magnitude();\r\n\tconst phaseResponse = response.angle();\r\n\r\nThat's basically all you need to know to use this code, but I'll also explain\r\nhow the analysis works.\r\n\r\nA first-order digital IIR filter is ordinarily implemented in a form like this:\r\n\r\n\toutput = inputCoeff * input + prevInputCoeff * prevInput - prevOutputCoeff * prevOutput;\r\n\r\nIf we adopt standard naming conventions for audio filters, this same code would\r\ninstead look like:\r\n\r\n\t// x0 = current input, x1 = prevInput, y0 = current output, y1 = prevOutput\r\n\ty0 = b0*x0 + b1*x1 - a1*y1;\r\n\r\nLeaving behind the world of code for a moment and entering the world of algebra,\r\nwe can rewrite this equation by moving all the output terms to the left side,\r\nand we can add a coefficient to the y0 term called a0 (which is typically\r\nnormalized to 1.0, which is why I didn't bother including it until now):\r\n\r\n\ta0*y0 + a1*y1 = b0*x0 + b1*x1\r\n\r\nThis is known as the symmetrical form of the filter, and it will help us analyze\r\nthe impact of the filter on an input audio signal. Here's a lesson that helped\r\nme understand the symmetrical form:\r\nhttps://web.archive.org/web/20200626183458/http://123.physics.ucdavis.edu/week_5_files/filters/digital_filter.pdf\r\n\r\nThe end of that lesson introduces a concept called the \"delay operator\" which\r\nlooks like \"z^-1\", which (magically) turns a sample into the previous sample\r\nwhen you multiply them. For example:\r\n\r\n\tx0 * z^-1 = x1\r\n\r\nThe lesson doesn't explain how it actually works. Audio signals aren't always\r\npredictable, which means that you generally can't do math on a single sample to\r\ncompute what the previous sample was. However, some audio signals ARE\r\npredictable, such as pure sine waves. Fortunately, all audio signals can be\r\nbroken down into a sum of independent sine waves. We can pick one sine wave at a\r\ntime, and use it to analyze the filter's impact on waves at that frequency. In\r\npractice, this tells us what the filter will do to unpredictable input samples\r\nthat contain a partial sine wave at that frequency.\r\n\r\nTechnically, you can't just use a single sine wave sample to determine the\r\nprevious sine wave sample, because each possible value is passed going upwards\r\nand downwards once per period and the direction is ambigous. This is where we\r\nneed to move into the complex number domain, where the real and imaginary\r\ncomponents can provide enough information to compute the previous position on\r\nthe input signal. So now instead of talking about sine waves, we're talking\r\nabout waves where the imaginary component is a sine wave and the real component\r\nis a cosine wave at the same frequency. Together, they trace around a unit\r\ncircle in the complex domain, and each sample is just a consistent rotation\r\napplied to the previous sample. The \"delay operator\" described above, z^-1, is\r\nthis same rotation applied in reverse, and it can be computed as:\r\n\r\n\tz^-1 = cos(radiansPerSample) - i * sin(radiansPerSample)\r\n\r\nMath nerds may be interested to know that \"Euler's formula\" was used here, but\r\nexplaining what that means is probably beyond the scope of this documentation\r\naside from noting that a complex number on the unit circle represents a 2D\r\nrotation that you can apply via multiplication.\r\n\r\nNow we can rewrite the symmetrical form using the delay operator and algebra:\r\n\r\n\ta0*y0 + a1*y0*z^-1 = b0*x0 + b1*x0*z^-1\r\n\ty0 * (a0 + a1*z^-1) = x0 * (b0 + b1*z^-1)\r\n\ty0 = x0 * (b0 + b1*z^-1) / (a0 + a1*z^-1)\r\n\ty0 / x0 = (b0 + b1*z^-1) / (a0 + a1*z^-1)\r\n\r\nThat last equation expresses the relationship between the input and output\r\nsignals (y0/x0) in terms of the filter coefficients and delay operator. At this\r\npoint, the specific values of the input and output samples don't even matter!\r\nThis is called the \"transfer function\", and it's conventionally named \"H(z)\":\r\n\r\n\tH(z) = (b0 + b1*z^-1) / (a0 + a1*z^-1)\r\n\r\nIf you plug in actual filter coefficients and express the delay operators as\r\ncomplex numbers with the appropriate trigonometry functions, the transfer\r\nfunction can be computed and produces a complex number that represents the\r\nrelationship between the input and output signals, whose magnitude represents\r\nthe volume gain (or attenuation) of signals at that frequency, and whose angle\r\nrepresents how much phase shift is applied by the filter to signals at that\r\nfrequency.\r\n\r\n(Note that in order to compute the transfer function, you'll need to do\r\nsomething about the complex number in the denominator. It turns out you can turn\r\nthe denominator into a real number by multiplying both the numerator and\r\ndenominator by the complex conjugate of the denominator, which is just the\r\ndenominator with the imaginary component negated.)\r\n\r\nFinally, I'll list some of the links that helped me understand filters and\r\nprovided some of the algorithms I that use here.\r\n\r\nHere's where I found accurate 2nd order low-pass, high-pass, and high-shelf\r\ndigital filters:\r\nhttps://web.archive.org/web/20120531011328/http://www.musicdsp.org/files/Audio-EQ-Cookbook.txt\r\n\r\nThis page is how I found a link to the cookbook article above. It claims these\r\nfilters are Butterworth filters:\r\nhttp://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\r\n\r\nI found the first-order digital Butterworth filter coefficients at:\r\nhttps://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\r\n\r\nThis meta-paper helped me understand how to make 2nd order peak/notch filters:\r\nhttps://web.archive.org/web/20170706085655/https://www.thesounddesign.com/MIO/EQ-Coefficients.pdf\r\n\r\nBeepBox originally used simpler low-pass filters that I adapted from SFXR:\r\nhttps://www.drpetter.se/project_sfxr.html\r\nFor low cutoff frequencies, the simpler filters and the Butterworth filters are\r\nnearly identical, but when closer to the nyquist frequency the simpler filters\r\ncreate extra resonance.\r\n*/\r\n\r\nexport class FilterCoefficients {\r\n\tpublic readonly a: number[] = [1.0]; // output coefficients (negated, keep a[0]=1)\r\n\tpublic readonly b: number[] = [1.0]; // input coefficients\r\n\tpublic order: number = 0;\r\n\t\r\n\tpublic linearGain0thOrder(linearGain: number): void {\r\n\t\t//a[0] = 1.0; // a0 should always be normalized to 1.0, no need to assign it directly.\r\n\t\tthis.b[0] = linearGain;\r\n\t\tthis.order = 0;\r\n\t}\r\n\t\r\n\tpublic lowPass1stOrderButterworth(cornerRadiansPerSample: number): void {\r\n\t\t// First-order Butterworth low-pass filter according to:\r\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\r\n\t\t// A butterworth filter is one where the amplitude response is equal to:\r\n\t\t// 1 / √(1 + (freq / cutoffFreq)^(2 * order))\r\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\r\n\t\tconst a0: number = 1.0 + g;\r\n\t\tthis.a[1] = (1.0 - g) / a0;\r\n\t\tthis.b[1] = this.b[0] = 1 / a0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic lowPass1stOrderSimplified(cornerRadiansPerSample: number): void {\r\n\t\t// The output of this filter is nearly identical to the 1st order\r\n\t\t// Butterworth low-pass above, except if the cutoff is set to nyquist/3,\r\n\t\t// then the output is the same as the input, and if the cutoff is higher\r\n\t\t// than that, then the output actually resonates at high frequencies\r\n\t\t// instead of attenuating.\r\n\t\t// I'm guessing this filter was converted from analog to digital using\r\n\t\t// the \"matched z-transform\" method instead of the \"bilinear transform\"\r\n\t\t// method. The difference is that the bilinear transform warps\r\n\t\t// frequencies so that the lowpass response of zero at analogue ∞hz maps\r\n\t\t// to the digital nyquist frequency, whereas the matched z-transform\r\n\t\t// preserves the frequency of the filter response but also adds the\r\n\t\t// reflected response from above the nyquist frequency.\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\r\n\t\tthis.a[1] = g - 1.0;\r\n\t\tthis.b[0] = g;\r\n\t\tthis.b[1] = 0.0;\r\n\t\t/*\r\n\t\t// Alternatively:\r\n\t\tconst g: number = 1.0 / (2.0 * Math.sin(cornerRadiansPerSample / 2));\r\n\t\tconst a0: number = g;\r\n\t\tthis.a[1] = (1.0 - g) / a0;\r\n\t\tthis.b[0] = 1.0 / a0;\r\n\t\tthis.b[1] = 0.0 / a0;\r\n\t\t*/\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic highPass1stOrderButterworth(cornerRadiansPerSample: number): void {\r\n\t\t// First-order Butterworth high-pass filter according to:\r\n\t\t// https://www.researchgate.net/publication/338022014_Digital_Implementation_of_Butterworth_First-Order_Filter_Type_IIR\r\n\t\tconst g: number = 1.0 / Math.tan(cornerRadiansPerSample * 0.5);\r\n\t\tconst a0: number = 1.0 + g;\r\n\t\tthis.a[1] = (1.0 - g) / a0;\r\n\t\tthis.b[0] = g / a0;\r\n\t\tthis.b[1] = -g / a0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t/*\r\n\tpublic highPass1stOrderSimplified(cornerRadiansPerSample: number): void {\r\n\t\t// The output of this filter is nearly identical to the 1st order\r\n\t\t// Butterworth high-pass above, except it resonates when the cutoff\r\n\t\t// appoaches the nyquist.\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\r\n\t\tthis.a[1] = g - 1.0;\r\n\t\tthis.b[0] = 1.0;\r\n\t\tthis.b[1] = -1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t*/\r\n\tpublic highShelf1stOrder(cornerRadiansPerSample: number, shelfLinearGain: number): void {\r\n\t\t// I had trouble figuring this one out because I couldn't find any\r\n\t\t// online algorithms that I understood. There are 3 degrees of freedom\r\n\t\t// and I could narrow down a couple of them based on the desired gain at\r\n\t\t// DC and nyquist, but getting the cutoff frequency correct took a\r\n\t\t// little bit of trial and error in my attempts to interpret page 53 of\r\n\t\t// this chapter: http://www.music.mcgill.ca/~ich/classes/FiltersChap2.pdf\r\n\t\t// Obviously I don't fully understand the bilinear transform yet!\r\n\t\tconst tan: number = Math.tan(cornerRadiansPerSample * 0.5);\r\n\t\tconst sqrtGain: number = Math.sqrt(shelfLinearGain);\r\n\t\tconst g: number = (tan * sqrtGain - 1) / (tan * sqrtGain + 1.0);\r\n\t\tconst a0: number = 1.0;\r\n\t\tthis.a[1] = g / a0;\r\n\t\tthis.b[0] = (1.0 + g + shelfLinearGain * (1.0 - g)) / (2.0 * a0);\r\n\t\tthis.b[1] = (1.0 + g - shelfLinearGain * (1.0 - g)) / (2.0 * a0);\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic allPass1stOrderInvertPhaseAbove(cornerRadiansPerSample: number): void {\r\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\r\n\t\tthis.a[1] = g;\r\n\t\tthis.b[0] = g;\r\n\t\tthis.b[1] = 1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\t/*\r\n\t// I haven't found a practical use for this version of the all pass filter.\r\n\t// It seems to create a weird subharmonic when used in a delay feedback loop.\r\n\tpublic allPass1stOrderInvertPhaseBelow(cornerRadiansPerSample: number): void {\r\n\t\tconst g: number = (Math.sin(cornerRadiansPerSample) - 1.0) / Math.cos(cornerRadiansPerSample);\r\n\t\tthis.a[1] = g;\r\n\t\tthis.b[0] = -g;\r\n\t\tthis.b[1] = -1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t*/\r\n\t\r\n\tpublic allPass1stOrderFractionalDelay(delay: number) {\r\n\t\t// Very similar to allPass1stOrderInvertPhaseAbove, but configured\r\n\t\t// differently and for a different purpose! Useful for interpolating\r\n\t\t// between samples in a delay line.\r\n\t\tconst g: number = (1.0 - delay) / (1.0 + delay);\r\n\t\tthis.a[1] = g;\r\n\t\tthis.b[0] = g;\r\n\t\tthis.b[1] = 1.0;\r\n\t\tthis.order = 1;\r\n\t}\r\n\t\r\n\tpublic lowPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\t// This is Butterworth if peakLinearGain=1/√2 according to:\r\n\t\t// http://web.archive.org/web/20191213120120/https://crypto.stanford.edu/~blynn/sound/analog.html\r\n\t\t// An interesting property is that if peakLinearGain=1/16 then the\r\n\t\t// output resembles a first-order lowpass at a cutoff 4 octaves lower,\r\n\t\t// although it gets distorted near the nyquist.\r\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2.0 * peakLinearGain);\r\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\r\n\t\tconst a0: number = 1.0 + alpha;\r\n\t\tthis.a[1] = -2.0*cos / a0;\r\n\t\tthis.a[2] = (1 - alpha) / a0;\r\n\t\tthis.b[2] = this.b[0] = (1 - cos) / (2.0*a0);\r\n\t\tthis.b[1] = (1 - cos) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t\r\n\tpublic lowPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\t// This filter is adapted from the one in the SFXR source code:\r\n\t\t// https://www.drpetter.se/project_sfxr.html\r\n\t\t// The output is nearly identical to the resonant Butterworth low-pass\r\n\t\t// above, except it resonates too much when the cutoff appoaches the\r\n\t\t// nyquist. If the resonance is set to zero and the cutoff is set to\r\n\t\t// nyquist/3, then the output is the same as the input.\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample / 2.0);\r\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\r\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\r\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\r\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\r\n\t\tthis.b[0] = g*g;\r\n\t\tthis.b[1] = 0;\r\n\t\tthis.b[2] = 0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t\r\n\tpublic highPass2ndOrderButterworth(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) / (2 * peakLinearGain);\r\n\t\tconst cos: number = Math.cos(cornerRadiansPerSample);\r\n\t\tconst a0: number = 1.0 + alpha;\r\n\t\tthis.a[1] = -2.0*cos / a0;\r\n\t\tthis.a[2] = (1.0 - alpha) / a0;\r\n\t\tthis.b[2] = this.b[0] = (1.0 + cos) / (2.0*a0);\r\n\t\tthis.b[1] = -(1.0 + cos) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t/*\r\n\tpublic highPass2ndOrderSimplified(cornerRadiansPerSample: number, peakLinearGain: number): void {\r\n\t\tconst g: number = 2.0 * Math.sin(cornerRadiansPerSample * 0.5);\r\n\t\tconst filterResonance: number = 1.0 - 1.0 / (2.0 * peakLinearGain);\r\n\t\tconst feedback: number = filterResonance + filterResonance / (1.0 - g);\r\n\t\tthis.a[1] = 2.0*g + (g - 1.0) * g*feedback - 2.0;\r\n\t\tthis.a[2] = (g - 1.0) * (g - g*feedback - 1.0);\r\n\t\tthis.b[0] = 1.0;\r\n\t\tthis.b[1] = -2.0;\r\n\t\tthis.b[2] = 1.0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t*/\r\n\tpublic highShelf2ndOrder(cornerRadiansPerSample: number, shelfLinearGain: number, slope: number): void {\r\n\t\tconst A: number = Math.sqrt(shelfLinearGain);\r\n\t\tconst c: number = Math.cos(cornerRadiansPerSample);\r\n\t\tconst Aplus: number = A + 1.0;\r\n\t\tconst Aminus: number = A - 1.0;\r\n\t\tconst alpha: number = Math.sin(cornerRadiansPerSample) * 0.5 * Math.sqrt((Aplus / A) * (1.0 / slope - 1.0) + 2.0);\r\n\t\tconst sqrtA2Alpha: number = 2.0 * Math.sqrt(A) * alpha;\r\n\t\tconst a0: number =   (Aplus  - Aminus * c + sqrtA2Alpha);\r\n\t\tthis.a[1] =  2 *     (Aminus - Aplus  * c              ) / a0;\r\n\t\tthis.a[2] =          (Aplus  - Aminus * c - sqrtA2Alpha) / a0;\r\n\t\tthis.b[0] =      A * (Aplus  + Aminus * c + sqrtA2Alpha) / a0;\r\n\t\tthis.b[1] = -2 * A * (Aminus + Aplus  * c              ) / a0;\r\n\t\tthis.b[2] =      A * (Aplus  + Aminus * c - sqrtA2Alpha) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\r\n\tpublic peak2ndOrder(cornerRadiansPerSample: number, peakLinearGain: number, bandWidthScale: number): void {\r\n\t\tconst sqrtGain: number = Math.sqrt(peakLinearGain);\r\n\t\tconst bandWidth: number = bandWidthScale * cornerRadiansPerSample / (sqrtGain >= 1 ? sqrtGain : 1/sqrtGain);\r\n\t\t//const bandWidth: number = bandWidthScale * cornerRadiansPerSample / Math.max(sqrtGain, 1.0);\r\n\t\tconst alpha: number = Math.tan(bandWidth * 0.5);\r\n\t\tconst a0: number = 1.0 + alpha / sqrtGain;\r\n\t\tthis.b[0] = (1.0 + alpha * sqrtGain) / a0;\r\n\t\tthis.b[1] = this.a[1] = -2.0 * Math.cos(cornerRadiansPerSample) / a0;\r\n\t\tthis.b[2] = (1.0 - alpha * sqrtGain) / a0;\r\n\t\tthis.a[2] = (1.0 - alpha / sqrtGain) / a0;\r\n\t\tthis.order = 2;\r\n\t}\r\n\t/*\r\n\t// Create a higher order filter by combining two lower order filters.\r\n\t// However, making high order filters in this manner results in instability.\r\n\t// It is recommended to apply the 2nd order filters (biquads) in sequence instead.\r\n\tpublic combination(filter1: FilterCoefficients, filter2: FilterCoefficients): void {\r\n\t\tthis.order = filter1.order + filter2.order;\r\n\t\tfor (let i: number = 0; i <= this.order; i++) {\r\n\t\t\tthis.a[i] = 0.0;\r\n\t\t\tthis.b[i] = 0.0;\r\n\t\t}\r\n\t\tfor (let i: number = 0; i <= filter1.order; i++) {\r\n\t\t\tfor (let j: number = 0; j <= filter2.order; j++) {\r\n\t\t\t\tthis.a[i + j] += filter1.a[i] * filter2.a[j];\r\n\t\t\t\tthis.b[i + j] += filter1.b[i] * filter2.b[j];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic scaledDifference(other: FilterCoefficients, scale: number): void {\r\n\t\tif (other.order != this.order) throw new Error();\r\n\t\tfor (let i: number = 0; i <= this.order; i++) {\r\n\t\t\tthis.a[i] = (this.a[i] - other.a[i]) * scale;\r\n\t\t\tthis.b[i] = (this.b[i] - other.b[i]) * scale;\r\n\t\t}\r\n\t}\r\n\t\r\n\tpublic copy(other: FilterCoefficients): void {\r\n\t\tthis.order = other.order;\r\n\t\tfor (let i: number = 0; i <= this.order; i++) {\r\n\t\t\tthis.a[i] = other.a[i];\r\n\t\t\tthis.b[i] = other.b[i];\r\n\t\t}\r\n\t}\r\n\t*/\r\n}\r\n\r\nexport class FrequencyResponse {\r\n\tpublic real: number = 0.0;\r\n\tpublic imag: number = 0.0;\r\n\tpublic denom: number = 1.0;\r\n\t\r\n\tpublic analyze(filter: FilterCoefficients, radiansPerSample: number): void {\r\n\t\tthis.analyzeComplex(filter, Math.cos(radiansPerSample), Math.sin(radiansPerSample));\r\n\t}\r\n\t\r\n\tpublic analyzeComplex(filter: FilterCoefficients, real: number, imag: number): void {\r\n\t\tconst a: number[] = filter.a;\r\n\t\tconst b: number[] = filter.b;\r\n\t\tconst realZ1: number = real;\r\n\t\tconst imagZ1: number = -imag;\r\n\t\tlet realNum: number = b[0] + b[1] * realZ1;\r\n\t\tlet imagNum: number = b[1] * imagZ1;\r\n\t\tlet realDenom: number = 1.0 + a[1] * realZ1;\r\n\t\tlet imagDenom: number = a[1] * imagZ1;\r\n\t\tlet realZ: number = realZ1;\r\n\t\tlet imagZ: number = imagZ1;\r\n\t\tfor (let i: number = 2; i <= filter.order; i++) {\r\n\t\t\tconst realTemp: number = realZ * realZ1 - imagZ * imagZ1;\r\n\t\t\tconst imagTemp: number = realZ * imagZ1 + imagZ * realZ1;\r\n\t\t\trealZ = realTemp;\r\n\t\t\timagZ = imagTemp;\r\n\t\t\trealNum += b[i] * realZ;\r\n\t\t\timagNum += b[i] * imagZ;\r\n\t\t\trealDenom += a[i] * realZ;\r\n\t\t\timagDenom += a[i] * imagZ;\r\n\t\t}\r\n\t\tthis.denom = realDenom * realDenom + imagDenom * imagDenom;\r\n\t\tthis.real = realNum * realDenom + imagNum * imagDenom;\r\n\t\tthis.imag = imagNum * realDenom - realNum * imagDenom;\r\n\t}\r\n\t\r\n\tpublic magnitude(): number {\r\n\t\treturn Math.sqrt(this.real * this.real + this.imag * this.imag) / this.denom;\r\n\t}\r\n\t\r\n\tpublic angle(): number {\r\n\t\treturn Math.atan2(this.imag, this.real);\r\n\t}\r\n}\r\n\r\nexport class DynamicBiquadFilter {\r\n\tpublic a1: number = 0.0;\r\n\tpublic a2: number = 0.0;\r\n\tpublic b0: number = 1.0;\r\n\tpublic b1: number = 0.0;\r\n\tpublic b2: number = 0.0;\r\n\tpublic a1Delta: number = 0.0;\r\n\tpublic a2Delta: number = 0.0;\r\n\tpublic b0Delta: number = 0.0;\r\n\tpublic b1Delta: number = 0.0;\r\n\tpublic b2Delta: number = 0.0;\r\n\tpublic output1: number = 0.0;\r\n\tpublic output2: number = 0.0;\r\n\t\r\n\t// Some filter types are more stable when interpolating between coefficients\r\n\t// if the \"b\" coefficient interpolation is multiplicative. Don't enable this\r\n\t// for filter types where the \"b\" coefficients might change sign!\r\n\tpublic useMultiplicativeInputCoefficients: boolean = false;\r\n\t\r\n\tpublic resetOutput(): void {\r\n\t\tthis.output1 = 0.0;\r\n\t\tthis.output2 = 0.0;\r\n\t}\r\n\t\r\n\tpublic loadCoefficientsWithGradient(start: FilterCoefficients, end: FilterCoefficients, deltaRate: number, useMultiplicativeInputCoefficients: boolean): void {\r\n\t\tif (start.order != 2 || end.order != 2) throw new Error();\r\n\t\tthis.a1 = start.a[1];\r\n\t\tthis.a2 = start.a[2];\r\n\t\tthis.b0 = start.b[0];\r\n\t\tthis.b1 = start.b[1];\r\n\t\tthis.b2 = start.b[2];\r\n\t\tthis.a1Delta = (end.a[1] - start.a[1]) * deltaRate;\r\n\t\tthis.a2Delta = (end.a[2] - start.a[2]) * deltaRate;\r\n\t\tif (useMultiplicativeInputCoefficients) {\r\n\t\t\tthis.b0Delta = Math.pow(end.b[0] / start.b[0], deltaRate);\r\n\t\t\tthis.b1Delta = Math.pow(end.b[1] / start.b[1], deltaRate);\r\n\t\t\tthis.b2Delta = Math.pow(end.b[2] / start.b[2], deltaRate);\r\n\t\t} else {\r\n\t\t\tthis.b0Delta = (end.b[0] - start.b[0]) * deltaRate;\r\n\t\t\tthis.b1Delta = (end.b[1] - start.b[1]) * deltaRate;\r\n\t\t\tthis.b2Delta = (end.b[2] - start.b[2]) * deltaRate;\r\n\t\t}\r\n\t\tthis.useMultiplicativeInputCoefficients = useMultiplicativeInputCoefficients;\r\n\t}\r\n}\r\n// Filters are typically designed as analog filters first, then converted to\r\n// digital filters using one of two methods: the \"matched z-transform\" or the\r\n// \"bilinear transform\". The \"bilinear transform\" does a better job of\r\n// preserving the magnitudes of the frequency response, but warps the frequency\r\n// range such that the nyquist frequency of the digital filter (π) maps to the\r\n// infinity frequency of the analog filter. You can use the below functions to\r\n// manually perform this warping in either direction.\r\nexport function warpNyquistToInfinity(radians: number): number {\r\n\treturn 2.0 * Math.tan(radians * 0.5);\r\n}\r\nexport function warpInfinityToNyquist(radians: number): number {\r\n\treturn 2.0 * Math.atan(radians * 0.5);\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { startLoadingSample, sampleLoadingState, SampleLoadingState, sampleLoadEvents, SampleLoadedEvent, SampleLoadingStatus, loadBuiltInSamples, Dictionary, DictionaryArray, toNameMap, FilterType, SustainType, EnvelopeType, InstrumentType, EffectType, EnvelopeComputeIndex, Transition, Unison, Chord, Vibrato, Envelope, AutomationTarget, Config, getDrumWave, drawNoiseSpectrum, getArpeggioPitchIndex, performIntegralOld, getPulseWidthRatio, effectsIncludeTransition, effectsIncludeChord, effectsIncludePitchShift, effectsIncludeDetune, effectsIncludeVibrato, effectsIncludeNoteFilter, effectsIncludeDistortion, effectsIncludeBitcrusher, effectsIncludePanning, effectsIncludeChorus, effectsIncludeEcho, effectsIncludeReverb, effectsIncludeRM, effectsIncludePhaser, effectsIncludeNoteRange, OperatorWave, effectsIncludeInvertWave } from \"./SynthConfig\";\r\nimport { Preset, EditorConfig } from \"../editor/EditorConfig\";\r\nimport { scaleElementsByFactor, inverseRealFourierTransform } from \"./FFT\";\r\nimport { Deque } from \"./Deque\";\r\nimport { events } from \"../global/Events\";\r\nimport { FilterCoefficients, FrequencyResponse, DynamicBiquadFilter, warpInfinityToNyquist } from \"./filtering\";\r\n\r\n\r\ndeclare global {\r\n    interface Window {\r\n        AudioContext: any;\r\n        webkitAudioContext: any;\r\n    }\r\n}\r\n\r\n/**\r\n * Equals 1.0e-24, which is roughly 0.000000000000000000000001, or a sextillionth.\r\n */\r\nconst epsilon: number = (1.0e-24); // For detecting and avoiding float denormals, which have poor performance.\r\n\r\n// For performance debugging:\r\n//let samplesAccumulated: number = 0;\r\n//let samplePerformance: number = 0;\r\n\r\n/**\r\n   * Takes a number between a maximum value and a minimum value and \r\n   * if that value is greater or lesser than the specified maximum or minimum, it's then \r\n   * forced to be the maximum or minimum value respectively.\r\n   * \r\n   * \r\n   * @param min The minimum number value allowed.\r\n   * \r\n   * @param max The maximum number value allowed minus 1.\r\n   * \r\n   * @param val The inputted number that can be clamped.\r\n   */\r\nexport function clamp(min: number, max: number, val: number): number {\r\n    max = max - 1;\r\n    if (val <= max) {\r\n        if (val >= min) return val;\r\n        else return min;\r\n    } else {\r\n        return max;\r\n    }\r\n}\r\n\r\n/**\r\n * Checks if a value is within the correct range. If the value is within the range, then it returns the value. \r\n * if not, then an error is thrown stating the value is out of range.\r\n * \r\n * @param min A specified minimum value\r\n * @param max A specified maximum value\r\n * @param val The value to be checked\r\n * @returns If the value is in range, then it returns val\r\n */\r\nfunction validateRange(min: number, max: number, val: number): number {\r\n    if (min <= val && val <= max) return val;\r\n    throw new Error(`Value ${val} not in range [${min}, ${max}]`);\r\n}\r\n\r\n/**\r\n * Converts a string to a floating-point number. \r\n * \r\n * If the string is empty, then it instead uses a default value.\r\n * \r\n * @param s The string to parse\r\n * @param defaultValue The default value if the string is NaN\r\n */\r\nexport function parseFloatWithDefault<T>(s: string, defaultValue: T): number | T {\r\n    let result: number | T = parseFloat(s);\r\n    if (Number.isNaN(result)) result = defaultValue;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Converts a string to an integer. \r\n * \r\n * If the string is empty, then it instead uses a default value.\r\n * \r\n * @param s The string to parse\r\n * @param defaultValue The default value if the string is NaN\r\n */\r\nexport function parseIntWithDefault<T>(s: string, defaultValue: T): number | T {\r\n    let result: number | T = parseInt(s);\r\n    if (Number.isNaN(result)) result = defaultValue;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Encodes a number (assumed to be 32 bits long) into the Base64 buffer.\r\n * \r\n * @param buffer An array that's supposed to contain \"character codes\" (as numbers)\r\n * @param x The number to encode.\r\n */\r\nfunction encode32BitNumber(buffer: number[], x: number): void {\r\n    // 0b11_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 5)) & 0x3]);\r\n    //      111111_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 4)) & 0x3f]);\r\n    //             111111_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 3)) & 0x3f]);\r\n    //                    111111_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 2)) & 0x3f]);\r\n    //                           111111_\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 1)) & 0x3f]);\r\n    //                                  111111\r\n    buffer.push(base64IntToCharCode[(x >>> (6 * 0)) & 0x3f]);\r\n}\r\n\r\n// @TODO: This is error-prone, because the caller has to remember to increment\r\n// charIndex by 6 afterwards.\r\n/**\r\n * Decodes an encoded 32 bit number.\r\n * \r\n * @param compressed A string that's supposed to contain the compressed 32 bit value.\r\n * @param charIndex The current character that's being read.\r\n * @returns x\r\n */\r\nfunction decode32BitNumber(compressed: string, charIndex: number): number {\r\n    let x: number = 0;\r\n    // 0b11_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 5);\r\n    //      111111_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 4);\r\n    //             111111_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 3);\r\n    //                    111111_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 2);\r\n    //                           111111_\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 1);\r\n    //                                  111111\r\n    x |= base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 0);\r\n    return x;\r\n}\r\n\r\n/**\r\n * Encodes the unison settings into a base 64 number.\r\n * \r\n * @param buffer An array that's supposed to contain \"character codes\" (as numbers)\r\n * @param v Unison Voices\r\n * @param s Unison Spread\r\n * @param o Unison Offset\r\n * @param e Unison Expression\r\n * @param i Unison Sign\r\n */\r\nfunction encodeUnisonSettings(buffer: number[], v: number, s: number, o: number, e: number, i: number, b: boolean): void {\r\n    buffer.push(base64IntToCharCode[v]);\r\n    \r\n    // logically this should be done with bitshifts... but I don't know how to do that, so\r\n    buffer.push(base64IntToCharCode[Number((s > 0))]);\r\n    let cleanS = Math.round(Math.abs(s) * 1000);\r\n    let cleanSDivided = Math.floor(cleanS / 63);\r\n    buffer.push(base64IntToCharCode[cleanS % 63], base64IntToCharCode[cleanSDivided % 63], base64IntToCharCode[Math.floor(cleanSDivided / 63)]);\r\n\r\n    buffer.push(base64IntToCharCode[Number((o > 0))]);\r\n    let cleanO = Math.round(Math.abs(o) * 1000);\r\n    let cleanODivided = Math.floor(cleanO / 63);\r\n    buffer.push(base64IntToCharCode[cleanO % 63], base64IntToCharCode[cleanODivided % 63], base64IntToCharCode[Math.floor(cleanODivided / 63)]);\r\n    \r\n    buffer.push(base64IntToCharCode[Number((e > 0))]);\r\n    let cleanE = Math.round(Math.abs(e) * 1000);\r\n    buffer.push(base64IntToCharCode[cleanE % 63], base64IntToCharCode[Math.floor(cleanE / 63)]);\r\n\r\n    buffer.push(base64IntToCharCode[Number((i > 0))]);\r\n    let cleanI = Math.round(Math.abs(i) * 1000);\r\n    buffer.push(base64IntToCharCode[cleanI % 63], base64IntToCharCode[Math.floor(cleanI / 63)]);\r\n\r\n    buffer.push(base64IntToCharCode[+b]);\r\n}\r\n\r\n/**\r\n * Converts the older Key Index to the newer version.\r\n * \r\n * There isn't any reason to use this outside of backwards compatibility.\r\n */\r\nfunction convertLegacyKeyToKeyAndOctave(rawKeyIndex: number): [number, number] {\r\n    let key: number = clamp(0, Config.keys.length, rawKeyIndex);\r\n    let octave: number = 0;\r\n    // This conversion code depends on C through B being\r\n    // available as keys, of course.\r\n    if (rawKeyIndex === 12) {\r\n        // { name: \"C+\", isWhiteKey: false, basePitch: 24 }\r\n        key = 0;\r\n        octave = 1;\r\n    } else if (rawKeyIndex === 13) {\r\n        // { name: \"G- (actually F#-)\", isWhiteKey: false, basePitch: 6 }\r\n        key = 6;\r\n        octave = -1;\r\n    } else if (rawKeyIndex === 14) {\r\n        // { name: \"C-\", isWhiteKey: true, basePitch: 0 }\r\n        key = 0;\r\n        octave = -1;\r\n    } else if (rawKeyIndex === 15) {\r\n        // { name: \"oh no (F-)\", isWhiteKey: true, basePitch: 5 }\r\n        key = 5;\r\n        octave = -1;\r\n    }\r\n    return [key, octave];\r\n}\r\n\r\n/**\r\n * Character codes in number form.\r\n */\r\nconst enum CharCode {\r\n    SPACE = 32,\r\n    HASH = 35,\r\n    PERCENT = 37,\r\n    AMPERSAND = 38,\r\n    PLUS = 43,\r\n    DASH = 45,\r\n    DOT = 46,\r\n    NUM_0 = 48,\r\n    NUM_1 = 49,\r\n    NUM_2 = 50,\r\n    NUM_3 = 51,\r\n    NUM_4 = 52,\r\n    NUM_5 = 53,\r\n    NUM_6 = 54,\r\n    NUM_7 = 55,\r\n    NUM_8 = 56,\r\n    NUM_9 = 57,\r\n    EQUALS = 61,\r\n    A = 65,\r\n    B = 66,\r\n    C = 67,\r\n    D = 68,\r\n    E = 69,\r\n    F = 70,\r\n    G = 71,\r\n    H = 72,\r\n    I = 73,\r\n    J = 74,\r\n    K = 75,\r\n    L = 76,\r\n    M = 77,\r\n    N = 78,\r\n    O = 79,\r\n    P = 80,\r\n    Q = 81,\r\n    R = 82,\r\n    S = 83,\r\n    T = 84,\r\n    U = 85,\r\n    V = 86,\r\n    W = 87,\r\n    X = 88,\r\n    Y = 89,\r\n    Z = 90,\r\n    UNDERSCORE = 95,\r\n    a = 97,\r\n    b = 98,\r\n    c = 99,\r\n    d = 100,\r\n    e = 101,\r\n    f = 102,\r\n    g = 103,\r\n    h = 104,\r\n    i = 105,\r\n    j = 106,\r\n    k = 107,\r\n    l = 108,\r\n    m = 109,\r\n    n = 110,\r\n    o = 111,\r\n    p = 112,\r\n    q = 113,\r\n    r = 114,\r\n    s = 115,\r\n    t = 116,\r\n    u = 117,\r\n    v = 118,\r\n    w = 119,\r\n    x = 120,\r\n    y = 121,\r\n    z = 122,\r\n    LEFT_CURLY_BRACE = 123,\r\n    RIGHT_CURLY_BRACE = 125,\r\n}\r\n/**Tags used as prefixes to group encoded song data in song links by 'name' rather than by position. */\r\nconst enum SongTagCode {\r\n    beatCount           = CharCode.a, // added in BeepBox URL version 2\r\n\tbars                = CharCode.b, // added in BeepBox URL version 2\r\n\tvibrato             = CharCode.c, // added in BeepBox URL version 2, DEPRECATED\r\n\tfadeInOut           = CharCode.d, // added in BeepBox URL version 3 for transition, switched to fadeInOut in 9\r\n\tloopEnd             = CharCode.e, // added in BeepBox URL version 2\r\n\teqFilter            = CharCode.f, // added in BeepBox URL version 3\r\n\tbarCount            = CharCode.g, // added in BeepBox URL version 3\r\n\tunison              = CharCode.h, // added in BeepBox URL version 2\r\n\tinstrumentCount     = CharCode.i, // added in BeepBox URL version 3\r\n\tpatternCount        = CharCode.j, // added in BeepBox URL version 3\r\n\tkey                 = CharCode.k, // added in BeepBox URL version 2\r\n\tloopStart           = CharCode.l, // added in BeepBox URL version 2\r\n\treverb              = CharCode.m, // added in BeepBox URL version 5, DEPRECATED\r\n\tchannelCount        = CharCode.n, // added in BeepBox URL version 6\r\n\tchannelOctave       = CharCode.o, // added in BeepBox URL version 3\r\n\tpatterns            = CharCode.p, // added in BeepBox URL version 2\r\n\teffects             = CharCode.q, // added in BeepBox URL version 7\r\n\trhythm              = CharCode.r, // added in BeepBox URL version 2\r\n\tscale               = CharCode.s, // added in BeepBox URL version 2\r\n\ttempo               = CharCode.t, // added in BeepBox URL version 2\r\n\tpreset              = CharCode.u, // added in BeepBox URL version 7\r\n\tvolume              = CharCode.v, // added in BeepBox URL version 2\r\n\twave                = CharCode.w, // added in BeepBox URL version 2\r\n\tsupersaw            = CharCode.x, // added in BeepBox URL version 9 ([UB] was used for chip wave but is now DEPRECATED)\r\n\tfilterResonance     = CharCode.y, // added in BeepBox URL version 7, DEPRECATED, [UB] repurposed for chip wave loop controls\r\n\tdrumsetEnvelopes    = CharCode.z, // added in BeepBox URL version 7 for filter envelopes, still used for drumset envelopes\r\n\talgorithm           = CharCode.A, // added in BeepBox URL version 6\r\n\tfeedbackAmplitude   = CharCode.B, // added in BeepBox URL version 6\r\n\tchord               = CharCode.C, // added in BeepBox URL version 7, DEPRECATED\r\n\tdetune              = CharCode.D, // added in JummBox URL version 3(?) for detune, DEPRECATED\r\n\tenvelopes           = CharCode.E, // added in BeepBox URL version 6 for FM operator envelopes, repurposed in 9 for general envelopes.\r\n\tfeedbackType        = CharCode.F, // added in BeepBox URL version 6\r\n\tarpeggioSpeed       = CharCode.G, // added in JummBox URL version 3 for arpeggioSpeed, DEPRECATED\r\n\tharmonics           = CharCode.H, // added in BeepBox URL version 7\r\n\tstringSustain       = CharCode.I, // added in BeepBox URL version 9\r\n//\t                    = CharCode.J,\r\n//\t                    = CharCode.K,\r\n\tpan                 = CharCode.L, // added between 8 and 9, DEPRECATED\r\n\tcustomChipWave      = CharCode.M, // added in JummBox URL version 1(?) for customChipWave\r\n\tsongDetails         = CharCode.N, // added in JummBox URL version 1(?) for songTitle\r\n\tlimiterSettings     = CharCode.O, // added in JummBox URL version 3(?) for limiterSettings\r\n\toperatorAmplitudes  = CharCode.P, // added in BeepBox URL version 6\r\n\toperatorFrequencies = CharCode.Q, // added in BeepBox URL version 6\r\n\toperatorWaves       = CharCode.R, // added in JummBox URL version 4 for operatorWaves\r\n\tspectrum            = CharCode.S, // added in BeepBox URL version 7\r\n\tstartInstrument     = CharCode.T, // added in BeepBox URL version 6\r\n\tchannelNames        = CharCode.U, // added in JummBox URL version 4(?) for channelNames\r\n\tfeedbackEnvelope    = CharCode.V, // added in BeepBox URL version 6, DEPRECATED\r\n\tpulseWidth          = CharCode.W, // added in BeepBox URL version 7\r\n\taliases             = CharCode.X, // added in JummBox URL version 4 for aliases, DEPRECATED, [UB] repurposed for PWM decimal offset (DEPRECATED as well)\r\n    songTheme           = CharCode.Y, // added in AbyssBox URL version 1\r\n    loopType            = CharCode.Z, // added in AbyssBox URL version 3\r\n//\t                    = CharCode.NUM_0, \r\n//                      = CharCode.NUM_1,\r\n//                      = CharCode.NUM_2, \r\n//                      = CharCode.NUM_3, \r\n//          \t        = CharCode.NUM_4, \r\n//\t                    = CharCode.NUM_5,\r\n//\t                    = CharCode.NUM_6,\r\n//\t                    = CharCode.NUM_7,\r\n//\t                    = CharCode.NUM_8,\r\n//\t                    = CharCode.NUM_9,\r\n//\t                    = CharCode.DASH,\r\n//\t                    = CharCode.UNDERSCORE,\r\n\r\n}\r\n/** A lookup table, using an arbitrary number in the range [0,63] as an index for this array. You'll get the character code for the base64 encoded version of that number. */\r\nconst base64IntToCharCode: ReadonlyArray<number> = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 45, 95];\r\n/** A lookup table, using an arbitrary number as an index for this array. You'll get the base64 encoded interger from the Character code version of that number. */\r\nconst base64CharCodeToInt: ReadonlyArray<number> = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 62, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 0, 0, 0, 63, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0, 0, 0, 0, 0]; // 62 could be represented by either \"-\" or \".\" for historical reasons. New songs should use \"-\".\r\n\r\n/**\r\n * BitFieldReader:\r\n * \r\n * A Class that splits a source string into bits. This assumes that the source is base64 encoded, so each character holds about 6 bits.\r\n */\r\nclass BitFieldReader {\r\n    /** The bits to be read as an array. */\r\n    private _bits: number[] = [];\r\n    /** The current position of the Index in the _bits array. */\r\n    private _readIndex: number = 0;\r\n\r\n    constructor(source: string, startIndex: number, stopIndex: number) {\r\n        for (let i: number = startIndex; i < stopIndex; i++) {\r\n            const value: number = base64CharCodeToInt[source.charCodeAt(i)];\r\n            this._bits.push((value >> 5) & 0x1);\r\n            this._bits.push((value >> 4) & 0x1);\r\n            this._bits.push((value >> 3) & 0x1);\r\n            this._bits.push((value >> 2) & 0x1);\r\n            this._bits.push((value >> 1) & 0x1);\r\n            this._bits.push(value & 0x1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reads a number of bits and returns a number.\r\n     * @param bitCount The number of bits to read\r\n     */\r\n    public read(bitCount: number): number {\r\n        let result: number = 0;\r\n        while (bitCount > 0) {\r\n            result = result << 1;\r\n            result += this._bits[this._readIndex++];\r\n            bitCount--;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /** Reads a number of bits with a minimum value and returns a number.\r\n     * \r\n     * @param minValue The minimum value the result should be.\r\n     * @param minBits The minimum number bits that should be read.\r\n     * @returns \r\n     */\r\n    public readLongTail(minValue: number, minBits: number): number {\r\n        let result: number = minValue;\r\n        let numBits: number = minBits;\r\n        while (this._bits[this._readIndex++]) {\r\n            result += 1 << numBits;\r\n            numBits++;\r\n        }\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            if (this._bits[this._readIndex++]) {\r\n                result += 1 << numBits;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Reads the duration of a part in units. A Part is 1/24th of a beat per unit.\r\n     */\r\n    public readPartDuration(): number {\r\n        return this.readLongTail(1, 3);\r\n    }\r\n\r\n    /**\r\n     * Reads the legacy code version of the duration of a part.\r\n     */\r\n    public readLegacyPartDuration(): number {\r\n        return this.readLongTail(1, 2);\r\n    }\r\n\r\n    /**\r\n     * The total number of pins. by default there are 2 pins, but every time you pitch bend a note it creates more pins.\r\n     */\r\n    public readPinCount(): number {\r\n        return this.readLongTail(1, 0);\r\n    }\r\n\r\n    /**\r\n     * Reads a pitches interval value.\r\n     */\r\n    public readPitchInterval(): number {\r\n        if (this.read(1)) {\r\n            return -this.readLongTail(1, 3);\r\n        } else {\r\n            return this.readLongTail(1, 3);\r\n        }\r\n    }\r\n}\r\n\r\nclass BitFieldWriter {\r\n    private _index: number = 0;\r\n    private _bits: number[] = [];\r\n\r\n    public clear() {\r\n        this._index = 0;\r\n    }\r\n\r\n    public write(bitCount: number, value: number): void {\r\n        bitCount--;\r\n        while (bitCount >= 0) {\r\n            this._bits[this._index++] = (value >>> bitCount) & 1;\r\n            bitCount--;\r\n        }\r\n    }\r\n\r\n    public writeLongTail(minValue: number, minBits: number, value: number): void {\r\n        if (value < minValue) throw new Error(\"value out of bounds\");\r\n        value -= minValue;\r\n        let numBits: number = minBits;\r\n        while (value >= (1 << numBits)) {\r\n            this._bits[this._index++] = 1;\r\n            value -= 1 << numBits;\r\n            numBits++;\r\n        }\r\n        this._bits[this._index++] = 0;\r\n        while (numBits > 0) {\r\n            numBits--;\r\n            this._bits[this._index++] = (value >>> numBits) & 1;\r\n        }\r\n    }\r\n\r\n    public writePartDuration(value: number): void {\r\n        this.writeLongTail(1, 3, value);\r\n    }\r\n\r\n    public writePinCount(value: number): void {\r\n        this.writeLongTail(1, 0, value);\r\n    }\r\n\r\n    public writePitchInterval(value: number): void {\r\n        if (value < 0) {\r\n            this.write(1, 1); // sign\r\n            this.writeLongTail(1, 3, -value);\r\n        } else {\r\n            this.write(1, 0); // sign\r\n            this.writeLongTail(1, 3, value);\r\n        }\r\n    }\r\n\r\n    public concat(other: BitFieldWriter): void {\r\n        for (let i: number = 0; i < other._index; i++) {\r\n            this._bits[this._index++] = other._bits[i];\r\n        }\r\n    }\r\n\r\n    public encodeBase64(buffer: number[]): number[] {\r\n\r\n        for (let i: number = 0; i < this._index; i += 6) {\r\n            const value: number = (this._bits[i] << 5) | (this._bits[i + 1] << 4) | (this._bits[i + 2] << 3) | (this._bits[i + 3] << 2) | (this._bits[i + 4] << 1) | this._bits[i + 5];\r\n            buffer.push(base64IntToCharCode[value]);\r\n        }\r\n        return buffer;\r\n    }\r\n\r\n    public lengthBase64(): number {\r\n        return Math.ceil(this._index / 6);\r\n    }\r\n}\r\n\r\nexport interface NotePin {\r\n    interval: number;\r\n    time: number;\r\n    size: number;\r\n}\r\n\r\nexport function makeNotePin(interval: number, time: number, size: number): NotePin {\r\n    return { interval: interval, time: time, size: size };\r\n}\r\n\r\nexport class Note {\r\n    public pitches: number[];\r\n    public pins: NotePin[];\r\n    public start: number;\r\n    public end: number;\r\n    public continuesLastPattern: boolean;\r\n\r\n    public constructor(pitch: number, start: number, end: number, size: number, fadeout: boolean = false) {\r\n        this.pitches = [pitch];\r\n        this.pins = [makeNotePin(0, 0, size), makeNotePin(0, end - start, fadeout ? 0 : size)];\r\n        this.start = start;\r\n        this.end = end;\r\n        this.continuesLastPattern = false;\r\n    }\r\n\r\n    public pickMainInterval(): number {\r\n        let longestFlatIntervalDuration: number = 0;\r\n        let mainInterval: number = 0;\r\n        for (let pinIndex: number = 1; pinIndex < this.pins.length; pinIndex++) {\r\n            const pinA: NotePin = this.pins[pinIndex - 1];\r\n            const pinB: NotePin = this.pins[pinIndex];\r\n            if (pinA.interval == pinB.interval) {\r\n                const duration: number = pinB.time - pinA.time;\r\n                if (longestFlatIntervalDuration < duration) {\r\n                    longestFlatIntervalDuration = duration;\r\n                    mainInterval = pinA.interval;\r\n                }\r\n            }\r\n        }\r\n        if (longestFlatIntervalDuration == 0) {\r\n            let loudestSize: number = 0;\r\n            for (let pinIndex: number = 0; pinIndex < this.pins.length; pinIndex++) {\r\n                const pin: NotePin = this.pins[pinIndex];\r\n                if (loudestSize < pin.size) {\r\n                    loudestSize = pin.size;\r\n                    mainInterval = pin.interval;\r\n                }\r\n            }\r\n        }\r\n        return mainInterval;\r\n    }\r\n\r\n    public clone(): Note {\r\n        const newNote: Note = new Note(-1, this.start, this.end, 3);\r\n        newNote.pitches = this.pitches.concat();\r\n        newNote.pins = [];\r\n        for (const pin of this.pins) {\r\n            newNote.pins.push(makeNotePin(pin.interval, pin.time, pin.size));\r\n        }\r\n        newNote.continuesLastPattern = this.continuesLastPattern;\r\n        return newNote;\r\n    }\r\n\r\n    public getEndPinIndex(part: number): number {\r\n        let endPinIndex: number;\r\n        for (endPinIndex = 1; endPinIndex < this.pins.length - 1; endPinIndex++) {\r\n            if (this.pins[endPinIndex].time + this.start > part) break;\r\n        }\r\n        return endPinIndex;\r\n    }\r\n}\r\n\r\nexport class Pattern {\r\n    public notes: Note[] = [];\r\n    public readonly instruments: number[] = [0];\r\n\r\n    public cloneNotes(): Note[] {\r\n        const result: Note[] = [];\r\n        for (const note of this.notes) {\r\n            result.push(note.clone());\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public reset(): void {\r\n        this.notes.length = 0;\r\n        this.instruments[0] = 0;\r\n        this.instruments.length = 1;\r\n    }\r\n\r\n    public toJsonObject(song: Song, channel: Channel, isModChannel: boolean): any {\r\n        const noteArray: Object[] = [];\r\n        for (const note of this.notes) {\r\n            // Only one ins per pattern is enforced in mod channels.\r\n            let instrument: Instrument = channel.instruments[this.instruments[0]];\r\n            let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\r\n            let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\r\n            const pointArray: Object[] = [];\r\n            for (const pin of note.pins) {\r\n                let useVol: number = isModChannel ? Math.round(pin.size) : Math.round(pin.size * 100 / volumeCap);\r\n                pointArray.push({\r\n                    \"tick\": (pin.time + note.start) * Config.rhythms[song.rhythm].stepsPerBeat / Config.partsPerBeat,\r\n                    \"pitchBend\": pin.interval,\r\n                    \"volume\": useVol,\r\n                    \"forMod\": isModChannel,\r\n                });\r\n            }\r\n\r\n            const noteObject: any = {\r\n                \"pitches\": note.pitches,\r\n                \"points\": pointArray,\r\n            };\r\n            if (note.start == 0) {\r\n                noteObject[\"continuesLastPattern\"] = note.continuesLastPattern;\r\n            }\r\n            noteArray.push(noteObject);\r\n        }\r\n\r\n        const patternObject: any = { \"notes\": noteArray };\r\n        if (song.patternInstruments) {\r\n            patternObject[\"instruments\"] = this.instruments.map(i => i + 1);\r\n        }\r\n        return patternObject;\r\n    }\r\n\r\n    public fromJsonObject(patternObject: any, song: Song, channel: Channel, importedPartsPerBeat: number, isNoiseChannel: boolean, isModChannel: boolean, jsonFormat: string = \"auto\"): void {\r\n        const format: string = jsonFormat.toLowerCase();\r\n        if (song.patternInstruments) {\r\n            if (Array.isArray(patternObject[\"instruments\"])) {\r\n                const instruments: any[] = patternObject[\"instruments\"];\r\n                const instrumentCount: number = clamp(Config.instrumentCountMin, song.getMaxInstrumentsPerPatternForChannel(channel) + 1, instruments.length);\r\n                for (let j: number = 0; j < instrumentCount; j++) {\r\n                    this.instruments[j] = clamp(0, channel.instruments.length, (instruments[j] | 0) - 1);\r\n                }\r\n                this.instruments.length = instrumentCount;\r\n            } else {\r\n                this.instruments[0] = clamp(0, channel.instruments.length, (patternObject[\"instrument\"] | 0) - 1);\r\n                this.instruments.length = 1;\r\n            }\r\n        }\r\n\r\n        if (patternObject[\"notes\"] && patternObject[\"notes\"].length > 0) {\r\n            const maxNoteCount: number = Math.min(song.beatsPerBar * Config.partsPerBeat * (isModChannel ? Config.modCount : 1), patternObject[\"notes\"].length >>> 0);\r\n\r\n            // TODO: Consider supporting notes specified in any timing order, sorting them and truncating as necessary.\r\n            //let tickClock: number = 0;\r\n            for (let j: number = 0; j < patternObject[\"notes\"].length; j++) {\r\n                if (j >= maxNoteCount) break;\r\n\r\n                const noteObject = patternObject[\"notes\"][j];\r\n                if (!noteObject || !noteObject[\"pitches\"] || !(noteObject[\"pitches\"].length >= 1) || !noteObject[\"points\"] || !(noteObject[\"points\"].length >= 2)) {\r\n                    continue;\r\n                }\r\n\r\n                const note: Note = new Note(0, 0, 0, 0);\r\n                note.pitches = [];\r\n                note.pins = [];\r\n\r\n                for (let k: number = 0; k < noteObject[\"pitches\"].length; k++) {\r\n                    const pitch: number = noteObject[\"pitches\"][k] | 0;\r\n                    if (note.pitches.indexOf(pitch) != -1) continue;\r\n                    note.pitches.push(pitch);\r\n                    if (note.pitches.length >= Config.maxChordSize) break;\r\n                }\r\n                if (note.pitches.length < 1) continue;\r\n\r\n                //let noteClock: number = tickClock;\r\n                let startInterval: number = 0;\r\n                let instrument: Instrument = channel.instruments[this.instruments[0]];\r\n                let mod: number = Math.max(0, Config.modCount - note.pitches[0] - 1);\r\n                for (let k: number = 0; k < noteObject[\"points\"].length; k++) {\r\n                    const pointObject: any = noteObject[\"points\"][k];\r\n                    if (pointObject == undefined || pointObject[\"tick\"] == undefined) continue;\r\n                    const interval: number = (pointObject[\"pitchBend\"] == undefined) ? 0 : (pointObject[\"pitchBend\"] | 0);\r\n\r\n                    const time: number = Math.round((+pointObject[\"tick\"]) * Config.partsPerBeat / importedPartsPerBeat);\r\n\r\n                    // Only one instrument per pattern allowed in mod channels.\r\n                    let volumeCap: number = song.getVolumeCapForSetting(isModChannel, instrument.modulators[mod], instrument.modFilterTypes[mod]);\r\n\r\n                    // The strange volume formula used for notes is not needed for mods. Some rounding errors were possible.\r\n                    // A \"forMod\" signifier was added to new JSON export to detect when the higher precision export was used in a file.\r\n                    let size: number;\r\n                    if (pointObject[\"volume\"] == undefined) {\r\n                        size = volumeCap;\r\n                    } else if (pointObject[\"forMod\"] == undefined) {\r\n                        size = Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                    }\r\n                    else {\r\n                        size = ((pointObject[\"forMod\"] | 0) > 0) ? Math.round(pointObject[\"volume\"] | 0) : Math.max(0, Math.min(volumeCap, Math.round((pointObject[\"volume\"] | 0) * volumeCap / 100)));\r\n                    }\r\n\r\n                    if (time > song.beatsPerBar * Config.partsPerBeat) continue;\r\n                    if (note.pins.length == 0) {\r\n                        //if (time < noteClock) continue;\r\n                        note.start = time;\r\n                        startInterval = interval;\r\n                    } else {\r\n                        //if (time <= noteClock) continue;\r\n                    }\r\n                    //noteClock = time;\r\n\r\n                    note.pins.push(makeNotePin(interval - startInterval, time - note.start, size));\r\n                }\r\n                if (note.pins.length < 2) continue;\r\n\r\n                note.end = note.pins[note.pins.length - 1].time + note.start;\r\n\r\n                const maxPitch: number = isNoiseChannel ? Config.drumCount - 1 : Config.maxPitch;\r\n                let lowestPitch: number = maxPitch;\r\n                let highestPitch: number = 0;\r\n                for (let k: number = 0; k < note.pitches.length; k++) {\r\n                    note.pitches[k] += startInterval;\r\n                    if (note.pitches[k] < 0 || note.pitches[k] > maxPitch) {\r\n                        note.pitches.splice(k, 1);\r\n                        k--;\r\n                    }\r\n                    if (note.pitches[k] < lowestPitch) lowestPitch = note.pitches[k];\r\n                    if (note.pitches[k] > highestPitch) highestPitch = note.pitches[k];\r\n                }\r\n                if (note.pitches.length < 1) continue;\r\n\r\n                for (let k: number = 0; k < note.pins.length; k++) {\r\n                    const pin: NotePin = note.pins[k];\r\n                    if (pin.interval + lowestPitch < 0) pin.interval = -lowestPitch;\r\n                    if (pin.interval + highestPitch > maxPitch) pin.interval = maxPitch - highestPitch;\r\n                    if (k >= 2) {\r\n                        if (pin.interval == note.pins[k - 1].interval &&\r\n                            pin.interval == note.pins[k - 2].interval &&\r\n                            pin.size == note.pins[k - 1].size &&\r\n                            pin.size == note.pins[k - 2].size) {\r\n                            note.pins.splice(k - 1, 1);\r\n                            k--;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (note.start == 0) {\r\n                    note.continuesLastPattern = (noteObject[\"continuesLastPattern\"] === true);\r\n                } else {\r\n                    note.continuesLastPattern = false;\r\n                }\r\n\r\n                if ((format != \"ultrabox\"&& format != \"abyssbox\") && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\r\n                    for (const pin of note.pins) {\r\n                        const oldMin: number = 30;\r\n                        const newMin: number = 1;\r\n                        const old: number = pin.size + oldMin;\r\n                        pin.size = old - newMin; // convertRealFactor will add back newMin as necessary\r\n                    }\r\n                }\r\n\r\n                this.notes.push(note);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport class Operator {\r\n    public frequency: number = 4;\r\n    public amplitude: number = 0;\r\n    public waveform: number = 0;\r\n    public pulseWidth: number = 0.5;\r\n\r\n    constructor(index: number) {\r\n        this.reset(index);\r\n    }\r\n\r\n    public reset(index: number): void {\r\n        this.frequency = 4; //defualt to 1x\r\n        this.amplitude = (index <= 1) ? Config.operatorAmplitudeMax : 0;\r\n        this.waveform = 0;\r\n        this.pulseWidth = 5;\r\n    }\r\n\r\n    public copy(other: Operator): void {\r\n        this.frequency = other.frequency;\r\n        this.amplitude = other.amplitude;\r\n        this.waveform = other.waveform;\r\n        this.pulseWidth = other.pulseWidth;\r\n    }\r\n}\r\n\r\nexport class CustomAlgorithm {\r\n    public name: string = \"\";\r\n    public carrierCount: number = 0;\r\n    public modulatedBy: number[][] = [[], [], [], [], [], []];\r\n    public associatedCarrier: number[] = [];\r\n\r\n    constructor(){\r\n        this.fromPreset(1);\r\n    }\r\n\r\n    public set(carriers: number, modulation: number[][]) {\r\n        this.reset();\r\n        this.carrierCount = carriers;\r\n        for (let i = 0; i < this.modulatedBy.length; i++) {\r\n            this.modulatedBy[i] = modulation[i];\r\n            if (i < carriers) {\r\n                this.associatedCarrier[i] = i+1;\r\n            }\r\n            this.name += (i+1);\r\n            for (let j = 0; j < modulation[i].length;j++) {\r\n                this.name += modulation[i][j];\r\n                if (modulation[i][j] > carriers-1) {\r\n                    this.associatedCarrier[modulation[i][j] - 1] = i + 1;\r\n                }\r\n                this.name += \",\";\r\n            }\r\n            if (i < carriers) {\r\n                this.name += \"|\";\r\n            } else {\r\n                this.name += \".\";\r\n            }\r\n        }\r\n    }\r\n\r\n    public reset(): void {\r\n        this.name = \"\"\r\n        this.carrierCount = 1;\r\n        this.modulatedBy = [[2, 3, 4, 5, 6], [], [], [], [], []];\r\n        this.associatedCarrier = [1, 1, 1, 1, 1, 1];\r\n    }\r\n\r\n    public copy(other: CustomAlgorithm): void {\r\n        this.name = other.name;\r\n        this.carrierCount = other.carrierCount;\r\n        this.modulatedBy = other.modulatedBy;\r\n        this.associatedCarrier = other.associatedCarrier;\r\n    }\r\n\r\n    public fromPreset(other: number): void {\r\n        this.reset();\r\n        let preset = Config.algorithms6Op[other]\r\n        this.name = preset.name;\r\n        this.carrierCount = preset.carrierCount;\r\n        for (var i = 0; i < preset.modulatedBy.length; i++) {\r\n            this.modulatedBy[i] = Array.from(preset.modulatedBy[i]);\r\n            this.associatedCarrier[i] = preset.associatedCarrier[i];\r\n        }\r\n    }\r\n}\r\n\r\nexport class CustomFeedBack { //feels redunant\r\n    public name: string = \"\";\r\n    public indices: number[][] = [[], [], [], [], [], []];\r\n\r\n    constructor() {\r\n        this.fromPreset(1);\r\n    }\r\n\r\n    public set(inIndices: number[][]) {\r\n        this.reset();\r\n        for (let i = 0; i < this.indices.length; i++) {\r\n            this.indices[i] = inIndices[i];\r\n            for (let j = 0; j < inIndices[i].length; j++) {\r\n                this.name += inIndices[i][j];\r\n                this.name += \",\";\r\n            }\r\n            this.name += \".\";\r\n        }\r\n    }\r\n\r\n    public reset(): void {\r\n        this.reset;\r\n        this.name = \"\";\r\n        this.indices = [[1], [], [], [], [], []];\r\n    }\r\n\r\n    public copy(other: CustomFeedBack): void {\r\n        this.name = other.name;\r\n        this.indices = other.indices;\r\n    }\r\n\r\n    public fromPreset(other: number): void {\r\n        this.reset();\r\n        let preset = Config.feedbacks6Op[other]\r\n        for (var i = 0; i < preset.indices.length; i++) {\r\n            this.indices[i] = Array.from(preset.indices[i]);\r\n            for (let j = 0; j < preset.indices[i].length; j++) {\r\n                this.name += preset.indices[i][j];\r\n                this.name += \",\";\r\n            }\r\n            this.name += \".\";\r\n        }\r\n    }\r\n}\r\n\r\nexport class SpectrumWave {\r\n    public spectrum: number[] = [];\r\n    public hash: number = -1;\r\n\r\n    constructor(isNoiseChannel: boolean) {\r\n        this.reset(isNoiseChannel);\r\n    }\r\n\r\n    public reset(isNoiseChannel: boolean): void {\r\n        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n            if (isNoiseChannel) {\r\n                this.spectrum[i] = Math.round(Config.spectrumMax * (1 / Math.sqrt(1 + i / 3)));\r\n            } else {\r\n                const isHarmonic: boolean = i == 0 || i == 7 || i == 11 || i == 14 || i == 16 || i == 18 || i == 21 || i == 23 || i >= 25;\r\n                this.spectrum[i] = isHarmonic ? Math.max(0, Math.round(Config.spectrumMax * (1 - i / 30))) : 0;\r\n            }\r\n        }\r\n        this.markCustomWaveDirty();\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.spectrumMax + 2) - 1;\r\n        let hash: number = 0;\r\n        for (const point of this.spectrum) hash = ((hash * hashMult) + point) >>> 0;\r\n        this.hash = hash;\r\n    }\r\n}\r\n\r\nclass SpectrumWaveState {\r\n    public wave: Float32Array | null = null;\r\n    private _hash: number = -1;\r\n\r\n    public getCustomWave(settings: SpectrumWave, lowestOctave: number): Float32Array {\r\n        if (this._hash == settings.hash) return this.wave!;\r\n        this._hash = settings.hash;\r\n\r\n        const waveLength: number = Config.spectrumNoiseLength;\r\n        if (this.wave == null || this.wave.length != waveLength + 1) {\r\n            this.wave = new Float32Array(waveLength + 1);\r\n        }\r\n        const wave: Float32Array = this.wave;\r\n\r\n        for (let i: number = 0; i < waveLength; i++) {\r\n            wave[i] = 0;\r\n        }\r\n\r\n        const highestOctave: number = 14;\r\n        const falloffRatio: number = 0.25;\r\n        // Nudge the 2/7 and 4/7 control points so that they form harmonic intervals.\r\n        const pitchTweak: number[] = [0, 1 / 7, Math.log2(5 / 4), 3 / 7, Math.log2(3 / 2), 5 / 7, 6 / 7];\r\n        function controlPointToOctave(point: number): number {\r\n            return lowestOctave + Math.floor(point / Config.spectrumControlPointsPerOctave) + pitchTweak[(point + Config.spectrumControlPointsPerOctave) % Config.spectrumControlPointsPerOctave];\r\n        }\r\n\r\n        let combinedAmplitude: number = 1;\r\n        for (let i: number = 0; i < Config.spectrumControlPoints + 1; i++) {\r\n            const value1: number = (i <= 0) ? 0 : settings.spectrum[i - 1];\r\n            const value2: number = (i >= Config.spectrumControlPoints) ? settings.spectrum[Config.spectrumControlPoints - 1] : settings.spectrum[i];\r\n            const octave1: number = controlPointToOctave(i - 1);\r\n            let octave2: number = controlPointToOctave(i);\r\n            if (i >= Config.spectrumControlPoints) octave2 = highestOctave + (octave2 - highestOctave) * falloffRatio;\r\n            if (value1 == 0 && value2 == 0) continue;\r\n\r\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, octave1, octave2, value1 / Config.spectrumMax, value2 / Config.spectrumMax, -0.5);\r\n        }\r\n        if (settings.spectrum[Config.spectrumControlPoints - 1] > 0) {\r\n            combinedAmplitude += 0.02 * drawNoiseSpectrum(wave, waveLength, highestOctave + (controlPointToOctave(Config.spectrumControlPoints) - highestOctave) * falloffRatio, highestOctave, settings.spectrum[Config.spectrumControlPoints - 1] / Config.spectrumMax, 0, -0.5);\r\n        }\r\n\r\n        inverseRealFourierTransform(wave, waveLength);\r\n        scaleElementsByFactor(wave, 5.0 / (Math.sqrt(waveLength) * Math.pow(combinedAmplitude, 0.75)));\r\n\r\n        // Duplicate the first sample at the end for easier wrap-around interpolation.\r\n        wave[waveLength] = wave[0];\r\n\r\n        return wave;\r\n    }\r\n}\r\n\r\nexport class HarmonicsWave {\r\n    public harmonics: number[] = [];\r\n    public hash: number = -1;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n            this.harmonics[i] = 0;\r\n        }\r\n        this.harmonics[0] = Config.harmonicsMax;\r\n        this.harmonics[3] = Config.harmonicsMax;\r\n        this.harmonics[6] = Config.harmonicsMax;\r\n        this.markCustomWaveDirty();\r\n    }\r\n\r\n    public markCustomWaveDirty(): void {\r\n        const hashMult: number = Synth.fittingPowerOfTwo(Config.harmonicsMax + 2) - 1;\r\n        let hash: number = 0;\r\n        for (const point of this.harmonics) hash = ((hash * hashMult) + point) >>> 0;\r\n        this.hash = hash;\r\n    }\r\n}\r\n\r\nclass HarmonicsWaveState {\r\n    public wave: Float32Array | null = null;\r\n    private _hash: number = -1;\r\n    private _generatedForType: InstrumentType;\r\n\r\n    public getCustomWave(settings: HarmonicsWave, instrumentType: InstrumentType): Float32Array {\r\n        if (this._hash == settings.hash && this._generatedForType == instrumentType) return this.wave!;\r\n        this._hash = settings.hash;\r\n        this._generatedForType = instrumentType;\r\n\r\n        const harmonicsRendered: number = (instrumentType == InstrumentType.pickedString) ? Config.harmonicsRenderedForPickedString : Config.harmonicsRendered;\r\n\r\n        const waveLength: number = Config.harmonicsWavelength;\r\n        const retroWave: Float32Array = getDrumWave(0, null, null);\r\n\r\n        if (this.wave == null || this.wave.length != waveLength + 1) {\r\n            this.wave = new Float32Array(waveLength + 1);\r\n        }\r\n        const wave: Float32Array = this.wave;\r\n\r\n        for (let i: number = 0; i < waveLength; i++) {\r\n            wave[i] = 0;\r\n        }\r\n\r\n        const overallSlope: number = -0.25;\r\n        let combinedControlPointAmplitude: number = 1;\r\n\r\n        for (let harmonicIndex: number = 0; harmonicIndex < harmonicsRendered; harmonicIndex++) {\r\n            const harmonicFreq: number = harmonicIndex + 1;\r\n            let controlValue: number = harmonicIndex < Config.harmonicsControlPoints ? settings.harmonics[harmonicIndex] : settings.harmonics[Config.harmonicsControlPoints - 1];\r\n            if (harmonicIndex >= Config.harmonicsControlPoints) {\r\n                controlValue *= 1 - (harmonicIndex - Config.harmonicsControlPoints) / (harmonicsRendered - Config.harmonicsControlPoints);\r\n            }\r\n            const normalizedValue: number = controlValue / Config.harmonicsMax;\r\n            let amplitude: number = Math.pow(2, controlValue - Config.harmonicsMax + 1) * Math.sqrt(normalizedValue);\r\n            if (harmonicIndex < Config.harmonicsControlPoints) {\r\n                combinedControlPointAmplitude += amplitude;\r\n            }\r\n            amplitude *= Math.pow(harmonicFreq, overallSlope);\r\n\r\n            // Multiply all the sine wave amplitudes by 1 or -1 based on the LFSR\r\n            // retro wave (effectively random) to avoid egregiously tall spikes.\r\n            amplitude *= retroWave[harmonicIndex + 589];\r\n\r\n            wave[waveLength - harmonicFreq] = amplitude;\r\n        }\r\n\r\n        inverseRealFourierTransform(wave, waveLength);\r\n\r\n        // Limit the maximum wave amplitude.\r\n        const mult: number = 1 / Math.pow(combinedControlPointAmplitude, 0.7);\r\n        for (let i: number = 0; i < wave.length; i++) wave[i] *= mult;\r\n\r\n        performIntegralOld(wave);\r\n\r\n        // The first sample should be zero, and we'll duplicate it at the end for easier interpolation.\r\n        wave[waveLength] = wave[0];\r\n\r\n        return wave;\r\n    }\r\n}\r\n\r\nexport class FilterControlPoint {\r\n    public freq: number = 0;\r\n    public gain: number = Config.filterGainCenter;\r\n    public type: FilterType = FilterType.peak;\r\n\r\n    public set(freqSetting: number, gainSetting: number): void {\r\n        this.freq = freqSetting;\r\n        this.gain = gainSetting;\r\n    }\r\n\r\n    public getHz(): number {\r\n        return FilterControlPoint.getHzFromSettingValue(this.freq);\r\n    }\r\n\r\n    public static getHzFromSettingValue(value: number): number {\r\n        return Config.filterFreqReferenceHz * Math.pow(2.0, (value - Config.filterFreqReferenceSetting) * Config.filterFreqStep);\r\n    }\r\n    public static getSettingValueFromHz(hz: number): number {\r\n        return Math.log2(hz / Config.filterFreqReferenceHz) / Config.filterFreqStep + Config.filterFreqReferenceSetting;\r\n    }\r\n    public static getRoundedSettingValueFromHz(hz: number): number {\r\n        return Math.max(0, Math.min(Config.filterFreqRange - 1, Math.round(FilterControlPoint.getSettingValueFromHz(hz))));\r\n    }\r\n\r\n    public getLinearGain(peakMult: number = 1.0): number {\r\n        const power: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\r\n        const neutral: number = (this.type == FilterType.peak) ? 0.0 : -0.5;\r\n        const interpolatedPower: number = neutral + (power - neutral) * peakMult;\r\n        return Math.pow(2.0, interpolatedPower);\r\n    }\r\n    public static getRoundedSettingValueFromLinearGain(linearGain: number): number {\r\n        return Math.max(0, Math.min(Config.filterGainRange - 1, Math.round(Math.log2(linearGain) / Config.filterGainStep + Config.filterGainCenter)));\r\n    }\r\n\r\n    public toCoefficients(filter: FilterCoefficients, sampleRate: number, freqMult: number = 1.0, peakMult: number = 1.0): void {\r\n        const cornerRadiansPerSample: number = 2.0 * Math.PI * Math.max(Config.filterFreqMinHz, Math.min(Config.filterFreqMaxHz, freqMult * this.getHz())) / sampleRate;\r\n        const linearGain: number = this.getLinearGain(peakMult);\r\n        switch (this.type) {\r\n            case FilterType.lowPass:\r\n                filter.lowPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\r\n                break;\r\n            case FilterType.highPass:\r\n                filter.highPass2ndOrderButterworth(cornerRadiansPerSample, linearGain);\r\n                break;\r\n            case FilterType.peak:\r\n                filter.peak2ndOrder(cornerRadiansPerSample, linearGain, 1.0);\r\n                break;\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    public getVolumeCompensationMult(): number {\r\n        const octave: number = (this.freq - Config.filterFreqReferenceSetting) * Config.filterFreqStep;\r\n        const gainPow: number = (this.gain - Config.filterGainCenter) * Config.filterGainStep;\r\n        switch (this.type) {\r\n            case FilterType.lowPass:\r\n                const freqRelativeTo8khz: number = Math.pow(2.0, octave) * Config.filterFreqReferenceHz / 8000.0;\r\n                // Reverse the frequency warping from importing legacy simplified filters to imitate how the legacy filter cutoff setting affected volume.\r\n                const warpedFreq: number = (Math.sqrt(1.0 + 4.0 * freqRelativeTo8khz) - 1.0) / 2.0;\r\n                const warpedOctave: number = Math.log2(warpedFreq);\r\n                return Math.pow(0.5, 0.2 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, Math.max(-3.0, 0.595 * warpedOctave + 0.35 * Math.min(0.0, gainPow + 1.0))));\r\n            case FilterType.highPass:\r\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow + 1.0) + Math.min(0.0, 0.3 * (-octave - Math.log2(Config.filterFreqReferenceHz / 125.0)) + 0.2 * Math.min(0.0, gainPow + 1.0)));\r\n            case FilterType.peak:\r\n                const distanceFromCenter: number = octave + Math.log2(Config.filterFreqReferenceHz / 2000.0);\r\n                const freqLoudness: number = Math.pow(1.0 / (1.0 + Math.pow(distanceFromCenter / 3.0, 2.0)), 2.0);\r\n                return Math.pow(0.5, 0.125 * Math.max(0.0, gainPow) + 0.1 * freqLoudness * Math.min(0.0, gainPow));\r\n            default:\r\n                throw new Error();\r\n        }\r\n    }\r\n}\r\n\r\nexport class FilterSettings {\r\n    public readonly controlPoints: FilterControlPoint[] = [];\r\n    public controlPointCount: number = 0;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    reset(): void {\r\n        this.controlPointCount = 0;\r\n    }\r\n\r\n    addPoint(type: FilterType, freqSetting: number, gainSetting: number): void {\r\n        let controlPoint: FilterControlPoint;\r\n        if (this.controlPoints.length <= this.controlPointCount) {\r\n            controlPoint = new FilterControlPoint();\r\n            this.controlPoints[this.controlPointCount] = controlPoint;\r\n        } else {\r\n            controlPoint = this.controlPoints[this.controlPointCount];\r\n        }\r\n        this.controlPointCount++;\r\n        controlPoint.type = type;\r\n        controlPoint.set(freqSetting, gainSetting);\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const filterArray: any[] = [];\r\n        for (let i: number = 0; i < this.controlPointCount; i++) {\r\n            const point: FilterControlPoint = this.controlPoints[i];\r\n            filterArray.push({\r\n                \"type\": Config.filterTypeNames[point.type],\r\n                \"cutoffHz\": Math.round(point.getHz() * 100) / 100,\r\n                \"linearGain\": Math.round(point.getLinearGain() * 10000) / 10000,\r\n            });\r\n        }\r\n        return filterArray;\r\n    }\r\n\r\n    public fromJsonObject(filterObject: any): void {\r\n        this.controlPoints.length = 0;\r\n        if (filterObject) {\r\n            for (const pointObject of filterObject) {\r\n                const point: FilterControlPoint = new FilterControlPoint();\r\n                point.type = Config.filterTypeNames.indexOf(pointObject[\"type\"]);\r\n                if (<any>point.type == -1) point.type = FilterType.peak;\r\n                if (pointObject[\"cutoffHz\"] != undefined) {\r\n                    point.freq = FilterControlPoint.getRoundedSettingValueFromHz(pointObject[\"cutoffHz\"]);\r\n                } else {\r\n                    point.freq = 0;\r\n                }\r\n                if (pointObject[\"linearGain\"] != undefined) {\r\n                    point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(pointObject[\"linearGain\"]);\r\n                } else {\r\n                    point.gain = Config.filterGainCenter;\r\n                }\r\n                this.controlPoints.push(point);\r\n            }\r\n        }\r\n        this.controlPointCount = this.controlPoints.length;\r\n    }\r\n\r\n    /**  Returns true if all filter control points match in number and type (but not freq/gain) */\r\n    public static filtersCanMorph(filterA: FilterSettings, filterB: FilterSettings): boolean {\r\n        if (filterA.controlPointCount != filterB.controlPointCount)\r\n            return false;\r\n        for (let i: number = 0; i < filterA.controlPointCount; i++) {\r\n            if (filterA.controlPoints[i].type != filterB.controlPoints[i].type)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /** Interpolate two FilterSettings, where pos=0 is filterA and pos=1 is filterB */\r\n    public static lerpFilters(filterA: FilterSettings, filterB: FilterSettings, pos: number): FilterSettings {\r\n\r\n        let lerpedFilter: FilterSettings = new FilterSettings();\r\n\r\n        /** One setting or another is null, return the other. */\r\n        if (filterA == null) {\r\n            return filterA;\r\n        }\r\n        if (filterB == null) {\r\n            return filterB;\r\n        }\r\n\r\n        pos = Math.max(0, Math.min(1, pos));\r\n\r\n        /** Filter control points match in number and type*/\r\n        if (this.filtersCanMorph(filterA, filterB)) {\r\n            for (let i: number = 0; i < filterA.controlPointCount; i++) {\r\n                lerpedFilter.controlPoints[i] = new FilterControlPoint();\r\n                lerpedFilter.controlPoints[i].type = filterA.controlPoints[i].type;\r\n                lerpedFilter.controlPoints[i].freq = filterA.controlPoints[i].freq + (filterB.controlPoints[i].freq - filterA.controlPoints[i].freq) * pos;\r\n                lerpedFilter.controlPoints[i].gain = filterA.controlPoints[i].gain + (filterB.controlPoints[i].gain - filterA.controlPoints[i].gain) * pos;\r\n            }\r\n\r\n            lerpedFilter.controlPointCount = filterA.controlPointCount;\r\n\r\n            return lerpedFilter;\r\n        }\r\n        else {\r\n            // Not allowing morph of unmatching filters for now. It's a hornet's nest of problems, and I had it implemented and mostly working and it didn't sound very interesting since the shape becomes \"mushy\" in between\r\n            return (pos >= 1) ? filterB : filterA;\r\n        }\r\n    }\r\n\r\n    public convertLegacySettings(legacyCutoffSetting: number, legacyResonanceSetting: number, legacyEnv: Envelope): void {\r\n        this.reset();\r\n\r\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\r\n        const legacyFilterMax: number = 0.95;\r\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\r\n        const legacyFilterMaxResonance: number = 0.95;\r\n        const legacyFilterCutoffRange: number = 11;\r\n        const legacyFilterResonanceRange: number = 8;\r\n\r\n        const resonant: boolean = (legacyResonanceSetting > 1);\r\n        const firstOrder: boolean = (legacyResonanceSetting == 0);\r\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\r\n        const envDecays: boolean = (legacyEnv.type == EnvelopeType.flare || legacyEnv.type == EnvelopeType.twang || legacyEnv.type == EnvelopeType.decay || legacyEnv.type == EnvelopeType.noteSize);\r\n\r\n        const standardSampleRate: number = 48000;\r\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\r\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\r\n\r\n        if (legacyEnv.type == EnvelopeType.none && !resonant && cutoffAtMax) {\r\n            // The response is flat and there's no envelopes, so don't even bother adding any control points.\r\n        } else if (firstOrder) {\r\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\r\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\r\n            // However, BeepBox's original lowpass filters behaved oddly as they\r\n            // approach the nyquist frequency, so I've devised this curved conversion\r\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\r\n            const extraOctaves: number = 3.5;\r\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\r\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\r\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\r\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\r\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\r\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\r\n\r\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\r\n            const response: FrequencyResponse = new FrequencyResponse();\r\n            response.analyze(legacyFilter, finalRadians);\r\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\r\n\r\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\r\n            // Bias slightly toward 2^(-extraOctaves):\r\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\r\n            // Decaying envelopes move the cutoff frequency back into an area where the best approximation of the first order slope requires a lower gain setting.\r\n            if (envDecays) logGain = Math.min(logGain, -1.0);\r\n            const convertedGain: number = Math.pow(2.0, logGain);\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        } else {\r\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\r\n            const invertedGain: number = 0.5 / intendedGain;\r\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\r\n            const freqRatio: number = legacyRadians / maxRadians;\r\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\r\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\r\n            let curvedHz: number;\r\n            if (envDecays) {\r\n                curvedHz = standardSampleRate * Math.min(curvedRadians, legacyRadians * Math.pow(2, 0.25)) / (2.0 * Math.PI);\r\n            } else {\r\n                curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\r\n            }\r\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\r\n\r\n            let legacyFilterGain: number;\r\n            if (envDecays) {\r\n                legacyFilterGain = intendedGain;\r\n            } else {\r\n                const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n                legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\r\n                const response: FrequencyResponse = new FrequencyResponse();\r\n                response.analyze(legacyFilter, curvedRadians);\r\n                legacyFilterGain = response.magnitude();\r\n            }\r\n            if (!resonant) legacyFilterGain = Math.min(legacyFilterGain, Math.sqrt(0.5));\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        }\r\n\r\n        // Added for JummBox - making a 0 point filter does not truncate control points!\r\n        this.controlPoints.length = this.controlPointCount;\r\n    }\r\n\r\n    // Similar to above, but purpose-fit for quick conversions in synth calls.\r\n    public convertLegacySettingsForSynth(legacyCutoffSetting: number, legacyResonanceSetting: number, allowFirstOrder: boolean = false): void {\r\n        this.reset();\r\n\r\n        const legacyFilterCutoffMaxHz: number = 8000; // This was carefully calculated to correspond to no change in response when filtering at 48000 samples per second... when using the legacy simplified low-pass filter.\r\n        const legacyFilterMax: number = 0.95;\r\n        const legacyFilterMaxRadians: number = Math.asin(legacyFilterMax / 2.0) * 2.0;\r\n        const legacyFilterMaxResonance: number = 0.95;\r\n        const legacyFilterCutoffRange: number = 11;\r\n        const legacyFilterResonanceRange: number = 8;\r\n\r\n        const firstOrder: boolean = (legacyResonanceSetting == 0 && allowFirstOrder);\r\n        const standardSampleRate: number = 48000;\r\n        const legacyHz: number = legacyFilterCutoffMaxHz * Math.pow(2.0, (legacyCutoffSetting - (legacyFilterCutoffRange - 1)) * 0.5);\r\n        const legacyRadians: number = Math.min(legacyFilterMaxRadians, 2 * Math.PI * legacyHz / standardSampleRate);\r\n\r\n        if (firstOrder) {\r\n            // In general, a 1st order lowpass can be approximated by a 2nd order lowpass\r\n            // with a cutoff ~4 octaves higher (*16) and a gain of 1/16.\r\n            // However, BeepBox's original lowpass filters behaved oddly as they\r\n            // approach the nyquist frequency, so I've devised this curved conversion\r\n            // to guess at a perceptually appropriate new cutoff frequency and gain.\r\n            const extraOctaves: number = 3.5;\r\n            const targetRadians: number = legacyRadians * Math.pow(2.0, extraOctaves);\r\n            const curvedRadians: number = targetRadians / (1.0 + targetRadians / Math.PI);\r\n            const curvedHz: number = standardSampleRate * curvedRadians / (2.0 * Math.PI)\r\n            const freqSetting: number = FilterControlPoint.getRoundedSettingValueFromHz(curvedHz);\r\n            const finalHz: number = FilterControlPoint.getHzFromSettingValue(freqSetting);\r\n            const finalRadians: number = 2.0 * Math.PI * finalHz / standardSampleRate;\r\n\r\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n            legacyFilter.lowPass1stOrderSimplified(legacyRadians);\r\n            const response: FrequencyResponse = new FrequencyResponse();\r\n            response.analyze(legacyFilter, finalRadians);\r\n            const legacyFilterGainAtNewRadians: number = response.magnitude();\r\n\r\n            let logGain: number = Math.log2(legacyFilterGainAtNewRadians);\r\n            // Bias slightly toward 2^(-extraOctaves):\r\n            logGain = -extraOctaves + (logGain + extraOctaves) * 0.82;\r\n            const convertedGain: number = Math.pow(2.0, logGain);\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(convertedGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        } else {\r\n            const intendedGain: number = 0.5 / (1.0 - legacyFilterMaxResonance * Math.sqrt(Math.max(0.0, legacyResonanceSetting - 1.0) / (legacyFilterResonanceRange - 2.0)));\r\n            const invertedGain: number = 0.5 / intendedGain;\r\n            const maxRadians: number = 2.0 * Math.PI * legacyFilterCutoffMaxHz / standardSampleRate;\r\n            const freqRatio: number = legacyRadians / maxRadians;\r\n            const targetRadians: number = legacyRadians * (freqRatio * Math.pow(invertedGain, 0.9) + 1.0);\r\n            const curvedRadians: number = legacyRadians + (targetRadians - legacyRadians) * invertedGain;\r\n            let curvedHz: number;\r\n\r\n            curvedHz = standardSampleRate * curvedRadians / (2.0 * Math.PI);\r\n            const freqSetting: number = FilterControlPoint.getSettingValueFromHz(curvedHz);\r\n\r\n            let legacyFilterGain: number;\r\n\r\n            const legacyFilter: FilterCoefficients = new FilterCoefficients();\r\n            legacyFilter.lowPass2ndOrderSimplified(legacyRadians, intendedGain);\r\n            const response: FrequencyResponse = new FrequencyResponse();\r\n            response.analyze(legacyFilter, curvedRadians);\r\n            legacyFilterGain = response.magnitude();\r\n            const gainSetting: number = FilterControlPoint.getRoundedSettingValueFromLinearGain(legacyFilterGain);\r\n\r\n            this.addPoint(FilterType.lowPass, freqSetting, gainSetting);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport class EnvelopeSettings {\r\n    public target: number = 0;\r\n    public index: number = 0;\r\n    public envelope: number = 0;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    reset(): void {\r\n        this.target = 0;\r\n        this.index = 0;\r\n        this.envelope = 0;\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const envelopeObject: any = {\r\n            \"target\": Config.instrumentAutomationTargets[this.target].name,\r\n            \"envelope\": Config.envelopes[this.envelope].name,\r\n        };\r\n        if (Config.instrumentAutomationTargets[this.target].maxCount > 1) {\r\n            envelopeObject[\"index\"] = this.index;\r\n        }\r\n        return envelopeObject;\r\n    }\r\n\r\n    public fromJsonObject(envelopeObject: any, format: string): void {\r\n        this.reset();\r\n\r\n        let target: AutomationTarget = Config.instrumentAutomationTargets.dictionary[envelopeObject[\"target\"]];\r\n        if (target == null) target = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\r\n        this.target = target.index;\r\n\r\n        let envelope: Envelope = Config.envelopes.dictionary[envelopeObject[\"envelope\"]];\r\n        if (envelope == null) envelope = Config.envelopes.dictionary[\"none\"];\r\n        this.envelope = envelope.index;\r\n\r\n        if (envelopeObject[\"index\"] != undefined) {\r\n            this.index = clamp(0, Config.instrumentAutomationTargets[this.target].maxCount, envelopeObject[\"index\"] | 0);\r\n        } else {\r\n            this.index = 0;\r\n        }\r\n    }\r\n}\r\n\r\n/**  \r\n * Settings that were available to old versions of BeepBox but are no longer available in the\r\n * current version that need to be reinterpreted as a group to determine the best way to\r\n * represent them in the current version.*/\r\ninterface LegacySettings {\r\n    filterCutoff?: number;\r\n    filterResonance?: number;\r\n    filterEnvelope?: Envelope;\r\n    pulseEnvelope?: Envelope;\r\n    operatorEnvelopes?: Envelope[];\r\n    feedbackEnvelope?: Envelope;\r\n}\r\n\r\ninterface HeldMod {\r\n    volume: number;\r\n    channelIndex: number;\r\n    instrumentIndex: number;\r\n    setting: number;\r\n    holdFor: number;\r\n}\r\n\r\nexport class Instrument {\r\n    public type: InstrumentType = InstrumentType.chip;\r\n    public preset: number = 0;\r\n    public chipWave: number = 2;\r\n\t// advloop addition\r\n\tpublic isUsingAdvancedLoopControls: boolean = false;\r\n\tpublic chipWaveLoopStart: number = 0;\r\n\tpublic chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\r\n\tpublic chipWaveLoopMode: number = 0; // 0: loop, 1: ping-pong, 2: once, 3: play loop once\r\n\tpublic chipWavePlayBackwards: boolean = false;\r\n        public chipWaveStartOffset: number = 0;\r\n        // advloop addition\r\n    public chipNoise: number = 1;\r\n    public eqFilter: FilterSettings = new FilterSettings();\r\n    public eqFilterType: boolean = false;\r\n    public eqFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\r\n    public eqFilterSimplePeak: number = 0;\r\n    public noteFilter: FilterSettings = new FilterSettings();\r\n    public noteFilterType: boolean = false;\r\n    public noteFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\r\n    public noteFilterSimplePeak: number = 0;\r\n    public eqSubFilters: (FilterSettings | null)[] = [];\r\n    public noteSubFilters: (FilterSettings | null)[] = [];\r\n    public tmpEqFilterStart: FilterSettings | null;\r\n    public tmpEqFilterEnd: FilterSettings | null;\r\n    public tmpNoteFilterStart: FilterSettings | null;\r\n    public tmpNoteFilterEnd: FilterSettings | null;\r\n    public envelopes: EnvelopeSettings[] = [];\r\n    public fadeIn: number = 0;\r\n    public fadeOut: number = Config.fadeOutNeutral;\r\n    public envelopeCount: number = 0;\r\n    public transition: number = Config.transitions.dictionary[\"normal\"].index;\r\n    public slideTicks: number = 3;\r\n    public pitchShift: number = 0;\r\n    public detune: number = 0;\r\n    public vibrato: number = 0;\r\n    public interval: number = 0;\r\n    public vibratoDepth: number = 0;\r\n    public vibratoSpeed: number = 10;\r\n    public vibratoDelay: number = 0;\r\n    public vibratoType: number = 0;\r\n    public envelopeSpeed: number = 12;\r\n    public discreteEnvelope: boolean = false;\r\n    public unison: number = 0;\r\n    public unisonVoices: number = 1;\r\n    public unisonSpread: number = 0.0;\r\n    public unisonOffset: number = 0.0;\r\n    public unisonExpression: number = 1.4;\r\n    public unisonSign: number = 1.0;\r\n    public unisonBuzzes: boolean = false;\r\n    public effects: number = 0;\r\n    public chord: number = 1;\r\n    public strumParts: number = 1;\r\n    public volume: number = 0;\r\n    public pan: number = Config.panCenter;\r\n    public panDelay: number = 10;\r\n    public arpeggioSpeed: number = 12;\r\n    public fastTwoNoteArp: boolean = false;\r\n    public legacyTieOver: boolean = false;\r\n    public clicklessTransition: boolean = false;\r\n    public aliases: boolean = false;\r\n    public pulseWidth: number = Config.pulseWidthRange/2;\r\n    public decimalOffset: number = 0;\r\n    public supersawDynamism: number = Config.supersawDynamismMax;\r\n\tpublic supersawSpread: number = Math.ceil(Config.supersawSpreadMax / 2.0);\r\n\tpublic supersawShape: number = 0;\r\n\tpublic stringSustain: number = 10;\r\n\tpublic stringSustainType: SustainType = SustainType.acoustic;\r\n    public distortion: number = 0;\r\n    public ringModulation: number = 0;\r\n    public ringModulationHz: number = 0;\r\n    public rmWaveformIndex: number = 0;\r\n    public rmPulseWidth: number = 0;\r\n    public rmHzOffset: number = 200;\r\n    public bitcrusherFreq: number = 0;\r\n    public bitcrusherQuantization: number = 0;\r\n    public chorus: number = 0;\r\n    public reverb: number = 0;\r\n    public echoSustain: number = 0;\r\n    public echoDelay: number = 0;\r\n    public phaserFreq: number = 0;\r\n    public phaserMix: number = Config.phaserMixRange - 1;\r\n    public phaserFeedback: number = 0;\r\n    public phaserStages: number = 2;\r\n\r\n    public invertWave: boolean = false;\r\n\r\n    public algorithm: number = 0;\r\n    public feedbackType: number = 0;\r\n    public algorithm6Op: number = 1;\r\n    public feedbackType6Op: number = 1;//default to not custom\r\n    public customAlgorithm: CustomAlgorithm = new CustomAlgorithm(); //{ name: \"1←4(2←5 3←6\", carrierCount: 3, associatedCarrier: [1, 2, 3, 1, 2, 3], modulatedBy: [[2, 3, 4], [5], [6], [], [], []] };\r\n    public customFeedbackType: CustomFeedBack = new CustomFeedBack(); //{ name: \"1↔4 2↔5 3↔6\", indices: [[3], [5], [6], [1], [2], [3]] };\r\n    public feedbackAmplitude: number = 0;\r\n    public customChipWave: Float32Array = new Float32Array(64);\r\n    public customChipWaveIntegral: Float32Array = new Float32Array(65); // One extra element for wrap-around in chipSynth.\r\n    public readonly operators: Operator[] = [];\r\n    public readonly spectrumWave: SpectrumWave;\r\n    public readonly harmonicsWave: HarmonicsWave = new HarmonicsWave();\r\n    public readonly drumsetEnvelopes: number[] = [];\r\n    public readonly drumsetSpectrumWaves: SpectrumWave[] = [];\r\n    public modChannels: number[] = [];\r\n    public modInstruments: number[] = [];\r\n    public modulators: number[] = [];\r\n    public modFilterTypes: number[] = [];\r\n    public invalidModulators: boolean[] = [];\r\n    public upperNoteLimit: number = Config.maxPitch;\r\n    public lowerNoteLimit: number = 0;\r\n    constructor(isNoiseChannel: boolean, isModChannel: boolean) {\r\n\r\n        // @jummbus - My screed on how modulator arrays for instruments work, for the benefit of myself in the future, or whoever else.\r\n        //\r\n        // modulators[mod] is the index in Config.modulators to use, with \"none\" being the first entry.\r\n        //\r\n        // modChannels[mod] gives the index of a channel set for this mod. Two special values:\r\n        //   -2 \"none\"\r\n        //   -1 \"song\"\r\n        //   0+ actual channel index\r\n        //\r\n        // modInstruments[mod] gives the index of an instrument within the channel set for this mod. Again, two special values:\r\n        //   [0 ~ channel.instruments.length-1]     channel's instrument index\r\n        //   channel.instruments.length             \"all\"\r\n        //   channel.instruments.length+1           \"active\"\r\n        //\r\n        // modFilterTypes[mod] gives some info about the filter type: 0 is morph, 1+ is index in the dot selection array (dot 1 x, dot 1 y, dot 2 x...)\r\n        //   0  filter morph\r\n        //   1+ filter dot target, starting from dot 1 x and then dot 1 y, then repeating x, y for all dots in order. Note: odd values are always \"x\" targets, even are \"y\".\r\n\r\n        if (isModChannel) {\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                this.modChannels.push(-2);\r\n                this.modInstruments.push(0);\r\n                this.modulators.push(Config.modulators.dictionary[\"none\"].index);\r\n            }\r\n        }\r\n\r\n        this.spectrumWave = new SpectrumWave(isNoiseChannel);\r\n        for (let i: number = 0; i < Config.operatorCount+2; i++) {//hopefully won't break everything\r\n            this.operators[i] = new Operator(i);\r\n        }\r\n        for (let i: number = 0; i < Config.drumCount; i++) {\r\n            this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n            this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n        }\r\n\r\n        for (let i = 0; i < 64; i++) {\r\n            this.customChipWave[i] = 24 - Math.floor(i * (48 / 64));\r\n        }\r\n\r\n        let sum: number = 0.0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            sum += this.customChipWave[i];\r\n        }\r\n        const average: number = sum / this.customChipWave.length;\r\n\r\n        // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n        let cumulative: number = 0;\r\n        let wavePrev: number = 0;\r\n        for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n            cumulative += wavePrev;\r\n            wavePrev = this.customChipWave[i] - average;\r\n            this.customChipWaveIntegral[i] = cumulative;\r\n        }\r\n\r\n        // 65th, last sample is for anti-aliasing\r\n        this.customChipWaveIntegral[64] = 0.0;\r\n\r\n    }\r\n\r\n    public setTypeAndReset(type: InstrumentType, isNoiseChannel: boolean, isModChannel: boolean): void {\r\n        // Mod channels are forced to one type.\r\n        if (isModChannel) type = InstrumentType.mod;\r\n        this.type = type;\r\n        this.preset = type;\r\n        this.volume = 0;\r\n        this.effects = (1 << EffectType.panning); // Panning enabled by default in JB.\r\n        this.chorus = Config.chorusRange - 1;\r\n        this.reverb = 0;\r\n        this.echoSustain = Math.floor((Config.echoSustainRange - 1) * 0.5);\r\n        this.echoDelay = Math.floor((Config.echoDelayRange - 1) * 0.5);\r\n        this.eqFilter.reset();\r\n        this.eqFilterType = false;\r\n        this.eqFilterSimpleCut = Config.filterSimpleCutRange - 1;\r\n        this.eqFilterSimplePeak = 0;\r\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n            this.eqSubFilters[i] = null;\r\n            this.noteSubFilters[i] = null;\r\n        }\r\n        this.noteFilter.reset();\r\n        this.noteFilterType = false;\r\n        this.noteFilterSimpleCut = Config.filterSimpleCutRange - 1;\r\n        this.noteFilterSimplePeak = 0;\r\n        this.distortion = Math.floor((Config.distortionRange - 1) * 0.75);\r\n        this.bitcrusherFreq = Math.floor((Config.bitcrusherFreqRange - 1) * 0.5)\r\n        this.bitcrusherQuantization = Math.floor((Config.bitcrusherQuantizationRange - 1) * 0.5);\r\n\r\n        this.ringModulation = 0;\r\n        this.ringModulationHz = 0;\r\n        this.rmPulseWidth = 0;\r\n        this.rmWaveformIndex = 0;\r\n        this.rmHzOffset = 200;\r\n\r\n        this.phaserFreq\t= 0;\r\n        this.phaserFeedback = 0;\r\n        this.phaserStages = 2;\r\n        this.phaserMix = Config.phaserMixRange - 1;\r\n\r\n        this.invertWave = false;\r\n\r\n        this.pan = Config.panCenter;\r\n        this.panDelay = 10;\r\n        this.pitchShift = Config.pitchShiftCenter;\r\n        this.detune = Config.detuneCenter;\r\n        this.vibrato = 0;\r\n        this.unison = 0;\r\n        this.stringSustain = 10;\r\n        this.stringSustainType = Config.enableAcousticSustain ? SustainType.acoustic : SustainType.bright;\r\n        this.clicklessTransition = false;\r\n        this.arpeggioSpeed = 12;\r\n        this.envelopeSpeed = 12;\r\n        this.discreteEnvelope = false;\r\n        this.legacyTieOver = false;\r\n        this.aliases = false;\r\n        this.fadeIn = 0;\r\n        this.fadeOut = Config.fadeOutNeutral;\r\n        this.transition = Config.transitions.dictionary[\"normal\"].index;\r\n        this.envelopeCount = 0;\r\n        this.upperNoteLimit = Config.maxPitch;\r\n        this.lowerNoteLimit = 0;\r\n        switch (type) {\r\n            case InstrumentType.chip:\r\n                this.chipWave = 2;\r\n                // TODO: enable the chord effect?\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n\t\t\t\t\t\t\t\t // advloop addition\r\n                    this.isUsingAdvancedLoopControls = false;\r\n                    this.chipWaveLoopStart = 0;\r\n                    this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\r\n                    this.chipWaveLoopMode = 0;\r\n                    this.chipWavePlayBackwards = false;\r\n                    this.chipWaveStartOffset = 0;\r\n                    // advloop addition\r\n                break;\r\n            case InstrumentType.customChipWave:\r\n                this.chipWave = 2;\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = 24 - (Math.floor(i * (48 / 64)));\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n                break;\r\n            case InstrumentType.fm:\r\n                this.chord = Config.chords.dictionary[\"custom interval\"].index;\r\n                this.algorithm = 0;\r\n                this.feedbackType = 0;\r\n                this.feedbackAmplitude = 0;\r\n                for (let i: number = 0; i < this.operators.length; i++) {\r\n                    this.operators[i].reset(i);\r\n                }\r\n                break;\r\n            case InstrumentType.fm6op:\r\n                this.transition = 1;\r\n                this.vibrato = 0;\r\n                this.effects = 1;\r\n                this.chord = 3;\r\n                this.algorithm = 0;\r\n                this.feedbackType = 0;\r\n                this.algorithm6Op = 1;\r\n                this.feedbackType6Op = 1;\r\n                this.customAlgorithm.fromPreset(1);\r\n                this.feedbackAmplitude = 0;\r\n                for (let i: number = 0; i < this.operators.length; i++) {\r\n                    this.operators[i].reset(i);\r\n                }\r\n                break;\r\n            case InstrumentType.noise:\r\n                this.chipNoise = 1;\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                break;\r\n            case InstrumentType.spectrum:\r\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                this.spectrumWave.reset(isNoiseChannel);\r\n                break;\r\n            case InstrumentType.drumset:\r\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                for (let i: number = 0; i < Config.drumCount; i++) {\r\n                    this.drumsetEnvelopes[i] = Config.envelopes.dictionary[\"twang 2\"].index;\r\n                    if (this.drumsetSpectrumWaves[i] == undefined) {\r\n                        this.drumsetSpectrumWaves[i] = new SpectrumWave(true);\r\n                    }\r\n                    this.drumsetSpectrumWaves[i].reset(isNoiseChannel);\r\n                }\r\n                break;\r\n            case InstrumentType.harmonics:\r\n                this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                this.harmonicsWave.reset();\r\n                break;\r\n            case InstrumentType.pwm:\r\n                this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                this.pulseWidth = Config.pulseWidthRange/2;\r\n                this.decimalOffset = 0;\r\n                break;\r\n            case InstrumentType.pickedString:\r\n                this.chord = Config.chords.dictionary[\"strum\"].index;\r\n                this.harmonicsWave.reset();\r\n                break;\r\n            case InstrumentType.mod:\r\n                this.transition = 0;\r\n                this.vibrato = 0;\r\n                this.interval = 0;\r\n                this.effects = 0;\r\n                this.chord = 0;\r\n                this.modChannels = [];\r\n                this.modInstruments = [];\r\n                this.modulators = [];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels.push(-2);\r\n                    this.modInstruments.push(0);\r\n                    this.modulators.push(Config.modulators.dictionary[\"none\"].index);\r\n                    this.invalidModulators[mod] = false;\r\n                    this.modFilterTypes[mod] = 0;\r\n                }\r\n                break;\r\n            case InstrumentType.supersaw:\r\n\t\t\t\tthis.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n\t\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\r\n\t\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\r\n\t\t\t\tthis.supersawShape = 0;\r\n\t\t\t\tthis.pulseWidth = Config.pulseWidthRange/2 - 1;\r\n                this.decimalOffset = 0;\r\n\t\t\t\tbreak;\r\n            default:\r\n                throw new Error(\"Unrecognized instrument type: \" + type);\r\n        }\r\n        // Chip/noise instruments had arpeggio and FM had custom interval but neither\r\n        // explicitly saved the chorus setting beforeSeven so enable it here. The effects\r\n        // will otherwise get overridden when reading SongTagCode.startInstrument.\r\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index) {\r\n            // Enable chord if it was used.\r\n            this.effects = (this.effects | (1 << EffectType.chord));\r\n        }\r\n    }\r\n\r\n    // (only) difference for JummBox: Returns whether or not the note filter was chosen for filter conversion.\r\n    public convertLegacySettings(legacySettings: LegacySettings, forceSimpleFilter: boolean): void {\r\n        let legacyCutoffSetting: number | undefined = legacySettings.filterCutoff;\r\n        let legacyResonanceSetting: number | undefined = legacySettings.filterResonance;\r\n        let legacyFilterEnv: Envelope | undefined = legacySettings.filterEnvelope;\r\n        let legacyPulseEnv: Envelope | undefined = legacySettings.pulseEnvelope;\r\n        let legacyOperatorEnvelopes: Envelope[] | undefined = legacySettings.operatorEnvelopes;\r\n        let legacyFeedbackEnv: Envelope | undefined = legacySettings.feedbackEnvelope;\r\n\r\n        // legacy defaults:\r\n        if (legacyCutoffSetting == undefined) legacyCutoffSetting = (this.type == InstrumentType.chip) ? 6 : 10;\r\n        if (legacyResonanceSetting == undefined) legacyResonanceSetting = 0;\r\n        if (legacyFilterEnv == undefined) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\r\n        if (legacyPulseEnv == undefined) legacyPulseEnv = Config.envelopes.dictionary[(this.type == InstrumentType.pwm) ? \"twang 2\" : \"none\"];\r\n        if (legacyOperatorEnvelopes == undefined) legacyOperatorEnvelopes = [Config.envelopes.dictionary[(this.type == InstrumentType.fm) ? \"note size\" : \"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"], Config.envelopes.dictionary[\"none\"]];\r\n        if (legacyFeedbackEnv == undefined) legacyFeedbackEnv = Config.envelopes.dictionary[\"none\"];\r\n\r\n        // The \"punch\" envelope is special: it goes *above* the chosen cutoff. But if the cutoff was already at the max, it couldn't go any higher... except in the current version of BeepBox I raised the max cutoff so it *can* but then it sounds different, so to preserve the original sound let's just remove the punch envelope.\r\n        const legacyFilterCutoffRange: number = 11;\r\n        const cutoffAtMax: boolean = (legacyCutoffSetting == legacyFilterCutoffRange - 1);\r\n        if (cutoffAtMax && legacyFilterEnv.type == EnvelopeType.punch) legacyFilterEnv = Config.envelopes.dictionary[\"none\"];\r\n\r\n        const carrierCount: number = Config.algorithms[this.algorithm].carrierCount;\r\n        let noCarriersControlledByNoteSize: boolean = true;\r\n        let allCarriersControlledByNoteSize: boolean = true;\r\n        let noteSizeControlsSomethingElse: boolean = (legacyFilterEnv.type == EnvelopeType.noteSize) || (legacyPulseEnv.type == EnvelopeType.noteSize);\r\n        if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\r\n            noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyFeedbackEnv.type == EnvelopeType.noteSize);\r\n            for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\r\n                if (i < carrierCount) {\r\n                    if (legacyOperatorEnvelopes[i].type != EnvelopeType.noteSize) {\r\n                        allCarriersControlledByNoteSize = false;\r\n                    } else {\r\n                        noCarriersControlledByNoteSize = false;\r\n                    }\r\n                } else {\r\n                    noteSizeControlsSomethingElse = noteSizeControlsSomethingElse || (legacyOperatorEnvelopes[i].type == EnvelopeType.noteSize);\r\n                }\r\n            }\r\n        }\r\n\r\n        this.envelopeCount = 0;\r\n\r\n        if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\r\n            if (allCarriersControlledByNoteSize && noteSizeControlsSomethingElse) {\r\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteVolume\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\r\n            } else if (noCarriersControlledByNoteSize && !noteSizeControlsSomethingElse) {\r\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"none\"].index, 0, Config.envelopes.dictionary[\"note size\"].index);\r\n            }\r\n        }\r\n\r\n        if (legacyFilterEnv.type == EnvelopeType.none) {\r\n            this.noteFilter.reset();\r\n            this.noteFilterType = false;\r\n            this.eqFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\r\n            this.effects &= ~(1 << EffectType.noteFilter);\r\n            if (forceSimpleFilter || this.eqFilterType) {\r\n                this.eqFilterType = true;\r\n                this.eqFilterSimpleCut = legacyCutoffSetting;\r\n                this.eqFilterSimplePeak = legacyResonanceSetting;\r\n            }\r\n        } else {\r\n            this.eqFilter.reset();\r\n\r\n            this.eqFilterType = false;\r\n            this.noteFilterType = false;\r\n            this.noteFilter.convertLegacySettings(legacyCutoffSetting, legacyResonanceSetting, legacyFilterEnv);\r\n            this.effects |= 1 << EffectType.noteFilter;\r\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"noteFilterAllFreqs\"].index, 0, legacyFilterEnv.index);\r\n            if (forceSimpleFilter || this.noteFilterType) {\r\n                this.noteFilterType = true;\r\n                this.noteFilterSimpleCut = legacyCutoffSetting;\r\n                this.noteFilterSimplePeak = legacyResonanceSetting;\r\n            }\r\n        }\r\n\r\n        if (legacyPulseEnv.type != EnvelopeType.none) {\r\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"pulseWidth\"].index, 0, legacyPulseEnv.index);\r\n        }\r\n\r\n        for (let i: number = 0; i < legacyOperatorEnvelopes.length; i++) {\r\n            if (i < carrierCount && allCarriersControlledByNoteSize) continue;\r\n            if (legacyOperatorEnvelopes[i].type != EnvelopeType.none) {\r\n                this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"operatorAmplitude\"].index, i, legacyOperatorEnvelopes[i].index);\r\n            }\r\n        }\r\n\r\n        if (legacyFeedbackEnv.type != EnvelopeType.none) {\r\n            this.addEnvelope(Config.instrumentAutomationTargets.dictionary[\"feedbackAmplitude\"].index, 0, legacyFeedbackEnv.index);\r\n        }\r\n    }\r\n\r\n    public toJsonObject(): Object {\r\n        const instrumentObject: any = {\r\n            \"type\": Config.instrumentTypeNames[this.type],\r\n            \"volume\": this.volume,\r\n            \"eqFilter\": this.eqFilter.toJsonObject(),\r\n            \"eqFilterType\": this.eqFilterType,\r\n            \"eqSimpleCut\": this.eqFilterSimpleCut,\r\n            \"eqSimplePeak\": this.eqFilterSimplePeak,\r\n            \"envelopeSpeed\": this.envelopeSpeed\r\n        };\r\n\r\n        if (this.preset != this.type) {\r\n            instrumentObject[\"preset\"] = this.preset;\r\n        }\r\n\r\n        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n            if (this.eqSubFilters[i] != null)\r\n                instrumentObject[\"eqSubFilters\" + i] = this.eqSubFilters[i]!.toJsonObject();\r\n        }\r\n\r\n        const effects: string[] = [];\r\n        for (const effect of Config.effectOrder) {\r\n            if (this.effects & (1 << effect)) {\r\n                effects.push(Config.effectNames[effect]);\r\n            }\r\n        }\r\n        instrumentObject[\"effects\"] = effects;\r\n\r\n\r\n        if (effectsIncludeTransition(this.effects)) {\r\n            instrumentObject[\"transition\"] = Config.transitions[this.transition].name;\r\n            instrumentObject[\"clicklessTransition\"] = this.clicklessTransition;\r\n            if (Config.transitions[this.transition].slides == true) instrumentObject[\"slideTicks\"] = this.slideTicks;\r\n        }\r\n        if (effectsIncludeChord(this.effects)) {\r\n            instrumentObject[\"chord\"] = this.getChord().name;\r\n            instrumentObject[\"fastTwoNoteArp\"] = this.fastTwoNoteArp;\r\n            instrumentObject[\"arpeggioSpeed\"] = this.arpeggioSpeed;\r\n            if (Config.chords[this.chord].strumParts > 0) instrumentObject[\"strumParts\"] = this.strumParts;\r\n        }\r\n        if (effectsIncludePitchShift(this.effects)) {\r\n            instrumentObject[\"pitchShiftSemitones\"] = this.pitchShift;\r\n        }\r\n        if (effectsIncludeDetune(this.effects)) {\r\n            instrumentObject[\"detuneCents\"] = Synth.detuneToCents(this.detune);\r\n        }\r\n        if (effectsIncludeVibrato(this.effects)) {\r\n            if (this.vibrato == -1) {\r\n                this.vibrato = 5;\r\n            }\r\n            if (this.vibrato != 5) {\r\n                instrumentObject[\"vibrato\"] = Config.vibratos[this.vibrato].name;\r\n            } else {\r\n                instrumentObject[\"vibrato\"] = \"custom\";\r\n            }\r\n            instrumentObject[\"vibratoDepth\"] = this.vibratoDepth;\r\n            instrumentObject[\"vibratoDelay\"] = this.vibratoDelay;\r\n            instrumentObject[\"vibratoSpeed\"] = this.vibratoSpeed;\r\n            instrumentObject[\"vibratoType\"] = this.vibratoType;\r\n        }\r\n        if (effectsIncludeNoteFilter(this.effects)) {\r\n            instrumentObject[\"noteFilterType\"] = this.noteFilterType;\r\n            instrumentObject[\"noteSimpleCut\"] = this.noteFilterSimpleCut;\r\n            instrumentObject[\"noteSimplePeak\"] = this.noteFilterSimplePeak;\r\n            instrumentObject[\"noteFilter\"] = this.noteFilter.toJsonObject();\r\n\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (this.noteSubFilters[i] != null)\r\n                    instrumentObject[\"noteSubFilters\" + i] = this.noteSubFilters[i]!.toJsonObject();\r\n            }\r\n        }\r\n        if (effectsIncludeDistortion(this.effects)) {\r\n            instrumentObject[\"distortion\"] = Math.round(100 * this.distortion / (Config.distortionRange - 1));\r\n            instrumentObject[\"aliases\"] = this.aliases;\r\n        }\r\n        if (effectsIncludeBitcrusher(this.effects)) {\r\n            instrumentObject[\"bitcrusherOctave\"] = (Config.bitcrusherFreqRange - 1 - this.bitcrusherFreq) * Config.bitcrusherOctaveStep;\r\n            instrumentObject[\"bitcrusherQuantization\"] = Math.round(100 * this.bitcrusherQuantization / (Config.bitcrusherQuantizationRange - 1));\r\n        }\r\n        // ctrl + f to ring mod here\r\n        if (effectsIncludeRM(this.effects)) {\r\n            instrumentObject[\"ringMod\"] =  Math.round(100 *this.ringModulation/(Config.ringModRange - 1));\r\n            instrumentObject[\"ringModHz\"] =  Math.round(100 *this.ringModulationHz/(Config.ringModHzRange - 1));\r\n            instrumentObject[\"rmWaveformIndex\"] = this.rmWaveformIndex;\r\n            instrumentObject[\"rmPulseWidth\"] =  Math.round(100 *this.rmPulseWidth/(Config.pulseWidthRange - 1));\r\n            instrumentObject[\"rmHzOffset\"] =  Math.round(100 *this.rmHzOffset/(Config.rmHzOffsetMax));\r\n        }\r\n        if (effectsIncludePhaser(this.effects)) {\r\n            instrumentObject[\"phaserMix\"] =  Math.round(100 *this.phaserMix/(Config.phaserMixRange - 1));\r\n            instrumentObject[\"phaserFreq\"] =  Math.round(100 *this.phaserFreq/(Config.phaserFreqRange - 1));\r\n            instrumentObject[\"phaserFeedback\"] =  Math.round(100 *this.phaserFeedback/(Config.phaserFeedbackRange - 1));\r\n            instrumentObject[\"phaserStages\"] =  Math.round(100 *this.phaserStages/(Config.phaserMaxStages - 1));\r\n        }\r\n        if (effectsIncludeInvertWave(this.effects)) {\r\n            instrumentObject[\"invertWave\"] =  this.invertWave;\r\n        }\r\n        if (effectsIncludePanning(this.effects)) {\r\n            instrumentObject[\"pan\"] = Math.round(100 * (this.pan - Config.panCenter) / Config.panCenter);\r\n            instrumentObject[\"panDelay\"] = this.panDelay;\r\n        }\r\n        if (effectsIncludeChorus(this.effects)) {\r\n            instrumentObject[\"chorus\"] = Math.round(100 * this.chorus / (Config.chorusRange - 1));\r\n        }\r\n        if (effectsIncludeEcho(this.effects)) {\r\n            instrumentObject[\"echoSustain\"] = Math.round(100 * this.echoSustain / (Config.echoSustainRange - 1));\r\n            instrumentObject[\"echoDelayBeats\"] = Math.round(1000 * (this.echoDelay + 1) * Config.echoDelayStepTicks / (Config.ticksPerPart * Config.partsPerBeat)) / 1000;\r\n        }\r\n        if (effectsIncludeReverb(this.effects)) {\r\n            instrumentObject[\"reverb\"] = Math.round(100 * this.reverb / (Config.reverbRange - 1));\r\n        }\r\n        if (effectsIncludeNoteRange(this.effects)) {\r\n            instrumentObject[\"upperNoteLimit\"] = this.upperNoteLimit;\r\n            instrumentObject[\"lowerNoteLimit\"] = this.lowerNoteLimit;\r\n        }\r\n\r\n        if (this.type != InstrumentType.drumset) {\r\n            instrumentObject[\"fadeInSeconds\"] = Math.round(10000 * Synth.fadeInSettingToSeconds(this.fadeIn)) / 10000;\r\n            instrumentObject[\"fadeOutTicks\"] = Synth.fadeOutSettingToTicks(this.fadeOut);\r\n        }\r\n\r\n        if (this.type == InstrumentType.harmonics || this.type == InstrumentType.pickedString) {\r\n            instrumentObject[\"harmonics\"] = [];\r\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                instrumentObject[\"harmonics\"][i] = Math.round(100 * this.harmonicsWave.harmonics[i] / Config.harmonicsMax);\r\n            }\r\n        }\r\n\r\n        if (this.type == InstrumentType.chip || this.type == InstrumentType.pwm || this.type == InstrumentType.customChipWave || this.type == InstrumentType.noise || this.type == InstrumentType.harmonics || this.type == InstrumentType.pickedString || this.type == InstrumentType.spectrum) {\r\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\r\n            // only push these if custom unisons are being used\r\n            if (this.unison == Config.unisons.length) {\r\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\r\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\r\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\r\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\r\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\r\n                instrumentObject[\"unisonBuzzes\"] = this.unisonBuzzes;\r\n            }\r\n        }\r\n\r\n        if (this.type == InstrumentType.noise) {\r\n            instrumentObject[\"wave\"] = Config.chipNoises[this.chipNoise].name;\r\n        } else if (this.type == InstrumentType.spectrum) {\r\n            instrumentObject[\"spectrum\"] = [];\r\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                instrumentObject[\"spectrum\"][i] = Math.round(100 * this.spectrumWave.spectrum[i] / Config.spectrumMax);\r\n            }\r\n        } else if (this.type == InstrumentType.drumset) {\r\n            instrumentObject[\"drums\"] = [];\r\n            for (let j: number = 0; j < Config.drumCount; j++) {\r\n                const spectrum: number[] = [];\r\n                for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                    spectrum[i] = Math.round(100 * this.drumsetSpectrumWaves[j].spectrum[i] / Config.spectrumMax);\r\n                }\r\n                instrumentObject[\"drums\"][j] = {\r\n                    \"filterEnvelope\": this.getDrumsetEnvelope(j).name,\r\n                    \"spectrum\": spectrum,\r\n                };\r\n            }\r\n        } else if (this.type == InstrumentType.chip) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"isUsingAdvancedLoopControls\"] = this.isUsingAdvancedLoopControls;\r\n            instrumentObject[\"chipWaveLoopStart\"] = this.chipWaveLoopStart;\r\n            instrumentObject[\"chipWaveLoopEnd\"] = this.chipWaveLoopEnd;\r\n            instrumentObject[\"chipWaveLoopMode\"] = this.chipWaveLoopMode;\r\n            instrumentObject[\"chipWavePlayBackwards\"] = this.chipWavePlayBackwards;\r\n            instrumentObject[\"chipWaveStartOffset\"] = this.chipWaveStartOffset;\r\n        } else if (this.type == InstrumentType.pwm) {\r\n            instrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\r\n        } else if (this.type == InstrumentType.supersaw) {\r\n\t\t\tinstrumentObject[\"pulseWidth\"] = this.pulseWidth;\r\n            instrumentObject[\"decimalOffset\"] = this.decimalOffset;\r\n\t\t\tinstrumentObject[\"dynamism\"] = Math.round(100 * this.supersawDynamism / Config.supersawDynamismMax);\r\n\t\t\tinstrumentObject[\"spread\"] = Math.round(100 * this.supersawSpread / Config.supersawSpreadMax);\r\n\t\t\tinstrumentObject[\"shape\"] = Math.round(100 * this.supersawShape / Config.supersawShapeMax);\r\n\t\t} else if (this.type == InstrumentType.pickedString) {\r\n            instrumentObject[\"stringSustain\"] = Math.round(100 * this.stringSustain / (Config.stringSustainRange - 1));\r\n            if (Config.enableAcousticSustain) {\r\n\t\t\t\tinstrumentObject[\"stringSustainType\"] = Config.sustainTypeNames[this.stringSustainType];\r\n\t\t\t}\r\n        } else if (this.type == InstrumentType.harmonics) {\r\n            instrumentObject[\"unison\"] = this.unison == Config.unisons.length ? \"custom\" : Config.unisons[this.unison].name;\r\n            if (this.unison == Config.unisons.length) {\r\n                instrumentObject[\"unisonVoices\"] = this.unisonVoices;\r\n                instrumentObject[\"unisonSpread\"] = this.unisonSpread;\r\n                instrumentObject[\"unisonOffset\"] = this.unisonOffset;\r\n                instrumentObject[\"unisonExpression\"] = this.unisonExpression;\r\n                instrumentObject[\"unisonSign\"] = this.unisonSign;\r\n            }   \r\n        } else if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\r\n            const operatorArray: Object[] = [];\r\n            for (const operator of this.operators) {\r\n                operatorArray.push({\r\n                    \"frequency\": Config.operatorFrequencies[operator.frequency].name,\r\n                    \"amplitude\": operator.amplitude,\r\n                    \"waveform\": Config.operatorWaves[operator.waveform].name,\r\n                    \"pulseWidth\": operator.pulseWidth,\r\n                });\r\n            }\r\n            if(this.type == InstrumentType.fm){\r\n                instrumentObject[\"algorithm\"] = Config.algorithms[this.algorithm].name;\r\n                instrumentObject[\"feedbackType\"] = Config.feedbacks[this.feedbackType].name;\r\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n                instrumentObject[\"operators\"] = operatorArray;\r\n            } else {\r\n                instrumentObject[\"algorithm\"] = Config.algorithms6Op[this.algorithm6Op].name;\r\n                instrumentObject[\"feedbackType\"] = Config.feedbacks6Op[this.feedbackType6Op].name;\r\n                instrumentObject[\"feedbackAmplitude\"] = this.feedbackAmplitude;\r\n                if(this.algorithm6Op == 0){\r\n                    const customAlgorithm: any = {};\r\n                    customAlgorithm[\"mods\"] = this.customAlgorithm.modulatedBy;\r\n                    customAlgorithm[\"carrierCount\"] = this.customAlgorithm.carrierCount;\r\n                    instrumentObject[\"customAlgorithm\"] = customAlgorithm;\r\n                }\r\n                if(this.feedbackType6Op == 0){\r\n                    const customFeedback: any = {};\r\n                    customFeedback[\"mods\"] = this.customFeedbackType.indices;\r\n                    instrumentObject[\"customFeedback\"] = customFeedback;\r\n                }\r\n\r\n                instrumentObject[\"operators\"] = operatorArray;\r\n            }\r\n        } else if (this.type == InstrumentType.customChipWave) {\r\n            instrumentObject[\"wave\"] = Config.chipWaves[this.chipWave].name;\r\n            instrumentObject[\"customChipWave\"] = new Float64Array(64);\r\n            instrumentObject[\"customChipWaveIntegral\"] = new Float64Array(65);\r\n            for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                instrumentObject[\"customChipWave\"][i] = this.customChipWave[i];\r\n                // Meh, waste of space and can be inaccurate. It will be recalc'ed when instrument loads.\r\n                //instrumentObject[\"customChipWaveIntegral\"][i] = this.customChipWaveIntegral[i];\r\n            }\r\n        } else if (this.type == InstrumentType.mod) {\r\n            instrumentObject[\"modChannels\"] = [];\r\n            instrumentObject[\"modInstruments\"] = [];\r\n            instrumentObject[\"modSettings\"] = [];\r\n            instrumentObject[\"modFilterTypes\"] = [];\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                instrumentObject[\"modChannels\"][mod] = this.modChannels[mod];\r\n                instrumentObject[\"modInstruments\"][mod] = this.modInstruments[mod];\r\n                instrumentObject[\"modSettings\"][mod] = this.modulators[mod];\r\n                instrumentObject[\"modFilterTypes\"][mod] = this.modFilterTypes[mod];\r\n            }\r\n        } else {\r\n            throw new Error(\"Unrecognized instrument type\");\r\n        }\r\n\r\n        const envelopes: any[] = [];\r\n        for (let i = 0; i < this.envelopeCount; i++) {\r\n            envelopes.push(this.envelopes[i].toJsonObject());\r\n        }\r\n        instrumentObject[\"envelopes\"] = envelopes;\r\n\r\n        return instrumentObject;\r\n    }\r\n\r\n\r\n    public fromJsonObject(instrumentObject: any, isNoiseChannel: boolean, isModChannel: boolean, useSlowerRhythm: boolean, useFastTwoNoteArp: boolean, legacyGlobalReverb: number = 0, jsonFormat: string = Config.jsonFormat): void {\r\n        if (instrumentObject == undefined) instrumentObject = {};\r\n\r\n        const format: string = jsonFormat.toLowerCase();\r\n\r\n        let type: InstrumentType = Config.instrumentTypeNames.indexOf(instrumentObject[\"type\"]);\r\n                // SynthBox support\r\n                if ((format == \"synthbox\") && (instrumentObject[\"type\"] == \"FM\")) type = Config.instrumentTypeNames.indexOf(\"FM6op\");\r\n        if (<any>type == -1) type = isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip);\r\n        this.setTypeAndReset(type, isNoiseChannel, isModChannel);\r\n\r\n        this.effects &= ~(1 << EffectType.panning);\r\n\r\n        if (instrumentObject[\"preset\"] != undefined) {\r\n            this.preset = instrumentObject[\"preset\"] >>> 0;\r\n        }\r\n\r\n        if (instrumentObject[\"volume\"] != undefined) {\r\n            if (format == \"jummbox\" || format == \"midbox\" || format == \"synthbox\" || format == \"goldbox\" || format == \"paandorasbox\" || format == \"ultrabox\"|| format == \"abyssbox\") {\r\n            this.volume = clamp(-Config.volumeRange / 2, (Config.volumeRange / 2) + 1, instrumentObject[\"volume\"] | 0);\r\n            } else {\r\n                this.volume = Math.round(-clamp(0, 8, Math.round(5 - (instrumentObject[\"volume\"] | 0) / 20)) * 25.0 / 7.0);\r\n            }\r\n        } else {\r\n            this.volume = 0;\r\n        }\r\n\r\n        if (instrumentObject[\"envelopeSpeed\"] != undefined) {\r\n            this.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, instrumentObject[\"envelopeSpeed\"] | 0);\r\n        } else {\r\n            this.envelopeSpeed = 12;\r\n        }\r\n\r\n        if (instrumentObject[\"discreteEnvelope\"] != undefined) {\r\n            this.discreteEnvelope = instrumentObject[\"discreteEnvelope\"];\r\n        }\r\n        else {\r\n            this.discreteEnvelope = false;\r\n        }\r\n\r\n        if (Array.isArray(instrumentObject[\"effects\"])) {\r\n            let effects: number = 0;\r\n            for (let i: number = 0; i < instrumentObject[\"effects\"].length; i++) {\r\n                effects = effects | (1 << Config.effectNames.indexOf(instrumentObject[\"effects\"][i]));\r\n            }\r\n            this.effects = (effects & ((1 << EffectType.length) - 1));\r\n        } else {\r\n            // The index of these names is reinterpreted as a bitfield, which relies on reverb and chorus being the first effects!\r\n            const legacyEffectsNames: string[] = [\"none\", \"reverb\", \"chorus\", \"chorus & reverb\"];\r\n            this.effects = legacyEffectsNames.indexOf(instrumentObject[\"effects\"]);\r\n            if (this.effects == -1) this.effects = (this.type == InstrumentType.noise) ? 0 : 1;\r\n        }\r\n\r\n        this.transition = Config.transitions.dictionary[\"normal\"].index; // default value.\r\n        const transitionProperty: any = instrumentObject[\"transition\"] || instrumentObject[\"envelope\"]; // the transition property used to be called envelope, so check that too.\r\n        if (transitionProperty != undefined) {\r\n            let transition: Transition | undefined = Config.transitions.dictionary[transitionProperty];\r\n            if (instrumentObject[\"fadeInSeconds\"] == undefined || instrumentObject[\"fadeOutTicks\"] == undefined) {\r\n                const legacySettings = (<any>{\r\n                    \"binary\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\r\n                    \"seamless\": { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\r\n                    \"sudden\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\r\n                    \"hard\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\r\n                    \"smooth\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    \"soft\": { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    // Note that the old slide transition has the same name as a new slide transition that is different.\r\n                    // Only apply legacy settings if the instrument JSON was created before, based on the presence\r\n                    // of the fade in/out fields.\r\n                    \"slide\": { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    \"cross fade\": { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\r\n                    \"hard fade\": { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\r\n                    \"medium fade\": { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\r\n                    \"soft fade\": { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\r\n                })[transitionProperty];\r\n                if (legacySettings != undefined) {\r\n                    transition = Config.transitions.dictionary[legacySettings.transition];\r\n                    // These may be overridden below.\r\n                    this.fadeIn = Synth.secondsToFadeInSetting(legacySettings.fadeInSeconds);\r\n                    this.fadeOut = Synth.ticksToFadeOutSetting(legacySettings.fadeOutTicks);\r\n                }\r\n            }\r\n            if (transition != undefined) this.transition = transition.index;\r\n\r\n            if (this.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                // Enable transition if it was used.\r\n                this.effects = (this.effects | (1 << EffectType.transition));\r\n            }\r\n        }\r\n        if (instrumentObject[\"slideTicks\"] != undefined) {\r\n            this.slideTicks = instrumentObject[\"slideTicks\"];\r\n        }   \r\n        // Overrides legacy settings in transition above.\r\n        if (instrumentObject[\"fadeInSeconds\"] != undefined) {\r\n            this.fadeIn = Synth.secondsToFadeInSetting(+instrumentObject[\"fadeInSeconds\"]);\r\n        }\r\n        if (instrumentObject[\"fadeOutTicks\"] != undefined) {\r\n            this.fadeOut = Synth.ticksToFadeOutSetting(+instrumentObject[\"fadeOutTicks\"]);\r\n        }\r\n\r\n        {\r\n            // Note that the chord setting may be overridden by instrumentObject[\"chorus\"] below.\r\n            const chordProperty: any = instrumentObject[\"chord\"];\r\n            const legacyChordNames: Dictionary<string> = { \"harmony\": \"simultaneous\" };\r\n            const chord: Chord | undefined = Config.chords.dictionary[legacyChordNames[chordProperty]] || Config.chords.dictionary[chordProperty];\r\n            if (chord != undefined) {\r\n                this.chord = chord.index;\r\n            } else {\r\n                // Different instruments have different default chord types based on historical behaviour.\r\n                if (this.type == InstrumentType.noise) {\r\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                } else if (this.type == InstrumentType.pickedString) {\r\n                    this.chord = Config.chords.dictionary[\"strum\"].index;\r\n                } else if (this.type == InstrumentType.chip) {\r\n                    this.chord = Config.chords.dictionary[\"arpeggio\"].index;\r\n                } else if (this.type == InstrumentType.fm||this.type == InstrumentType.fm6op) {\r\n                    this.chord = Config.chords.dictionary[\"custom interval\"].index;\r\n                } else {\r\n                    this.chord = Config.chords.dictionary[\"simultaneous\"].index;\r\n                }\r\n            }\r\n        }\r\n        if (instrumentObject[\"strumParts\"] != undefined) {\r\n            this.strumParts = instrumentObject[\"strumParts\"];\r\n        }\r\n\r\n        this.unison = Config.unisons.dictionary[\"none\"].index; // default value.\r\n        const unisonProperty: any = instrumentObject[\"unison\"] || instrumentObject[\"interval\"] || instrumentObject[\"chorus\"]; // The unison property has gone by various names in the past.\r\n        if (unisonProperty != undefined) {\r\n            const legacyChorusNames: Dictionary<string> = { \"union\": \"none\", \"fifths\": \"fifth\", \"octaves\": \"octave\", \"error\": \"voiced\"  };\r\n            const unison: Unison | undefined = Config.unisons.dictionary[legacyChorusNames[unisonProperty]] || Config.unisons.dictionary[unisonProperty];\r\n            if (unison != undefined) this.unison = unison.index;\r\n            if (unisonProperty == \"custom\") this.unison = Config.unisons.length;\r\n        }\r\n        //clamp these???\r\n        this.unisonVoices = (instrumentObject[\"unisonVoices\"] == undefined) ? Config.unisons[this.unison].voices : instrumentObject[\"unisonVoices\"];\r\n        this.unisonSpread = (instrumentObject[\"unisonSpread\"] == undefined) ? Config.unisons[this.unison].spread : instrumentObject[\"unisonSpread\"];\r\n        this.unisonOffset = (instrumentObject[\"unisonOffset\"] == undefined) ? Config.unisons[this.unison].offset : instrumentObject[\"unisonOffset\"];\r\n        this.unisonExpression = (instrumentObject[\"unisonExpression\"] == undefined) ? Config.unisons[this.unison].expression : instrumentObject[\"unisonExpression\"];\r\n        this.unisonSign = (instrumentObject[\"unisonSign\"] == undefined) ? Config.unisons[this.unison].sign : instrumentObject[\"unisonSign\"];\r\n        this.unisonBuzzes = (instrumentObject[\"unisonBuzzes\"] == undefined) ? false : instrumentObject[\"unisonBuzzes\"];\r\n\r\n        if (instrumentObject[\"chorus\"] == \"custom harmony\") {\r\n            // The original chorus setting had an option that now maps to two different settings. Override those if necessary.\r\n            this.unison = Config.unisons.dictionary[\"hum\"].index;\r\n            this.chord = Config.chords.dictionary[\"custom interval\"].index;\r\n        }\r\n        if (this.chord != Config.chords.dictionary[\"simultaneous\"].index && !Array.isArray(instrumentObject[\"effects\"])) {\r\n            // Enable chord if it was used.\r\n            this.effects = (this.effects | (1 << EffectType.chord));\r\n        }\r\n\r\n        if (instrumentObject[\"pitchShiftSemitones\"] != undefined) {\r\n            this.pitchShift = clamp(0, Config.pitchShiftRange, Math.round(+instrumentObject[\"pitchShiftSemitones\"]));\r\n        }\r\n            // modbox pitch shift, known in that mod as \"octave offset\"\r\n            if (instrumentObject[\"octoff\"] != undefined) {\r\n                let potentialPitchShift: string = instrumentObject[\"octoff\"];\r\n                this.effects = (this.effects | (1 << EffectType.pitchShift));\r\n                \r\n                if ((potentialPitchShift == \"+1 (octave)\") || (potentialPitchShift == \"+2 (2 octaves)\")) {\r\n                    this.pitchShift = 24;\r\n                } else if ((potentialPitchShift == \"+1/2 (fifth)\") || (potentialPitchShift == \"+1 1/2 (octave and fifth)\")) {\r\n                    this.pitchShift = 18;\r\n                } else if ((potentialPitchShift == \"-1 (octave)\") || (potentialPitchShift == \"-2 (2 octaves\")) { //this typo is in modbox\r\n                    this.pitchShift = 0;\r\n                } else if ((potentialPitchShift == \"-1/2 (fifth)\") || (potentialPitchShift == \"-1 1/2 (octave and fifth)\")) {\r\n                    this.pitchShift = 6;\r\n                } else {\r\n                    this.pitchShift = 12;\r\n                }\r\n            }\r\n        if (instrumentObject[\"detuneCents\"] != undefined) {\r\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, Math.round(Synth.centsToDetune(+instrumentObject[\"detuneCents\"])));\r\n        }\r\n\r\n        this.vibrato = Config.vibratos.dictionary[\"none\"].index; // default value.\r\n        const vibratoProperty: any = instrumentObject[\"vibrato\"] || instrumentObject[\"effect\"]; // The vibrato property was previously called \"effect\", not to be confused with the current \"effects\".\r\n        if (vibratoProperty != undefined) {\r\n\r\n            const legacyVibratoNames: Dictionary<string> = { \"vibrato light\": \"light\", \"vibrato delayed\": \"delayed\", \"vibrato heavy\": \"heavy\" };\r\n            const vibrato: Vibrato | undefined = Config.vibratos.dictionary[legacyVibratoNames[unisonProperty]] || Config.vibratos.dictionary[vibratoProperty];\r\n            if (vibrato != undefined)\r\n                this.vibrato = vibrato.index;\r\n            else if (vibratoProperty == \"custom\")\r\n                this.vibrato = Config.vibratos.length; // custom\r\n\r\n            if (this.vibrato == Config.vibratos.length) {\r\n                this.vibratoDepth = instrumentObject[\"vibratoDepth\"];\r\n                this.vibratoSpeed = instrumentObject[\"vibratoSpeed\"];\r\n                this.vibratoDelay = instrumentObject[\"vibratoDelay\"];\r\n                this.vibratoType = instrumentObject[\"vibratoType\"];\r\n            }\r\n            else { // Set defaults for the vibrato profile\r\n                this.vibratoDepth = Config.vibratos[this.vibrato].amplitude;\r\n                this.vibratoDelay = Config.vibratos[this.vibrato].delayTicks / 2;\r\n                this.vibratoSpeed = 10; // default;\r\n                this.vibratoType = Config.vibratos[this.vibrato].type;\r\n            }\r\n\r\n            // Old songs may have a vibrato effect without explicitly enabling it.\r\n            if (vibrato != Config.vibratos.dictionary[\"none\"]) {\r\n                this.effects = (this.effects | (1 << EffectType.vibrato));\r\n            }\r\n        }\r\n\r\n        if (instrumentObject[\"pan\"] != undefined) {\r\n            this.pan = clamp(0, Config.panMax + 1, Math.round(Config.panCenter + (instrumentObject[\"pan\"] | 0) * Config.panCenter / 100));\r\n\r\n        } else if (instrumentObject[\"ipan\"] != undefined) {\r\n            // support for modbox fixed\r\n            this.pan = clamp(0, Config.panMax + 1, Config.panCenter + (instrumentObject[\"ipan\"] * -50));\r\n        } else {\r\n            this.pan = Config.panCenter;\r\n        }\r\n\r\n        // Old songs may have a panning effect without explicitly enabling it.\r\n        if (this.pan != Config.panCenter) {\r\n            this.effects = (this.effects | (1 << EffectType.panning));\r\n        }\r\n\r\n        if (instrumentObject[\"panDelay\"] != undefined) {\r\n            this.panDelay = (instrumentObject[\"panDelay\"] | 0);\r\n        } else {\r\n            this.panDelay = 10;\r\n        }\r\n\r\n        if (instrumentObject[\"detune\"] != undefined) {\r\n            this.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (instrumentObject[\"detune\"] | 0));\r\n        }\r\n        else if (instrumentObject[\"detuneCents\"] == undefined) {\r\n            this.detune = Config.detuneCenter;\r\n        }\r\n\r\n        if (instrumentObject[\"distortion\"] != undefined) {\r\n            this.distortion = clamp(0, Config.distortionRange, Math.round((Config.distortionRange - 1) * (instrumentObject[\"distortion\"] | 0) / 100));\r\n        }\r\n\r\n        if (instrumentObject[\"bitcrusherOctave\"] != undefined) {\r\n            this.bitcrusherFreq = Config.bitcrusherFreqRange - 1 - (+instrumentObject[\"bitcrusherOctave\"]) / Config.bitcrusherOctaveStep;\r\n        }\r\n        if (instrumentObject[\"bitcrusherQuantization\"] != undefined) {\r\n            this.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, Math.round((Config.bitcrusherQuantizationRange - 1) * (instrumentObject[\"bitcrusherQuantization\"] | 0) / 100));\r\n        }\r\n\r\n        if (instrumentObject[\"ringMod\"] != undefined) {\r\n            this.ringModulation = clamp(0, Config.ringModRange, Math.round((Config.ringModRange - 1) * (instrumentObject[\"ringMod\"] | 0) / 100));\r\n        }\r\n        if (instrumentObject[\"ringModHz\"] != undefined) {\r\n            this.ringModulationHz = clamp(0, Config.ringModHzRange, Math.round((Config.ringModHzRange - 1) * (instrumentObject[\"ringModHz\"] | 0) / 100));\r\n        }\r\n        if (instrumentObject[\"invertWave\"] != undefined) {\r\n            this.invertWave = instrumentObject[\"invertWave\"];\r\n        }\r\n        if (instrumentObject[\"rmWaveformIndex\"] != undefined) {\r\n            this.rmWaveformIndex = clamp(0, Config.operatorWaves.length, instrumentObject[\"rmWaveformIndex\"]);\r\n        }\r\n        if (instrumentObject[\"rmPulseWidth\"] != undefined) {\r\n            this.rmPulseWidth = clamp(0, Config.pulseWidthRange, Math.round((Config.pulseWidthRange - 1) * (instrumentObject[\"rmPulseWidth\"] | 0) / 100));\r\n        }\r\n        if (instrumentObject[\"rmHzOffset\"] != undefined) {\r\n            this.rmHzOffset = clamp(0, Config.rmHzOffsetMax, Math.round((Config.rmHzOffsetMax - 1) * (instrumentObject[\"rmHzOffset\"] | 0) / 100));\r\n        }\r\n\r\n\r\n        if (instrumentObject[\"phaserMix\"] != undefined) {\r\n            this.phaserMix = clamp(0, Config.phaserMixRange, Math.round((Config.phaserMixRange - 1) * (instrumentObject[\"phaserMix\"] | 0) / 100));\r\n        }\r\n        if (instrumentObject[\"phaserFreq\"] != undefined) {\r\n            this.phaserFreq = clamp(0, Config.phaserFreqRange, Math.round((Config.phaserFreqRange - 1) * (instrumentObject[\"phaserFreq\"] | 0) / 100));\r\n        }\r\n        if (instrumentObject[\"phaserFeedback\"] != undefined) {\r\n            this.phaserFeedback = clamp(0, Config.phaserFeedbackRange, Math.round((Config.phaserFeedbackRange - 1) * (instrumentObject[\"phaserFeedback\"] | 0) / 100));\r\n        }\r\n        if (instrumentObject[\"phaserStages\"] != undefined) {\r\n            this.phaserStages = clamp(0, Config.phaserMaxStages, Math.round((Config.phaserMaxStages - 1) * (instrumentObject[\"phaserStages\"] | 0) / 100));\r\n        }\r\n\r\n        if (instrumentObject[\"echoSustain\"] != undefined) {\r\n            this.echoSustain = clamp(0, Config.echoSustainRange, Math.round((Config.echoSustainRange - 1) * (instrumentObject[\"echoSustain\"] | 0) / 100));\r\n        }\r\n        if (instrumentObject[\"echoDelayBeats\"] != undefined) {\r\n            this.echoDelay = clamp(0, Config.echoDelayRange, Math.round((+instrumentObject[\"echoDelayBeats\"]) * (Config.ticksPerPart * Config.partsPerBeat) / Config.echoDelayStepTicks - 1.0));\r\n        }\r\n\r\n        if (!isNaN(instrumentObject[\"chorus\"])) {\r\n            this.chorus = clamp(0, Config.chorusRange, Math.round((Config.chorusRange - 1) * (instrumentObject[\"chorus\"] | 0) / 100));\r\n        }\r\n\r\n        if (instrumentObject[\"reverb\"] != undefined) {\r\n            this.reverb = clamp(0, Config.reverbRange, Math.round((Config.reverbRange - 1) * (instrumentObject[\"reverb\"] | 0) / 100));\r\n        } else {\r\n            this.reverb = legacyGlobalReverb;\r\n        }\r\n        if (instrumentObject[\"upperNoteLimit\"] != undefined) {\r\n            this.upperNoteLimit = instrumentObject[\"upperNoteLimit\"]\r\n        }\r\n        if (instrumentObject[\"lowerNoteLimit\"] != undefined) {\r\n            this.lowerNoteLimit = instrumentObject[\"lowerNoteLimit\"]\r\n        }\r\n        if (instrumentObject[\"pulseWidth\"] != undefined) {\r\n            this.pulseWidth = clamp(1, Config.pulseWidthRange + 1, Math.round(instrumentObject[\"pulseWidth\"]));\r\n        } else {\r\n            this.pulseWidth = Config.pulseWidthRange/2;\r\n        }\r\n\r\n        if (instrumentObject[\"decimalOffset\"] != undefined) {\r\n            this.decimalOffset = clamp(0, 99 + 1, Math.round(instrumentObject[\"decimalOffset\"]));\r\n        } else {\r\n            this.decimalOffset = 0;\r\n        }\r\n\r\n        if (instrumentObject[\"dynamism\"] != undefined) {\r\n\t\t\tthis.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, Math.round(Config.supersawDynamismMax * (instrumentObject[\"dynamism\"] | 0) / 100));\r\n\t\t} else {\r\n\t\t\tthis.supersawDynamism = Config.supersawDynamismMax;\r\n\t\t}\r\n\t\tif (instrumentObject[\"spread\"] != undefined) {\r\n\t\t\tthis.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, Math.round(Config.supersawSpreadMax * (instrumentObject[\"spread\"] | 0) / 100));\r\n\t\t} else {\r\n\t\t\tthis.supersawSpread = Math.ceil(Config.supersawSpreadMax / 2.0);\r\n\t\t}\r\n\t\tif (instrumentObject[\"shape\"] != undefined) {\r\n\t\t\tthis.supersawShape = clamp(0, Config.supersawShapeMax + 1, Math.round(Config.supersawShapeMax * (instrumentObject[\"shape\"] | 0) / 100));\r\n\t\t} else {\r\n\t\t\tthis.supersawShape = 0;\r\n\t\t}\r\n        \r\n        if (instrumentObject[\"harmonics\"] != undefined) {\r\n            for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                this.harmonicsWave.harmonics[i] = Math.max(0, Math.min(Config.harmonicsMax, Math.round(Config.harmonicsMax * (+instrumentObject[\"harmonics\"][i]) / 100)));\r\n            }\r\n            this.harmonicsWave.markCustomWaveDirty();\r\n        } else {\r\n            this.harmonicsWave.reset();\r\n        }\r\n\r\n        if (instrumentObject[\"spectrum\"] != undefined) {\r\n            for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                this.spectrumWave.spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+instrumentObject[\"spectrum\"][i]) / 100)));\r\n                this.spectrumWave.markCustomWaveDirty();\r\n            }\r\n        } else {\r\n            this.spectrumWave.reset(isNoiseChannel);\r\n        }\r\n\r\n        if (instrumentObject[\"stringSustain\"] != undefined) {\r\n            this.stringSustain = clamp(0, Config.stringSustainRange, Math.round((Config.stringSustainRange - 1) * (instrumentObject[\"stringSustain\"] | 0) / 100));\r\n        } else {\r\n            this.stringSustain = 10;\r\n        }\r\n        this.stringSustainType = Config.enableAcousticSustain ? Config.sustainTypeNames.indexOf(instrumentObject[\"stringSustainType\"]) : SustainType.bright;\r\n\t\tif (<any>this.stringSustainType == -1) this.stringSustainType = SustainType.bright;\r\n\r\n        if (this.type == InstrumentType.noise) {\r\n            this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            if (instrumentObject[\"wave\"] == \"pink noise\") this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"pink\");\r\n            if (instrumentObject[\"wave\"] == \"brownian noise\") this.chipNoise = Config.chipNoises.findIndex(wave => wave.name == \"brownian\");\r\n            if (this.chipNoise == -1) this.chipNoise = 1;\r\n        }\r\n\r\n        const legacyEnvelopeNames: Dictionary<string> = { \"custom\": \"note size\", \"steady\": \"none\", \"pluck 1\": \"twang 1\", \"pluck 2\": \"twang 2\", \"pluck 3\": \"twang 3\" };\r\n        const getEnvelope = (name: any): Envelope | undefined => (legacyEnvelopeNames[name] != undefined) ? Config.envelopes.dictionary[legacyEnvelopeNames[name]] : Config.envelopes.dictionary[name];\r\n\r\n        if (this.type == InstrumentType.drumset) {\r\n            if (instrumentObject[\"drums\"] != undefined) {\r\n                for (let j: number = 0; j < Config.drumCount; j++) {\r\n                    const drum: any = instrumentObject[\"drums\"][j];\r\n                    if (drum == undefined) continue;\r\n\r\n                    this.drumsetEnvelopes[j] = Config.envelopes.dictionary[\"twang 2\"].index; // default value.\r\n                    if (drum[\"filterEnvelope\"] != undefined) {\r\n                        const envelope: Envelope | undefined = getEnvelope(drum[\"filterEnvelope\"]);\r\n                        if (envelope != undefined) this.drumsetEnvelopes[j] = envelope.index;\r\n                    }\r\n                    if (drum[\"spectrum\"] != undefined) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            this.drumsetSpectrumWaves[j].spectrum[i] = Math.max(0, Math.min(Config.spectrumMax, Math.round(Config.spectrumMax * (+drum[\"spectrum\"][i]) / 100)));\r\n                        }\r\n                    }\r\n                    this.drumsetSpectrumWaves[j].markCustomWaveDirty();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.type == InstrumentType.chip) {\r\n            const legacyWaveNames: Dictionary<number> = { \"triangle\": 1, \"square\": 2, \"pulse wide\": 3, \"pulse narrow\": 4, \"sawtooth\": 5, \"double saw\": 6, \"double pulse\": 7, \"spiky\": 8, \"plateau\": 0 };\r\n           \t\t\t\t const modboxWaveNames: Dictionary<number> = { \"10% pulse\": 22, \"sunsoft bass\": 23, \"loud pulse\": 24, \"sax\": 25, \"guitar\": 26, \"atari bass\": 28, \"atari pulse\": 29, \"1% pulse\": 30, \"curved sawtooth\": 31, \"viola\": 32, \"brass\": 33, \"acoustic bass\": 34, \"lyre\": 35, \"ramp pulse\": 36, \"piccolo\": 37, \"squaretooth\": 38, \"flatline\": 39, \"pnryshk a (u5)\": 40, \"pnryshk b (riff)\": 41 };\r\n             \t const sandboxWaveNames: Dictionary<number> = { \"shrill lute\": 42, \"shrill bass\": 44, \"nes pulse\": 45, \"saw bass\": 46, \"euphonium\": 47, \"shrill pulse\": 48, \"r-sawtooth\": 49, \"recorder\": 50, \"narrow saw\": 51, \"deep square\": 52, \"ring pulse\": 53, \"double sine\": 54, \"contrabass\": 55, \"double bass\": 56 };\r\n\t\t\t const zefboxWaveNames: Dictionary<number> = {\"semi-square\": 63, \"deep square\": 64, \"squaretal\": 40, \"saw wide\": 65, \"saw narrow \": 66, \"deep sawtooth\": 67, \"sawtal\": 68, \"pulse\": 69, \"triple pulse\": 70, \"high pulse\": 71,\"deep pulse\": 72 };\r\n\t\t\t const miscWaveNames: Dictionary<number> = {\"test1\": 56, \"pokey 4bit lfsr\": 57, \"pokey 5step bass\": 58, \"isolated spiky\": 59, \"unnamed 1\": 60, \"unnamed 2\": 61, \"guitar string\": 75, \"intense\": 76, \"buzz wave\": 77, \"pokey square\": 57, \"pokey bass\": 58, \"banana wave\": 83, \"test 1\": 84, \"test 2\": 84, \"real snare\": 85, \"earthbound o. guitar\": 86 };\r\n\t\t\t const paandorasboxWaveNames: Dictionary<number> = {\"kick\": 87, \"snare\": 88, \"piano1\": 89, \"WOW\": 90, \"overdrive\": 91, \"trumpet\": 92, \"saxophone\": 93, \"orchestrahit\": 94, \"detached violin\": 95, \"synth\": 96, \"sonic3snare\": 97, \"come on\": 98, \"choir\": 99, \"overdriveguitar\": 100, \"flute\": 101, \"legato violin\": 102, \"tremolo violin\": 103, \"amen break\": 104, \"pizzicato violin\": 105, \"tim allen grunt\": 106, \"tuba\": 107, \"loopingcymbal\": 108, \"standardkick\": 109, \"standardsnare\": 110, \"closedhihat\": 111, \"foothihat\": 112, \"openhihat\": 113, \"crashcymbal\": 114, \"pianoC4\": 115, \"liver pad\": 116, \"marimba\": 117, \"susdotwav\": 118, \"wackyboxtts\": 119};\r\n\t\t\t// const paandorasbetaWaveNames = {\"contrabass\": 55, \"double bass\": 56 };\r\n\t\t//this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]);\r\n            this.chipWave = -1;\r\n            const rawName: string = instrumentObject[\"wave\"];\r\n            for (const table of [\r\n                legacyWaveNames,\r\n                modboxWaveNames,\r\n                sandboxWaveNames,\r\n                zefboxWaveNames,\r\n                miscWaveNames,\r\n                paandorasboxWaveNames\r\n            ]) {\r\n                if (this.chipWave == -1 && table[rawName] != undefined && Config.chipWaves[table[rawName]] != undefined) {\r\n                    this.chipWave = table[rawName];\r\n                    break;\r\n                }\r\n            }\r\n            if (this.chipWave == -1) {\r\n                const potentialChipWaveIndex: number = Config.chipWaves.findIndex(wave => wave.name == rawName);\r\n                if (potentialChipWaveIndex != -1) this.chipWave = potentialChipWaveIndex;\r\n            }\r\n            // this.chipWave = legacyWaveNames[instrumentObject[\"wave\"]] != undefined ? legacyWaveNames[instrumentObject[\"wave\"]] : modboxWaveNames[instrumentObject[\"wave\"]] != undefined ? modboxWaveNames[instrumentObject[\"wave\"]] : sandboxWaveNames[instrumentObject[\"wave\"]] != undefined ? sandboxWaveNames[instrumentObject[\"wave\"]] : zefboxWaveNames[instrumentObject[\"wave\"]] != undefined ? zefboxWaveNames[instrumentObject[\"wave\"]] : miscWaveNames[instrumentObject[\"wave\"]] != undefined ? miscWaveNames[instrumentObject[\"wave\"]] : paandorasboxWaveNames[instrumentObject[\"wave\"]] != undefined ? paandorasboxWaveNames[instrumentObject[\"wave\"]] : Config.chipWaves.findIndex(wave => wave.name == instrumentObject[\"wave\"]); \r\n\t\tif (this.chipWave == -1) this.chipWave = 1;\r\n        }\r\n\r\n        if (this.type == InstrumentType.fm || this.type == InstrumentType.fm6op) {\r\n            if(this.type == InstrumentType.fm) {\r\n                this.algorithm = Config.algorithms.findIndex(algorithm => algorithm.name == instrumentObject[\"algorithm\"]);\r\n                if (this.algorithm == -1) this.algorithm = 0;\r\n                this.feedbackType = Config.feedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"]);\r\n                if (this.feedbackType == -1) this.feedbackType = 0;\r\n            } else {\r\n                this.algorithm6Op = Config.algorithms6Op.findIndex(algorithm6Op => algorithm6Op.name == instrumentObject[\"algorithm\"]);\r\n                if (this.algorithm6Op == -1) this.algorithm6Op = 1;\r\n                if(this.algorithm6Op == 0){ \r\n                    this.customAlgorithm.set(instrumentObject[\"customAlgorithm\"][\"carrierCount\"], instrumentObject[\"customAlgorithm\"][\"mods\"]);\r\n                } else{\r\n                    this.customAlgorithm.fromPreset(this.algorithm6Op);\r\n                }\r\n                this.feedbackType6Op = Config.feedbacks6Op.findIndex(feedback6Op => feedback6Op.name == instrumentObject[\"feedbackType\"]);\r\n                                                // SynthBox feedback support\r\n                if (this.feedbackType6Op == -1) {    \r\n                    // These are all of the SynthBox feedback presets that aren't present in Gold/UltraBox\r\n                    let synthboxLegacyFeedbacks: DictionaryArray<any> = toNameMap([\r\n                        { name: \"2⟲ 3⟲\", indices: [[], [2], [3], [], [], []] },\r\n                        { name: \"3⟲ 4⟲\", indices: [[], [], [3], [4], [], []] },\r\n                        { name: \"4⟲ 5⟲\", indices: [[], [], [], [4], [5], []] },\r\n                        { name: \"5⟲ 6⟲\", indices: [[], [], [], [], [5], [6]] },\r\n                        { name: \"1⟲ 6⟲\", indices: [[1], [], [], [], [], [6]] },\r\n                        { name: \"1⟲ 3⟲\", indices: [[1], [], [3], [], [], []] },\r\n                        { name: \"1⟲ 4⟲\", indices: [[1], [], [], [4], [], []] },\r\n                        { name: \"1⟲ 5⟲\", indices: [[1], [], [], [], [5], []] },\r\n                        { name: \"4⟲ 6⟲\", indices: [[], [], [], [4], [], [6]] },\r\n                        { name: \"2⟲ 6⟲\", indices: [[], [2], [], [], [], [6]] },\r\n                        { name: \"3⟲ 6⟲\", indices: [[], [], [3], [], [], [6]] },\r\n                        { name: \"4⟲ 5⟲ 6⟲\", indices: [[], [], [], [4], [5], [6]] },\r\n                        { name: \"1⟲ 3⟲ 6⟲\", indices: [[1], [], [3], [], [], [6]] },\r\n                        { name: \"2→5\", indices: [[], [], [], [], [2], []] },\r\n                        { name: \"2→6\", indices: [[], [], [], [], [], [2]] },\r\n                        { name: \"3→5\", indices: [[], [], [], [], [3], []] },\r\n                        { name: \"3→6\", indices: [[], [], [], [], [], [3]] },\r\n                        { name: \"4→6\", indices: [[], [], [], [], [], [4]] },\r\n                        { name: \"5→6\", indices: [[], [], [], [], [], [5]] },\r\n                        { name: \"1→3→4\", indices: [[], [], [1], [], [3], []] },\r\n                        { name: \"2→5→6\", indices: [[], [], [], [], [2], [5]] },\r\n                        { name: \"2→4→6\", indices: [[], [], [], [2], [], [4]] },\r\n                        { name: \"4→5→6\", indices: [[], [], [], [], [4], [5]] },\r\n                        { name: \"3→4→5→6\", indices: [[], [], [], [3], [4], [5]] },\r\n                        { name: \"2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\r\n                        { name: \"1→2→3→4→5→6\", indices: [[], [1], [2], [3], [4], [5]] },\r\n                    ]);\r\n\r\n                    let synthboxFeedbackType = synthboxLegacyFeedbacks[synthboxLegacyFeedbacks.findIndex(feedback => feedback.name == instrumentObject[\"feedbackType\"])]!.indices;\r\n\r\n                    if (synthboxFeedbackType != undefined) {\r\n                        this.feedbackType6Op = 0;\r\n                        this.customFeedbackType.set(synthboxFeedbackType);\r\n                    } else {\r\n                        // if the feedback type STILL can't be resolved, default to the first non-custom option\r\n                        this.feedbackType6Op = 1;\r\n                    }\r\n                }\r\n            } \r\n\r\n            if ((this.feedbackType6Op == 0) && (instrumentObject[\"customFeedback\"] != undefined)) {\r\n                this.customFeedbackType.set(instrumentObject[\"customFeedback\"][\"mods\"]);\r\n            } else {\r\n                this.customFeedbackType.fromPreset(this.feedbackType6Op);\r\n            }\r\n            if (instrumentObject[\"feedbackAmplitude\"] != undefined) {\r\n                this.feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, instrumentObject[\"feedbackAmplitude\"] | 0);\r\n            } else {\r\n                this.feedbackAmplitude = 0;\r\n            }\r\n\r\n            for (let j: number = 0; j < Config.operatorCount + (this.type == InstrumentType.fm6op?2:0); j++) {\r\n                const operator: Operator = this.operators[j];\r\n                let operatorObject: any = undefined;\r\n                if (instrumentObject[\"operators\"] != undefined) operatorObject = instrumentObject[\"operators\"][j];\r\n                if (operatorObject == undefined) operatorObject = {};\r\n\r\n                operator.frequency = Config.operatorFrequencies.findIndex(freq => freq.name == operatorObject[\"frequency\"]);\r\n                if (operator.frequency == -1) operator.frequency = 0;\r\n                if (operatorObject[\"amplitude\"] != undefined) {\r\n                    operator.amplitude = clamp(0, Config.operatorAmplitudeMax + 1, operatorObject[\"amplitude\"] | 0);\r\n                } else {\r\n                    operator.amplitude = 0;\r\n                }\r\n                if (operatorObject[\"waveform\"] != undefined) {\r\n                    // If the json is from GB, we override the last two waves to be sine to account for a bug\r\n                    if (format == \"goldbox\" && j > 3) {\r\n                        operator.waveform = 0;\r\n                        continue;\r\n                     }\r\n                    operator.waveform = Config.operatorWaves.findIndex(wave => wave.name == operatorObject[\"waveform\"]);\r\n                    if (operator.waveform == -1) {\r\n                        // GoldBox compatibility\r\n                        if (operatorObject[\"waveform\"] == \"square\") {\r\n                            operator.waveform = Config.operatorWaves.dictionary[\"pulse width\"].index;\r\n                            operator.pulseWidth = 5;\r\n                        } else if (operatorObject[\"waveform\"] == \"rounded\") {\r\n                            operator.waveform = Config.operatorWaves.dictionary[\"quasi-sine\"].index;\r\n                        } else {\r\n                            operator.waveform = 0;\r\n                        }\r\n\r\n                    }\r\n                } else {\r\n                    operator.waveform = 0;\r\n                }\r\n                if (operatorObject[\"pulseWidth\"] != undefined) {\r\n                    operator.pulseWidth = operatorObject[\"pulseWidth\"] | 0;\r\n                } else {\r\n                    operator.pulseWidth = 5;\r\n                }\r\n            }\r\n        }\r\n        else if (this.type == InstrumentType.customChipWave) {\r\n            if (instrumentObject[\"customChipWave\"]) {\r\n\r\n                for (let i: number = 0; i < 64; i++) {\r\n                    this.customChipWave[i] = instrumentObject[\"customChipWave\"][i];\r\n                }\r\n\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    sum += this.customChipWave[i];\r\n                }\r\n                const average: number = sum / this.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < this.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = this.customChipWave[i] - average;\r\n                    this.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                this.customChipWaveIntegral[64] = 0.0;\r\n            }\r\n        } else if (this.type == InstrumentType.mod) {\r\n            if (instrumentObject[\"modChannels\"] != undefined) {\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    this.modChannels[mod] = instrumentObject[\"modChannels\"][mod];\r\n                    this.modInstruments[mod] = instrumentObject[\"modInstruments\"][mod];\r\n                    this.modulators[mod] = instrumentObject[\"modSettings\"][mod];\r\n                    // Due to an oversight, this isn't included in JSONs prior to JB 2.6.\r\n                    if (instrumentObject[\"modFilterTypes\"] != undefined)\r\n                    this.modFilterTypes[mod] = instrumentObject[\"modFilterTypes\"][mod];\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.type != InstrumentType.mod) {\r\n            // Arpeggio speed\r\n            if (this.chord == Config.chords.dictionary[\"arpeggio\"].index && instrumentObject[\"arpeggioSpeed\"] != undefined) {\r\n                this.arpeggioSpeed = instrumentObject[\"arpeggioSpeed\"];\r\n            }\r\n            else {\r\n                this.arpeggioSpeed = (useSlowerRhythm) ? 9 : 12; // Decide whether to import arps as x3/4 speed\r\n            }\r\n\r\n            if (instrumentObject[\"fastTwoNoteArp\"] != undefined) {\r\n                this.fastTwoNoteArp = instrumentObject[\"fastTwoNoteArp\"];\r\n            }\r\n            else {\r\n                this.fastTwoNoteArp = useFastTwoNoteArp;\r\n            }\r\n\r\n            if (instrumentObject[\"clicklessTransition\"] != undefined) {\r\n                this.clicklessTransition = instrumentObject[\"clicklessTransition\"];\r\n            }\r\n            else {\r\n                this.clicklessTransition = false;\r\n            }\r\n\r\n            if (instrumentObject[\"aliases\"] != undefined) {\r\n                this.aliases = instrumentObject[\"aliases\"];\r\n            }\r\n            else {\r\n            // modbox had no anti-aliasing, so enable it for everything if that mode is selected\r\n            if (format == \"modbox\") {\r\n                this.effects = (this.effects | (1 << EffectType.distortion));\r\n                this.aliases = true;\r\n                this.distortion = 0;\r\n            } else {\r\n                this.aliases = false;\r\n            }\r\n            }\r\n\r\n            if (instrumentObject[\"noteFilterType\"] != undefined) {\r\n                this.noteFilterType = instrumentObject[\"noteFilterType\"];\r\n            }\r\n            if (instrumentObject[\"noteSimpleCut\"] != undefined) {\r\n                this.noteFilterSimpleCut = instrumentObject[\"noteSimpleCut\"];\r\n            }\r\n            if (instrumentObject[\"noteSimplePeak\"] != undefined) {\r\n                this.noteFilterSimplePeak = instrumentObject[\"noteSimplePeak\"];\r\n            }\r\n            if (instrumentObject[\"noteFilter\"] != undefined) {\r\n                this.noteFilter.fromJsonObject(instrumentObject[\"noteFilter\"]);\r\n            } else {\r\n                this.noteFilter.reset();\r\n            }\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (Array.isArray(instrumentObject[\"noteSubFilters\" + i])) {\r\n                    this.noteSubFilters[i] = new FilterSettings();\r\n                    this.noteSubFilters[i]!.fromJsonObject(instrumentObject[\"noteSubFilters\" + i]);\r\n                }\r\n            }\r\n            if (instrumentObject[\"eqFilterType\"] != undefined) {\r\n                this.eqFilterType = instrumentObject[\"eqFilterType\"];\r\n            }\r\n            if (instrumentObject[\"eqSimpleCut\"] != undefined) {\r\n                this.eqFilterSimpleCut = instrumentObject[\"eqSimpleCut\"];\r\n            }\r\n            if (instrumentObject[\"eqSimplePeak\"] != undefined) {\r\n                this.eqFilterSimplePeak = instrumentObject[\"eqSimplePeak\"];\r\n            }\r\n            if (Array.isArray(instrumentObject[\"eqFilter\"])) {\r\n                this.eqFilter.fromJsonObject(instrumentObject[\"eqFilter\"]);\r\n            } else {\r\n                this.eqFilter.reset();\r\n\r\n                const legacySettings: LegacySettings = {};\r\n\r\n                // Try converting from legacy filter settings.\r\n                const filterCutoffMaxHz: number = 8000;\r\n                const filterCutoffRange: number = 11;\r\n                const filterResonanceRange: number = 8;\r\n                if (instrumentObject[\"filterCutoffHz\"] != undefined) {\r\n                    legacySettings.filterCutoff = clamp(0, filterCutoffRange, Math.round((filterCutoffRange - 1) + 2.0 * Math.log((instrumentObject[\"filterCutoffHz\"] | 0) / filterCutoffMaxHz) / Math.LN2));\r\n                } else {\r\n                    legacySettings.filterCutoff = (this.type == InstrumentType.chip) ? 6 : 10;\r\n                }\r\n                if (instrumentObject[\"filterResonance\"] != undefined) {\r\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, Math.round((filterResonanceRange - 1) * (instrumentObject[\"filterResonance\"] | 0) / 100));\r\n                } else {\r\n                    legacySettings.filterResonance = 0;\r\n                }\r\n\r\n                legacySettings.filterEnvelope = getEnvelope(instrumentObject[\"filterEnvelope\"]);\r\n                legacySettings.pulseEnvelope = getEnvelope(instrumentObject[\"pulseEnvelope\"]);\r\n                legacySettings.feedbackEnvelope = getEnvelope(instrumentObject[\"feedbackEnvelope\"]);\r\n                if (Array.isArray(instrumentObject[\"operators\"])) {\r\n                    legacySettings.operatorEnvelopes = [];\r\n                    for (let j: number = 0; j < Config.operatorCount + (this.type == InstrumentType.fm6op?2:0); j++) {\r\n                        let envelope: Envelope | undefined;\r\n                        if (instrumentObject[\"operators\"][j] != undefined) {\r\n                            envelope = getEnvelope(instrumentObject[\"operators\"][j][\"envelope\"]);\r\n                        }\r\n                        legacySettings.operatorEnvelopes[j] = (envelope != undefined) ? envelope : Config.envelopes.dictionary[\"none\"];\r\n                    }\r\n                }\r\n\r\n                // Try converting from even older legacy filter settings.\r\n                if (instrumentObject[\"filter\"] != undefined) {\r\n                    const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n                    const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\r\n                    const filterNames: string[] = [\"none\", \"bright\", \"medium\", \"soft\", \"decay bright\", \"decay medium\", \"decay soft\"];\r\n                    const oldFilterNames: Dictionary<number> = { \"sustain sharp\": 1, \"sustain medium\": 2, \"sustain soft\": 3, \"decay sharp\": 4 };\r\n                    let legacyFilter: number = oldFilterNames[instrumentObject[\"filter\"]] != undefined ? oldFilterNames[instrumentObject[\"filter\"]] : filterNames.indexOf(instrumentObject[\"filter\"]);\r\n                    if (legacyFilter == -1) legacyFilter = 0;\r\n                    legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                    legacySettings.filterEnvelope = getEnvelope(legacyToEnvelope[legacyFilter]);\r\n                    legacySettings.filterResonance = 0;\r\n                }\r\n\r\n                this.convertLegacySettings(legacySettings, true);\r\n            }\r\n\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (Array.isArray(instrumentObject[\"eqSubFilters\" + i])) {\r\n                    this.eqSubFilters[i] = new FilterSettings();\r\n                    this.eqSubFilters[i]!.fromJsonObject(instrumentObject[\"eqSubFilters\" + i]);\r\n                }\r\n            }\r\n\r\n            if (Array.isArray(instrumentObject[\"envelopes\"])) {\r\n                const envelopeArray: any[] = instrumentObject[\"envelopes\"];\r\n                for (let i = 0; i < envelopeArray.length; i++) {\r\n                    if (this.envelopeCount >= Config.maxEnvelopeCount) break;\r\n                    const tempEnvelope: EnvelopeSettings = new EnvelopeSettings();\r\n                    tempEnvelope.fromJsonObject(envelopeArray[i], format);\r\n                    this.addEnvelope(tempEnvelope.target, tempEnvelope.index, tempEnvelope.envelope);\r\n                }\r\n            }\r\n        }\r\n   \t\t // advloop addition\r\n            if (type === 0) {\r\n                if (instrumentObject[\"isUsingAdvancedLoopControls\"] != undefined) {\r\n                    this.isUsingAdvancedLoopControls = instrumentObject[\"isUsingAdvancedLoopControls\"];\r\n                    this.chipWaveLoopStart = instrumentObject[\"chipWaveLoopStart\"];\r\n                    this.chipWaveLoopEnd = instrumentObject[\"chipWaveLoopEnd\"];\r\n                    this.chipWaveLoopMode = instrumentObject[\"chipWaveLoopMode\"];\r\n                    this.chipWavePlayBackwards = instrumentObject[\"chipWavePlayBackwards\"];\r\n                    this.chipWaveStartOffset = instrumentObject[\"chipWaveStartOffset\"];\r\n                } else {\r\n                    this.isUsingAdvancedLoopControls = false;\r\n                    this.chipWaveLoopStart = 0;\r\n                    this.chipWaveLoopEnd = Config.rawRawChipWaves[this.chipWave].samples.length - 1;\r\n                    this.chipWaveLoopMode = 0;\r\n                    this.chipWavePlayBackwards = false;\r\n                    this.chipWaveStartOffset = 0;\r\n                }\r\n            }\r\n\t}\t\r\n           // advloop addition\r\n\r\n        public getLargestControlPointCount(forNoteFilter: boolean) {\r\n        let largest: number;\r\n        if (forNoteFilter) {\r\n            largest = this.noteFilter.controlPointCount;\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (this.noteSubFilters[i] != null && this.noteSubFilters[i]!.controlPointCount > largest)\r\n                    largest = this.noteSubFilters[i]!.controlPointCount;\r\n            }\r\n        }\r\n        else {\r\n            largest = this.eqFilter.controlPointCount;\r\n            for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                if (this.eqSubFilters[i] != null && this.eqSubFilters[i]!.controlPointCount > largest)\r\n                    largest = this.eqSubFilters[i]!.controlPointCount;\r\n            }\r\n        }\r\n        return largest;\r\n    }\r\n\r\n    public static frequencyFromPitch(pitch: number): number {\r\n        return 440.0 * Math.pow(2.0, (pitch - 69.0) / 12.0);\r\n    }\r\n\r\n    public addEnvelope(target: number, index: number, envelope: number): void {\r\n        let makeEmpty: boolean = false;\r\n        if (!this.supportsEnvelopeTarget(target, index)) makeEmpty = true;\r\n        if (this.envelopeCount >= Config.maxEnvelopeCount) throw new Error();\r\n        while (this.envelopes.length <= this.envelopeCount) this.envelopes[this.envelopes.length] = new EnvelopeSettings();\r\n        const envelopeSettings: EnvelopeSettings = this.envelopes[this.envelopeCount];\r\n        envelopeSettings.target = makeEmpty ? Config.instrumentAutomationTargets.dictionary[\"none\"].index : target;\r\n        envelopeSettings.index = makeEmpty ? 0 : index;\r\n        envelopeSettings.envelope = envelope;\r\n        this.envelopeCount++;\r\n    }\r\n\r\n    public supportsEnvelopeTarget(target: number, index: number): boolean {\r\n        const automationTarget: AutomationTarget = Config.instrumentAutomationTargets[target];\r\n        if (automationTarget.computeIndex == null && automationTarget.name != \"none\") {\r\n\t\t\treturn false;\r\n\t\t}\r\n        if (index >= automationTarget.maxCount) {\r\n            return false;\r\n        }\r\n        if (automationTarget.compatibleInstruments != null && automationTarget.compatibleInstruments.indexOf(this.type) == -1) {\r\n            return false;\r\n        }\r\n        if (automationTarget.effect != null && (this.effects & (1 << automationTarget.effect)) == 0) {\r\n            return false;\r\n        }\r\n        if (automationTarget.isFilter) {\r\n            //if (automationTarget.perNote) {\r\n            let useControlPointCount: number = this.noteFilter.controlPointCount;\r\n            if (this.noteFilterType)\r\n                useControlPointCount = 1;\r\n            if (index >= useControlPointCount) return false;\r\n            //} else {\r\n            //\tif (index >= this.eqFilter.controlPointCount)   return false;\r\n            //}\r\n        }\r\n        if ((automationTarget.name == \"operatorFrequency\") || (automationTarget.name == \"operatorAmplitude\")) {\r\n            if (index >= 4 + (this.type == InstrumentType.fm6op ? 2 : 0)) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public clearInvalidEnvelopeTargets(): void {\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this.envelopeCount; envelopeIndex++) {\r\n            const target: number = this.envelopes[envelopeIndex].target;\r\n            const index: number = this.envelopes[envelopeIndex].index;\r\n            if (!this.supportsEnvelopeTarget(target, index)) {\r\n                this.envelopes[envelopeIndex].target = Config.instrumentAutomationTargets.dictionary[\"none\"].index;\r\n                this.envelopes[envelopeIndex].index = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public getTransition(): Transition {\r\n        return effectsIncludeTransition(this.effects) ? Config.transitions[this.transition] :\r\n            (this.type == InstrumentType.mod ? Config.transitions.dictionary[\"interrupt\"] : Config.transitions.dictionary[\"normal\"]);\r\n    }\r\n\r\n    public getFadeInSeconds(): number {\r\n        return (this.type == InstrumentType.drumset) ? 0.0 : Synth.fadeInSettingToSeconds(this.fadeIn);\r\n    }\r\n\r\n    public getFadeOutTicks(): number {\r\n        return (this.type == InstrumentType.drumset) ? Config.drumsetFadeOutTicks : Synth.fadeOutSettingToTicks(this.fadeOut)\r\n    }\r\n\r\n    public getChord(): Chord {\r\n        return effectsIncludeChord(this.effects) ? Config.chords[this.chord] : Config.chords.dictionary[\"simultaneous\"];\r\n    }\r\n\r\n    public getDrumsetEnvelope(pitch: number): Envelope {\r\n        if (this.type != InstrumentType.drumset) throw new Error(\"Can't getDrumsetEnvelope() for non-drumset.\");\r\n        return Config.envelopes[this.drumsetEnvelopes[pitch]];\r\n    }\r\n}\r\n\r\nexport class Channel {\r\n    public octave: number = 0;\r\n    public readonly instruments: Instrument[] = [];\r\n    public readonly patterns: Pattern[] = [];\r\n    public readonly bars: number[] = [];\r\n    public muted: boolean = false;\r\n    public name: string = \"\";\r\n}\r\n\r\nexport class Song {\r\n    private static readonly _format: string = Config.jsonFormat;\r\n    private static readonly _oldestBeepboxVersion: number = 2;\r\n    private static readonly _latestBeepboxVersion: number = 9;\r\n    private static readonly _oldestJummBoxVersion: number = 1;\r\n    private static readonly _latestJummBoxVersion: number = 6;\r\n    private static readonly _oldestGoldBoxVersion: number = 1;\r\n    private static readonly _latestGoldBoxVersion: number = 4;\r\n    private static readonly _oldestUltraBoxVersion: number = 1;\r\n    private static readonly _latestUltraBoxVersion: number = 6;\r\n    private static readonly _oldestAbyssBoxVersion: number = 1;\r\n    private static readonly _latestAbyssBoxVersion: number = 3;\r\n    // One-character variant detection at the start of URL to distinguish variants such as JummBox, Or Goldbox. \"j\" and \"g\" respectively\r\n\t//also \"u\" is ultrabox lol\r\n    private static readonly _variant = 0x61; //\"a\" ~ abyssbox\r\n\r\n    public title: string;\r\n    public author: string;\r\n    public description: string;\r\n    public showSongDetails: boolean;\r\n    public setSongTheme: string;\r\n    public scale: number;\r\n    public scaleCustom: boolean[] = [];\r\n    public key: number;\r\n    public octave: number;\r\n    public tempo: number;\r\n    public loopType: number = 1;\r\n    public reverb: number;\r\n    public beatsPerBar: number;\r\n    public barCount: number;\r\n    public patternsPerChannel: number;\r\n    public rhythm: number;\r\n    public layeredInstruments: boolean;\r\n    public patternInstruments: boolean;\r\n    public loopStart: number;\r\n    public loopLength: number;\r\n    public pitchChannelCount: number;\r\n    public noiseChannelCount: number;\r\n    public modChannelCount: number;\r\n    public readonly channels: Channel[] = [];\r\n    public limitDecay: number = 4.0;\r\n    public limitRise: number = 4000.0;\r\n    public compressionThreshold: number = 1.0;\r\n    public limitThreshold: number = 1.0;\r\n    public compressionRatio: number = 1.0;\r\n    public limitRatio: number = 1.0;\r\n    public masterGain: number = 1.0;\r\n    public inVolumeCap: number = 0.0;\r\n    public outVolumeCap: number = 0.0;\r\n    public eqFilter: FilterSettings = new FilterSettings();\r\n    public eqFilterType: boolean = false;\r\n    public eqFilterSimpleCut: number = Config.filterSimpleCutRange - 1;\r\n    public eqFilterSimplePeak: number = 0;\r\n    public eqSubFilters: (FilterSettings | null)[] = [];\r\n    public tmpEqFilterStart: FilterSettings | null;\r\n    public tmpEqFilterEnd: FilterSettings | null;\r\n\r\n    constructor(string?: string) {\r\n        if (string != undefined) {\r\n            this.fromBase64String(string);\r\n        } else {\r\n            this.initToDefault(true);\r\n        }\r\n    }\r\n\r\n    // Returns the ideal new note volume when dragging (max volume for a normal note, a \"neutral\" value for mod notes based on how they work)\r\n    public getNewNoteVolume = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let vol: number | undefined = Config.modulators[this.channels[modChannel].instruments[modInstrument].modulators[modCount]].newNoteVol;\r\n\r\n            // For tempo, actually use user defined tempo\r\n            let tempoIndex: number = Config.modulators.dictionary[\"tempo\"].index;\r\n            if (this.channels[modChannel].instruments[modInstrument].modulators[modCount] == tempoIndex) {\r\n                vol = this.tempo - Config.modulators[tempoIndex].convertRealFactor;\r\n            }\r\n\r\n            if (vol != undefined)\r\n                return vol;\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n\r\n    public getVolumeCap = (isMod: boolean, modChannel?: number, modInstrument?: number, modCount?: number): number => {\r\n        if (!isMod || modChannel == undefined || modInstrument == undefined || modCount == undefined)\r\n            return 6;\r\n        else {\r\n            // Sigh, the way pitches count up and the visual ordering in the UI are flipped.\r\n            modCount = Config.modCount - modCount - 1;\r\n\r\n            let instrument: Instrument = this.channels[modChannel].instruments[modInstrument];\r\n            let modulator = Config.modulators[instrument.modulators[modCount]];\r\n            let cap: number | undefined = modulator.maxRawVol;\r\n\r\n            if (cap != undefined) {\r\n                // For filters, cap is dependent on which filter setting is targeted\r\n                if (modulator.name == \"eq filter\" || modulator.name == \"note filter\") {\r\n                    // type 0: number of filter morphs\r\n                    // type 1/odd: number of filter x positions\r\n                    // type 2/even: number of filter y positions\r\n                    cap = Config.filterMorphCount - 1;\r\n                    if (instrument.modFilterTypes[modCount] > 0 && instrument.modFilterTypes[modCount] % 2) {\r\n                        cap = Config.filterFreqRange;\r\n                    } else if (instrument.modFilterTypes[modCount] > 0) {\r\n                        cap = Config.filterGainRange;\r\n                    }\r\n                }\r\n                return cap;\r\n            }\r\n            else\r\n                return 6;\r\n        }\r\n    }\r\n\r\n    public getVolumeCapForSetting = (isMod: boolean, modSetting: number, filterType?: number): number => {\r\n        if (!isMod)\r\n            return Config.noteSizeMax;\r\n        else {\r\n            let cap: number | undefined = Config.modulators[modSetting].maxRawVol;\r\n            if (cap != undefined) {\r\n\r\n                // For filters, cap is dependent on which filter setting is targeted\r\n                if (filterType != undefined && (Config.modulators[modSetting].name == \"eq filter\" || Config.modulators[modSetting].name == \"note filter\")) {\r\n                    // type 0: number of filter morphs\r\n                    // type 1/odd: number of filter x positions\r\n                    // type 2/even: number of filter y positions\r\n                    cap = Config.filterMorphCount - 1;\r\n                    if (filterType > 0 && filterType % 2) {\r\n                        cap = Config.filterFreqRange;\r\n                    } else if (filterType > 0) {\r\n                        cap = Config.filterGainRange;\r\n                    }\r\n                }\r\n\r\n                return cap;\r\n            }\r\n            else\r\n                return Config.noteSizeMax;\r\n        }\r\n    }\r\n\r\n    public getChannelCount(): number {\r\n        return this.pitchChannelCount + this.noiseChannelCount + this.modChannelCount;\r\n    }\r\n\r\n    public getMaxInstrumentsPerChannel(): number {\r\n        return Math.max(\r\n            this.layeredInstruments ? Config.layeredInstrumentCountMax : Config.instrumentCountMin,\r\n            this.patternInstruments ? Config.patternInstrumentCountMax : Config.instrumentCountMin);\r\n    }\r\n\r\n    public getMaxInstrumentsPerPattern(channelIndex: number): number {\r\n        return this.getMaxInstrumentsPerPatternForChannel(this.channels[channelIndex]);\r\n    }\r\n\r\n    public getMaxInstrumentsPerPatternForChannel(channel: Channel): number {\r\n        return this.layeredInstruments\r\n            ? Math.min(Config.layeredInstrumentCountMax, channel.instruments.length)\r\n            : 1;\r\n    }\r\n\r\n    public getChannelIsNoise(channelIndex: number): boolean {\r\n        return (channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public getChannelIsMod(channelIndex: number): boolean {\r\n        return (channelIndex >= this.pitchChannelCount + this.noiseChannelCount);\r\n    }\r\n\r\n    public initToDefault(andResetChannels: boolean = true): void {\r\n        this.scale = 0;\r\n        this.scaleCustom = [true, false, true, true, false, false, false, true, true, false, true, true];\r\n\t    //this.scaleCustom = [true, false, false, false, false, false, false, false, false, false, false, false];\r\n        this.key = 0;\r\n        this.octave = 0;\r\n        this.loopStart = 0;\r\n        this.loopLength = 4;\r\n        this.tempo = 120;\r\n        this.loopType = 1;\r\n        this.reverb = 0;\r\n        this.beatsPerBar = 8;\r\n        this.barCount = 16;\r\n        this.patternsPerChannel = 8;\r\n        this.rhythm = 3;\r\n        this.layeredInstruments = false;\r\n        this.patternInstruments = false;\r\n\r\n        this.title = \"Untitled\";\r\n        this.author = \"\";\r\n        this.description = \"\";\r\n        this.showSongDetails = false;\r\n        document.title = this.title + \" - \" + EditorConfig.versionDisplayName;\r\n        this.setSongTheme = \"none\";\r\n\r\n        if (andResetChannels) {\r\n            this.pitchChannelCount = 3;\r\n            this.noiseChannelCount = 1;\r\n            this.modChannelCount = 1;\r\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n                const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n                if (this.channels.length <= channelIndex) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                const channel: Channel = this.channels[channelIndex];\r\n                channel.octave = Math.max(3 - channelIndex, 0); // [3, 2, 1, 0]; Descending octaves with drums at zero in last channel.\r\n\r\n                for (let pattern: number = 0; pattern < this.patternsPerChannel; pattern++) {\r\n                    if (channel.patterns.length <= pattern) {\r\n                        channel.patterns[pattern] = new Pattern();\r\n                    } else {\r\n                        channel.patterns[pattern].reset();\r\n                    }\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                for (let instrument: number = 0; instrument < Config.instrumentCountMin; instrument++) {\r\n                    if (channel.instruments.length <= instrument) {\r\n                        channel.instruments[instrument] = new Instrument(isNoiseChannel, isModChannel);\r\n                    }\r\n                    channel.instruments[instrument].setTypeAndReset(isModChannel ? InstrumentType.mod : (isNoiseChannel ? InstrumentType.noise : InstrumentType.chip), isNoiseChannel, isModChannel);\r\n                }\r\n                channel.instruments.length = Config.instrumentCountMin;\r\n\r\n                for (let bar: number = 0; bar < this.barCount; bar++) {\r\n                    channel.bars[bar] = bar < 4 ? 1 : 0;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n            }\r\n            this.channels.length = this.getChannelCount();\r\n        }\r\n    }\r\n\r\n    public toBase64String(): string {\r\n        let bits: BitFieldWriter;\r\n        let buffer: number[] = [];\r\n\r\n        buffer.push(Song._variant);\r\n                 //   buffer.push(base64IntToCharCode[Song._latestGoldBoxVersion]);\r\n\t\t buffer.push(base64IntToCharCode[Song._latestAbyssBoxVersion]);\r\n\r\n        // Length of the song name string\r\n        buffer.push(SongTagCode.songDetails);\r\n        var encodedSongTitle: string = encodeURIComponent(this.title);\r\n        buffer.push(base64IntToCharCode[encodedSongTitle.length >> 6], base64IntToCharCode[encodedSongTitle.length & 0x3f]);\r\n\r\n        // Actual encoded string follows\r\n        for (let i: number = 0; i < encodedSongTitle.length; i++) {\r\n            buffer.push(encodedSongTitle.charCodeAt(i));\r\n        }\r\n\r\n        // Length of the song author string\r\n        var encodedAuthorTitle: string = encodeURIComponent(this.author);\r\n        buffer.push(base64IntToCharCode[encodedAuthorTitle.length >> 6], base64IntToCharCode[encodedAuthorTitle.length & 0x3f]);\r\n\r\n        for (let i: number = 0; i < encodedAuthorTitle.length; i++) {\r\n            buffer.push(encodedAuthorTitle.charCodeAt(i));\r\n        }\r\n\r\n        // Length of the song description string\r\n        var encodedDescriptionTitle: string = encodeURIComponent(this.description);\r\n        buffer.push(base64IntToCharCode[encodedDescriptionTitle.length >> 6], base64IntToCharCode[encodedDescriptionTitle.length & 0x3f]);\r\n\r\n        for (let i: number = 0; i < encodedDescriptionTitle.length; i++) {\r\n            buffer.push(encodedDescriptionTitle.charCodeAt(i));\r\n        }\r\n\r\n        buffer.push(base64IntToCharCode[this.showSongDetails?1:0]);\r\n        //Length of the song theme string\r\n        buffer.push(SongTagCode.songTheme);\r\n        var encodedSongTheme: string = encodeURIComponent(this.setSongTheme);\r\n        buffer.push(base64IntToCharCode[encodedSongTheme.length >> 6], base64IntToCharCode[encodedSongTheme.length & 0x3f]);\r\n\r\n        // Actual encoded string follows\r\n        for (let i: number = 0; i < encodedSongTheme.length; i++) {\r\n            buffer.push(encodedSongTheme.charCodeAt(i));\r\n        }\r\n        \r\n        buffer.push(SongTagCode.channelCount, base64IntToCharCode[this.pitchChannelCount], base64IntToCharCode[this.noiseChannelCount], base64IntToCharCode[this.modChannelCount]);\r\n        buffer.push(SongTagCode.scale, base64IntToCharCode[this.scale]);\r\n        if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\r\n            for (var i = 1; i < Config.pitchesPerOctave; i++) {\r\n                buffer.push(base64IntToCharCode[this.scaleCustom[i]?1:0]) // ineffiecent? yes, all we're going to do for now? hell yes\r\n            }\r\n        }\r\n        buffer.push(SongTagCode.key, base64IntToCharCode[this.key], base64IntToCharCode[this.octave - Config.octaveMin]);\r\n        buffer.push(SongTagCode.loopStart, base64IntToCharCode[this.loopStart >> 6], base64IntToCharCode[this.loopStart & 0x3f]);\r\n        buffer.push(SongTagCode.loopEnd, base64IntToCharCode[(this.loopLength - 1) >> 6], base64IntToCharCode[(this.loopLength - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.tempo, base64IntToCharCode[this.tempo >> 6], base64IntToCharCode[this.tempo & 0x3F]);\r\n        buffer.push(SongTagCode.beatCount, base64IntToCharCode[this.beatsPerBar - 1]);\r\n        buffer.push(SongTagCode.barCount, base64IntToCharCode[(this.barCount - 1) >> 6], base64IntToCharCode[(this.barCount - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.patternCount, base64IntToCharCode[(this.patternsPerChannel - 1) >> 6], base64IntToCharCode[(this.patternsPerChannel - 1) & 0x3f]);\r\n        buffer.push(SongTagCode.rhythm, base64IntToCharCode[this.rhythm]);\r\n        buffer.push(SongTagCode.loopType, base64IntToCharCode[this.loopType]);\r\n\r\n        // Push limiter settings, but only if they aren't the default!\r\n        buffer.push(SongTagCode.limiterSettings);\r\n        if (this.compressionRatio != 1.0 || this.limitRatio != 1.0 || this.limitRise != 4000.0 || this.limitDecay != 4.0 || this.limitThreshold != 1.0 || this.compressionThreshold != 1.0 || this.masterGain != 1.0) {\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionRatio < 1 ? this.compressionRatio * 10 : 10 + (this.compressionRatio - 1) * 60)]); // 0 ~ 1.15 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitRatio < 1 ? this.limitRatio * 10 : 9 + this.limitRatio)]); // 0 ~ 10 uneven, mapped to 0 ~ 20\r\n            buffer.push(base64IntToCharCode[this.limitDecay]); // directly 1 ~ 30\r\n            buffer.push(base64IntToCharCode[Math.round((this.limitRise - 2000.0) / 250.0)]); // 2000 ~ 10000 by 250, mapped to 0 ~ 32\r\n            buffer.push(base64IntToCharCode[Math.round(this.compressionThreshold * 20)]); // 0 ~ 1.1 by 0.05, mapped to 0 ~ 22\r\n            buffer.push(base64IntToCharCode[Math.round(this.limitThreshold * 20)]); // 0 ~ 2 by 0.05, mapped to 0 ~ 40\r\n            buffer.push(base64IntToCharCode[Math.round(this.masterGain * 50) >> 6], base64IntToCharCode[Math.round(this.masterGain * 50) & 0x3f]); // 0 ~ 5 by 0.02, mapped to 0 ~ 250\r\n        }\r\n        else {\r\n            buffer.push(base64IntToCharCode[0x3f]); // Not using limiter\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelNames);\r\n        for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n            // Length of the channel name string\r\n            var encodedChannelName: string = encodeURIComponent(this.channels[channel].name);\r\n            buffer.push(base64IntToCharCode[encodedChannelName.length >> 6], base64IntToCharCode[encodedChannelName.length & 0x3f]);\r\n\r\n            // Actual encoded string follows\r\n            for (let i: number = 0; i < encodedChannelName.length; i++) {\r\n                buffer.push(encodedChannelName.charCodeAt(i));\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.instrumentCount, base64IntToCharCode[(<any>this.layeredInstruments << 1) | <any>this.patternInstruments]);\r\n        if (this.layeredInstruments || this.patternInstruments) {\r\n            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                buffer.push(base64IntToCharCode[this.channels[channelIndex].instruments.length - Config.instrumentCountMin]);\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.channelOctave);\r\n        for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\r\n            buffer.push(base64IntToCharCode[this.channels[channelIndex].octave]);\r\n        }\r\n\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n            for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\r\n                const instrument: Instrument = this.channels[channelIndex].instruments[i];\r\n                buffer.push(SongTagCode.startInstrument, base64IntToCharCode[instrument.type]);\r\n                buffer.push(SongTagCode.volume, base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) >> 6], base64IntToCharCode[(instrument.volume + Config.volumeRange / 2) & 0x3f]);\r\n                buffer.push(SongTagCode.preset, base64IntToCharCode[instrument.preset >> 6], base64IntToCharCode[instrument.preset & 63]);\r\n\r\n                buffer.push(SongTagCode.eqFilter);\r\n                buffer.push(base64IntToCharCode[+instrument.eqFilterType]);\r\n                if (instrument.eqFilterType) {\r\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimpleCut]);\r\n                    buffer.push(base64IntToCharCode[instrument.eqFilterSimplePeak]);\r\n                }\r\n                else {\r\n                    if (instrument.eqFilter == null) {\r\n                        // Push null filter settings\r\n                        buffer.push(base64IntToCharCode[0]);\r\n                        console.log(\"Null EQ filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\r\n                    } else {\r\n                        buffer.push(base64IntToCharCode[instrument.eqFilter.controlPointCount]);\r\n                        for (let j: number = 0; j < instrument.eqFilter.controlPointCount; j++) {\r\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[j];\r\n                            buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                        }\r\n                    }\r\n\r\n                    // Push subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                    let usingSubFilterBitfield: number = 0;\r\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                        usingSubFilterBitfield |= (+(instrument.eqSubFilters[j + 1] != null) << j);\r\n                    }\r\n                    // Put subfilter usage into 2 chars (12 bits)\r\n                    buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\r\n                    // Put subfilter info in for all used subfilters\r\n                    for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                        if (usingSubFilterBitfield & (1 << j)) {\r\n                            buffer.push(base64IntToCharCode[instrument.eqSubFilters[j + 1]!.controlPointCount]);\r\n                            for (let k: number = 0; k < instrument.eqSubFilters[j + 1]!.controlPointCount; k++) {\r\n                                const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[k];\r\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // The list of enabled effects is represented as a 12-bit bitfield using two six-bit characters.\r\n                buffer.push(\r\n                    SongTagCode.effects,\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 5)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 4)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 3)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 2)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 1)) & 63],\r\n                    base64IntToCharCode[(instrument.effects >>> (6 * 0)) & 63]\r\n                );\r\n                if (effectsIncludeNoteFilter(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[+instrument.noteFilterType]);\r\n                    if (instrument.noteFilterType) {\r\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimpleCut]);\r\n                        buffer.push(base64IntToCharCode[instrument.noteFilterSimplePeak]);\r\n                    }\r\n                    else {\r\n                        if (instrument.noteFilter == null) {\r\n                            // Push null filter settings\r\n                            buffer.push(base64IntToCharCode[0]);\r\n                            console.log(\"Null note filter settings detected in toBase64String for channelIndex \" + channelIndex + \", instrumentIndex \" + i);\r\n                        }\r\n                        else {\r\n                            buffer.push(base64IntToCharCode[instrument.noteFilter.controlPointCount]);\r\n                            for (let j: number = 0; j < instrument.noteFilter.controlPointCount; j++) {\r\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[j];\r\n                                buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                            }\r\n                        }\r\n\r\n                        // Push subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                        let usingSubFilterBitfield: number = 0;\r\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                            usingSubFilterBitfield |= (+(instrument.noteSubFilters[j + 1] != null) << j);\r\n                        }\r\n                        // Put subfilter usage into 2 chars (12 bits)\r\n                        buffer.push(base64IntToCharCode[usingSubFilterBitfield >> 6], base64IntToCharCode[usingSubFilterBitfield & 63]);\r\n                        // Put subfilter info in for all used subfilters\r\n                        for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                            if (usingSubFilterBitfield & (1 << j)) {\r\n                                buffer.push(base64IntToCharCode[instrument.noteSubFilters[j + 1]!.controlPointCount]);\r\n                                for (let k: number = 0; k < instrument.noteSubFilters[j + 1]!.controlPointCount; k++) {\r\n                                    const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[k];\r\n                                    buffer.push(base64IntToCharCode[point.type], base64IntToCharCode[Math.round(point.freq)], base64IntToCharCode[Math.round(point.gain)]);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (effectsIncludeTransition(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.transition]);\r\n                    if (Config.transitions[instrument.transition].slides == true) buffer.push(base64IntToCharCode[instrument.slideTicks]);\r\n                }\r\n                if (effectsIncludeChord(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.chord]);\r\n                    // Custom arpeggio speed... only if the instrument arpeggiates.\r\n                    if (Config.chords[instrument.chord].arpeggiates == true) {\r\n                        buffer.push(base64IntToCharCode[instrument.arpeggioSpeed]);\r\n                        buffer.push(base64IntToCharCode[+instrument.fastTwoNoteArp]); // Two note arp setting piggybacks on this\r\n                    } else if (Config.chords[instrument.chord].strumParts > 0) {\r\n                        buffer.push(base64IntToCharCode[instrument.strumParts]);\r\n                    }\r\n                }\r\n                if (effectsIncludePitchShift(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.pitchShift]);\r\n                }\r\n                if (effectsIncludeDetune(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[(instrument.detune - Config.detuneMin) >> 6], base64IntToCharCode[(instrument.detune - Config.detuneMin) & 0x3F]);\r\n                }\r\n                if (effectsIncludeVibrato(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.vibrato]);\r\n                    // Custom vibrato settings\r\n                    if (instrument.vibrato == Config.vibratos.length) {\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDepth * 25)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoSpeed]);\r\n                        buffer.push(base64IntToCharCode[Math.round(instrument.vibratoDelay)]);\r\n                        buffer.push(base64IntToCharCode[instrument.vibratoType]);\r\n                    }\r\n                }\r\n                if (effectsIncludeDistortion(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.distortion]);\r\n                    // Aliasing is tied into distortion for now\r\n                    buffer.push(base64IntToCharCode[+instrument.aliases]);\r\n                }\r\n                if (effectsIncludeRM(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.ringModulation]);\r\n                    buffer.push(base64IntToCharCode[instrument.ringModulationHz]);\r\n                    buffer.push(base64IntToCharCode[instrument.rmWaveformIndex]);\t\r\n                    buffer.push(base64IntToCharCode[(instrument.rmPulseWidth) >> 6], base64IntToCharCode[(instrument.rmPulseWidth) & 0x3F]);\t\r\n                    buffer.push(base64IntToCharCode[(instrument.rmHzOffset - Config.rmHzOffsetMin) >> 6], base64IntToCharCode[(instrument.rmHzOffset - Config.rmHzOffsetMin) & 0x3F]);\r\n                }\r\n                if (effectsIncludePhaser(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.phaserFreq]);\r\n                    buffer.push(base64IntToCharCode[instrument.phaserFeedback]);\r\n                    buffer.push(base64IntToCharCode[instrument.phaserStages]);\r\n                    buffer.push(base64IntToCharCode[instrument.phaserMix]);\r\n                }\r\n                if (effectsIncludeInvertWave(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[+instrument.invertWave]);\r\n                }\r\n                if (effectsIncludeBitcrusher(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.bitcrusherFreq], base64IntToCharCode[instrument.bitcrusherQuantization]);\r\n                }\r\n                if (effectsIncludePanning(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.pan >> 6], base64IntToCharCode[instrument.pan & 0x3f]);\r\n                    buffer.push(base64IntToCharCode[instrument.panDelay]);\r\n                }\r\n                if (effectsIncludeChorus(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.chorus]);\r\n                }\r\n                if (effectsIncludeEcho(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.echoSustain], base64IntToCharCode[instrument.echoDelay]);\r\n                }\r\n                if (effectsIncludeReverb(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.reverb]);\r\n                }\r\n\r\n                if (effectsIncludeNoteRange(instrument.effects)) {\r\n                    buffer.push(base64IntToCharCode[instrument.upperNoteLimit >> 6], base64IntToCharCode[instrument.upperNoteLimit & 0x3f]);\r\n                    buffer.push(base64IntToCharCode[instrument.lowerNoteLimit >> 6], base64IntToCharCode[instrument.lowerNoteLimit & 0x3f]);\r\n                }\r\n\r\n                if (instrument.type != InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.fadeInOut, base64IntToCharCode[instrument.fadeIn], base64IntToCharCode[instrument.fadeOut]);\r\n                    // Transition info follows transition song tag\r\n                    buffer.push(base64IntToCharCode[+instrument.clicklessTransition]);\r\n                }\r\n\r\n                if (instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString) {\r\n                    buffer.push(SongTagCode.harmonics);\r\n                    const harmonicsBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                        harmonicsBits.write(Config.harmonicsControlPointBits, instrument.harmonicsWave.harmonics[i]);\r\n                    }\r\n                    harmonicsBits.encodeBase64(buffer);\r\n                }\r\n\r\n                if (instrument.type == InstrumentType.chip) {\r\n                        buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave % 63], base64IntToCharCode[Math.floor(instrument.chipWave / 63)]);\r\n                        buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                        if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\r\n\r\n\t\t\t\t\t\t// Repurposed for chip wave loop controls.\r\n\t\t\t\t\t\tbuffer.push(SongTagCode.filterResonance);\r\n\t\t\t\t\t\t// The encoding here is as follows:\r\n\t\t\t\t\t\t// 0b11111_1\r\n\t\t\t\t\t\t//         ^-- isUsingAdvancedLoopControls\r\n\t\t\t\t\t\t//   ^^^^^---- chipWaveLoopMode\r\n\t\t\t\t\t\t// This essentially allocates 32 different loop modes,\r\n\t\t\t\t\t\t// which should be plenty.\r\n\t\t\t\t\t\tconst encodedLoopMode: number = (\r\n\t\t\t\t\t\t\t(clamp(0, 31 + 1, instrument.chipWaveLoopMode) << 1)\r\n\t\t\t\t\t\t\t| (instrument.isUsingAdvancedLoopControls ? 1 : 0)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[encodedLoopMode]);\r\n\t\t\t\t\t\t// The same encoding above is used here, but with the release mode\r\n\t\t\t\t\t\t// (which isn't implemented currently), and the backwards toggle.\r\n\t\t\t\t\t\tconst encodedReleaseMode: number = (\r\n\t\t\t\t\t\t\t(clamp(0, 31 + 1, 0) << 1)\r\n\t\t\t\t\t\t\t| (instrument.chipWavePlayBackwards ? 1 : 0)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbuffer.push(base64IntToCharCode[encodedReleaseMode]);\r\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveLoopStart);\r\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveLoopEnd);\r\n\t\t\t\t\t\tencode32BitNumber(buffer, instrument.chipWaveStartOffset);\r\n\r\n                } else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\r\n                    if (instrument.type == InstrumentType.fm) {\r\n                        buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm]);\r\n                        buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType]);\r\n                    } else {\r\n                        buffer.push(SongTagCode.algorithm, base64IntToCharCode[instrument.algorithm6Op]);\r\n                        if (instrument.algorithm6Op == 0) {\r\n                            buffer.push(SongTagCode.chord, base64IntToCharCode[instrument.customAlgorithm.carrierCount]);\r\n                            buffer.push(SongTagCode.effects);\r\n                            for (let o: number = 0; o < instrument.customAlgorithm.modulatedBy.length; o++) {\r\n                                for (let j: number = 0; j < instrument.customAlgorithm.modulatedBy[o].length; j++) {\r\n                                    buffer.push(base64IntToCharCode[instrument.customAlgorithm.modulatedBy[o][j]]);\r\n                                }\r\n                                buffer.push(SongTagCode.operatorWaves);\r\n                            }\r\n                            buffer.push(SongTagCode.effects);\r\n                        }\r\n                        buffer.push(SongTagCode.feedbackType, base64IntToCharCode[instrument.feedbackType6Op]);\r\n                        if (instrument.feedbackType6Op == 0) {\r\n                            buffer.push(SongTagCode.effects);\r\n                            for (let o: number = 0; o < instrument.customFeedbackType.indices.length; o++) {\r\n                                for (let j: number = 0; j < instrument.customFeedbackType.indices[o].length; j++) {\r\n                                    buffer.push(base64IntToCharCode[instrument.customFeedbackType.indices[o][j]]);\r\n                                }\r\n                                buffer.push(SongTagCode.operatorWaves);\r\n                            }\r\n                            buffer.push(SongTagCode.effects);\r\n                        }\r\n                    }\r\n                    buffer.push(SongTagCode.feedbackAmplitude, base64IntToCharCode[instrument.feedbackAmplitude]);\r\n\r\n                    buffer.push(SongTagCode.operatorFrequencies);\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op?6:Config.operatorCount); o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].frequency]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorAmplitudes);\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].amplitude]);\r\n                    }\r\n                    buffer.push(SongTagCode.operatorWaves);\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                        buffer.push(base64IntToCharCode[instrument.operators[o].waveform]);\r\n                        // Push pulse width if that type is used\r\n                        if (instrument.operators[o].waveform == 2) {\r\n                            buffer.push(base64IntToCharCode[instrument.operators[o].pulseWidth]);\r\n                        }\r\n                    }\r\n                } else if (instrument.type == InstrumentType.customChipWave) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipWave % 63], base64IntToCharCode[Math.floor(instrument.chipWave / 63)]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\r\n                    buffer.push(SongTagCode.customChipWave);\r\n                    // Push custom wave values\r\n                    for (let j: number = 0; j < 64; j++) {\r\n                        buffer.push(base64IntToCharCode[(instrument.customChipWave[j] + 24) as number]);\r\n                    }\r\n                } else if (instrument.type == InstrumentType.noise) {\r\n                    buffer.push(SongTagCode.wave, base64IntToCharCode[instrument.chipNoise]);\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\r\n                } else if (instrument.type == InstrumentType.spectrum) {\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        spectrumBits.write(Config.spectrumControlPointBits, instrument.spectrumWave.spectrum[i]);\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    buffer.push(SongTagCode.drumsetEnvelopes);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        buffer.push(base64IntToCharCode[instrument.drumsetEnvelopes[j]]);\r\n                    }\r\n\r\n                    buffer.push(SongTagCode.spectrum);\r\n                    const spectrumBits: BitFieldWriter = new BitFieldWriter();\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            spectrumBits.write(Config.spectrumControlPointBits, instrument.drumsetSpectrumWaves[j].spectrum[i]);\r\n                        }\r\n                    }\r\n                    spectrumBits.encodeBase64(buffer);\r\n                } else if (instrument.type == InstrumentType.harmonics) {\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\r\n                } else if (instrument.type == InstrumentType.pwm) {\r\n                    buffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth >> 6], base64IntToCharCode[instrument.pulseWidth & 0x3f]);\r\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]); \r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\r\n                } else if (instrument.type == InstrumentType.supersaw) {\r\n\t\t\t\t\tbuffer.push(SongTagCode.supersaw, base64IntToCharCode[instrument.supersawDynamism], base64IntToCharCode[instrument.supersawSpread], base64IntToCharCode[instrument.supersawShape]);\r\n\t\t\t\t\tbuffer.push(SongTagCode.pulseWidth, base64IntToCharCode[instrument.pulseWidth >> 6], base64IntToCharCode[instrument.pulseWidth & 0x3f]);\r\n                    buffer.push(base64IntToCharCode[instrument.decimalOffset >> 6], base64IntToCharCode[instrument.decimalOffset & 0x3f]);\r\n\t\t\t\t} else if (instrument.type == InstrumentType.pickedString) {\r\n                    if (Config.stringSustainRange > 0x20 || SustainType.length > 2) {\r\n\t\t\t\t\t\tthrow new Error(\"Not enough bits to represent sustain value and type in same base64 character.\");\r\n\t\t\t\t\t}\r\n                    buffer.push(SongTagCode.unison, base64IntToCharCode[instrument.unison]);\r\n                    if (instrument.unison == Config.unisons.length) encodeUnisonSettings(buffer, instrument.unisonVoices, instrument.unisonSpread, instrument.unisonOffset, instrument.unisonExpression, instrument.unisonSign, instrument.unisonBuzzes);\r\n                    buffer.push(SongTagCode.stringSustain, base64IntToCharCode[instrument.stringSustain | (instrument.stringSustainType << 5)]);\r\n                } else if (instrument.type == InstrumentType.mod) {\r\n                    // Handled down below. Could be moved, but meh.\r\n                } else {\r\n                    throw new Error(\"Unknown instrument type.\");\r\n                }\r\n\r\n                buffer.push(SongTagCode.envelopes, base64IntToCharCode[instrument.envelopeCount]);\r\n                // Added in JB v6: Options for envelopes come next.\r\n                buffer.push(base64IntToCharCode[instrument.envelopeSpeed]);\r\n                buffer.push(base64IntToCharCode[+instrument.discreteEnvelope]);\r\n                for (let envelopeIndex: number = 0; envelopeIndex < instrument.envelopeCount; envelopeIndex++) {\r\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].target]);\r\n                    if (Config.instrumentAutomationTargets[instrument.envelopes[envelopeIndex].target].maxCount > 1) {\r\n                        buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].index]);\r\n                    }\r\n                    buffer.push(base64IntToCharCode[instrument.envelopes[envelopeIndex].envelope]);\r\n                }\r\n            }\r\n        }\r\n\r\n        buffer.push(SongTagCode.bars);\r\n        bits = new BitFieldWriter();\r\n        let neededBits: number = 0;\r\n        while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) for (let i: number = 0; i < this.barCount; i++) {\r\n            bits.write(neededBits, this.channels[channelIndex].bars[i]);\r\n        }\r\n        bits.encodeBase64(buffer);\r\n\r\n        buffer.push(SongTagCode.patterns);\r\n        bits = new BitFieldWriter();\r\n        const shapeBits: BitFieldWriter = new BitFieldWriter();\r\n        const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n            const channel: Channel = this.channels[channelIndex];\r\n            const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n            const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\r\n            const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\r\n\r\n            // Some info about modulator settings immediately follows in mod channels.\r\n            if (isModChannel) {\r\n                const neededModInstrumentIndexBits: number = Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\r\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n\r\n                    let instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\r\n\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        const modChannel: number = instrument.modChannels[mod];\r\n                        const modInstrument: number = instrument.modInstruments[mod];\r\n                        const modSetting: number = instrument.modulators[mod];\r\n                        const modFilter: number = instrument.modFilterTypes[mod];\r\n\r\n                        // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\r\n                        // 0 - For pitch/noise\r\n                        // 1 - (used to be For noise, not needed)\r\n                        // 2 - For song\r\n                        // 3 - None\r\n\r\n                        let status: number = Config.modulators[modSetting].forSong ? 2 : 0;\r\n                        if (modSetting == Config.modulators.dictionary[\"none\"].index)\r\n                            status = 3;\r\n\r\n                        bits.write(2, status);\r\n\r\n                        // Channel/Instrument is only used if the status isn't \"song\" or \"none\".\r\n                        if (status == 0 || status == 1) {\r\n                            bits.write(8, modChannel);\r\n                            bits.write(neededModInstrumentIndexBits, modInstrument);\r\n                        }\r\n\r\n                        // Only used if setting isn't \"none\".\r\n                        if (status != 3) {\r\n                            bits.write(6, modSetting);\r\n                        }\r\n\r\n                        // Write mod filter info, only if this is a filter mod\r\n                        if (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\") {\r\n                            bits.write(6, modFilter);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * Config.pitchesPerOctave;\r\n            let lastPitch: number = (isNoiseChannel ? 4 : octaveOffset);\r\n            const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\r\n            const recentShapes: string[] = [];\r\n            for (let i: number = 0; i < recentPitches.length; i++) {\r\n                recentPitches[i] += octaveOffset;\r\n            }\r\n            for (const pattern of channel.patterns) {\r\n                if (this.patternInstruments) {\r\n                    const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, pattern.instruments.length);\r\n                    bits.write(neededInstrumentCountBits, instrumentCount - Config.instrumentCountMin);\r\n                    for (let i: number = 0; i < instrumentCount; i++) {\r\n                        bits.write(neededInstrumentIndexBits, pattern.instruments[i]);\r\n                    }\r\n                }\r\n\r\n                if (pattern.notes.length > 0) {\r\n                    bits.write(1, 1);\r\n\r\n                    let curPart: number = 0;\r\n                    for (const note of pattern.notes) {\r\n\r\n                        // For mod channels, a negative offset may be necessary.\r\n                        if (note.start < curPart && isModChannel) {\r\n                            bits.write(2, 0); // rest, then...\r\n                            bits.write(1, 1); // negative offset\r\n                            bits.writePartDuration(curPart - note.start);\r\n                        }\r\n\r\n                        if (note.start > curPart) {\r\n                            bits.write(2, 0); // rest\r\n                            if (isModChannel) bits.write(1, 0); // positive offset, only needed for mod channels\r\n                            bits.writePartDuration(note.start - curPart);\r\n                        }\r\n\r\n                        shapeBits.clear();\r\n\r\n                        // Old format was:\r\n                        // 0: 1 pitch, 10: 2 pitches, 110: 3 pitches, 111: 4 pitches\r\n                        // New format is:\r\n                        //      0: 1 pitch\r\n                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                        if (note.pitches.length == 1) {\r\n                            shapeBits.write(1, 0);\r\n                        } else {\r\n                            shapeBits.write(1, 1);\r\n                            shapeBits.write(3, note.pitches.length - 2);\r\n                        }\r\n\r\n                        shapeBits.writePinCount(note.pins.length - 1);\r\n\r\n                        if (!isModChannel) {\r\n                            shapeBits.write(bitsPerNoteSize, note.pins[0].size); // volume\r\n                        }\r\n                        else {\r\n                            shapeBits.write(9, note.pins[0].size); // Modulator value. 9 bits for now = 512 max mod value?\r\n                        }\r\n\r\n                        let shapePart: number = 0;\r\n                        let startPitch: number = note.pitches[0];\r\n                        let currentPitch: number = startPitch;\r\n                        const pitchBends: number[] = [];\r\n                        for (let i: number = 1; i < note.pins.length; i++) {\r\n                            const pin: NotePin = note.pins[i];\r\n                            const nextPitch: number = startPitch + pin.interval;\r\n                            if (currentPitch != nextPitch) {\r\n                                shapeBits.write(1, 1);\r\n                                pitchBends.push(nextPitch);\r\n                                currentPitch = nextPitch;\r\n                            } else {\r\n                                shapeBits.write(1, 0);\r\n                            }\r\n                            shapeBits.writePartDuration(pin.time - shapePart);\r\n                            shapePart = pin.time;\r\n                            if (!isModChannel) {\r\n                                shapeBits.write(bitsPerNoteSize, pin.size);\r\n                            } else {\r\n                                shapeBits.write(9, pin.size);\r\n                            }\r\n                        }\r\n\r\n                        const shapeString: string = String.fromCharCode.apply(null, shapeBits.encodeBase64([]));\r\n                        const shapeIndex: number = recentShapes.indexOf(shapeString);\r\n                        if (shapeIndex == -1) {\r\n                            bits.write(2, 1); // new shape\r\n                            bits.concat(shapeBits);\r\n                        } else {\r\n                            bits.write(1, 1); // old shape\r\n                            bits.writeLongTail(0, 0, shapeIndex);\r\n                            recentShapes.splice(shapeIndex, 1);\r\n                        }\r\n                        recentShapes.unshift(shapeString);\r\n                        if (recentShapes.length > 10) recentShapes.pop();\r\n\r\n                        const allPitches: number[] = note.pitches.concat(pitchBends);\r\n                        for (let i: number = 0; i < allPitches.length; i++) {\r\n                            const pitch: number = allPitches[i];\r\n                            const pitchIndex: number = recentPitches.indexOf(pitch);\r\n                            if (pitchIndex == -1) {\r\n                                let interval: number = 0;\r\n                                let pitchIter: number = lastPitch;\r\n                                if (pitchIter < pitch) {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter++;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval++;\r\n                                    }\r\n                                } else {\r\n                                    while (pitchIter != pitch) {\r\n                                        pitchIter--;\r\n                                        if (recentPitches.indexOf(pitchIter) == -1) interval--;\r\n                                    }\r\n                                }\r\n                                bits.write(1, 0);\r\n                                bits.writePitchInterval(interval);\r\n                            } else {\r\n                                bits.write(1, 1);\r\n                                bits.write(4, pitchIndex);\r\n                                recentPitches.splice(pitchIndex, 1);\r\n                            }\r\n                            recentPitches.unshift(pitch);\r\n                            if (recentPitches.length > 16) recentPitches.pop();\r\n\r\n                            if (i == note.pitches.length - 1) {\r\n                                lastPitch = note.pitches[0];\r\n                            } else {\r\n                                lastPitch = pitch;\r\n                            }\r\n                        }\r\n\r\n                        if (note.start == 0) {\r\n                            bits.write(1, note.continuesLastPattern ? 1 : 0);\r\n                        }\r\n\r\n                        curPart = note.end;\r\n                    }\r\n\r\n                    if (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n                        bits.write(2, 0); // rest\r\n                        if (isModChannel) bits.write(1, 0); // positive offset\r\n                        bits.writePartDuration(this.beatsPerBar * Config.partsPerBeat + (+isModChannel) - curPart);\r\n                    }\r\n                } else {\r\n                    bits.write(1, 0);\r\n                }\r\n            }\r\n        }\r\n        let stringLength: number = bits.lengthBase64();\r\n        let digits: number[] = [];\r\n        while (stringLength > 0) {\r\n            digits.unshift(base64IntToCharCode[stringLength & 0x3f]);\r\n            stringLength = stringLength >> 6;\r\n        }\r\n        buffer.push(base64IntToCharCode[digits.length]);\r\n        Array.prototype.push.apply(buffer, digits); // append digits to buffer.\r\n        bits.encodeBase64(buffer);\r\n\t    \r\n        const maxApplyArgs: number = 64000;\r\n\t    \t\t\t            let customSamplesStr = \"\";\r\n            if(EditorConfig.customSamples != undefined && EditorConfig.customSamples.length > 0){\r\n              customSamplesStr = \"|\" + EditorConfig.customSamples.join(\"|\")\r\n              \r\n          }\r\n\t\t  //samplemark\r\n        if (buffer.length < maxApplyArgs) {\r\n            // Note: Function.apply may break for long argument lists. \r\n                            return String.fromCharCode.apply(null, buffer) + customSamplesStr;\r\n\t\t\t\t//samplemark\r\n        } else {\r\n            let result: string = \"\";\r\n            for (let i: number = 0; i < buffer.length; i += maxApplyArgs) {\r\n                result += String.fromCharCode.apply(null, buffer.slice(i, i + maxApplyArgs));\r\n            }\r\n                          return result + customSamplesStr;\r\n\t\t\t   //samplemark\r\n        }\r\n    }\r\n\r\n    private static _envelopeFromLegacyIndex(legacyIndex: number): Envelope {\r\n        // I swapped the order of \"custom\"/\"steady\", now \"none\"/\"note size\".\r\n        if (legacyIndex == 0) legacyIndex = 1; else if (legacyIndex == 1) legacyIndex = 0;\r\n        return Config.envelopes[clamp(0, Config.envelopes.length, legacyIndex)];\r\n    }\r\n\r\n    public fromBase64String(compressed: string, jsonFormat: string = \"auto\"): void {\r\n        if (compressed == null || compressed == \"\") {\r\n            Song._clearSamples();\r\n\r\n            this.initToDefault(true);\r\n            return;\r\n        }\r\n        let charIndex: number = 0;\r\n        // skip whitespace.\r\n        while (compressed.charCodeAt(charIndex) <= CharCode.SPACE) charIndex++;\r\n        // skip hash mark.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.HASH) charIndex++;\r\n        // if it starts with curly brace, treat it as JSON.\r\n        if (compressed.charCodeAt(charIndex) == CharCode.LEFT_CURLY_BRACE) {\r\n            this.fromJsonObject(JSON.parse(charIndex == 0 ? compressed : compressed.substring(charIndex)), jsonFormat);\r\n            return;\r\n        }\r\n\r\n        const variantTest: number = compressed.charCodeAt(charIndex);\r\n        let fromBeepBox: boolean = false;\r\n        let fromJummBox: boolean = false;\r\n        let fromGoldBox: boolean = false;\r\n\t    let fromUltraBox: boolean = false;\r\n        // let fromMidbox: boolean;\r\n        // let fromDogebox2: boolean;\r\n        let fromAbyssBox: boolean = false;\r\n\r\n        // Detect variant here. If version doesn't match known variant, assume it is a vanilla string which does not report variant.\r\n        if (variantTest == 0x6A) { //\"j\"\r\n            fromJummBox = true;\r\n            charIndex++;\r\n        } else if (variantTest == 0x67) { //\"g\"\r\n            fromGoldBox = true;\r\n            charIndex++;\r\n        } else if (variantTest == 0x75) { //\"u\"\r\n\t\t    fromUltraBox = true;\r\n            charIndex++;\r\n        } else if (variantTest == 0x61) { //\"a\"\r\n            fromAbyssBox = true;\r\n            charIndex++;\r\n        }  else {\r\n        fromBeepBox = true;\r\n        }\r\n\r\n        const version: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n        if (fromBeepBox && (version == -1 || version > Song._latestBeepboxVersion || version < Song._oldestBeepboxVersion)) return;\r\n        if (fromJummBox && (version == -1 || version > Song._latestJummBoxVersion || version < Song._oldestJummBoxVersion)) return;\r\n        if (fromGoldBox && (version == -1 || version > Song._latestGoldBoxVersion || version < Song._oldestGoldBoxVersion)) return;\r\n\t    if (fromUltraBox && (version == -1 || version > Song._latestUltraBoxVersion || version < Song._oldestUltraBoxVersion)) return;\r\n        if (fromAbyssBox && (version == -1 || version > Song._latestAbyssBoxVersion || version < Song._oldestAbyssBoxVersion)) return;\r\n        const beforeTwo: boolean = version < 2;\r\n        const beforeThree: boolean = version < 3;\r\n        const beforeFour: boolean = version < 4;\r\n        const beforeFive: boolean = version < 5;\r\n        const beforeSix: boolean = version < 6;\r\n        const beforeSeven: boolean = version < 7;\r\n        const beforeEight: boolean = version < 8;\r\n        const beforeNine: boolean = version < 9;\r\n        this.initToDefault((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)));\r\n        const forceSimpleFilter: boolean = (fromBeepBox && beforeNine || fromJummBox && beforeFive);\r\n\r\n        let willLoadLegacySamplesForOldSongs: boolean = false;\r\n\r\n        if (fromUltraBox || fromGoldBox || fromAbyssBox) {\r\n            compressed = compressed.replaceAll(\"%7C\", \"|\")\r\n                var compressed_array = compressed.split(\"|\");\r\n                compressed = compressed_array.shift()!;\r\n                if(EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != compressed_array.join(\", \")) {\r\n\r\n                    Song._restoreChipWaveListToDefault();\r\n\r\n                    let willLoadLegacySamples = false;\r\n                    let willLoadNintariboxSamples = false;\r\n                    let willLoadMarioPaintboxSamples = false;\r\n                    const customSampleUrls = [];\r\n                    const customSamplePresets: Preset[] = [];\r\n                    sampleLoadingState.statusTable = {};\r\n                    sampleLoadingState.urlTable = {};\r\n                    sampleLoadingState.totalSamples = 0;\r\n                    sampleLoadingState.samplesLoaded = 0;\r\n                    sampleLoadingState.samplesFailed = 0;\r\n                    sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n                        sampleLoadingState.totalSamples,\r\n                        sampleLoadingState.samplesLoaded,\r\n                        sampleLoadingState.samplesFailed\r\n                    ));\r\n                    for (const url of compressed_array) {\r\n                        if (url.toLowerCase() === \"legacysamples\") {\r\n                            if (!willLoadLegacySamples) {\r\n                                willLoadLegacySamples = true;\r\n                                customSampleUrls.push(url);\r\n                                loadBuiltInSamples(0);\r\n                            }\r\n                        } \r\n                        else if (url.toLowerCase() === \"nintariboxsamples\") {\r\n                            if (!willLoadNintariboxSamples) {\r\n                                willLoadNintariboxSamples = true;\r\n                                customSampleUrls.push(url);\r\n                                loadBuiltInSamples(1);\r\n                            }\r\n                        }\r\n                        else if (url.toLowerCase() === \"mariopaintboxsamples\") {\r\n                            if (!willLoadMarioPaintboxSamples) {\r\n                                willLoadMarioPaintboxSamples = true;\r\n                                customSampleUrls.push(url);\r\n                                loadBuiltInSamples(2);\r\n                            }\r\n                        }\r\n                        \r\n                        else {\r\n                            // UB version 2 URLs and below will be using the old syntax, so we do need to parse it in that case.\r\n                            // UB version 3 URLs should only have the new syntax, though, unless the user has edited the URL manually.\r\n                            const parseOldSyntax: boolean = (fromUltraBox && beforeThree);\r\n                            const ok: boolean = Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\r\n                            if (!ok) {\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (customSampleUrls.length > 0) {\r\n                        EditorConfig.customSamples = customSampleUrls;\r\n                    }\r\n                    if (customSamplePresets.length > 0) {\r\n                        const customSamplePresetsMap: DictionaryArray<Preset> = toNameMap(customSamplePresets);\r\n                        EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\r\n                            name: \"Custom Sample Presets\",\r\n                            presets: customSamplePresetsMap,\r\n                            index: EditorConfig.presetCategories.length,\r\n                        };\r\n                        // EditorConfig.presetCategories.splice(1, 0, {\r\n                             // name: \"Custom Sample Presets\",\r\n                             // presets: customSamplePresets,\r\n                             // index: EditorConfig.presetCategories.length,\r\n                        // });\r\n                    }\r\n\r\n               \r\n                }\r\n                //samplemark\r\n        }\r\n\r\n        if (beforeThree && fromBeepBox) {\r\n            // Originally, the only instrument transition was \"instant\" and the only drum wave was \"retro\".\r\n            for (const channel of this.channels) {\r\n                channel.instruments[0].transition = Config.transitions.dictionary[\"interrupt\"].index;\r\n                channel.instruments[0].effects |= 1 << EffectType.transition;\r\n            }\r\n            this.channels[3].instruments[0].chipNoise = 0;\r\n        }\r\n\r\n        let legacySettingsCache: LegacySettings[][] | null = null;\r\n        if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n            // Unfortunately, old versions of BeepBox had a variety of different ways of saving\r\n            // filter-and-envelope-related parameters in the URL, and none of them directly\r\n            // correspond to the new way of saving these parameters. We can approximate the old\r\n            // settings by collecting all the old settings for an instrument and passing them to\r\n            // convertLegacySettings(), so I use this data structure to collect the settings\r\n            // for each instrument if necessary.\r\n            legacySettingsCache = [];\r\n            for (let i: number = legacySettingsCache.length; i < this.getChannelCount(); i++) {\r\n                legacySettingsCache[i] = [];\r\n                for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache[i][j] = {};\r\n            }\r\n        }\r\n\r\n        let legacyGlobalReverb: number = 0; // beforeNine reverb was song-global, record that reverb here and adapt it to instruments as needed.\r\n\r\n        let instrumentChannelIterator: number = 0;\r\n        let instrumentIndexIterator: number = -1;\r\n        let command: number;\r\n        let useSlowerArpSpeed: boolean = false;\r\n        let useFastTwoNoteArp: boolean = false;\r\n        while (charIndex < compressed.length) switch (command = compressed.charCodeAt(charIndex++)) {\r\n            case SongTagCode.songDetails: {\r\n                // Length of song name string\r\n                var songNameLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.title = decodeURIComponent(compressed.substring(charIndex, charIndex + songNameLength));\r\n                document.title = (this.title != \"\" ? this.title + \" - \" + EditorConfig.versionDisplayName : EditorConfig.versionDisplayName); \r\n\r\n                charIndex += songNameLength;\r\n\r\n                if ((fromUltraBox && !beforeSix)||(fromAbyssBox && !beforeThree)) {\r\n                    // Length of song author string\r\n                    var songAuthorLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.author = decodeURIComponent(compressed.substring(charIndex, charIndex + songAuthorLength));\r\n\r\n                    charIndex += songAuthorLength;\r\n\r\n                    // Length of song description string\r\n                    var songDescriptionLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.description = decodeURIComponent(compressed.substring(charIndex, charIndex + songDescriptionLength));\r\n\r\n                    charIndex += songDescriptionLength;\r\n\r\n                    this.showSongDetails = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1;\r\n                }\r\n            } break;\r\n            case SongTagCode.songTheme: {\r\n                // Length of song theme string\r\n                var songThemeLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.setSongTheme = decodeURIComponent(compressed.substring(charIndex, charIndex + songThemeLength));\r\n                charIndex += songThemeLength;\r\n            } break;\r\n            case SongTagCode.channelCount: {\r\n                this.pitchChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                this.noiseChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                if (fromBeepBox || (fromJummBox && beforeTwo)) {\r\n                    // No mod channel support before jummbox v2\r\n                    this.modChannelCount = 0;\r\n                } else {\r\n                    this.modChannelCount = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n                this.pitchChannelCount = validateRange(Config.pitchChannelCountMin, Config.pitchChannelCountMax, this.pitchChannelCount);\r\n                this.noiseChannelCount = validateRange(Config.noiseChannelCountMin, Config.noiseChannelCountMax, this.noiseChannelCount);\r\n                this.modChannelCount = validateRange(Config.modChannelCountMin, Config.modChannelCountMax, this.modChannelCount);\r\n\r\n                for (let channelIndex = this.channels.length; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                    this.channels[channelIndex] = new Channel();\r\n                }\r\n                this.channels.length = this.getChannelCount();\r\n                if ((fromBeepBox && beforeNine) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    for (let i: number = legacySettingsCache!.length; i < this.getChannelCount(); i++) {\r\n                        legacySettingsCache![i] = [];\r\n                        for (let j: number = 0; j < Config.instrumentCountMin; j++) legacySettingsCache![i][j] = {};\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.scale: {\r\n                this.scale = clamp(0, Config.scales.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                // All the scales were jumbled around by Jummbox. Just convert to free.\r\n                if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\r\n                    for (var i = 1; i < Config.pitchesPerOctave; i++) {\r\n                        this.scaleCustom[i] = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] == 1; // ineffiecent? yes, all we're going to do for now? hell yes\r\n                    }\r\n                }\r\n                if (fromBeepBox) this.scale = 0;\r\n            } break;\r\n            case SongTagCode.key: {\r\n                if (beforeSeven && fromBeepBox) {\r\n                    this.key = clamp(0, Config.keys.length, 11 - base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.octave = 0;\r\n                } else if (fromBeepBox || fromJummBox) {\r\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.octave = 0;\r\n                } else if (fromGoldBox || (beforeThree && fromUltraBox)) {\r\n                    // GoldBox (so far) didn't introduce any new keys, but old\r\n                    // songs made with early versions of UltraBox share the\r\n                    // same URL format, and those can have more keys. This\r\n                    // shouldn't really result in anything other than 0-11 for\r\n                    // the key and 0 for the octave for GoldBox songs.\r\n                    const rawKeyIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const [key, octave]: [number, number] = convertLegacyKeyToKeyAndOctave(rawKeyIndex);\r\n                    this.key = key;\r\n                    this.octave = octave;\r\n                } else {\r\n                    this.key = clamp(0, Config.keys.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.octaveMin);\r\n                }\r\n            } break;\r\n            case SongTagCode.loopStart: {\r\n                if (beforeFive && fromBeepBox) {\r\n                    this.loopStart = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopStart = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                }\r\n            } break;\r\n            case SongTagCode.loopEnd: {\r\n                if (beforeFive && fromBeepBox) {\r\n                    this.loopLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    this.loopLength = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n            } break;\r\n            case SongTagCode.tempo: {\r\n                if (beforeFour && fromBeepBox) {\r\n                    this.tempo = [95, 120, 151, 190][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    this.tempo = [88, 95, 103, 111, 120, 130, 140, 151, 163, 176, 190, 206, 222, 240, 259][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.tempo = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, this.tempo);\r\n            } break;\r\n            case SongTagCode.loopType: {\r\n                this.loopType = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n            } break;\r\n            case SongTagCode.reverb: {\r\n                if (beforeNine && fromBeepBox) {\r\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 12;\r\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\r\n                } else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    legacyGlobalReverb = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    legacyGlobalReverb = clamp(0, Config.reverbRange, legacyGlobalReverb);\r\n                } else {\r\n                    // Do nothing, BeepBox v9+ do not support song-wide reverb - JummBox still does via modulator.\r\n                }\r\n            } break;\r\n            case SongTagCode.beatCount: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    this.beatsPerBar = [6, 7, 8, 9, 10][base64CharCodeToInt[compressed.charCodeAt(charIndex++)]];\r\n                } else {\r\n                    this.beatsPerBar = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, this.beatsPerBar));\r\n            } break;\r\n            case SongTagCode.barCount: {\r\n                const barCount: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                this.barCount = validateRange(Config.barCountMin, Config.barCountMax, barCount);\r\n                for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                    for (let bar = this.channels[channelIndex].bars.length; bar < this.barCount; bar++) {\r\n                        this.channels[channelIndex].bars[bar] = (bar < 4) ? 1 : 0;\r\n                    }\r\n                    this.channels[channelIndex].bars.length = this.barCount;\r\n                }\r\n            } break;\r\n            case SongTagCode.patternCount: {\r\n                let patternsPerChannel: number;\r\n                if (beforeEight && fromBeepBox) {\r\n                    patternsPerChannel = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                } else {\r\n                    patternsPerChannel = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1;\r\n                }\r\n                this.patternsPerChannel = validateRange(1, Config.barCountMax, patternsPerChannel);\r\n                const channelCount: number = this.getChannelCount();\r\n                for (let channelIndex: number = 0; channelIndex < channelCount; channelIndex++) {\r\n                    const patterns: Pattern[] = this.channels[channelIndex].patterns;\r\n                    for (let pattern = patterns.length; pattern < this.patternsPerChannel; pattern++) {\r\n                        patterns[pattern] = new Pattern();\r\n                    }\r\n                    patterns.length = this.patternsPerChannel;\r\n                }\r\n            } break;\r\n            case SongTagCode.instrumentCount: {\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    const instrumentsPerChannel: number = validateRange(Config.instrumentCountMin, Config.patternInstrumentCountMax, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\r\n                    this.layeredInstruments = false;\r\n                    this.patternInstruments = (instrumentsPerChannel > 1);\r\n\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        const isNoiseChannel: boolean = channelIndex >= this.pitchChannelCount && channelIndex < this.pitchChannelCount + this.noiseChannelCount;\r\n                        const isModChannel: boolean = channelIndex >= this.pitchChannelCount + this.noiseChannelCount;\r\n\r\n                        for (let instrumentIndex: number = this.channels[channelIndex].instruments.length; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\r\n                            this.channels[channelIndex].instruments[instrumentIndex] = new Instrument(isNoiseChannel, isModChannel);\r\n                        }\r\n                        this.channels[channelIndex].instruments.length = instrumentsPerChannel;\r\n                        if (beforeSix && fromBeepBox) {\r\n                            for (let instrumentIndex: number = 0; instrumentIndex < instrumentsPerChannel; instrumentIndex++) {\r\n                                this.channels[channelIndex].instruments[instrumentIndex].setTypeAndReset(isNoiseChannel ? InstrumentType.noise : InstrumentType.chip, isNoiseChannel, isModChannel);\r\n                            }\r\n                        }\r\n\r\n                        for (let j: number = legacySettingsCache![channelIndex].length; j < instrumentsPerChannel; j++) {\r\n                            legacySettingsCache![channelIndex][j] = {};\r\n                        }\r\n                    }\r\n                } else {\r\n                    const instrumentsFlagBits: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.layeredInstruments = (instrumentsFlagBits & (1 << 1)) != 0;\r\n                    this.patternInstruments = (instrumentsFlagBits & (1 << 0)) != 0;\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        let instrumentCount: number = 1;\r\n                        if (this.layeredInstruments || this.patternInstruments) {\r\n                            instrumentCount = validateRange(Config.instrumentCountMin, this.getMaxInstrumentsPerChannel(), base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + Config.instrumentCountMin);\r\n                        }\r\n                        const channel: Channel = this.channels[channelIndex];\r\n                        const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n                        const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n                        for (let i: number = channel.instruments.length; i < instrumentCount; i++) {\r\n                            channel.instruments[i] = new Instrument(isNoiseChannel, isModChannel);\r\n                        }\r\n                        channel.instruments.length = instrumentCount;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.rhythm: {\r\n                if (!fromUltraBox && !fromAbyssBox) {\r\n\t\t\tlet newRhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\t\r\n\t\t\tthis.rhythm = clamp(0, Config.rhythms.length, newRhythm + 2);\r\n\t\t\tif (fromJummBox && beforeThree || fromBeepBox) {\r\n\t\t\t\tif (this.rhythm == Config.rhythms.dictionary[\"÷3 (triplets)\"].index || this.rhythm == Config.rhythms.dictionary[\"÷6 (sextuplets)\"].index) {\r\n\t\t\t\t\tuseSlowerArpSpeed = true;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.rhythm >= Config.rhythms.dictionary[\"÷6 (sextuplets)\"].index) {\r\n\t\t\t\t\t// @TODO: This assumes that 6 and 8 are in that order, but\r\n\t\t\t\t\t// if someone reorders Config.rhythms that may not be true,\r\n\t\t\t\t\t// so this check probably should instead look for those\r\n\t\t\t\t\t// specific rhythms.\r\n\t\t\t\t\tuseFastTwoNoteArp = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tthis.rhythm = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t}\r\n\t\t//rhythm fixes\r\n            } break;\r\n            case SongTagCode.channelOctave: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                    if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\r\n                } else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                        if (channelIndex >= this.pitchChannelCount) this.channels[channelIndex].octave = 0;\r\n                    }\r\n                } else {\r\n                    for (let channelIndex: number = 0; channelIndex < this.pitchChannelCount; channelIndex++) {\r\n                        this.channels[channelIndex].octave = clamp(0, Config.pitchOctaves, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    for (let channelIndex: number = this.pitchChannelCount; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        this.channels[channelIndex].octave = 0;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.startInstrument: {\r\n                instrumentIndexIterator++;\r\n                if (instrumentIndexIterator >= this.channels[instrumentChannelIterator].instruments.length) {\r\n                    instrumentChannelIterator++;\r\n                    instrumentIndexIterator = 0;\r\n                }\r\n                validateRange(0, this.channels.length - 1, instrumentChannelIterator);\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                // JB before v5 had custom chip and mod before pickedString and supersaw were added. Index +2.\r\n                let instrumentType: number = validateRange(0, InstrumentType.length - 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    if (instrumentType == InstrumentType.pickedString || instrumentType == InstrumentType.supersaw) {\r\n                        instrumentType += 2;\r\n                    }\r\n                }\r\n                // Similar story here, JB before v5 had custom chip and mod before supersaw was added. Index +1.\r\n                else if ((fromJummBox && beforeSix) || (fromGoldBox && !beforeFour) || (fromUltraBox && beforeFive) ) {\r\n                    if (instrumentType == InstrumentType.supersaw || instrumentType == InstrumentType.customChipWave || instrumentType == InstrumentType.mod) {\r\n                        instrumentType += 1;\r\n                    }\r\n                }\r\n                instrument.setTypeAndReset(instrumentType, instrumentChannelIterator >= this.pitchChannelCount && instrumentChannelIterator < this.pitchChannelCount + this.noiseChannelCount, instrumentChannelIterator >= this.pitchChannelCount + this.noiseChannelCount);\r\n\r\n                // Anti-aliasing was added in BeepBox 3.0 (v6->v7) and JummBox 1.3 (v1->v2 roughly but some leakage possible)\r\n                if (((beforeSeven && fromBeepBox) || (beforeTwo && fromJummBox)) && (instrumentType == InstrumentType.chip || instrumentType == InstrumentType.customChipWave || instrumentType == InstrumentType.pwm)) {\r\n                    instrument.aliases = true;\r\n                    instrument.distortion = 0;\r\n                    instrument.effects |= 1 << EffectType.distortion;\r\n                }\r\n                if (useSlowerArpSpeed) {\r\n                    instrument.arpeggioSpeed = 9; // x3/4 speed. This used to be tied to rhythm, but now it is decoupled to each instrument's arp speed slider. This flag gets set when importing older songs to keep things consistent.\r\n                }\r\n                if (useFastTwoNoteArp) {\r\n                    instrument.fastTwoNoteArp = true;\r\n                }\r\n\r\n                if (beforeSeven && fromBeepBox) {\r\n                    //instrument.effects = 0;\r\n                    // Chip/noise instruments had arpeggio and FM had custom interval but neither\r\n                    // explicitly saved the chorus setting beforeSeven so enable it here.\r\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\r\n                        // Enable chord if it was used.\r\n                        instrument.effects |= 1 << EffectType.chord;\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.preset: {\r\n                const presetValue: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = presetValue;\r\n                // Picked string was inserted before custom chip in JB v5, so bump up preset index.\r\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.pickedString) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.customChipWave;\r\n                    }\r\n                }\r\n                // Similar story, supersaw is also before custom chip (and mod, but mods can't have presets).\r\n                else if ((fromJummBox && beforeSix) || (fromUltraBox && beforeFive)) {\r\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.supersaw ) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.customChipWave;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.customChipWave;\r\n                    }\r\n                    // ultra code for 6-op fm maybe\r\n                    if (this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset == InstrumentType.mod ) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = InstrumentType.fm6op;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].type = InstrumentType.fm6op;\r\n                    }\r\n                }\r\n                // BeepBox directly tweaked \"grand piano\", but JB kept it the same. The most up to date version is now \"grand piano 3\"\r\n                if (fromBeepBox && presetValue == EditorConfig.nameToPresetValue(\"grand piano 1\") ) {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].preset = EditorConfig.nameToPresetValue(\"grand piano 3\")!;\r\n                }\r\n            } break;\r\n            case SongTagCode.wave: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                    instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n\r\n                    // Version 2 didn't save any settings for settings for filters, or envelopes,\r\n                    // just waves, so initialize them here I guess.\r\n                    instrument.convertLegacySettings(legacySettingsCache![channelIndex][0], forceSimpleFilter);\r\n\r\n                } else if (beforeSix && fromBeepBox) {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (const instrument of this.channels[channelIndex].instruments) {\r\n                            if (channelIndex >= this.pitchChannelCount) {\r\n                                instrument.chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            } else {\r\n                                instrument.chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                            }\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    const legacyWaves: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 0];\r\n                    if (instrumentChannelIterator >= this.pitchChannelCount) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipNoise = clamp(0, Config.chipNoises.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, legacyWaves[base64CharCodeToInt[compressed.charCodeAt(charIndex++)]] | 0);\r\n                    }\r\n                } else {\r\n                    const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                    if (instrument.type == InstrumentType.noise) {\r\n                        instrument.chipNoise = clamp(0, Config.chipNoiseLength, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        if (fromUltraBox || fromAbyssBox) {\r\n                            if ((fromUltraBox && beforeSix)||(fromAbyssBox && beforeThree)) {\r\n                                const chipWaveReal = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                                const chipWaveCounter = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                                // backcompat for removal of zefbox deep square\r\n                                if (chipWaveCounter == 3) {\r\n                                    instrument.chipWave = chipWaveReal + 186;\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n                                } else if (chipWaveCounter == 2) {\r\n                                    instrument.chipWave = chipWaveReal + 124;\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n                                } else if (chipWaveCounter == 1) {\r\n                                    instrument.chipWave = chipWaveReal + 62;\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n                                } else {\r\n                                    instrument.chipWave = chipWaveReal;\t\t\t\t\t\t\t\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n                                }\r\n\r\n                                if (instrument.chipWave == 64) {\r\n                                    instrument.chipWave = 52;\r\n                                } else if (instrument.chipWave > 64) {\r\n                                    instrument.chipWave -= 1;\r\n                                }\r\n                                instrument.chipWave = clamp(0, Config.chipWaves.length, instrument.chipWave);\r\n                            } else {\r\n                                instrument.chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63));\r\n                            }\r\n\r\n                        } else {\r\n                            this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n\t\t            }\r\n        \t}\r\n            } break;\r\n            case SongTagCode.eqFilter: {\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    if (beforeSeven && fromBeepBox) {\r\n                        const legacyToCutoff: number[] = [10, 6, 3, 0, 8, 5, 2];\r\n                        //const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                        const legacyToEnvelope: string[] = [\"none\", \"none\", \"none\", \"none\", \"decay 1\", \"decay 2\", \"decay 3\"];\r\n\r\n                        if (beforeThree && fromBeepBox) {\r\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\r\n                            const legacyFilter: number = [1, 3, 4, 5][clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                            legacySettings.filterResonance = 0;\r\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\r\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                        } else if (beforeSix && fromBeepBox) {\r\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\r\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\r\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\r\n                                    const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 1);\r\n                                    if (channelIndex < this.pitchChannelCount) {\r\n                                        legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                                        legacySettings.filterResonance = 0;\r\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\r\n                                    } else {\r\n                                        legacySettings.filterCutoff = 10;\r\n                                        legacySettings.filterResonance = 0;\r\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[\"none\"];\r\n                                    }\r\n                                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            const legacyFilter: number = clamp(0, legacyToCutoff.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                            legacySettings.filterCutoff = legacyToCutoff[legacyFilter];\r\n                            legacySettings.filterResonance = 0;\r\n                            legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyToEnvelope[legacyFilter]];\r\n                            instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                        }\r\n                    } else {\r\n                        const filterCutoffRange: number = 11;\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                        legacySettings.filterCutoff = clamp(0, filterCutoffRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                    }\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    if (fromBeepBox || typeCheck == 0) {\r\n                        instrument.eqFilterType = false;\r\n                        if (fromJummBox || fromGoldBox || fromUltraBox || fromAbyssBox)\r\n                            typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next to get control point count\r\n                        const originalControlPointCount: number = typeCheck;\r\n                        instrument.eqFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalControlPointCount);\r\n                        for (let i: number = instrument.eqFilter.controlPoints.length; i < instrument.eqFilter.controlPointCount; i++) {\r\n                            instrument.eqFilter.controlPoints[i] = new FilterControlPoint();\r\n                        }\r\n                        for (let i: number = 0; i < instrument.eqFilter.controlPointCount; i++) {\r\n                            const point: FilterControlPoint = instrument.eqFilter.controlPoints[i];\r\n                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        for (let i: number = instrument.eqFilter.controlPointCount; i < originalControlPointCount; i++) {\r\n                            charIndex += 3;\r\n                        }\r\n\r\n                        // Get subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                        instrument.eqSubFilters[0] = instrument.eqFilter;\r\n                        if ((fromJummBox && !beforeFive) || (fromGoldBox && !beforeFour) || fromUltraBox || fromAbyssBox ) {\r\n                            let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                                if (usingSubFilterBitfield & (1 << j)) {\r\n                                    // Number of control points\r\n                                    const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                                    if (instrument.eqSubFilters[j + 1] == null)\r\n                                        instrument.eqSubFilters[j + 1] = new FilterSettings();\r\n                                    instrument.eqSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\r\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPoints.length; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                        instrument.eqSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\r\n                                    }\r\n                                    for (let i: number = 0; i < instrument.eqSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                        const point: FilterControlPoint = instrument.eqSubFilters[j + 1]!.controlPoints[i];\r\n                                        point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                        point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                        point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                    }\r\n                                    for (let i: number = instrument.eqSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\r\n                                        charIndex += 3;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        instrument.eqFilterType = true;\r\n                        instrument.eqFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.eqFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.filterResonance: {\r\n                if (fromUltraBox || fromAbyssBox) {\r\n                    if (fromUltraBox && beforeThree) {\r\n                        // Still have to support the old and bad loop control data format written as a test, sigh.\r\n                        const sampleLoopInfoEncodedLength = decode32BitNumber(compressed, charIndex);\r\n                        charIndex += 6;\r\n                        const sampleLoopInfoEncoded = compressed.slice(charIndex, charIndex + sampleLoopInfoEncodedLength);\r\n                        charIndex += sampleLoopInfoEncodedLength;\r\n                        interface SampleLoopInfo {\r\n                            isUsingAdvancedLoopControls: boolean;\r\n                            chipWaveLoopStart: number;\r\n                            chipWaveLoopEnd: number;\r\n                            chipWaveLoopMode: number;\r\n                            chipWavePlayBackwards: boolean;\r\n                            chipWaveStartOffset: number;\r\n                        }\r\n                        interface SampleLoopInfoEntry {\r\n                            channel: number;\r\n                            instrument: number;\r\n                            info: SampleLoopInfo;\r\n                        }\r\n                        const sampleLoopInfo: SampleLoopInfoEntry[] = JSON.parse(atob(sampleLoopInfoEncoded));\r\n                        for (const entry of sampleLoopInfo) {\r\n                            const channelIndex: number = entry[\"channel\"];\r\n                            const instrumentIndex: number = entry[\"instrument\"];\r\n                            const info: SampleLoopInfo = entry[\"info\"];\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\r\n                            instrument.isUsingAdvancedLoopControls = info[\"isUsingAdvancedLoopControls\"];\r\n                            instrument.chipWaveLoopStart = info[\"chipWaveLoopStart\"];\r\n                            instrument.chipWaveLoopEnd = info[\"chipWaveLoopEnd\"];\r\n                            instrument.chipWaveLoopMode = info[\"chipWaveLoopMode\"];\r\n                            instrument.chipWavePlayBackwards = info[\"chipWavePlayBackwards\"];\r\n                            instrument.chipWaveStartOffset = info[\"chipWaveStartOffset\"];\r\n                            // @TODO: Whenever chipWaveReleaseMode is implemented, it should be set here to the default.\r\n                        }\r\n                    } else {\r\n                        // Read the new loop control data format.\r\n                        // See Song.toBase64String for details on the encodings used here.\r\n                        const encodedLoopMode: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const isUsingAdvancedLoopControls: boolean = Boolean(encodedLoopMode & 1);\r\n                        const chipWaveLoopMode: number = encodedLoopMode >> 1;\r\n                        const encodedReleaseMode: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const chipWavePlayBackwards: boolean = Boolean(encodedReleaseMode & 1);\r\n                        // const chipWaveReleaseMode: number = encodedReleaseMode >> 1;\r\n                        const chipWaveLoopStart: number = decode32BitNumber(compressed, charIndex);\r\n                        charIndex += 6;\r\n                        const chipWaveLoopEnd: number = decode32BitNumber(compressed, charIndex);\r\n                        charIndex += 6;\r\n                        const chipWaveStartOffset: number = decode32BitNumber(compressed, charIndex);\r\n                        charIndex += 6;\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.isUsingAdvancedLoopControls = isUsingAdvancedLoopControls;\r\n                        instrument.chipWaveLoopStart = chipWaveLoopStart;\r\n                        instrument.chipWaveLoopEnd = chipWaveLoopEnd;\r\n                        instrument.chipWaveLoopMode = chipWaveLoopMode;\r\n                        instrument.chipWavePlayBackwards = chipWavePlayBackwards;\r\n                        instrument.chipWaveStartOffset = chipWaveStartOffset;\r\n                        // instrument.chipWaveReleaseMode = chipWaveReleaseMode;\r\n                    }\r\n                }\r\n                else if (fromGoldBox && !beforeFour && beforeSix) {\r\n                    if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\r\n                            if (!willLoadLegacySamplesForOldSongs) {\r\n                                willLoadLegacySamplesForOldSongs = true;\r\n                                Config.willReloadForCustomSamples = true;\r\n                                EditorConfig.customSamples = [\"legacySamples\"];\r\n                                loadBuiltInSamples(0);\r\n                            }\r\n                    }\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + 125);\t\t\t\t\t\t\r\n                } else if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    const filterResonanceRange: number = 8;\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    legacySettings.filterResonance = clamp(0, filterResonanceRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.drumsetEnvelopes: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox)){\r\n\r\n                    }\r\n                    if (instrument.type == InstrumentType.drumset) {\r\n                        for (let i: number = 0; i < Config.drumCount; i++) {\r\n                            let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox )) aa = pregoldToEnvelope[aa];\r\n                            instrument.drumsetEnvelopes[i] = Song._envelopeFromLegacyIndex(aa).index;\r\n                        }\r\n                    } else {\r\n                        // This used to be used for general filter envelopes.\r\n                        // The presence of an envelope affects how convertLegacySettings\r\n                        // decides the closest possible approximation, so update it.\r\n                        const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                        let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox )) aa = pregoldToEnvelope[aa];\r\n                        legacySettings.filterEnvelope = Song._envelopeFromLegacyIndex(aa);\r\n                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                    }\r\n                } else {\r\n                    // This tag is now only used for drumset filter envelopes.\r\n                    for (let i: number = 0; i < Config.drumCount; i++) {\r\n                        let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox)) aa = pregoldToEnvelope[aa];\r\n                        instrument.drumsetEnvelopes[i] = clamp(0, Config.envelopes.length, aa);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.pulseWidth: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if ((fromAbyssBox && !beforeThree)) {\r\n                    instrument.pulseWidth = clamp(0, 101, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]));\r\n                } else {\r\n                    if (!fromBeepBox) {\r\n                        instrument.pulseWidth = clamp(0, Config.pulseWidthRange/2 + (+(fromJummBox)) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    } else {\r\n                        // BeepBox formula\r\n                        instrument.pulseWidth = Math.round(Math.pow(0.5, (7 - instrument.pulseWidth) * Config.pulseWidthStepPower) * Config.pulseWidthRange);\r\n                    }\r\n                    \r\n                }\r\n\r\n\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    let aa: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    if((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox)) aa = pregoldToEnvelope[aa];\r\n                    legacySettings.pulseEnvelope = Song._envelopeFromLegacyIndex(aa);\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                }\r\n\r\n                if ((fromUltraBox && !beforeFour) || fromAbyssBox)  {\r\n                    instrument.decimalOffset = clamp(0, 99 + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n\r\n            } break;\r\n            case SongTagCode.stringSustain: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const sustainValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\t\t\t\tinstrument.stringSustain = clamp(0, Config.stringSustainRange, sustainValue & 0x1F);\r\n\t\t\t\tinstrument.stringSustainType = Config.enableAcousticSustain ? clamp(0, SustainType.length, sustainValue >> 5) : SustainType.bright;\r\n            } break;\r\n            case SongTagCode.fadeInOut: {\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    // this tag was used for a combination of transition and fade in/out.\r\n                    const legacySettings = [\r\n                        { transition: \"interrupt\", fadeInSeconds: 0.0, fadeOutTicks: -1 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: -3 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.04, fadeOutTicks: 6 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.0, fadeOutTicks: 48 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.0125, fadeOutTicks: 72 },\r\n                        { transition: \"normal\", fadeInSeconds: 0.06, fadeOutTicks: 96 },\r\n                        { transition: \"slide in pattern\", fadeInSeconds: 0.025, fadeOutTicks: -3 },\r\n                    ];\r\n                    if (beforeThree && fromBeepBox) {\r\n                        const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                            // Enable transition if it was used.\r\n                            instrument.effects |= 1 << EffectType.transition;\r\n                        }\r\n                    } else if (beforeSix && fromBeepBox) {\r\n                        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                            for (const instrument of this.channels[channelIndex].instruments) {\r\n                                const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                                instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                                instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                                instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n                                if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                                    // Enable transition if it was used.\r\n                                    instrument.effects |= 1 << EffectType.transition;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if ((beforeFour && !fromGoldBox && !fromUltraBox && !fromAbyssBox) || fromBeepBox) {\r\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index) {\r\n                            // Enable transition if it was used.\r\n                            instrument.effects |= 1 << EffectType.transition;\r\n                        }\r\n                    } else {\r\n                        const settings = legacySettings[clamp(0, legacySettings.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        instrument.fadeIn = Synth.secondsToFadeInSetting(settings.fadeInSeconds);\r\n                        instrument.fadeOut = Synth.ticksToFadeOutSetting(settings.fadeOutTicks);\r\n                        instrument.transition = Config.transitions.dictionary[settings.transition].index;\r\n\r\n                        // Read tie-note \r\n                        if (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] > 0) {\r\n                            // Set legacy tie over flag, which is only used to port notes in patterns using this instrument as tying.\r\n                            instrument.legacyTieOver = true;\r\n\r\n                        }\r\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n\r\n                        if (instrument.transition != Config.transitions.dictionary[\"normal\"].index || instrument.clicklessTransition) {\r\n                            // Enable transition if it was used.\r\n                            instrument.effects |= 1 << EffectType.transition;\r\n                        }\r\n                    }\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.fadeIn = clamp(0, Config.fadeInRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.fadeOut = clamp(0, Config.fadeOutTicks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    if (!fromBeepBox)\r\n                        instrument.clicklessTransition = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                }\r\n            } break;\r\n            case SongTagCode.vibrato: {\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    if (beforeSeven && fromBeepBox) {\r\n                        if (beforeThree && fromBeepBox) {\r\n                            const legacyEffects: number[] = [0, 3, 2, 0];\r\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"tremolo2\"];\r\n                            const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![channelIndex][0];\r\n                            instrument.vibrato = legacyEffects[effect];\r\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\r\n                                // Imitate the legacy tremolo with a filter envelope.\r\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\r\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                            }\r\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                                // Enable vibrato if it was used.\r\n                                instrument.effects |= 1 << EffectType.vibrato;\r\n                            }\r\n                        } else if (beforeSix && fromBeepBox) {\r\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\r\n                            for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                                for (let i: number = 0; i < this.channels[channelIndex].instruments.length; i++) {\r\n                                    const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                    const instrument: Instrument = this.channels[channelIndex].instruments[i];\r\n                                    const legacySettings: LegacySettings = legacySettingsCache![channelIndex][i];\r\n                                    instrument.vibrato = legacyEffects[effect];\r\n                                    if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\r\n                                        // Imitate the legacy tremolo with a filter envelope.\r\n                                        legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\r\n                                        instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                                    }\r\n                                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                                        // Enable vibrato if it was used.\r\n                                        instrument.effects |= 1 << EffectType.vibrato;\r\n                                    }\r\n                                    if ((legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) && !this.getChannelIsNoise(channelIndex)) {\r\n                                        // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\r\n                                        instrument.effects |= 1 << EffectType.reverb;\r\n                                        instrument.reverb = legacyGlobalReverb;\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            const legacyEffects: number[] = [0, 1, 2, 3, 0, 0];\r\n                            const legacyEnvelopes: string[] = [\"none\", \"none\", \"none\", \"none\", \"tremolo5\", \"tremolo2\"];\r\n                            const effect: number = clamp(0, legacyEffects.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                            const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                            instrument.vibrato = legacyEffects[effect];\r\n                            if (legacySettings.filterEnvelope == undefined || legacySettings.filterEnvelope.type == EnvelopeType.none) {\r\n                                // Imitate the legacy tremolo with a filter envelope.\r\n                                legacySettings.filterEnvelope = Config.envelopes.dictionary[legacyEnvelopes[effect]];\r\n                                instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                            }\r\n                            if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                                // Enable vibrato if it was used.\r\n                                instrument.effects |= 1 << EffectType.vibrato;\r\n                            }\r\n                            if (legacyGlobalReverb != 0 || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                                // Enable reverb if it was used globaly before. (Global reverb was added before the effects option so I need to pick somewhere else to initialize instrument reverb, and I picked the vibrato command.)\r\n                                instrument.effects |= 1 << EffectType.reverb;\r\n                                instrument.reverb = legacyGlobalReverb;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                        const vibrato: number = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.vibrato = vibrato;\r\n                        if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                            // Enable vibrato if it was used.\r\n                            instrument.effects |= 1 << EffectType.vibrato;\r\n                        }\r\n                        // Custom vibrato\r\n                        if (vibrato == Config.vibratos.length) {\r\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50;\r\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 2;\r\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.effects |= 1 << EffectType.vibrato;\r\n                        }\r\n                        // Enforce standard vibrato settings\r\n                        else {\r\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n                            instrument.vibratoSpeed = 10; // Normal speed\r\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\r\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.arpeggioSpeed: {\r\n                // Deprecated, but supported for legacy purposes\r\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.arpeggioSpeed = clamp(0, Config.modulators.dictionary[\"arp speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.fastTwoNoteArp = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false; // Two note arp setting piggybacks on this\r\n                }\r\n                else {\r\n                    // Do nothing, deprecated for now\r\n                }\r\n            } break;\r\n            case SongTagCode.unison: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.channels[channelIndex].instruments[0].unison = clamp(0, Config.unisons.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    const instrument = this.channels[channelIndex].instruments[0];\r\n                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\r\n                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\r\n                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\r\n                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\r\n                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\r\n                } else if (beforeSix && fromBeepBox) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (const instrument of this.channels[channelIndex].instruments) {\r\n                            const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            let unison: number = clamp(0, Config.unisons.length, originalValue);\r\n                            if (originalValue == 8) {\r\n                                // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                                unison = 2;\r\n                                instrument.chord = 3;\r\n                            }\r\n                            instrument.unison = unison;\r\n                            instrument.unisonVoices = Config.unisons[instrument.unison].voices;\r\n                            instrument.unisonSpread = Config.unisons[instrument.unison].spread;\r\n                            instrument.unisonOffset = Config.unisons[instrument.unison].offset;\r\n                            instrument.unisonExpression = Config.unisons[instrument.unison].expression;\r\n                            instrument.unisonSign = Config.unisons[instrument.unison].sign;\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    const originalValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    let unison: number = clamp(0, Config.unisons.length, originalValue);\r\n                    if (originalValue == 8) {\r\n                        // original \"custom harmony\" now maps to \"hum\" and \"custom interval\".\r\n                        unison = 2;\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chord = 3;\r\n                    }\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = unison;\r\n                    const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\r\n                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\r\n                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\r\n                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\r\n                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\r\n                } else {\r\n                    this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].unison = clamp(0, Config.unisons.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                \r\n                if (((fromUltraBox && !beforeFour) || fromAbyssBox) && (instrument.unison == Config.unisons.length))  {\r\n                // if (instrument.unison == Config.unisons.length) {\r\n                    instrument.unisonVoices = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    const unisonSpreadNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const unisonSpread: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\r\n\r\n                    const unisonOffsetNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const unisonOffset: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63)) * 63);\r\n\r\n                    const unisonExpressionNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const unisonExpression: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\r\n                    \r\n                    const unisonSignNegative = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const unisonSign: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] + (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 63);\r\n\r\n\r\n                    instrument.unisonSpread = unisonSpread / 1000;\r\n                    if (unisonSpreadNegative == 0) instrument.unisonSpread *= -1;\r\n\r\n                    instrument.unisonOffset = unisonOffset / 1000;\r\n                    if (unisonOffsetNegative == 0) instrument.unisonOffset *= -1;\r\n\r\n                    instrument.unisonExpression = unisonExpression / 1000;\r\n                    if (unisonExpressionNegative == 0) instrument.unisonExpression *= -1;\r\n\r\n                    instrument.unisonSign = unisonSign / 1000;\r\n                    if (unisonSignNegative == 0) instrument.unisonSign *= -1;\r\n\r\n                    if ((fromUltraBox && !beforeSix) || (fromAbyssBox && !beforeThree)) {\r\n                        instrument.unisonBuzzes = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                    }\r\n                } else {\r\n                    instrument.unisonVoices = Config.unisons[instrument.unison].voices;\r\n                    instrument.unisonSpread = Config.unisons[instrument.unison].spread;\r\n                    instrument.unisonOffset = Config.unisons[instrument.unison].offset;\r\n                    instrument.unisonExpression = Config.unisons[instrument.unison].expression;\r\n                    instrument.unisonSign = Config.unisons[instrument.unison].sign;\r\n                    instrument.unisonBuzzes = false;\r\n                }\r\n            \r\n            } break;\r\n            case SongTagCode.chord: {\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    if (instrument.chord != Config.chords.dictionary[\"simultaneous\"].index) {\r\n                        // Enable chord if it was used.\r\n                        instrument.effects |= 1 << EffectType.chord;\r\n                    }\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.effects: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if ((beforeNine && fromBeepBox) || ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                    instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] & ((1 << EffectType.length) - 1));\r\n                    if (legacyGlobalReverb == 0 && !((fromJummBox && beforeFive) || (beforeFour && fromGoldBox))) {\r\n                        // Disable reverb if legacy song reverb was zero.\r\n                        instrument.effects &= ~(1 << EffectType.reverb);\r\n                    } else if (effectsIncludeReverb(instrument.effects)) {\r\n                        instrument.reverb = legacyGlobalReverb;\r\n                    }\r\n                    // @jummbus - Enabling pan effect on song import no matter what to make it a default.\r\n                    //if (instrument.pan != Config.panCenter) {\r\n                    instrument.effects |= 1 << EffectType.panning;\r\n                    //}\r\n                    if (instrument.vibrato != Config.vibratos.dictionary[\"none\"].index) {\r\n                        // Enable vibrato if it was used.\r\n                        instrument.effects |= 1 << EffectType.vibrato;\r\n                    }\r\n                    if (instrument.detune != Config.detuneCenter) {\r\n                        // Enable detune if it was used.\r\n                        instrument.effects |= 1 << EffectType.detune;\r\n                    }\r\n                    if (instrument.aliases)\r\n                        instrument.effects |= 1 << EffectType.distortion;\r\n                    else\r\n                        instrument.effects &= ~(1 << EffectType.distortion);\r\n\r\n                    // convertLegacySettings may need to force-enable note filter, call\r\n                    // it again here to make sure that this override takes precedence.\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                } else {\r\n                    // BeepBox currently uses two base64 characters at 6 bits each for a bitfield representing all the enabled effects.\r\n                    if (EffectType.length > 16) throw new Error();\r\n                        if ((fromAbyssBox && !beforeTwo||fromAbyssBox && !beforeThree)||(fromUltraBox && !beforeSix))  {\r\n                                instrument.effects = (\r\n                                    (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 5))\r\n                                    | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 4))\r\n                                    | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 3))\r\n                                    | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 2))\r\n                                    | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 1))\r\n                                    | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << (6 * 0))\r\n                                ) >>> 0;\r\n                        } else {\r\n                            instrument.effects = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]); \r\n                        }\r\n\r\n                    if (effectsIncludeNoteFilter(instrument.effects)) {\r\n                        let typeCheck: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if (fromBeepBox || typeCheck == 0) {\r\n                            instrument.noteFilterType = false;\r\n                            if (!fromBeepBox)\r\n                                typeCheck = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]; // Skip to next index in jummbox to get actual count\r\n                            instrument.noteFilter.controlPointCount = clamp(0, Config.filterMaxPoints + 1, typeCheck);\r\n                            for (let i: number = instrument.noteFilter.controlPoints.length; i < instrument.noteFilter.controlPointCount; i++) {\r\n                                instrument.noteFilter.controlPoints[i] = new FilterControlPoint();\r\n                            }\r\n                            for (let i: number = 0; i < instrument.noteFilter.controlPointCount; i++) {\r\n                                const point: FilterControlPoint = instrument.noteFilter.controlPoints[i];\r\n                                point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            }\r\n                            for (let i: number = instrument.noteFilter.controlPointCount; i < typeCheck; i++) {\r\n                                charIndex += 3;\r\n                            }\r\n\r\n                            // Get subfilters as well. Skip Index 0, is a copy of the base filter.\r\n                            instrument.noteSubFilters[0] = instrument.noteFilter;\r\n                            if ((fromJummBox && !beforeFive) || (fromGoldBox) || (fromUltraBox)|| (fromAbyssBox)) {\r\n                                let usingSubFilterBitfield: number = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                for (let j: number = 0; j < Config.filterMorphCount - 1; j++) {\r\n                                    if (usingSubFilterBitfield & (1 << j)) {\r\n                                        // Number of control points\r\n                                        const originalSubfilterControlPointCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                                        if (instrument.noteSubFilters[j + 1] == null)\r\n                                            instrument.noteSubFilters[j + 1] = new FilterSettings();\r\n                                        instrument.noteSubFilters[j + 1]!.controlPointCount = clamp(0, Config.filterMaxPoints + 1, originalSubfilterControlPointCount);\r\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPoints.length; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                            instrument.noteSubFilters[j + 1]!.controlPoints[i] = new FilterControlPoint();\r\n                                        }\r\n                                        for (let i: number = 0; i < instrument.noteSubFilters[j + 1]!.controlPointCount; i++) {\r\n                                            const point: FilterControlPoint = instrument.noteSubFilters[j + 1]!.controlPoints[i];\r\n                                            point.type = clamp(0, FilterType.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                            point.freq = clamp(0, Config.filterFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                            point.gain = clamp(0, Config.filterGainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                        }\r\n                                        for (let i: number = instrument.noteSubFilters[j + 1]!.controlPointCount; i < originalSubfilterControlPointCount; i++) {\r\n                                            charIndex += 3;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        } else {\r\n                            instrument.noteFilterType = true;\r\n                            instrument.noteFilter.reset();\r\n                            instrument.noteFilterSimpleCut = clamp(0, Config.filterSimpleCutRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.noteFilterSimplePeak = clamp(0, Config.filterSimplePeakRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\r\n                        }\r\n                    }\r\n                    if (effectsIncludeTransition(instrument.effects)) {\r\n                        instrument.transition = clamp(0, Config.transitions.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        if ((fromUltraBox && !beforeSix)||(fromAbyssBox && !beforeThree)) {\r\n                            if (Config.transitions[instrument.transition].slides == true) instrument.slideTicks = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        }\r\n                    }\r\n                    if (effectsIncludeChord(instrument.effects)) {\r\n                        instrument.chord = clamp(0, Config.chords.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        // Custom arpeggio speed... only in JB, and only if the instrument arpeggiates.\r\n                        if (Config.chords[instrument.chord].arpeggiates == true && (!fromBeepBox)) {\r\n                            instrument.arpeggioSpeed = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                            instrument.fastTwoNoteArp = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\r\n                        } else if (Config.chords[instrument.chord].strumParts > 0 && ((fromUltraBox && !beforeSix)||(fromAbyssBox && !beforeThree))) {\r\n                            instrument.strumParts = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        }\r\n                    }\r\n                    if (effectsIncludePitchShift(instrument.effects)) {\r\n                        instrument.pitchShift = clamp(0, Config.pitchShiftRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludeDetune(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            // Convert from BeepBox's formula\r\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.detune = Math.round((instrument.detune - 9) * (Math.abs(instrument.detune - 9) + 1) / 2 + Config.detuneCenter);\r\n                        } else {\r\n                            instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                    if (effectsIncludeVibrato(instrument.effects)) {\r\n                        instrument.vibrato = clamp(0, Config.vibratos.length + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\r\n                        // Custom vibrato\r\n                        if (instrument.vibrato == Config.vibratos.length && (!fromBeepBox)) {\r\n                            instrument.vibratoDepth = clamp(0, Config.modulators.dictionary[\"vibrato depth\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 25;\r\n                            instrument.vibratoSpeed = clamp(0, Config.modulators.dictionary[\"vibrato speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.vibratoDelay = clamp(0, Config.modulators.dictionary[\"vibrato delay\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                            instrument.vibratoType = clamp(0, Config.vibratoTypes.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        // Enforce standard vibrato settings\r\n                        else {\r\n                            instrument.vibratoDepth = Config.vibratos[instrument.vibrato].amplitude;\r\n                            instrument.vibratoSpeed = 10; // Normal speed\r\n                            instrument.vibratoDelay = Config.vibratos[instrument.vibrato].delayTicks / 2;\r\n                            instrument.vibratoType = Config.vibratos[instrument.vibrato].type;\r\n                        }\r\n                    }\r\n                    if (effectsIncludeDistortion(instrument.effects)) {\r\n                        instrument.distortion = clamp(0, Config.distortionRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        if ((fromJummBox && !beforeFive) || fromGoldBox || fromUltraBox || fromAbyssBox)\r\n                            instrument.aliases = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                    }\r\n                    if (effectsIncludeRM(instrument.effects)) {\r\n                        instrument.ringModulation = clamp(0, Config.ringModRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.ringModulationHz = clamp(0, Config.ringModHzRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n\t\t\t\t\t    instrument.rmWaveformIndex = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\t\r\n                        if ((fromAbyssBox && beforeThree)) {\r\n                            instrument.rmPulseWidth = clamp(0, Config.pulseWidthRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]); \r\n                        } else {\t\t\t\t\t\t\r\n                            instrument.rmPulseWidth = clamp(0, Config.pulseWidthRange, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\t\t\t\t   \t\t\t\t\t   \t \t\t\t\t\t\t  \t\t\t\t\t\t\t\t\r\n\t\t\t\t\t        instrument.rmHzOffset = clamp(Config.rmHzOffsetMin, Config.rmHzOffsetMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\t\r\n                        }\r\n                    }\r\n                    if (effectsIncludePhaser(instrument.effects)) {\r\n                        instrument.phaserFreq = clamp(0, Config.phaserFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.phaserFeedback = clamp(0, Config.phaserFeedbackRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.phaserStages = clamp(0, Config.phaserMaxStages + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]); \r\n                        instrument.phaserMix = clamp(0, Config.phaserMixRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if(effectsIncludeInvertWave(instrument.effects)) {\r\n                        instrument.invertWave = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] ? true : false;\r\n                    }\r\n                    if (effectsIncludeBitcrusher(instrument.effects)) {\r\n                        instrument.bitcrusherFreq = clamp(0, Config.bitcrusherFreqRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.bitcrusherQuantization = clamp(0, Config.bitcrusherQuantizationRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludePanning(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n                            instrument.pan = clamp(0, Config.panMax + 1, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0)));\r\n                        }\r\n                        else {\r\n                            instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n\r\n                        // Now, pan delay follows on new versions of jummbox.\r\n                        if ((fromJummBox && !beforeTwo) || fromGoldBox || fromUltraBox || fromAbyssBox )\r\n                            instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    }\r\n                    if (effectsIncludeChorus(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            // BeepBox has 4 chorus values vs. JB's 8\r\n                            instrument.chorus = clamp(0, (Config.chorusRange / 2) + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 2;\r\n                        }\r\n                        else {\r\n                            instrument.chorus = clamp(0, Config.chorusRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                    if (effectsIncludeEcho(instrument.effects)) {\r\n                        instrument.echoSustain = clamp(0, Config.echoSustainRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.echoDelay = clamp(0, Config.echoDelayRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                    if (effectsIncludeReverb(instrument.effects)) {\r\n                        if (fromBeepBox) {\r\n                            instrument.reverb = clamp(0, Config.reverbRange, Math.round(base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * Config.reverbRange / 3.0));\r\n                        } else {\r\n                            instrument.reverb = clamp(0, Config.reverbRange, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                    if (effectsIncludeNoteRange(instrument.effects)) {\r\n                        instrument.upperNoteLimit = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        instrument.lowerNoteLimit = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    }\r\n                }\r\n                // Clamp the range.\r\n                instrument.effects &= (1 << EffectType.length) - 1;\r\n            } break;\r\n            case SongTagCode.volume: {\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const instrument: Instrument = this.channels[channelIndex].instruments[0];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (beforeSix && fromBeepBox) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (const instrument of this.channels[channelIndex].instruments) {\r\n                            instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                        }\r\n                    }\r\n                } else if (beforeSeven && fromBeepBox) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 5.0));\r\n                } else if (fromBeepBox) {\r\n                    // Beepbox v9's volume range is 0-7 (0 is max, 7 is mute)\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, 1, -base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 25.0 / 7.0));\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    // Volume is stored in two bytes in jummbox just in case range ever exceeds one byte, e.g. through later waffling on the subject.\r\n                    instrument.volume = Math.round(clamp(-Config.volumeRange / 2, Config.volumeRange / 2 + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) | (base64CharCodeToInt[compressed.charCodeAt(charIndex++)])) - Config.volumeRange / 2));\r\n                }\r\n            } break;\r\n            case SongTagCode.pan: {\r\n                if (beforeNine && fromBeepBox) {\r\n                    // Beepbox has a panMax of 8 (9 total positions), Jummbox has a panMax of 100 (101 total positions)\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pan = clamp(0, Config.panMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * ((Config.panMax) / 8.0));\r\n                } else if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.pan = clamp(0, Config.panMax + 1, (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    // Pan delay follows on v3 + v4\r\n                    if (fromJummBox && !beforeThree || fromGoldBox || fromUltraBox || fromAbyssBox) {\r\n                        instrument.panDelay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    }\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.detune: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                if ((fromJummBox && beforeFive) || (beforeFour && fromGoldBox)) {\r\n                    // Before jummbox v5, detune was -50 to 50. Now it is 0 to 400\r\n                    instrument.detune = clamp(Config.detuneMin, Config.detuneMax + 1, ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) * 4);\r\n                    instrument.effects |= 1 << EffectType.detune;\r\n                } else {\r\n                    // Now in v5, tag code is deprecated and handled thru detune effects.\r\n                }\r\n            } break;\r\n            case SongTagCode.customChipWave: {\r\n                let instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                // Pop custom wave values\r\n                for (let j: number = 0; j < 64; j++) {\r\n                    instrument.customChipWave[j]\r\n                        = clamp(-24, 25, base64CharCodeToInt[compressed.charCodeAt(charIndex++)] - 24);\r\n                }\r\n\r\n                let sum: number = 0.0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    sum += instrument.customChipWave[i];\r\n                }\r\n                const average: number = sum / instrument.customChipWave.length;\r\n\r\n                // Perform the integral on the wave. The chipSynth will perform the derivative to get the original wave back but with antialiasing.\r\n                let cumulative: number = 0;\r\n                let wavePrev: number = 0;\r\n                for (let i: number = 0; i < instrument.customChipWave.length; i++) {\r\n                    cumulative += wavePrev;\r\n                    wavePrev = instrument.customChipWave[i] - average;\r\n                    instrument.customChipWaveIntegral[i] = cumulative;\r\n                }\r\n\r\n                // 65th, last sample is for anti-aliasing\r\n                instrument.customChipWaveIntegral[64] = 0.0;\r\n\r\n            } break;\r\n            case SongTagCode.limiterSettings: {\r\n                let nextValue: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                // Check if limiter settings are used... if not, restore to default\r\n                if (nextValue == 0x3f) {\r\n                    this.restoreLimiterDefaults();\r\n                }\r\n                else {\r\n                    // Limiter is used, grab values\r\n                    this.compressionRatio = (nextValue < 10 ? nextValue / 10 : (1 + (nextValue - 10) / 60));\r\n                    nextValue = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRatio = (nextValue < 10 ? nextValue / 10 : (nextValue - 9));\r\n                    this.limitDecay = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    this.limitRise = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)] * 250.0) + 2000.0;\r\n                    this.compressionThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.limitThreshold = base64CharCodeToInt[compressed.charCodeAt(charIndex++)] / 20.0;\r\n                    this.masterGain = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) / 50.0;\r\n                }\r\n            } break;\r\n            case SongTagCode.channelNames: {\r\n                for (let channel: number = 0; channel < this.getChannelCount(); channel++) {\r\n                    // Length of channel name string. Due to some crazy Unicode characters this needs to be 2 bytes...\r\n                    var channelNameLength;\r\n                    if (beforeFour && !fromGoldBox && !fromUltraBox && !fromAbyssBox)\r\n                        channelNameLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)]\r\n                    else\r\n                        channelNameLength = ((base64CharCodeToInt[compressed.charCodeAt(charIndex++)] << 6) + base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    this.channels[channel].name = decodeURIComponent(compressed.substring(charIndex, charIndex + channelNameLength));\r\n\r\n                    charIndex += channelNameLength;\r\n                }\r\n            } break;\r\n            case SongTagCode.algorithm: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.fm) {\r\n                    instrument.algorithm = clamp(0, Config.algorithms.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    instrument.algorithm6Op = clamp(0, Config.algorithms6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.customAlgorithm.fromPreset(instrument.algorithm6Op);\r\n                    if (compressed.charCodeAt(charIndex) == SongTagCode.chord) {\r\n                        let carrierCountTemp = clamp(1, Config.operatorCount + 2+1, base64CharCodeToInt[compressed.charCodeAt(charIndex + 1)]);\r\n                        charIndex++\r\n                        let tempModArray: number[][] = [];\r\n                        if (compressed.charCodeAt(charIndex+1) == SongTagCode.effects) {\r\n                            charIndex++\r\n                            let j: number = 0;\r\n                            charIndex++\r\n                            while (compressed.charCodeAt(charIndex) != SongTagCode.effects) {\r\n                                tempModArray[j] = [];\r\n                                let o: number = 0;\r\n                                while (compressed.charCodeAt(charIndex) != SongTagCode.operatorWaves) {\r\n                                    tempModArray[j][o] = clamp(1, Config.operatorCount + 3, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\r\n                                    o++\r\n                                    charIndex++\r\n                                }\r\n                                j++;\r\n                                charIndex++\r\n                            }\r\n                            instrument.customAlgorithm.set(carrierCountTemp, tempModArray);\r\n                            charIndex++; //????\r\n                        }\r\n                    }\r\n                }\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    // The algorithm determines the carrier count, which affects how legacy settings are imported.\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                }\r\n            } break;\r\n            case SongTagCode.supersaw: {\r\n                if (fromGoldBox && !beforeFour && beforeSix) {\r\n                    //is it more useful to save base64 characters or url length?\r\n                    const chipWaveForCompat = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    if ((chipWaveForCompat + 62) > 85) {\r\n                        if (document.URL.substring(document.URL.length - 13).toLowerCase() != \"legacysamples\") {\r\n                            if (!willLoadLegacySamplesForOldSongs) {\r\n                                willLoadLegacySamplesForOldSongs = true;\r\n                                Config.willReloadForCustomSamples = true;\r\n                                EditorConfig.customSamples = [\"legacySamples\"];\r\n                                loadBuiltInSamples(0);\r\n                            }\r\n                        }\r\n                    }\r\n                    \r\n                    if ((chipWaveForCompat + 62) > 78) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 63);\t\r\n                    }\r\n                    else if ((chipWaveForCompat + 62) > 67) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 61);\t\r\n                    }\r\n                    else if ((chipWaveForCompat + 62) == 67) {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = 40;\t\r\n                    }\r\n                    else {\r\n                        this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].chipWave = clamp(0, Config.chipWaves.length, chipWaveForCompat + 62);\t\t\t\r\n                    }\t\t\t\t\t\t\t\r\n                } else {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.supersawDynamism = clamp(0, Config.supersawDynamismMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.supersawSpread = clamp(0, Config.supersawSpreadMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.supersawShape = clamp(0, Config.supersawShapeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n\t\t\t} break;\r\n            case SongTagCode.feedbackType: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.fm) {\r\n                    instrument.feedbackType = clamp(0, Config.feedbacks.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n                else {\r\n                    instrument.feedbackType6Op = clamp(0, Config.feedbacks6Op.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    instrument.customFeedbackType.fromPreset(instrument.feedbackType6Op);\r\n                    let tempModArray: number[][] = [];\r\n                    if (compressed.charCodeAt(charIndex) == SongTagCode.effects) {\r\n                        let j: number = 0;\r\n                        charIndex++\r\n                        while (compressed.charCodeAt(charIndex) != SongTagCode.effects) {\r\n                            tempModArray[j] = [];\r\n                            let o: number = 0;\r\n                            while (compressed.charCodeAt(charIndex) != SongTagCode.operatorWaves) {\r\n                                tempModArray[j][o] = clamp(1, Config.operatorCount + 2, base64CharCodeToInt[compressed.charCodeAt(charIndex)]);\r\n                                o++\r\n                                charIndex++\r\n                            }\r\n                            j++;\r\n                            charIndex++\r\n                        }\r\n                        instrument.customFeedbackType.set(tempModArray);\r\n                        charIndex++; //???? weirdly needs to skip the end character or it'll use that next loop instead of like just moving to the next one itself\r\n                    }\r\n                }\r\n\r\n            } break;\r\n            case SongTagCode.feedbackAmplitude: {\r\n                this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator].feedbackAmplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n            } break;\r\n            case SongTagCode.feedbackEnvelope: {\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    \r\n                    let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    if ((beforeTwo && fromGoldBox) || (!fromGoldBox && !fromUltraBox && !fromAbyssBox)) aa = pregoldToEnvelope[aa];\r\n                    legacySettings.feedbackEnvelope = Song._envelopeFromLegacyIndex(base64CharCodeToInt[aa]);\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                } else {\r\n                    // Do nothing? This song tag code is deprecated for now.\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorFrequencies: {\r\n                const instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                            if (beforeThree && fromGoldBox) {\r\n\t\t\t\t\t\t\t\tconst freqToGold3 = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 22, 24, 2, 1, 9, 17, 19, 21, 23, 0, 3];\r\n                               \r\n\t\t\t\t\t\t\t\tfor (let o = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                                    instrument.operators[o].frequency = freqToGold3[clamp(0, freqToGold3.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                                }\r\n                            }\r\n\t\t\t\t\t\t\telse if (!fromGoldBox && !fromUltraBox && !fromAbyssBox) {\r\n\t\t\t\t\t\t\t\tconst freqToUltraBox = [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 18, 20, 23, 27, 2, 1, 9, 17, 19, 21, 23, 0, 3];\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tfor (let o = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                                    instrument.operators[o].frequency = freqToUltraBox[clamp(0, freqToUltraBox.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                                }\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n                            else {\r\n                                for (let o = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                                    instrument.operators[o].frequency = clamp(0, Config.operatorFrequencies.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                                }\r\n                            }\r\n            } break;\r\n            case SongTagCode.operatorAmplitudes: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                    instrument.operators[o].amplitude = clamp(0, Config.operatorAmplitudeMax + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                }\r\n            } break;\r\n            case SongTagCode.envelopes: {\r\n                const pregoldToEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 32, 33, 34, 31, 11];\r\n                const jummToUltraEnvelope: number[] = [0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 58, 59, 60];\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                    const legacySettings: LegacySettings = legacySettingsCache![instrumentChannelIterator][instrumentIndexIterator];\r\n                    legacySettings.operatorEnvelopes = [];\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                        let aa:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if ((beforeTwo && fromGoldBox) || (fromBeepBox)) aa = pregoldToEnvelope[aa];\r\n                        if (fromJummBox) aa = jummToUltraEnvelope[aa];\r\n                        legacySettings.operatorEnvelopes[o] = Song._envelopeFromLegacyIndex(aa);\r\n                    }\r\n                    instrument.convertLegacySettings(legacySettings, forceSimpleFilter);\r\n                } else {\r\n                    const envelopeCount: number = clamp(0, Config.maxEnvelopeCount + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    // JB v6 adds some envelope options here in the sequence.\r\n                    if ((fromJummBox && !beforeSix) || (fromUltraBox && !beforeFive)|| (fromAbyssBox)) {\r\n                        instrument.envelopeSpeed = clamp(0, Config.modulators.dictionary[\"envelope speed\"].maxRawVol + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        instrument.discreteEnvelope = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\r\n                    }\r\n                    for (let i: number = 0; i < envelopeCount; i++) {\r\n                        const target: number = clamp(0, Config.instrumentAutomationTargets.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        let index: number = 0;\r\n                        const maxCount: number = Config.instrumentAutomationTargets[target].maxCount;\r\n                        if (maxCount > 1) {\r\n                            index = clamp(0, maxCount, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        let envTypeIndex:number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        if ((beforeTwo && fromGoldBox) || (fromBeepBox)) envTypeIndex = pregoldToEnvelope[envTypeIndex]; \r\n                        if (fromJummBox) envTypeIndex = jummToUltraEnvelope[envTypeIndex];\r\n                        const envelope: number = clamp(0, Config.envelopes.length, envTypeIndex);\r\n                        instrument.addEnvelope(target, index, envelope);\r\n                    }\r\n                }\r\n            } break;\r\n            case SongTagCode.operatorWaves: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n\r\n                if (beforeThree && fromGoldBox) {\r\n                    for (let o: number = 0; o < Config.operatorCount; o++) {\r\n                        const pre3To3g = [0, 1, 3, 2, 2, 2, 4, 5];\r\n                        const old: number = clamp(0, pre3To3g.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        if (old == 3) {\r\n                            instrument.operators[o].pulseWidth = 5;\r\n                        } else if (old == 4) {\r\n                            instrument.operators[o].pulseWidth = 4;\r\n                        } else if (old == 5) {\r\n                            instrument.operators[o].pulseWidth = 6;\r\n                        }\r\n                        instrument.operators[o].waveform = pre3To3g[old];\r\n                    }\r\n                } else {\r\n                    for (let o: number = 0; o < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); o++) {\r\n                        if (fromJummBox) {\r\n                            const jummToG = [0, 1, 3, 2, 4, 5];\r\n                            instrument.operators[o].waveform = jummToG[clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)])];\r\n                        } else {\r\n                            instrument.operators[o].waveform = clamp(0, Config.operatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                        // Pulse width follows, if it is a pulse width operator wave\r\n                        if (instrument.operators[o].waveform == 2) {\r\n                            instrument.operators[o].pulseWidth = clamp(0, Config.pwmOperatorWaves.length, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } break;\r\n            case SongTagCode.spectrum: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                if (instrument.type == InstrumentType.spectrum) {\r\n                    const byteCount: number = Math.ceil(Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                        instrument.spectrumWave.spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                    }\r\n                    instrument.spectrumWave.markCustomWaveDirty();\r\n                    charIndex += byteCount;\r\n                } else if (instrument.type == InstrumentType.drumset) {\r\n                    const byteCount: number = Math.ceil(Config.drumCount * Config.spectrumControlPoints * Config.spectrumControlPointBits / 6)\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                    for (let j: number = 0; j < Config.drumCount; j++) {\r\n                        for (let i: number = 0; i < Config.spectrumControlPoints; i++) {\r\n                            instrument.drumsetSpectrumWaves[j].spectrum[i] = bits.read(Config.spectrumControlPointBits);\r\n                        }\r\n                        instrument.drumsetSpectrumWaves[j].markCustomWaveDirty();\r\n                    }\r\n                    charIndex += byteCount;\r\n                } else {\r\n                    throw new Error(\"Unhandled instrument type for spectrum song tag code.\");\r\n                }\r\n            } break;\r\n            case SongTagCode.harmonics: {\r\n                const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                const byteCount: number = Math.ceil(Config.harmonicsControlPoints * Config.harmonicsControlPointBits / 6)\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + byteCount);\r\n                for (let i: number = 0; i < Config.harmonicsControlPoints; i++) {\r\n                    instrument.harmonicsWave.harmonics[i] = bits.read(Config.harmonicsControlPointBits);\r\n                }\r\n                instrument.harmonicsWave.markCustomWaveDirty();\r\n                charIndex += byteCount;\r\n            } break;\r\n            case SongTagCode.aliases: {\r\n                if ((fromJummBox && beforeFive) || (fromGoldBox && beforeFour)) {\r\n                    const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];\r\n                    instrument.aliases = (base64CharCodeToInt[compressed.charCodeAt(charIndex++)]) ? true : false;\r\n                    if (instrument.aliases) {\r\n                        instrument.distortion = 0;\r\n                        instrument.effects |= 1 << EffectType.distortion;\r\n                    }\r\n                } else {\r\n                    if (fromUltraBox || fromAbyssBox) {\r\n                        const instrument: Instrument = this.channels[instrumentChannelIterator].instruments[instrumentIndexIterator];  \r\n                        instrument.decimalOffset = clamp(0, 50 + 1, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    }\r\n                }\r\n            }\r\n                break;\r\n            case SongTagCode.bars: {\r\n                let subStringLength: number;\r\n                if (beforeThree && fromBeepBox) {\r\n                    const channelIndex: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    const barCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    subStringLength = Math.ceil(barCount * 0.5);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let i: number = 0; i < barCount; i++) {\r\n                        this.channels[channelIndex].bars[i] = bits.read(3) + 1;\r\n                    }\r\n                } else if (beforeFive && fromBeepBox) {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits) + 1;\r\n                        }\r\n                    }\r\n                } else {\r\n                    let neededBits: number = 0;\r\n                    while ((1 << neededBits) < this.patternsPerChannel + 1) neededBits++;\r\n                    subStringLength = Math.ceil(this.getChannelCount() * this.barCount * neededBits / 6);\r\n                    const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + subStringLength);\r\n                    for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n                        for (let i: number = 0; i < this.barCount; i++) {\r\n                            this.channels[channelIndex].bars[i] = bits.read(neededBits);\r\n                        }\r\n                    }\r\n                }\r\n                charIndex += subStringLength;\r\n            } break;\r\n            case SongTagCode.patterns: {\r\n                let bitStringLength: number = 0;\r\n                let channelIndex: number;\r\n                let largerChords: boolean = !((beforeFour && fromJummBox) || fromBeepBox);\r\n                let recentPitchBitLength: number = (largerChords ? 4 : 3);\r\n                let recentPitchLength: number = (largerChords ? 16 : 8);\r\n                if (beforeThree && fromBeepBox) {\r\n                    channelIndex = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    // The old format used the next character to represent the number of patterns in the channel, which is usually eight, the default. \r\n                    charIndex++; //let patternCount: number = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n\r\n                    bitStringLength = base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                    bitStringLength = bitStringLength << 6;\r\n                    bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                } else {\r\n                    channelIndex = 0;\r\n                    let bitStringLengthLength: number = validateRange(1, 4, base64CharCodeToInt[compressed.charCodeAt(charIndex++)]);\r\n                    while (bitStringLengthLength > 0) {\r\n                        bitStringLength = bitStringLength << 6;\r\n                        bitStringLength += base64CharCodeToInt[compressed.charCodeAt(charIndex++)];\r\n                        bitStringLengthLength--;\r\n                    }\r\n                }\r\n\r\n                const bits: BitFieldReader = new BitFieldReader(compressed, charIndex, charIndex + bitStringLength);\r\n                charIndex += bitStringLength;\r\n\r\n                const bitsPerNoteSize: number = Song.getNeededBits(Config.noteSizeMax);\r\n                let songReverbChannel: number = -1;\r\n                let songReverbInstrument: number = -1;\r\n                let songReverbIndex: number = -1;\r\n\r\n                // @TODO: Include GoldBox here.\r\n                const shouldCorrectTempoMods: boolean = fromJummBox;\r\n                const jummboxTempoMin: number = 30;\r\n\r\n                while (true) {\r\n                    const channel: Channel = this.channels[channelIndex];\r\n                    const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n                    const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n\r\n                    const maxInstrumentsPerPattern: number = this.getMaxInstrumentsPerPattern(channelIndex);\r\n                    const neededInstrumentCountBits: number = Song.getNeededBits(maxInstrumentsPerPattern - Config.instrumentCountMin);\r\n\r\n                    const neededInstrumentIndexBits: number = Song.getNeededBits(channel.instruments.length - 1);\r\n\r\n                    // Some info about modulator settings immediately follows in mod channels.\r\n                    if (isModChannel) {\r\n                        let jumfive: boolean = (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)\r\n\r\n                        // 2 more indices for 'all' and 'active'\r\n                        const neededModInstrumentIndexBits: number = (jumfive) ? neededInstrumentIndexBits : Song.getNeededBits(this.getMaxInstrumentsPerChannel() + 2);\r\n\r\n                        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n\r\n                            let instrument: Instrument = channel.instruments[instrumentIndex];\r\n\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                // Still using legacy \"mod status\" format, but doing it manually as it's only used in the URL now.\r\n                                // 0 - For pitch/noise\r\n                                // 1 - (used to be For noise, not needed)\r\n                                // 2 - For song\r\n                                // 3 - None\r\n                                let status: number = bits.read(2);\r\n\r\n                                switch (status) {\r\n                                    case 0: // Pitch\r\n                                        instrument.modChannels[mod] = clamp(0, this.pitchChannelCount + this.noiseChannelCount + 1, bits.read(8));\r\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededModInstrumentIndexBits));\r\n                                        break;\r\n                                    case 1: // Noise\r\n                                        // Getting a status of 1 means this is legacy mod info. Need to add pitch channel count, as it used to just store noise channel index and not overall channel index\r\n                                        instrument.modChannels[mod] = this.pitchChannelCount + clamp(0, this.noiseChannelCount + 1, bits.read(8));\r\n                                        instrument.modInstruments[mod] = clamp(0, this.channels[instrument.modChannels[mod]].instruments.length + 2, bits.read(neededInstrumentIndexBits));\r\n                                        break;\r\n                                    case 2: // For song\r\n                                        instrument.modChannels[mod] = -1;\r\n                                        break;\r\n                                    case 3: // None\r\n                                        instrument.modChannels[mod] = -2;\r\n                                        break;\r\n                                }\r\n\r\n                                // Mod setting is only used if the status isn't \"none\".\r\n                                if (status != 3) {\r\n                                    instrument.modulators[mod] = bits.read(6);\r\n                                }\r\n\r\n                                if (!jumfive && (Config.modulators[instrument.modulators[mod]].name == \"eq filter\" || Config.modulators[instrument.modulators[mod]].name == \"note filter\")) {\r\n                                    instrument.modFilterTypes[mod] = bits.read(6);\r\n                                }\r\n\r\n                                if (jumfive && instrument.modChannels[mod] >= 0) {\r\n                                    let forNoteFilter: boolean = effectsIncludeNoteFilter(this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects);\r\n\r\n                                    // For legacy filter cut/peak, need to denote since scaling must be applied\r\n                                    if (instrument.modulators[mod] == 7) {\r\n                                        // Legacy filter cut index\r\n                                        // Check if there is no filter dot on prospective filter. If so, add a low pass at max possible freq.\r\n\r\n                                        if (forNoteFilter) {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt cut\"].index;\r\n                                        }\r\n                                        else {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt cut\"].index;\r\n                                        }\r\n\r\n                                        instrument.modFilterTypes[mod] = 1; // Dot 1 X\r\n\r\n                                    }\r\n                                    else if (instrument.modulators[mod] == 8) {\r\n                                        // Legacy filter peak index\r\n                                        if (forNoteFilter) {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"note filt peak\"].index;\r\n                                        }\r\n                                        else {\r\n                                            instrument.modulators[mod] = Config.modulators.dictionary[\"eq filt peak\"].index;\r\n                                        }\r\n\r\n                                        instrument.modFilterTypes[mod] = 2; // Dot 1 Y\r\n                                    }\r\n                                }\r\n                                else if (jumfive) {\r\n                                    // Check for song reverb mod, which must be handled differently now that it is a multiplier\r\n                                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"song reverb\"].index) {\r\n                                        songReverbChannel = channelIndex;\r\n                                        songReverbInstrument = instrumentIndex;\r\n                                        songReverbIndex = mod;\r\n                                    }\r\n                                }\r\n\r\n                                // Based on setting, enable some effects for the modulated instrument. This isn't always set, say if the instrument's pan was right in the center.\r\n                                // Only used on import of old songs, because sometimes an invalid effect can be set in a mod in the new version that is actually unused. In that case,\r\n                                // keeping the mod invalid is better since it preserves the state.\r\n                                if (jumfive && Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length) {\r\n                                    this.channels[instrument.modChannels[mod]].instruments[instrument.modInstruments[mod]].effects |= 1 << Config.modulators[instrument.modulators[mod]].associatedEffect;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // Scalar applied to detune mods since its granularity was upped. Could be repurposed later if any other granularity changes occur.\r\n                    const detuneScaleNotes: number[][] = [];\r\n                    for (let j: number = 0; j < channel.instruments.length; j++) {\r\n                        detuneScaleNotes[j] = [];\r\n                        for (let i: number = 0; i < Config.modCount; i++) {\r\n                            detuneScaleNotes[j][Config.modCount - 1 - i] = 1 + 3 * +(((beforeFive && fromJummBox) || (beforeFour&&fromGoldBox)) && isModChannel && (channel.instruments[j].modulators[i] == Config.modulators.dictionary[\"detune\"].index));\r\n                        }\r\n                    }\r\n                    const octaveOffset: number = (isNoiseChannel || isModChannel) ? 0 : channel.octave * 12;\r\n                    let lastPitch: number = ((isNoiseChannel || isModChannel) ? 4 : octaveOffset);\r\n                    const recentPitches: number[] = isModChannel ? [0, 1, 2, 3, 4, 5] : (isNoiseChannel ? [4, 6, 7, 2, 3, 8, 0, 10] : [0, 7, 12, 19, 24, -5, -12]);\r\n                    const recentShapes: any[] = [];\r\n                    for (let i: number = 0; i < recentPitches.length; i++) {\r\n                        recentPitches[i] += octaveOffset;\r\n                    }\r\n                    for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                        const newPattern: Pattern = channel.patterns[i];\r\n\r\n                        if ((beforeNine && fromBeepBox) || (beforeFive && fromJummBox) || (beforeFour && fromGoldBox)) {\r\n                            newPattern.instruments[0] = validateRange(0, channel.instruments.length - 1, bits.read(neededInstrumentIndexBits));\r\n                            newPattern.instruments.length = 1;\r\n                        } else {\r\n                            if (this.patternInstruments) {\r\n                                const instrumentCount: number = validateRange(Config.instrumentCountMin, maxInstrumentsPerPattern, bits.read(neededInstrumentCountBits) + Config.instrumentCountMin);\r\n                                for (let j: number = 0; j < instrumentCount; j++) {\r\n                                    newPattern.instruments[j] = validateRange(0, channel.instruments.length - 1 + +(isModChannel) * 2, bits.read(neededInstrumentIndexBits));\r\n                                }\r\n                                newPattern.instruments.length = instrumentCount;\r\n                            } else {\r\n                                newPattern.instruments[0] = 0;\r\n                                newPattern.instruments.length = Config.instrumentCountMin;\r\n                            }\r\n                        }\r\n\r\n                        if (!(fromBeepBox && beforeThree) && bits.read(1) == 0) {\r\n                            newPattern.notes.length = 0;\r\n                            continue;\r\n                        }\r\n\r\n                        let curPart: number = 0;\r\n                        const newNotes: Note[] = newPattern.notes;\r\n                        let noteCount: number = 0;\r\n                        // Due to arbitrary note positioning, mod channels don't end the count until curPart actually exceeds the max\r\n                        while (curPart < this.beatsPerBar * Config.partsPerBeat + (+isModChannel)) {\r\n\r\n                            const useOldShape: boolean = bits.read(1) == 1;\r\n                            let newNote: boolean = false;\r\n                            let shapeIndex: number = 0;\r\n                            if (useOldShape) {\r\n                                shapeIndex = validateRange(0, recentShapes.length - 1, bits.readLongTail(0, 0));\r\n                            } else {\r\n                                newNote = bits.read(1) == 1;\r\n                            }\r\n\r\n                            if (!useOldShape && !newNote) {\r\n                                // For mod channels, check if you need to move backward too (notes can appear in any order and offset from each other).\r\n                                if (isModChannel) {\r\n                                    const isBackwards: boolean = bits.read(1) == 1;\r\n                                    const restLength: number = bits.readPartDuration();\r\n                                    if (isBackwards) {\r\n                                        curPart -= restLength;\r\n                                    }\r\n                                    else {\r\n                                        curPart += restLength;\r\n                                    }\r\n                                } else {\r\n                                    const restLength: number = (beforeSeven && fromBeepBox)\r\n                                        ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                        : bits.readPartDuration();\r\n                                    curPart += restLength;\r\n\r\n                                }\r\n                            } else {\r\n                                let shape: any;\r\n                                if (useOldShape) {\r\n                                    shape = recentShapes[shapeIndex];\r\n                                    recentShapes.splice(shapeIndex, 1);\r\n                                } else {\r\n                                    shape = {};\r\n\r\n                                    if (!largerChords) {\r\n                                        // Old format: X 1's followed by a 0 => X+1 pitches, up to 4\r\n                                        shape.pitchCount = 1;\r\n                                        while (shape.pitchCount < 4 && bits.read(1) == 1) shape.pitchCount++;\r\n                                    }\r\n                                    else {\r\n                                        // New format is:\r\n                                        //      0: 1 pitch\r\n                                        // 1[XXX]: 3 bits of binary signifying 2+ pitches\r\n                                        if (bits.read(1) == 1) {\r\n                                            shape.pitchCount = bits.read(3) + 2;\r\n                                        }\r\n                                        else {\r\n                                            shape.pitchCount = 1;\r\n                                        }\r\n                                    }\r\n\r\n                                    shape.pinCount = bits.readPinCount();\r\n                                    if (fromBeepBox) {\r\n                                        shape.initialSize = bits.read(2) * 2;\r\n                                    } else if (!isModChannel) {\r\n                                        shape.initialSize = bits.read(bitsPerNoteSize);\r\n                                    } else {\r\n                                        shape.initialSize = bits.read(9);\r\n                                    }\r\n\r\n                                    shape.pins = [];\r\n                                    shape.length = 0;\r\n                                    shape.bendCount = 0;\r\n                                    for (let j: number = 0; j < shape.pinCount; j++) {\r\n                                        let pinObj: any = {};\r\n                                        pinObj.pitchBend = bits.read(1) == 1;\r\n                                        if (pinObj.pitchBend) shape.bendCount++;\r\n                                        shape.length += (beforeSeven && fromBeepBox)\r\n                                            ? bits.readLegacyPartDuration() * Config.partsPerBeat / Config.rhythms[this.rhythm].stepsPerBeat\r\n                                            : bits.readPartDuration();\r\n                                        pinObj.time = shape.length;\r\n                                        if (fromBeepBox) {\r\n                                            pinObj.size = bits.read(2) * 2;\r\n                                        } else if (!isModChannel) {\r\n                                            pinObj.size = bits.read(bitsPerNoteSize);\r\n                                        }\r\n                                        else {\r\n                                            pinObj.size = bits.read(9);\r\n                                        }\r\n                                        shape.pins.push(pinObj);\r\n                                    }\r\n                                }\r\n                                recentShapes.unshift(shape);\r\n                                if (recentShapes.length > 10) recentShapes.pop(); // TODO: Use Deque?\r\n\r\n                                let note: Note;\r\n                                if (newNotes.length <= noteCount) {\r\n                                    note = new Note(0, curPart, curPart + shape.length, shape.initialSize);\r\n                                    newNotes[noteCount++] = note;\r\n                                } else {\r\n                                    note = newNotes[noteCount++];\r\n                                    note.start = curPart;\r\n                                    note.end = curPart + shape.length;\r\n                                    note.pins[0].size = shape.initialSize;\r\n                                }\r\n\r\n                                let pitch: number;\r\n                                let pitchCount: number = 0;\r\n                                const pitchBends: number[] = []; // TODO: allocate this array only once! keep separate length and iterator index. Use Deque?\r\n                                for (let j: number = 0; j < shape.pitchCount + shape.bendCount; j++) {\r\n                                    const useOldPitch: boolean = bits.read(1) == 1;\r\n                                    if (!useOldPitch) {\r\n                                        const interval: number = bits.readPitchInterval();\r\n                                        pitch = lastPitch;\r\n                                        let intervalIter: number = interval;\r\n                                        while (intervalIter > 0) {\r\n                                            pitch++;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch++;\r\n                                            intervalIter--;\r\n                                        }\r\n                                        while (intervalIter < 0) {\r\n                                            pitch--;\r\n                                            while (recentPitches.indexOf(pitch) != -1) pitch--;\r\n                                            intervalIter++;\r\n                                        }\r\n                                    } else {\r\n                                        const pitchIndex: number = validateRange(0, recentPitches.length - 1, bits.read(recentPitchBitLength));\r\n                                        pitch = recentPitches[pitchIndex];\r\n                                        recentPitches.splice(pitchIndex, 1);\r\n                                    }\r\n\r\n                                    recentPitches.unshift(pitch);\r\n                                    if (recentPitches.length > recentPitchLength) recentPitches.pop();\r\n\r\n                                    if (j < shape.pitchCount) {\r\n                                        note.pitches[pitchCount++] = pitch;\r\n                                    } else {\r\n                                        pitchBends.push(pitch);\r\n                                    }\r\n\r\n                                    if (j == shape.pitchCount - 1) {\r\n                                        lastPitch = note.pitches[0];\r\n                                    } else {\r\n                                        lastPitch = pitch;\r\n                                    }\r\n                                }\r\n                                note.pitches.length = pitchCount;\r\n                                pitchBends.unshift(note.pitches[0]); // TODO: Use Deque?\r\n                                const noteIsForTempoMod: boolean = isModChannel && channel.instruments[newPattern.instruments[0]].modulators[Config.modCount - 1 - note.pitches[0]] === Config.modulators.dictionary[\"tempo\"].index;\r\n                                let tempoOffset: number = 0;\r\n                                if (shouldCorrectTempoMods && noteIsForTempoMod) {\r\n                                    note.pins[0].size += tempoOffset;\r\n                                    tempoOffset = jummboxTempoMin - Config.tempoMin; // convertRealFactor will add back Config.tempoMin as necessary\r\n                                }\r\n                                if (isModChannel) {\r\n                                    note.pins[0].size *= detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]];\r\n                                }\r\n                                let pinCount: number = 1;\r\n                                for (const pinObj of shape.pins) {\r\n                                    if (pinObj.pitchBend) pitchBends.shift();\r\n\r\n                                    const interval: number = pitchBends[0] - note.pitches[0];\r\n                                    if (note.pins.length <= pinCount) {\r\n                                        if (isModChannel) {\r\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]] + tempoOffset);\r\n                                        } else {\r\n                                            note.pins[pinCount++] = makeNotePin(interval, pinObj.time, pinObj.size);\r\n                                        }\r\n                                    } else {\r\n                                        const pin: NotePin = note.pins[pinCount++];\r\n                                        pin.interval = interval;\r\n                                        pin.time = pinObj.time;\r\n                                        if (isModChannel) {\r\n                                            pin.size = pinObj.size * detuneScaleNotes[newPattern.instruments[0]][note.pitches[0]] + tempoOffset;\r\n                                        } else {\r\n                                            pin.size = pinObj.size;\r\n                                        }\r\n                                    }\r\n                                }\r\n                                note.pins.length = pinCount;\r\n\r\n                                if (note.start == 0) {\r\n                                    if (!((beforeNine && fromBeepBox) || (beforeFive && fromJummBox)||(beforeFour&&fromGoldBox))) {\r\n                                        note.continuesLastPattern = (bits.read(1) == 1);\r\n                                    } else {\r\n                                        if ((beforeFour && !fromUltraBox && !fromAbyssBox) || fromBeepBox) {\r\n                                            note.continuesLastPattern = false;\r\n                                        } else {\r\n                                            note.continuesLastPattern = channel.instruments[newPattern.instruments[0]].legacyTieOver;\r\n                                        }\r\n                                    }\r\n                                }\r\n\r\n                                curPart = validateRange(0, this.beatsPerBar * Config.partsPerBeat, note.end);\r\n                            }\r\n                        }\r\n                        newNotes.length = noteCount;\r\n                    }\r\n\r\n                    if (beforeThree && fromBeepBox) {\r\n                        break;\r\n                    } else {\r\n                        channelIndex++;\r\n                        if (channelIndex >= this.getChannelCount()) break;\r\n                    }\r\n                } // while (true)\r\n\r\n                // Correction for old JB songs that had song reverb mods. Change all instruments using reverb to max reverb\r\n                if (((fromJummBox && beforeFive)||(beforeFour && fromGoldBox)) && songReverbIndex >= 0) {\r\n                    for (let channelIndex: number = 0; channelIndex < this.channels.length; channelIndex++) {\r\n                        for (let instrumentIndex: number = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                            const instrument: Instrument = this.channels[channelIndex].instruments[instrumentIndex];\r\n                            if (effectsIncludeReverb(instrument.effects)) {\r\n                                instrument.reverb = Config.reverbRange - 1;\r\n                            }\r\n                            // Set song reverb via mod to the old setting at song start.\r\n                            if (songReverbChannel == channelIndex && songReverbInstrument == instrumentIndex) {\r\n                                const patternIndex: number = this.channels[channelIndex].bars[0];\r\n                                if (patternIndex > 0) {\r\n                                    // Doesn't work if 1st pattern isn't using the right ins for song reverb...\r\n                                    // Add note to start of pattern\r\n                                    const pattern: Pattern = this.channels[channelIndex].patterns[patternIndex - 1];\r\n                                    let lowestPart: number = 6;\r\n                                    for (const note of pattern.notes) {\r\n                                        if (note.pitches[0] == Config.modCount - 1 - songReverbIndex) {\r\n                                            lowestPart = Math.min(lowestPart, note.start);\r\n                                        }\r\n                                    }\r\n\r\n                                    if (lowestPart > 0) {\r\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, lowestPart, legacyGlobalReverb));\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    // Add pattern\r\n                                    if (this.channels[channelIndex].patterns.length < Config.barCountMax) {\r\n                                        const pattern: Pattern = new Pattern();\r\n                                        this.channels[channelIndex].patterns.push(pattern);\r\n                                        this.channels[channelIndex].bars[0] = this.channels[channelIndex].patterns.length;\r\n                                        if (this.channels[channelIndex].patterns.length > this.patternsPerChannel) {\r\n                                            for (let chn: number = 0; chn < this.channels.length; chn++) {\r\n                                                if (this.channels[chn].patterns.length <= this.patternsPerChannel) {\r\n                                                    this.channels[chn].patterns.push(new Pattern());\r\n                                                }\r\n                                            }\r\n                                            this.patternsPerChannel++;\r\n                                        }\r\n                                        pattern.instruments.length = 1;\r\n                                        pattern.instruments[0] = songReverbInstrument;\r\n                                        pattern.notes.length = 0;\r\n                                        pattern.notes.push(new Note(Config.modCount - 1 - songReverbIndex, 0, 6, legacyGlobalReverb));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } break;\r\n            default: {\r\n                throw new Error(\"Unrecognized song tag code \" + String.fromCharCode(command) + \" at index \" + (charIndex - 1) + \" \" + compressed.substring(/*charIndex - 2*/0, charIndex));\r\n            } break;\r\n        }\r\n\r\n        if (Config.willReloadForCustomSamples) {\r\n            window.location.hash = this.toBase64String();\r\n            setTimeout(() => { location.reload(); }, 50);\r\n        }\r\n    }\r\n\r\n    private static _isProperUrl(string: string): boolean {\r\n        try { \r\n            if (OFFLINE) {\r\n                return Boolean(string); \r\n            } else {\r\n                return Boolean(new URL(string)); \r\n            }\r\n        }\r\n        catch(x){ \r\n            return false; \r\n        }\r\n    }\r\n\r\n    // @TODO: Share more of this code with AddSamplesPrompt.\r\n    private static _parseAndConfigureCustomSample(url: string, customSampleUrls: string[], customSamplePresets: Preset[], sampleLoadingState: SampleLoadingState, parseOldSyntax: boolean): boolean {\r\n        const defaultIndex: number = 0;\r\n        const defaultIntegratedSamples: Float32Array = Config.chipWaves[defaultIndex].samples;\r\n        const defaultSamples: Float32Array = Config.rawRawChipWaves[defaultIndex].samples;\r\n\r\n        const customSampleUrlIndex: number = customSampleUrls.length;\r\n        customSampleUrls.push(url);\r\n        // This depends on `Config.chipWaves` being the same\r\n        // length as `Config.rawRawChipWaves`.\r\n        const chipWaveIndex: number = Config.chipWaves.length;\r\n\r\n        let urlSliced: string = url;\r\n\r\n        let customSampleRate: number = 44100;\r\n        let isCustomPercussive: boolean = false;\r\n        let customRootKey: number = 60;\r\n        let presetIsUsingAdvancedLoopControls: boolean = false;\r\n        let presetChipWaveLoopStart: number | null = null;\r\n        let presetChipWaveLoopEnd: number | null = null;\r\n        let presetChipWaveStartOffset: number | null = null;\r\n        let presetChipWaveLoopMode: number | null = null;\r\n        let presetChipWavePlayBackwards: boolean = false;\r\n\r\n        let parsedSampleOptions: boolean = false;\r\n        let optionsStartIndex: number = url.indexOf(\"!\");\r\n        let optionsEndIndex: number = -1;\r\n        if (optionsStartIndex === 0) {\r\n            optionsEndIndex = url.indexOf(\"!\", optionsStartIndex + 1);\r\n            if (optionsEndIndex !== -1) {\r\n                const rawOptions: string[] = url.slice(optionsStartIndex + 1, optionsEndIndex).split(\",\");\r\n                for (const rawOption of rawOptions) {\r\n                    const optionCode: string = rawOption.charAt(0);\r\n                    const optionData: string = rawOption.slice(1, rawOption.length);\r\n                    if (optionCode === \"s\") {\r\n                        customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(optionData, 44100));\r\n                    } else if (optionCode === \"r\") {\r\n                        customRootKey = parseFloatWithDefault(optionData, 60);\r\n                    } else if (optionCode === \"p\") {\r\n                        isCustomPercussive = true;\r\n                    } else if (optionCode === \"a\") {\r\n                        presetChipWaveLoopStart = parseIntWithDefault(optionData, null);\r\n                        if (presetChipWaveLoopStart != null) {\r\n                            presetIsUsingAdvancedLoopControls = true;\r\n                        }\r\n                    } else if (optionCode === \"b\") {\r\n                        presetChipWaveLoopEnd = parseIntWithDefault(optionData, null);\r\n                        if (presetChipWaveLoopEnd != null) {\r\n                            presetIsUsingAdvancedLoopControls = true;\r\n                        }\r\n                    } else if (optionCode === \"c\") {\r\n                        presetChipWaveStartOffset = parseIntWithDefault(optionData, null);\r\n                        if (presetChipWaveStartOffset != null) {\r\n                            presetIsUsingAdvancedLoopControls = true;\r\n                        }\r\n                    } else if (optionCode === \"d\") {\r\n                        presetChipWaveLoopMode = parseIntWithDefault(optionData, null);\r\n                        if (presetChipWaveLoopMode != null) {\r\n                            // @TODO: Error-prone. This should be automatically\r\n                            // derived from the list of available loop modes.\r\n                            presetChipWaveLoopMode = clamp(0, 3 + 1, presetChipWaveLoopMode);\r\n                            presetIsUsingAdvancedLoopControls = true;\r\n                        }\r\n                    } else if (optionCode === \"e\") {\r\n                        presetChipWavePlayBackwards = true;\r\n                        presetIsUsingAdvancedLoopControls = true;\r\n                    }\r\n                }\r\n                urlSliced = url.slice(optionsEndIndex + 1, url.length);\r\n                parsedSampleOptions = true;\r\n            }\r\n        }\r\n\r\n        let parsedUrl: URL | string | null = null;\r\n        if (Song._isProperUrl(urlSliced)) {\r\n            if (OFFLINE) {\r\n                parsedUrl = urlSliced;\r\n            } else {\r\n                parsedUrl = new URL(urlSliced);\r\n            }\r\n        }\r\n        else {\r\n            alert(url + \" is not a valid url\");\r\n            return false;\r\n        }\r\n\r\n        if (parseOldSyntax) {\r\n            if (!parsedSampleOptions && parsedUrl != null) {\r\n                if (url.indexOf(\"@\") != -1) {\r\n                    //urlSliced = url.slice(url.indexOf(\"@\"), url.indexOf(\"@\"));\r\n                    urlSliced = url.replaceAll(\"@\", \"\")\r\n                    if (OFFLINE) {\r\n                        parsedUrl = urlSliced;\r\n                    } else {\r\n                        parsedUrl = new URL(urlSliced);\r\n                    }\r\n                    isCustomPercussive = true;\t\r\n                }\t\r\n\r\n                function sliceForSampleRate() {\r\n                    urlSliced = url.slice(0, url.indexOf(\",\"));\r\n                    if (OFFLINE) {\r\n                        parsedUrl = urlSliced;\r\n                    } else {\r\n                        parsedUrl = new URL(urlSliced);\r\n                    }\r\n                    customSampleRate = clamp(8000, 96000 + 1, parseFloatWithDefault(url.slice(url.indexOf(\",\") + 1), 44100));\r\n                    //should this be parseFloat or parseInt?\r\n                    //ig floats let you do decimals and such, but idk where that would be useful\r\n                }\r\n\r\n                function sliceForRootKey() {\r\n                    urlSliced = url.slice(0, url.indexOf(\"!\"));\r\n                    if (OFFLINE) {\r\n                        parsedUrl = urlSliced;\r\n                    } else {\r\n                        parsedUrl = new URL(urlSliced);\r\n                    }\r\n                    customRootKey = parseFloatWithDefault(url.slice(url.indexOf(\"!\") + 1), 60);\r\n                }\r\n\r\n\r\n                if (url.indexOf(\",\") != -1 && url.indexOf(\"!\") != -1) {\r\n                    if (url.indexOf(\",\") < url.indexOf(\"!\")) {\r\n                        sliceForRootKey();\r\n                        sliceForSampleRate();\r\n                    }\r\n                    else {\r\n                        sliceForSampleRate();\r\n                        sliceForRootKey();\r\n                    }\t\r\n                }\r\n                else {\r\n                    if (url.indexOf(\",\") != -1) {\r\n                        sliceForSampleRate();\r\n                    }\t\r\n                    if (url.indexOf(\"!\") != -1) {\r\n                        sliceForRootKey();\r\n                    }\t\r\n                }\r\n            }\r\n        }\r\n\r\n        if (parsedUrl != null) {\r\n            // Store in the new format.\r\n            let urlWithNamedOptions = urlSliced;\r\n            const namedOptions: string[] = [];\r\n            if (customSampleRate !== 44100) namedOptions.push(\"s\" + customSampleRate);\r\n            if (customRootKey !== 60) namedOptions.push(\"r\" + customRootKey);\r\n            if (isCustomPercussive) namedOptions.push(\"p\");\r\n            if (presetIsUsingAdvancedLoopControls) {\r\n                if (presetChipWaveLoopStart != null) namedOptions.push(\"a\" + presetChipWaveLoopStart);\r\n                if (presetChipWaveLoopEnd != null) namedOptions.push(\"b\" + presetChipWaveLoopEnd);\r\n                if (presetChipWaveStartOffset != null) namedOptions.push(\"c\" + presetChipWaveStartOffset);\r\n                if (presetChipWaveLoopMode != null) namedOptions.push(\"d\" + presetChipWaveLoopMode);\r\n                if (presetChipWavePlayBackwards) namedOptions.push(\"e\");\r\n            }\r\n            if (namedOptions.length > 0) {\r\n                urlWithNamedOptions = \"!\" + namedOptions.join(\",\") + \"!\" + urlSliced;\r\n            }\r\n            customSampleUrls[customSampleUrlIndex] = urlWithNamedOptions;\r\n\r\n            // @TODO: Could also remove known extensions, but it\r\n            // would probably be much better to be able to specify\r\n            // a custom name.\r\n            // @TODO: If for whatever inexplicable reason someone\r\n            // uses an url like `https://example.com`, this will\r\n            // result in an empty name here.\r\n            let name: string;\r\n            if (OFFLINE) {\r\n                //@ts-ignore\r\n                name = decodeURIComponent(parsedUrl.replace(/^([^\\/]*\\/)+/, \"\"));\r\n            } else {\r\n                //@ts-ignore\r\n                name = decodeURIComponent(parsedUrl.pathname.replace(/^([^\\/]*\\/)+/, \"\"));\r\n            }\r\n            // @TODO: What to do about samples with the same name?\r\n            // The problem with using the url is that the name is\r\n            // user-facing and long names break assumptions of the\r\n            // UI.\r\n            const expression: number = 1.0;\r\n            Config.chipWaves[chipWaveIndex] = {\r\n                name: name,\r\n                expression: expression,\r\n                isCustomSampled: true,\r\n                isPercussion: isCustomPercussive,\r\n                rootKey: customRootKey,\r\n                sampleRate: customSampleRate,\r\n                samples: defaultIntegratedSamples,\r\n                index: chipWaveIndex,\r\n            };\r\n            Config.rawChipWaves[chipWaveIndex] = {\r\n                name: name,\r\n                expression: expression,\r\n                isCustomSampled: true,\r\n                isPercussion: isCustomPercussive,\r\n                rootKey: customRootKey,\r\n                sampleRate: customSampleRate,\r\n                samples: defaultSamples,\r\n                index: chipWaveIndex,\r\n            };\r\n            Config.rawRawChipWaves[chipWaveIndex] = {\r\n                name: name,\r\n                expression: expression,\r\n                isCustomSampled: true,\r\n                isPercussion: isCustomPercussive,\r\n                rootKey: customRootKey,\r\n                sampleRate: customSampleRate,\r\n                samples: defaultSamples,\r\n                index: chipWaveIndex,\r\n            };\r\n            const customSamplePresetSettings: Dictionary<any> = {\r\n                \"type\": \"chip\",\r\n                \"eqFilter\": [],\r\n                \"effects\": [],\r\n                \"transition\": \"normal\",\r\n                \"fadeInSeconds\": 0,\r\n                \"fadeOutTicks\": -3,\r\n                \"chord\": \"harmony\",\r\n                \"wave\": name,\r\n                \"unison\": \"none\",\r\n                \"envelopes\": [],\r\n            };\r\n            if (presetIsUsingAdvancedLoopControls) {\r\n                customSamplePresetSettings[\"isUsingAdvancedLoopControls\"] = true;\r\n                customSamplePresetSettings[\"chipWaveLoopStart\"] = presetChipWaveLoopStart != null ? presetChipWaveLoopStart : 0;\r\n                customSamplePresetSettings[\"chipWaveLoopEnd\"] = presetChipWaveLoopEnd != null ? presetChipWaveLoopEnd : 2;\r\n                customSamplePresetSettings[\"chipWaveLoopMode\"] = presetChipWaveLoopMode != null ? presetChipWaveLoopMode : 0;\r\n                customSamplePresetSettings[\"chipWavePlayBackwards\"] = presetChipWavePlayBackwards;\r\n                customSamplePresetSettings[\"chipWaveStartOffset\"] = presetChipWaveStartOffset != null ? presetChipWaveStartOffset : 0;\r\n            }\r\n            const customSamplePreset: Preset = {\r\n                index: 0, // This should be overwritten by toNameMap, in our caller.\r\n                name: name,\r\n                midiProgram: 80,\r\n                settings: customSamplePresetSettings,\r\n            };\r\n            customSamplePresets.push(customSamplePreset);\r\n            if (!Config.willReloadForCustomSamples) {\r\n                const rawLoopOptions: any = {\r\n                    \"isUsingAdvancedLoopControls\": presetIsUsingAdvancedLoopControls,\r\n                    \"chipWaveLoopStart\": presetChipWaveLoopStart,\r\n                    \"chipWaveLoopEnd\": presetChipWaveLoopEnd,\r\n                    \"chipWaveLoopMode\": presetChipWaveLoopMode,\r\n                    \"chipWavePlayBackwards\": presetChipWavePlayBackwards,\r\n                    \"chipWaveStartOffset\": presetChipWaveStartOffset,\r\n                };\r\n                startLoadingSample(urlSliced, chipWaveIndex, customSamplePresetSettings, rawLoopOptions, customSampleRate);\r\n            }\r\n            sampleLoadingState.statusTable[chipWaveIndex] = SampleLoadingStatus.loading;\r\n            sampleLoadingState.urlTable[chipWaveIndex] = urlSliced;\r\n            sampleLoadingState.totalSamples++;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private static _restoreChipWaveListToDefault(): void {\r\n        Config.chipWaves = toNameMap(Config.chipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\r\n        Config.rawChipWaves = toNameMap(Config.rawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\r\n        Config.rawRawChipWaves = toNameMap(Config.rawRawChipWaves.slice(0, Config.firstIndexForSamplesInChipWaveList));\r\n    }\r\n\r\n    private static _clearSamples(): void {\r\n        EditorConfig.customSamples = null;\r\n\r\n        Song._restoreChipWaveListToDefault();\r\n\r\n        sampleLoadingState.statusTable = {};\r\n        sampleLoadingState.urlTable = {};\r\n        sampleLoadingState.totalSamples = 0;\r\n        sampleLoadingState.samplesLoaded = 0;\r\n        sampleLoadingState.samplesFailed = 0;\r\n        sampleLoadEvents.dispatchEvent(new SampleLoadedEvent(\r\n            sampleLoadingState.totalSamples,\r\n            sampleLoadingState.samplesLoaded,\r\n            sampleLoadingState.samplesFailed\r\n        ));\r\n    }\r\n\r\n    public toJsonObject(enableIntro: boolean = true, loopCount: number = 1, enableOutro: boolean = true): Object {\r\n        const channelArray: Object[] = [];\r\n        for (let channelIndex: number = 0; channelIndex < this.getChannelCount(); channelIndex++) {\r\n            const channel: Channel = this.channels[channelIndex];\r\n            const instrumentArray: Object[] = [];\r\n            const isNoiseChannel: boolean = this.getChannelIsNoise(channelIndex);\r\n            const isModChannel: boolean = this.getChannelIsMod(channelIndex);\r\n            for (const instrument of channel.instruments) {\r\n                instrumentArray.push(instrument.toJsonObject());\r\n            }\r\n\r\n            const patternArray: Object[] = [];\r\n            for (const pattern of channel.patterns) {\r\n                patternArray.push(pattern.toJsonObject(this, channel, isModChannel));\r\n            }\r\n\r\n            const sequenceArray: number[] = [];\r\n            if (enableIntro) for (let i: number = 0; i < this.loopStart; i++) {\r\n                sequenceArray.push(channel.bars[i]);\r\n            }\r\n            for (let l: number = 0; l < loopCount; l++) for (let i: number = this.loopStart; i < this.loopStart + this.loopLength; i++) {\r\n                sequenceArray.push(channel.bars[i]);\r\n            }\r\n            if (enableOutro) for (let i: number = this.loopStart + this.loopLength; i < this.barCount; i++) {\r\n                sequenceArray.push(channel.bars[i]);\r\n            }\r\n\r\n            const channelObject: any = {\r\n                \"type\": isModChannel ? \"mod\" : (isNoiseChannel ? \"drum\" : \"pitch\"),\r\n                \"name\": channel.name,\r\n                \"instruments\": instrumentArray,\r\n                \"patterns\": patternArray,\r\n                \"sequence\": sequenceArray,\r\n            };\r\n            if (!isNoiseChannel) {\r\n                // For compatibility with old versions the octave is offset by one.\r\n                channelObject[\"octaveScrollBar\"] = channel.octave - 1;\r\n            }\r\n            channelArray.push(channelObject);\r\n        }\r\n\r\n        const result: any = {\r\n            \"name\": this.title,\r\n            \"theme\": this.setSongTheme,\r\n            \"format\": Song._format,\r\n            \"version\": Song._latestAbyssBoxVersion,\r\n            \"author\": this.author,\r\n            \"description\": this.description,\r\n            \"showSongDetails\": this.showSongDetails,\r\n            \"scale\": Config.scales[this.scale].name,\r\n            \"customScale\": this.scaleCustom,\r\n            \"key\": Config.keys[this.key].name,\r\n            \"keyOctave\": this.octave,\r\n            \"loopType\": this.loopType,\r\n            \"introBars\": this.loopStart,\r\n            \"loopBars\": this.loopLength,\r\n            \"beatsPerBar\": this.beatsPerBar,\r\n            \"ticksPerBeat\": Config.rhythms[this.rhythm].stepsPerBeat,\r\n            \"beatsPerMinute\": this.tempo,\r\n            \"reverb\": this.reverb,\r\n            \"masterGain\": this.masterGain,\r\n            \"compressionThreshold\": this.compressionThreshold,\r\n            \"limitThreshold\": this.limitThreshold,\r\n            \"limitDecay\": this.limitDecay,\r\n            \"limitRise\": this.limitRise,\r\n            \"limitRatio\": this.limitRatio,\r\n            \"compressionRatio\": this.compressionRatio,\r\n            //\"outroBars\": this.barCount - this.loopStart - this.loopLength; // derive this from bar arrays?\r\n            //\"patternCount\": this.patternsPerChannel, // derive this from pattern arrays?\r\n            \"layeredInstruments\": this.layeredInstruments,\r\n            \"patternInstruments\": this.patternInstruments,\r\n            \"channels\": channelArray,\r\n        };\r\n\r\n        if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\r\n            result[\"customSamples\"] = EditorConfig.customSamples;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    public fromJsonObject(jsonObject: any, jsonFormat: string = \"auto\"): void {\r\n        this.initToDefault(true);\r\n        if (!jsonObject) return;\r\n\r\n        //const version: number = jsonObject[\"version\"] | 0;\r\n        //if (version > Song._latestVersion) return; // Go ahead and try to parse something from the future I guess? JSON is pretty easy-going!\r\n        // Code for auto-detect mode; if statements that are lower down have 'higher priority'\r\n        if (jsonFormat == \"auto\") {\r\n            if (jsonObject[\"format\"] == \"BeepBox\") {\r\n                // Assume that if there is a \"riff\" song setting then it must be modbox\r\n                if (jsonObject[\"riff\"] != undefined) {\r\n                    jsonFormat = \"modbox\";\r\n                }\r\n\r\n                // Assume that if there are limiter song settings then it must be jummbox\r\n                // Despite being added in JB 2.1, json export for the limiter settings wasn't added until 2.3\r\n                if (jsonObject[\"masterGain\"] != undefined) {\r\n                    jsonFormat = \"jummbox\";\r\n                }\r\n            }\r\n        }\r\n\r\n        const format: string = (jsonFormat == \"auto\" ? jsonObject[\"format\"] : jsonFormat).toLowerCase();\r\n        if (jsonObject[\"name\"] != undefined) {\r\n            this.title = jsonObject[\"name\"];\r\n        }\r\n\r\n        if (jsonObject[\"author\"] != undefined) {\r\n            this.author = jsonObject[\"author\"];\r\n        }\r\n\r\n        if (jsonObject[\"description\"] != undefined) {\r\n            this.description = jsonObject[\"description\"];\r\n        }\r\n\r\n        if (jsonObject[\"showSongDetails\"] != undefined) {\r\n            this.showSongDetails = jsonObject[\"showSongDetails\"];\r\n        }\r\n\r\n        if (jsonObject[\"theme\"] != undefined) {\r\n            this.setSongTheme = jsonObject[\"theme\"];\r\n        }\r\n\r\n        if (jsonObject[\"customSamples\"] != undefined) {\r\n            const customSamples: string[] = jsonObject[\"customSamples\"];\r\n            if (EditorConfig.customSamples == null || EditorConfig.customSamples.join(\", \") != customSamples.join(\", \")) {\r\n                // Have to duplicate the work done in Song.fromBase64String\r\n                // early here, because Instrument.fromJsonObject depends on the\r\n                // chip wave list having the correct items already in memory.\r\n\r\n                Config.willReloadForCustomSamples = true;\r\n\r\n                Song._restoreChipWaveListToDefault();\r\n\r\n                let willLoadLegacySamples: boolean = false;\r\n                let willLoadNintariboxSamples: boolean = false;\r\n                let willLoadMarioPaintboxSamples: boolean = false;\r\n                const customSampleUrls: string[] = [];\r\n                const customSamplePresets: Preset[] = [];\r\n                for (const url of customSamples) {\r\n                    if (url.toLowerCase() === \"legacysamples\") {\r\n                        if (!willLoadLegacySamples) {\r\n                            willLoadLegacySamples = true;\r\n                            customSampleUrls.push(url);\r\n                            loadBuiltInSamples(0);\r\n                        }\r\n                    } \r\n                    else if (url.toLowerCase() === \"nintariboxsamples\") {\r\n                        if (!willLoadNintariboxSamples) {\r\n                            willLoadNintariboxSamples = true;\r\n                            customSampleUrls.push(url);\r\n                            loadBuiltInSamples(1);\r\n                        }\r\n                    }\r\n                    else if (url.toLowerCase() === \"mariopaintboxsamples\") {\r\n                        if (!willLoadMarioPaintboxSamples) {\r\n                            willLoadMarioPaintboxSamples = true;\r\n                            customSampleUrls.push(url);\r\n                            loadBuiltInSamples(2);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // When EditorConfig.customSamples is saved in the json\r\n                        // export, it should be using the new syntax, unless\r\n                        // the user has manually modified the URL, so we don't\r\n                        // really need to parse the old syntax here.\r\n                        const parseOldSyntax: boolean = false;\r\n                        Song._parseAndConfigureCustomSample(url, customSampleUrls, customSamplePresets, sampleLoadingState, parseOldSyntax);\r\n                    }\r\n                }\r\n                if (customSampleUrls.length > 0) {\r\n                    EditorConfig.customSamples = customSampleUrls;\r\n                }\r\n                if (customSamplePresets.length > 0) {\r\n                    const customSamplePresetsMap: DictionaryArray<Preset> = toNameMap(customSamplePresets);\r\n                    EditorConfig.presetCategories[EditorConfig.presetCategories.length] = {\r\n                        name: \"Custom Sample Presets\",\r\n                        presets: customSamplePresetsMap,\r\n                        index: EditorConfig.presetCategories.length,\r\n                    };\r\n                }\r\n            }\r\n        } else {\r\n            // No custom samples, so the only possibility at this point is that\r\n            // we need to load the legacy samples. Let's check whether that's\r\n            // necessary.\r\n            let shouldLoadLegacySamples: boolean = false;\r\n            if (jsonObject[\"channels\"] != undefined) {\r\n                for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n                    const channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n                    if (channelObject[\"type\"] !== \"pitch\") {\r\n                        // Legacy samples can only exist in pitch channels.\r\n                        continue;\r\n                    }\r\n                    if (Array.isArray(channelObject[\"instruments\"])) {\r\n                        const instrumentObjects: any[] = channelObject[\"instruments\"];\r\n                        for (let i: number = 0; i < instrumentObjects.length; i++) {\r\n                            const instrumentObject: any = instrumentObjects[i];\r\n                            if (instrumentObject[\"type\"] !== \"chip\") {\r\n                                // Legacy samples can only exist in chip wave\r\n                                // instruments.\r\n                                continue;\r\n                            }\r\n                            if (instrumentObject[\"wave\"] == null) {\r\n                                // This should exist if things got saved\r\n                                // correctly, but if they didn't, skip this.\r\n                                continue;\r\n                            }\r\n                            const waveName: string = instrumentObject[\"wave\"];\r\n                            // @TODO: Avoid this duplication.\r\n                            const names: string[] = [\r\n                                \"paandorasbox kick\",\r\n                                \"paandorasbox snare\",\r\n                                \"paandorasbox piano1\",\r\n                                \"paandorasbox WOW\",\r\n                                \"paandorasbox overdrive\",\r\n                                \"paandorasbox trumpet\",\r\n                                \"paandorasbox saxophone\",\r\n                                \"paandorasbox orchestrahit\",\r\n                                \"paandorasbox detatched violin\",\r\n                                \"paandorasbox synth\",\r\n                                \"paandorasbox sonic3snare\",\r\n                                \"paandorasbox come on\",\r\n                                \"paandorasbox choir\",\r\n                                \"paandorasbox overdriveguitar\",\r\n                                \"paandorasbox flute\",\r\n                                \"paandorasbox legato violin\",\r\n                                \"paandorasbox tremolo violin\",\r\n                                \"paandorasbox amen break\",\r\n                                \"paandorasbox pizzicato violin\",\r\n                                \"paandorasbox tim allen grunt\",\r\n                                \"paandorasbox tuba\",\r\n                                \"paandorasbox loopingcymbal\",\r\n                                \"paandorasbox standardkick\",\r\n                                \"paandorasbox standardsnare\",\r\n                                \"paandorasbox closedhihat\",\r\n                                \"paandorasbox foothihat\",\r\n                                \"paandorasbox openhihat\",\r\n                                \"paandorasbox crashcymbal\",\r\n                                \"paandorasbox pianoC4\",\r\n                                \"paandorasbox liver pad\",\r\n                                \"paandorasbox marimba\",\r\n                                \"paandorasbox susdotwav\",\r\n                                \"paandorasbox wackyboxtts\",\r\n                                \"paandorasbox peppersteak_1\",\r\n                                \"paandorasbox peppersteak_2\",\r\n                                \"paandorasbox vinyl_noise\",\r\n                                \"paandorasbeta slap bass\",\r\n                                \"paandorasbeta HD EB overdrive guitar\",\r\n                                \"paandorasbeta sunsoft bass\",\r\n                                \"paandorasbeta masculine choir\",\r\n                                \"paandorasbeta feminine choir\",\r\n                                \"paandorasbeta tololoche\",\r\n                                \"paandorasbeta harp\",\r\n                                \"paandorasbeta pan flute\",\r\n                                \"paandorasbeta krumhorn\",\r\n                                \"paandorasbeta timpani\",\r\n                                \"paandorasbeta crowd hey\",\r\n                                \"paandorasbeta wario land 4 brass\",\r\n                                \"paandorasbeta wario land 4 rock organ\",\r\n                                \"paandorasbeta wario land 4 DAOW\",\r\n                                \"paandorasbeta wario land 4 hour chime\",\r\n                                \"paandorasbeta wario land 4 tick\",\r\n                                \"paandorasbeta kirby kick\",\r\n                                \"paandorasbeta kirby snare\",\r\n                                \"paandorasbeta kirby bongo\",\r\n                                \"paandorasbeta kirby click\",\r\n                                \"paandorasbeta sonor kick\",\r\n                                \"paandorasbeta sonor snare\",\r\n                                \"paandorasbeta sonor snare (left hand)\",\r\n                                \"paandorasbeta sonor snare (right hand)\",\r\n                                \"paandorasbeta sonor high tom\",\r\n                                \"paandorasbeta sonor low tom\",\r\n                                \"paandorasbeta sonor hihat (closed)\",\r\n                                \"paandorasbeta sonor hihat (half opened)\",\r\n                                \"paandorasbeta sonor hihat (open)\",\r\n                                \"paandorasbeta sonor hihat (open tip)\",\r\n                                \"paandorasbeta sonor hihat (pedal)\",\r\n                                \"paandorasbeta sonor crash\",\r\n                                \"paandorasbeta sonor crash (tip)\",\r\n                                \"paandorasbeta sonor ride\"\r\n                            ];\r\n                            // The difference for these is in the doubled a.\r\n                            const oldNames: string[] = [\r\n                                \"pandoraasbox kick\",\r\n                                \"pandoraasbox snare\",\r\n                                \"pandoraasbox piano1\",\r\n                                \"pandoraasbox WOW\",\r\n                                \"pandoraasbox overdrive\",\r\n                                \"pandoraasbox trumpet\",\r\n                                \"pandoraasbox saxophone\",\r\n                                \"pandoraasbox orchestrahit\",\r\n                                \"pandoraasbox detatched violin\",\r\n                                \"pandoraasbox synth\",\r\n                                \"pandoraasbox sonic3snare\",\r\n                                \"pandoraasbox come on\",\r\n                                \"pandoraasbox choir\",\r\n                                \"pandoraasbox overdriveguitar\",\r\n                                \"pandoraasbox flute\",\r\n                                \"pandoraasbox legato violin\",\r\n                                \"pandoraasbox tremolo violin\",\r\n                                \"pandoraasbox amen break\",\r\n                                \"pandoraasbox pizzicato violin\",\r\n                                \"pandoraasbox tim allen grunt\",\r\n                                \"pandoraasbox tuba\",\r\n                                \"pandoraasbox loopingcymbal\",\r\n                                \"pandoraasbox standardkick\",\r\n                                \"pandoraasbox standardsnare\",\r\n                                \"pandoraasbox closedhihat\",\r\n                                \"pandoraasbox foothihat\",\r\n                                \"pandoraasbox openhihat\",\r\n                                \"pandoraasbox crashcymbal\",\r\n                                \"pandoraasbox pianoC4\",\r\n                                \"pandoraasbox liver pad\",\r\n                                \"pandoraasbox marimba\",\r\n                                \"pandoraasbox susdotwav\",\r\n                                \"pandoraasbox wackyboxtts\",\r\n                                \"pandoraasbox peppersteak_1\",\r\n                                \"pandoraasbox peppersteak_2\",\r\n                                \"pandoraasbox vinyl_noise\",\r\n                                \"pandoraasbeta slap bass\",\r\n                                \"pandoraasbeta HD EB overdrive guitar\",\r\n                                \"pandoraasbeta sunsoft bass\",\r\n                                \"pandoraasbeta masculine choir\",\r\n                                \"pandoraasbeta feminine choir\",\r\n                                \"pandoraasbeta tololoche\",\r\n                                \"pandoraasbeta harp\",\r\n                                \"pandoraasbeta pan flute\",\r\n                                \"pandoraasbeta krumhorn\",\r\n                                \"pandoraasbeta timpani\",\r\n                                \"pandoraasbeta crowd hey\",\r\n                                \"pandoraasbeta wario land 4 brass\",\r\n                                \"pandoraasbeta wario land 4 rock organ\",\r\n                                \"pandoraasbeta wario land 4 DAOW\",\r\n                                \"pandoraasbeta wario land 4 hour chime\",\r\n                                \"pandoraasbeta wario land 4 tick\",\r\n                                \"pandoraasbeta kirby kick\",\r\n                                \"pandoraasbeta kirby snare\",\r\n                                \"pandoraasbeta kirby bongo\",\r\n                                \"pandoraasbeta kirby click\",\r\n                                \"pandoraasbeta sonor kick\",\r\n                                \"pandoraasbeta sonor snare\",\r\n                                \"pandoraasbeta sonor snare (left hand)\",\r\n                                \"pandoraasbeta sonor snare (right hand)\",\r\n                                \"pandoraasbeta sonor high tom\",\r\n                                \"pandoraasbeta sonor low tom\",\r\n                                \"pandoraasbeta sonor hihat (closed)\",\r\n                                \"pandoraasbeta sonor hihat (half opened)\",\r\n                                \"pandoraasbeta sonor hihat (open)\",\r\n                                \"pandoraasbeta sonor hihat (open tip)\",\r\n                                \"pandoraasbeta sonor hihat (pedal)\",\r\n                                \"pandoraasbeta sonor crash\",\r\n                                \"pandoraasbeta sonor crash (tip)\",\r\n                                \"pandoraasbeta sonor ride\"\r\n                            ];\r\n                            // This mirrors paandorasboxWaveNames, which is unprefixed.\r\n                            const veryOldNames: string[] = [\r\n                                \"kick\",\r\n                                \"snare\",\r\n                                \"piano1\",\r\n                                \"WOW\",\r\n                                \"overdrive\",\r\n                                \"trumpet\",\r\n                                \"saxophone\",\r\n                                \"orchestrahit\",\r\n                                \"detatched violin\",\r\n                                \"synth\",\r\n                                \"sonic3snare\",\r\n                                \"come on\",\r\n                                \"choir\",\r\n                                \"overdriveguitar\",\r\n                                \"flute\",\r\n                                \"legato violin\",\r\n                                \"tremolo violin\",\r\n                                \"amen break\",\r\n                                \"pizzicato violin\",\r\n                                \"tim allen grunt\",\r\n                                \"tuba\",\r\n                                \"loopingcymbal\",\r\n                                \"standardkick\",\r\n                                \"standardsnare\",\r\n                                \"closedhihat\",\r\n                                \"foothihat\",\r\n                                \"openhihat\",\r\n                                \"crashcymbal\",\r\n                                \"pianoC4\",\r\n                                \"liver pad\",\r\n                                \"marimba\",\r\n                                \"susdotwav\",\r\n                                \"wackyboxtts\"\r\n                            ];\r\n                            if (names.includes(waveName)) {\r\n                                shouldLoadLegacySamples = true;\r\n                            } else if (oldNames.includes(waveName)) {\r\n                                shouldLoadLegacySamples = true;\r\n                                // If we see one of these old names, update it\r\n                                // to the corresponding new name.\r\n                                instrumentObject[\"wave\"] = names[oldNames.findIndex(x => x === waveName)];\r\n                            } else if (veryOldNames.includes(waveName)) {\r\n                                if ((waveName === \"trumpet\" || waveName === \"flute\") && (format != \"paandorasbox\")) {\r\n                                    // If we see chip waves named trumpet or flute, and if the format isn't PaandorasBox, we leave them as-is\r\n                                } else {\r\n                                    // There's no other chip waves with ambiguous names like that, so it should\r\n                                    // be okay to assume we'll need to load the legacy samples now.\r\n                                    shouldLoadLegacySamples = true;\r\n                                    // If we see one of these old names, update it\r\n                                    // to the corresponding new name.\r\n                                    instrumentObject[\"wave\"] = names[veryOldNames.findIndex(x => x === waveName)];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (shouldLoadLegacySamples) {\r\n                Config.willReloadForCustomSamples = true;\r\n\r\n                Song._restoreChipWaveListToDefault();\r\n\r\n                loadBuiltInSamples(0);\r\n                EditorConfig.customSamples = [\"legacySamples\"];\r\n            } else {\r\n                // We don't need to load the legacy samples, but we may have\r\n                // leftover samples in memory. If we do, clear them.\r\n                if (EditorConfig.customSamples != null && EditorConfig.customSamples.length > 0) {\r\n                    // We need to reload anyway in this case, because (for now)\r\n                    // the chip wave lists won't be correctly updated.\r\n                    Config.willReloadForCustomSamples = true;\r\n                    Song._clearSamples();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.scale = 0; // default to free.\r\n        if (jsonObject[\"scale\"] != undefined) {\r\n            const oldScaleNames: Dictionary<string> = {\r\n                \"romani :)\": \"double harmonic :)\",\r\n\t\t\t\t\"romani :(\": \"double harmonic :(\",\r\n\t\t\t\t\"dbl harmonic :)\": \"double harmonic :)\",\r\n\t\t\t\t\"dbl harmonic :(\": \"double harmonic :(\",\r\n                \"enigma\": \"strange\",\r\n            };\r\n            const scaleName: string = (oldScaleNames[jsonObject[\"scale\"]] != undefined) ? oldScaleNames[jsonObject[\"scale\"]] : jsonObject[\"scale\"];\r\n            const scale: number = Config.scales.findIndex(scale => scale.name == scaleName);\r\n            if (scale != -1) this.scale = scale;\r\n            if (this.scale == Config.scales[\"dictionary\"][\"Custom\"].index) {\r\n                if (jsonObject[\"customScale\"] != undefined) {\r\n                    for (var i of jsonObject[\"customScale\"].keys()) {\r\n                        this.scaleCustom[i] = jsonObject[\"customScale\"][i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"key\"] != undefined) {\r\n            if (typeof (jsonObject[\"key\"]) == \"number\") {\r\n                this.key = ((jsonObject[\"key\"] + 1200) >>> 0) % Config.keys.length;\r\n            } else if (typeof (jsonObject[\"key\"]) == \"string\") {\r\n                const key: string = jsonObject[\"key\"];\r\n                // This conversion code depends on C through B being\r\n                // available as keys, of course.\r\n                if (key === \"C+\") {\r\n                    this.key = 0;\r\n                    this.octave = 1;\r\n                } else if (key === \"G- (actually F#-)\") {\r\n                    this.key = 6;\r\n                    this.octave = -1;\r\n                } else if (key === \"C-\") {\r\n                    this.key = 0;\r\n                    this.octave = -1;\r\n                } else if (key === \"oh no (F-)\") {\r\n                    this.key = 5;\r\n                    this.octave = -1;\r\n                } else {\r\n                    const letter: string = key.charAt(0).toUpperCase();\r\n                    const symbol: string = key.charAt(1).toLowerCase();\r\n                    const letterMap: Readonly<Dictionary<number>> = { \"C\": 0, \"D\": 2, \"E\": 4, \"F\": 5, \"G\": 7, \"A\": 9, \"B\": 11 };\r\n                    const accidentalMap: Readonly<Dictionary<number>> = { \"#\": 1, \"♯\": 1, \"b\": -1, \"♭\": -1 };\r\n                    let index: number | undefined = letterMap[letter];\r\n                    const offset: number | undefined = accidentalMap[symbol];\r\n                    if (index != undefined) {\r\n                        if (offset != undefined) index += offset;\r\n                        if (index < 0) index += 12;\r\n                        index = index % 12;\r\n                        this.key = index;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerMinute\"] != undefined) {\r\n            this.tempo = clamp(Config.tempoMin, Config.tempoMax + 1, jsonObject[\"beatsPerMinute\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"loopType\"] != undefined) {\r\n            this.loopType = jsonObject[\"loopType\"] | 0;\r\n        }\r\n\r\n        if (jsonObject[\"keyOctave\"] != undefined) {\r\n            this.octave = clamp(Config.octaveMin, Config.octaveMax + 1, jsonObject[\"keyOctave\"] | 0);\r\n        }\r\n\r\n        let legacyGlobalReverb: number = 0; // In older songs, reverb was song-global, record that here and pass it to Instrument.fromJsonObject() for context.\r\n        if (jsonObject[\"reverb\"] != undefined) {\r\n            legacyGlobalReverb = clamp(0, 32, jsonObject[\"reverb\"] | 0);\r\n        }\r\n\r\n        if (jsonObject[\"beatsPerBar\"] != undefined) {\r\n            this.beatsPerBar = Math.max(Config.beatsPerBarMin, Math.min(Config.beatsPerBarMax, jsonObject[\"beatsPerBar\"] | 0));\r\n        }\r\n\r\n        let importedPartsPerBeat: number = 4;\r\n        if (jsonObject[\"ticksPerBeat\"] != undefined) {\r\n            importedPartsPerBeat = (jsonObject[\"ticksPerBeat\"] | 0) || 4;\r\n            this.rhythm = Config.rhythms.findIndex(rhythm => rhythm.stepsPerBeat == importedPartsPerBeat);\r\n            if (this.rhythm == -1) {\r\n                this.rhythm = 1;\r\n            }\r\n        }\r\n\r\n        // Read limiter settings. Ranges and defaults are based on slider settings\r\n\r\n        if (jsonObject[\"masterGain\"] != undefined) {\r\n            this.masterGain = Math.max(0.0, Math.min(5.0, jsonObject[\"masterGain\"] || 0));\r\n        } else {\r\n            this.masterGain = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitThreshold\"] != undefined) {\r\n            this.limitThreshold = Math.max(0.0, Math.min(2.0, jsonObject[\"limitThreshold\"] || 0));\r\n        }\r\n        else {\r\n            this.limitThreshold = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"compressionThreshold\"] != undefined) {\r\n            this.compressionThreshold = Math.max(0.0, Math.min(1.1, jsonObject[\"compressionThreshold\"] || 0));\r\n        }\r\n        else {\r\n            this.compressionThreshold = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitRise\"] != undefined) {\r\n            this.limitRise = Math.max(2000.0, Math.min(10000.0, jsonObject[\"limitRise\"] || 0));\r\n        }\r\n        else {\r\n            this.limitRise = 4000.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitDecay\"] != undefined) {\r\n            this.limitDecay = Math.max(1.0, Math.min(30.0, jsonObject[\"limitDecay\"] || 0));\r\n        }\r\n        else {\r\n            this.limitDecay = 4.0;\r\n        }\r\n\r\n        if (jsonObject[\"limitRatio\"] != undefined) {\r\n            this.limitRatio = Math.max(0.0, Math.min(11.0, jsonObject[\"limitRatio\"] || 0));\r\n        }\r\n        else {\r\n            this.limitRatio = 1.0;\r\n        }\r\n\r\n        if (jsonObject[\"compressionRatio\"] != undefined) {\r\n            this.compressionRatio = Math.max(0.0, Math.min(1.168, jsonObject[\"compressionRatio\"] || 0));\r\n        }\r\n        else {\r\n            this.compressionRatio = 1.0;\r\n        }\r\n\r\n        let maxInstruments: number = 1;\r\n        let maxPatterns: number = 1;\r\n        let maxBars: number = 1;\r\n        if (jsonObject[\"channels\"] != undefined) {\r\n            for (const channelObject of jsonObject[\"channels\"]) {\r\n                if (channelObject[\"instruments\"]) maxInstruments = Math.max(maxInstruments, channelObject[\"instruments\"].length | 0);\r\n                if (channelObject[\"patterns\"]) maxPatterns = Math.max(maxPatterns, channelObject[\"patterns\"].length | 0);\r\n                if (channelObject[\"sequence\"]) maxBars = Math.max(maxBars, channelObject[\"sequence\"].length | 0);\r\n            }\r\n        }\r\n\r\n        if (jsonObject[\"layeredInstruments\"] != undefined) {\r\n            this.layeredInstruments = !!jsonObject[\"layeredInstruments\"];\r\n        } else {\r\n            this.layeredInstruments = false;\r\n        }\r\n        if (jsonObject[\"patternInstruments\"] != undefined) {\r\n            this.patternInstruments = !!jsonObject[\"patternInstruments\"];\r\n        } else {\r\n            this.patternInstruments = (maxInstruments > 1);\r\n        }\r\n        this.patternsPerChannel = Math.min(maxPatterns, Config.barCountMax);\r\n        this.barCount = Math.min(maxBars, Config.barCountMax);\r\n\r\n        if (jsonObject[\"introBars\"] != undefined) {\r\n            this.loopStart = clamp(0, this.barCount, jsonObject[\"introBars\"] | 0);\r\n        }\r\n        if (jsonObject[\"loopBars\"] != undefined) {\r\n            this.loopLength = clamp(1, this.barCount - this.loopStart + 1, jsonObject[\"loopBars\"] | 0);\r\n        }\r\n\r\n        const newPitchChannels: Channel[] = [];\r\n        const newNoiseChannels: Channel[] = [];\r\n        const newModChannels: Channel[] = [];\r\n        if (jsonObject[\"channels\"] != undefined) {\r\n            for (let channelIndex: number = 0; channelIndex < jsonObject[\"channels\"].length; channelIndex++) {\r\n                let channelObject: any = jsonObject[\"channels\"][channelIndex];\r\n\r\n                const channel: Channel = new Channel();\r\n\r\n                let isNoiseChannel: boolean = false;\r\n                let isModChannel: boolean = false;\r\n                if (channelObject[\"type\"] != undefined) {\r\n                    isNoiseChannel = (channelObject[\"type\"] == \"drum\");\r\n                    isModChannel = (channelObject[\"type\"] == \"mod\");\r\n                } else {\r\n                    // for older files, assume drums are channel 3.\r\n                    isNoiseChannel = (channelIndex >= 3);\r\n                }\r\n                if (isNoiseChannel) {\r\n                    newNoiseChannels.push(channel);\r\n                } else if (isModChannel) {\r\n                    newModChannels.push(channel);\r\n                }\r\n                else {\r\n                    newPitchChannels.push(channel);\r\n                }\r\n\r\n                if (channelObject[\"octaveScrollBar\"] != undefined) {\r\n                    channel.octave = clamp(0, Config.pitchOctaves, (channelObject[\"octaveScrollBar\"] | 0) + 1);\r\n                    if (isNoiseChannel) channel.octave = 0;\r\n                }\r\n\r\n                if (channelObject[\"name\"] != undefined) {\r\n                    channel.name = channelObject[\"name\"];\r\n                }\r\n                else {\r\n                    channel.name = \"\";\r\n                }\r\n\r\n                if (Array.isArray(channelObject[\"instruments\"])) {\r\n                    const instrumentObjects: any[] = channelObject[\"instruments\"];\r\n                    for (let i: number = 0; i < instrumentObjects.length; i++) {\r\n                        if (i >= this.getMaxInstrumentsPerChannel()) break;\r\n                        const instrument: Instrument = new Instrument(isNoiseChannel, isModChannel);\r\n                        channel.instruments[i] = instrument;\r\n                        instrument.fromJsonObject(instrumentObjects[i], isNoiseChannel, isModChannel, false, false, legacyGlobalReverb, format);\r\n                    }\r\n\r\n                }\r\n\r\n                for (let i: number = 0; i < this.patternsPerChannel; i++) {\r\n                    const pattern: Pattern = new Pattern();\r\n                    channel.patterns[i] = pattern;\r\n\r\n                    let patternObject: any = undefined;\r\n                    if (channelObject[\"patterns\"]) patternObject = channelObject[\"patterns\"][i];\r\n                    if (patternObject == undefined) continue;\r\n\r\n                    pattern.fromJsonObject(patternObject, this, channel, importedPartsPerBeat, isNoiseChannel, isModChannel, format);\r\n                }\r\n                channel.patterns.length = this.patternsPerChannel;\r\n\r\n                for (let i: number = 0; i < this.barCount; i++) {\r\n                    channel.bars[i] = (channelObject[\"sequence\"] != undefined) ? Math.min(this.patternsPerChannel, channelObject[\"sequence\"][i] >>> 0) : 0;\r\n                }\r\n                channel.bars.length = this.barCount;\r\n            }\r\n        }\r\n\r\n        if (newPitchChannels.length > Config.pitchChannelCountMax) newPitchChannels.length = Config.pitchChannelCountMax;\r\n        if (newNoiseChannels.length > Config.noiseChannelCountMax) newNoiseChannels.length = Config.noiseChannelCountMax;\r\n        if (newModChannels.length > Config.modChannelCountMax) newModChannels.length = Config.modChannelCountMax;\r\n        this.pitchChannelCount = newPitchChannels.length;\r\n        this.noiseChannelCount = newNoiseChannels.length;\r\n        this.modChannelCount = newModChannels.length;\r\n        this.channels.length = 0;\r\n        Array.prototype.push.apply(this.channels, newPitchChannels);\r\n        Array.prototype.push.apply(this.channels, newNoiseChannels);\r\n        Array.prototype.push.apply(this.channels, newModChannels);\r\n\r\n        if (Config.willReloadForCustomSamples) {\r\n            window.location.hash = this.toBase64String();\r\n            // The prompt seems to get stuck if reloading is done too quickly.\r\n            setTimeout(() => { location.reload(); }, 50);\r\n        }\r\n    }\r\n\r\n    public getPattern(channelIndex: number, bar: number): Pattern | null {\r\n        if (bar < 0 || bar >= this.barCount) return null;\r\n        const patternIndex: number = this.channels[channelIndex].bars[bar];\r\n        if (patternIndex == 0) return null;\r\n        return this.channels[channelIndex].patterns[patternIndex - 1];\r\n    }\r\n\r\n    public getBeatsPerMinute(): number {\r\n        return this.tempo;\r\n    }\r\n\r\n    public static getNeededBits(maxValue: number): number {\r\n        return 32 - Math.clz32(Math.ceil(maxValue + 1) - 1);\r\n    }\r\n\r\n    public restoreLimiterDefaults(): void {\r\n        this.compressionRatio = 1.0;\r\n        this.limitRatio = 1.0;\r\n        this.limitRise = 4000.0;\r\n        this.limitDecay = 4.0;\r\n        this.limitThreshold = 1.0;\r\n        this.compressionThreshold = 1.0;\r\n        this.masterGain = 1.0;\r\n    }\r\n}\r\n\r\nclass PickedString {\r\n    public delayLine: Float32Array | null = null;\r\n    public delayIndex: number;\r\n    public allPassSample: number;\r\n    public allPassPrevInput: number;\r\n    public sustainFilterSample: number;\r\n\tpublic sustainFilterPrevOutput2: number;\r\n\tpublic sustainFilterPrevInput1: number;\r\n\tpublic sustainFilterPrevInput2: number;\r\n    public fractionalDelaySample: number;\r\n    public prevDelayLength: number;\r\n    public delayLengthDelta: number;\r\n    public delayResetOffset: number;\r\n\r\n    public allPassG: number = 0.0;\r\n    public allPassGDelta: number = 0.0;\r\n    public sustainFilterA1: number = 0.0;\r\n\tpublic sustainFilterA1Delta: number = 0.0;\r\n\tpublic sustainFilterA2: number = 0.0;\r\n\tpublic sustainFilterA2Delta: number = 0.0;\r\n\tpublic sustainFilterB0: number = 0.0;\r\n\tpublic sustainFilterB0Delta: number = 0.0;\r\n\tpublic sustainFilterB1: number = 0.0;\r\n\tpublic sustainFilterB1Delta: number = 0.0;\r\n\tpublic sustainFilterB2: number = 0.0;\r\n\tpublic sustainFilterB2Delta: number = 0.0;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.delayIndex = -1;\r\n        this.allPassSample = 0.0;\r\n        this.allPassPrevInput = 0.0;\r\n        this.sustainFilterSample = 0.0;\r\n\t\tthis.sustainFilterPrevOutput2 = 0.0;\r\n\t\tthis.sustainFilterPrevInput1 = 0.0;\r\n\t\tthis.sustainFilterPrevInput2 = 0.0;\r\n        this.fractionalDelaySample = 0.0;\r\n        this.prevDelayLength = -1.0;\r\n        this.delayResetOffset = 0;\r\n    }\r\n\r\n    public update(synth: Synth, instrumentState: InstrumentState, tone: Tone, stringIndex: number, roundedSamplesPerTick: number, stringDecayStart: number, stringDecayEnd: number, sustainType: SustainType): void {\r\n        const allPassCenter: number = 2.0 * Math.PI * Config.pickedStringDispersionCenterFreq / synth.samplesPerSecond;\r\n\r\n        const prevDelayLength: number = this.prevDelayLength;\r\n\r\n        const phaseDeltaStart: number = tone.phaseDeltas[stringIndex];\r\n        const phaseDeltaScale: number = tone.phaseDeltaScales[stringIndex];\r\n        const phaseDeltaEnd: number = phaseDeltaStart * Math.pow(phaseDeltaScale, roundedSamplesPerTick);\r\n\r\n        const radiansPerSampleStart: number = Math.PI * 2.0 * phaseDeltaStart;\r\n        const radiansPerSampleEnd: number = Math.PI * 2.0 * phaseDeltaEnd;\r\n\r\n        const centerHarmonicStart: number = radiansPerSampleStart * 2.0;\r\n        const centerHarmonicEnd: number = radiansPerSampleEnd * 2.0;\r\n\r\n        const allPassRadiansStart: number = Math.min(Math.PI, radiansPerSampleStart * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleStart, Config.pickedStringDispersionFreqScale));\r\n        const allPassRadiansEnd: number = Math.min(Math.PI, radiansPerSampleEnd * Config.pickedStringDispersionFreqMult * Math.pow(allPassCenter / radiansPerSampleEnd, Config.pickedStringDispersionFreqScale));\r\n        const shelfRadians: number = 2.0 * Math.PI * Config.pickedStringShelfHz / synth.samplesPerSecond;\r\n\t\tconst decayCurveStart: number = (Math.pow(100.0, stringDecayStart) - 1.0) / 99.0;\r\n\t\tconst decayCurveEnd: number   = (Math.pow(100.0, stringDecayEnd  ) - 1.0) / 99.0;\r\n\t\tconst register: number = sustainType == SustainType.acoustic ? 0.25 : 0.0;\r\n\t\tconst registerShelfCenter: number = 15.6;\r\n\t\tconst registerLowpassCenter: number = 3.0 * synth.samplesPerSecond / 48000;\r\n\t\t//const decayRateStart: number = Math.pow(0.5, decayCurveStart * shelfRadians / radiansPerSampleStart);\r\n\t\t//const decayRateEnd: number   = Math.pow(0.5, decayCurveEnd   * shelfRadians / radiansPerSampleEnd);\r\n\t\tconst decayRateStart: number = Math.pow(0.5, decayCurveStart * Math.pow(shelfRadians / (radiansPerSampleStart * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\r\n\t\tconst decayRateEnd:   number = Math.pow(0.5, decayCurveEnd   * Math.pow(shelfRadians / (radiansPerSampleEnd   * registerShelfCenter), (1.0 + 2.0 * register)) * registerShelfCenter);\r\n        \r\n        const expressionDecayStart: number = Math.pow(decayRateStart, 0.002);\r\n        const expressionDecayEnd: number = Math.pow(decayRateEnd, 0.002);\r\n\r\n        Synth.tempFilterStartCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansStart);\r\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\r\n        const allPassGStart: number = Synth.tempFilterStartCoefficients.b[0]; /* same as a[1] */\r\n        const allPassPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\r\n\r\n        Synth.tempFilterEndCoefficients.allPass1stOrderInvertPhaseAbove(allPassRadiansEnd);\r\n        synth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\r\n        const allPassGEnd: number = Synth.tempFilterEndCoefficients.b[0]; /* same as a[1] */\r\n        const allPassPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\r\n\r\n        // 1st order shelf filters and 2nd order lowpass filters have differently shaped frequency\r\n\t\t// responses, as well as adjustable shapes. I originally picked a 1st order shelf filter,\r\n\t\t// but I kinda prefer 2nd order lowpass filters now and I designed a couple settings:\r\n\t\tconst enum PickedStringBrightnessType {\r\n\t\t\tbright, // 1st order shelf\r\n\t\t\tnormal, // 2nd order lowpass, rounded corner\r\n\t\t\tresonant, // 3rd order lowpass, harder corner\r\n\t\t}\r\n\t\tconst brightnessType: PickedStringBrightnessType = <any> sustainType == SustainType.bright ? PickedStringBrightnessType.bright : PickedStringBrightnessType.normal;\r\n\t\tif (brightnessType == PickedStringBrightnessType.bright) {\r\n\t\t\tconst shelfGainStart: number = Math.pow(decayRateStart, Config.stringDecayRate);\r\n\t\t\tconst shelfGainEnd: number   = Math.pow(decayRateEnd,   Config.stringDecayRate);\r\n\t\t\tSynth.tempFilterStartCoefficients.highShelf2ndOrder(shelfRadians, shelfGainStart, 0.5);\r\n\t\t\tSynth.tempFilterEndCoefficients.highShelf2ndOrder(shelfRadians, shelfGainEnd, 0.5);\r\n\t\t} else {\r\n\t\t\tconst cornerHardness: number = Math.pow(brightnessType == PickedStringBrightnessType.normal ? 0.0 : 1.0, 0.25);\r\n\t\t\tconst lowpass1stOrderCutoffRadiansStart: number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleStart * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveStart, .5);\r\n\t\t\tconst lowpass1stOrderCutoffRadiansEnd:   number = Math.pow(registerLowpassCenter * registerLowpassCenter * radiansPerSampleEnd   * 3.3 * 48000 / synth.samplesPerSecond, 0.5 + register) / registerLowpassCenter / Math.pow(decayCurveEnd,   .5);\r\n\t\t\tconst lowpass2ndOrderCutoffRadiansStart: number = lowpass1stOrderCutoffRadiansStart * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\r\n\t\t\tconst lowpass2ndOrderCutoffRadiansEnd:   number = lowpass1stOrderCutoffRadiansEnd   * Math.pow(2.0, 0.5 - 1.75 * (1.0 - Math.pow(1.0 - cornerHardness, 0.85)));\r\n\t\t\tconst lowpass2ndOrderGainStart: number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\r\n\t\t\tconst lowpass2ndOrderGainEnd:   number = Math.pow(2.0, -Math.pow(2.0, -Math.pow(cornerHardness, 0.9)));\r\n\t\t\tSynth.tempFilterStartCoefficients.lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansStart), lowpass2ndOrderGainStart);\r\n\t\t\tSynth.tempFilterEndCoefficients  .lowPass2ndOrderButterworth(warpInfinityToNyquist(lowpass2ndOrderCutoffRadiansEnd),   lowpass2ndOrderGainEnd);\r\n\t\t}\r\n\r\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterStartCoefficients, centerHarmonicStart);\r\n\t\tconst sustainFilterA1Start: number = Synth.tempFilterStartCoefficients.a[1];\r\n\t\tconst sustainFilterA2Start: number = Synth.tempFilterStartCoefficients.a[2];\r\n\t\tconst sustainFilterB0Start: number = Synth.tempFilterStartCoefficients.b[0] * expressionDecayStart;\r\n\t\tconst sustainFilterB1Start: number = Synth.tempFilterStartCoefficients.b[1] * expressionDecayStart;\r\n\t\tconst sustainFilterB2Start: number = Synth.tempFilterStartCoefficients.b[2] * expressionDecayStart;\r\n\t\tconst sustainFilterPhaseDelayStart: number = -synth.tempFrequencyResponse.angle() / centerHarmonicStart;\r\n\r\n\t\tsynth.tempFrequencyResponse.analyze(Synth.tempFilterEndCoefficients, centerHarmonicEnd);\r\n\t\tconst sustainFilterA1End: number = Synth.tempFilterEndCoefficients.a[1];\r\n\t\tconst sustainFilterA2End: number = Synth.tempFilterEndCoefficients.a[2];\r\n\t\tconst sustainFilterB0End: number = Synth.tempFilterEndCoefficients.b[0] * expressionDecayEnd;\r\n\t\tconst sustainFilterB1End: number = Synth.tempFilterEndCoefficients.b[1] * expressionDecayEnd;\r\n\t\tconst sustainFilterB2End: number = Synth.tempFilterEndCoefficients.b[2] * expressionDecayEnd;\r\n\t\tconst sustainFilterPhaseDelayEnd: number = -synth.tempFrequencyResponse.angle() / centerHarmonicEnd;\r\n\r\n\t\tconst periodLengthStart: number = 1.0 / phaseDeltaStart;\r\n\t\tconst periodLengthEnd: number = 1.0 / phaseDeltaEnd;\r\n\t\tconst minBufferLength: number = Math.ceil(Math.max(periodLengthStart, periodLengthEnd) * 2);\r\n\t\tconst delayLength: number = periodLengthStart - allPassPhaseDelayStart - sustainFilterPhaseDelayStart;\r\n\t\tconst delayLengthEnd: number = periodLengthEnd - allPassPhaseDelayEnd - sustainFilterPhaseDelayEnd;\r\n\r\n\t\tthis.prevDelayLength = delayLength;\r\n\t\tthis.delayLengthDelta = (delayLengthEnd - delayLength) / roundedSamplesPerTick;\r\n\t\tthis.allPassG = allPassGStart;\r\n\t\tthis.sustainFilterA1 = sustainFilterA1Start;\r\n\t\tthis.sustainFilterA2 = sustainFilterA2Start;\r\n\t\tthis.sustainFilterB0 = sustainFilterB0Start;\r\n\t\tthis.sustainFilterB1 = sustainFilterB1Start;\r\n\t\tthis.sustainFilterB2 = sustainFilterB2Start;\r\n\t\tthis.allPassGDelta = (allPassGEnd - allPassGStart) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterA1Delta = (sustainFilterA1End - sustainFilterA1Start) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterA2Delta = (sustainFilterA2End - sustainFilterA2Start) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterB0Delta = (sustainFilterB0End - sustainFilterB0Start) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterB1Delta = (sustainFilterB1End - sustainFilterB1Start) / roundedSamplesPerTick;\r\n\t\tthis.sustainFilterB2Delta = (sustainFilterB2End - sustainFilterB2Start) / roundedSamplesPerTick;\r\n\r\n        const pitchChanged: boolean = Math.abs(Math.log2(delayLength / prevDelayLength)) > 0.01;\r\n\r\n        const reinitializeImpulse: boolean = (this.delayIndex == -1 || pitchChanged);\r\n        if (this.delayLine == null || this.delayLine.length <= minBufferLength) {\r\n            // The delay line buffer will get reused for other tones so might as well\r\n            // start off with a buffer size that is big enough for most notes.\r\n            const likelyMaximumLength: number = Math.ceil(2 * synth.samplesPerSecond / Instrument.frequencyFromPitch(12));\r\n            const newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\r\n            if (!reinitializeImpulse && this.delayLine != null) {\r\n                // If the tone has already started but the buffer needs to be reallocated,\r\n                // transfer the old data to the new buffer.\r\n                const oldDelayBufferMask: number = (this.delayLine.length - 1) >> 0;\r\n                const startCopyingFromIndex: number = this.delayIndex + this.delayResetOffset;\r\n                this.delayIndex = this.delayLine.length - this.delayResetOffset;\r\n                for (let i: number = 0; i < this.delayLine.length; i++) {\r\n                    newDelayLine[i] = this.delayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\r\n                }\r\n            }\r\n            this.delayLine = newDelayLine;\r\n        }\r\n        const delayLine: Float32Array = this.delayLine;\r\n        const delayBufferMask: number = (delayLine.length - 1) >> 0;\r\n\r\n        if (reinitializeImpulse) {\r\n            // -1 delay index means the tone was reset.\r\n            // Also, if the pitch changed suddenly (e.g. from seamless or arpeggio) then reset the wave.\r\n\r\n            this.delayIndex = 0;\r\n            this.allPassSample = 0.0;\r\n            this.allPassPrevInput = 0.0;\r\n            this.sustainFilterSample = 0.0;\r\n\t\t\tthis.sustainFilterPrevOutput2 = 0.0;\r\n\t\t\tthis.sustainFilterPrevInput1 = 0.0;\r\n\t\t\tthis.sustainFilterPrevInput2 = 0.0;\r\n            this.fractionalDelaySample = 0.0;\r\n\r\n            // Clear away a region of the delay buffer for the new impulse.\r\n            const startImpulseFrom: number = -delayLength;\r\n            const startZerosFrom: number = Math.floor(startImpulseFrom - periodLengthStart / 2);\r\n            const stopZerosAt: number = Math.ceil(startZerosFrom + periodLengthStart * 2);\r\n            this.delayResetOffset = stopZerosAt; // And continue clearing the area in front of the delay line.\r\n            for (let i: number = startZerosFrom; i <= stopZerosAt; i++) {\r\n                delayLine[i & delayBufferMask] = 0.0;\r\n            }\r\n\r\n            const impulseWave: Float32Array = instrumentState.wave!;\r\n            const impulseWaveLength: number = impulseWave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n            const impulsePhaseDelta: number = impulseWaveLength / periodLengthStart;\r\n\r\n            const fadeDuration: number = Math.min(periodLengthStart * 0.2, synth.samplesPerSecond * 0.003);\r\n            const startImpulseFromSample: number = Math.ceil(startImpulseFrom);\r\n            const stopImpulseAt: number = startImpulseFrom + periodLengthStart + fadeDuration;\r\n            const stopImpulseAtSample: number = stopImpulseAt;\r\n            let impulsePhase: number = (startImpulseFromSample - startImpulseFrom) * impulsePhaseDelta;\r\n            let prevWaveIntegral: number = 0.0;\r\n            for (let i: number = startImpulseFromSample; i <= stopImpulseAtSample; i++) {\r\n                const impulsePhaseInt: number = impulsePhase | 0;\r\n                const index: number = impulsePhaseInt % impulseWaveLength;\r\n                let nextWaveIntegral: number = impulseWave[index];\r\n                const phaseRatio: number = impulsePhase - impulsePhaseInt;\r\n                nextWaveIntegral += (impulseWave[index + 1] - nextWaveIntegral) * phaseRatio;\r\n                const sample: number = (nextWaveIntegral - prevWaveIntegral) / impulsePhaseDelta;\r\n                const fadeIn: number = Math.min(1.0, (i - startImpulseFrom) / fadeDuration);\r\n                const fadeOut: number = Math.min(1.0, (stopImpulseAt - i) / fadeDuration);\r\n                const combinedFade: number = fadeIn * fadeOut;\r\n                const curvedFade: number = combinedFade * combinedFade * (3.0 - 2.0 * combinedFade); // A cubic sigmoid from 0 to 1.\r\n                delayLine[i & delayBufferMask] += sample * curvedFade;\r\n                prevWaveIntegral = nextWaveIntegral;\r\n                impulsePhase += impulsePhaseDelta;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass EnvelopeComputer {\r\n    // \"Unscaled\" values do not increase with Envelope Speed's timescale factor. Thus they are \"real\" seconds since the start of the note.\r\n    // Fade envelopes notably use unscaled values instead of being tied to Envelope Speed.\r\n    // choptop84: \"Definitely stealing that comment there\"\r\n    public noteSecondsStart: number = 0.0;\r\n    public noteSecondsStartUnscaled: number = 0.0;\r\n    public noteSecondsEnd: number = 0.0;\r\n    public noteSecondsEndUnscaled: number = 0.0;\r\n    public noteTicksStart: number = 0.0;\r\n    public noteTicksEnd: number = 0.0;\r\n    public noteSizeStart: number = Config.noteSizeMax;\r\n    public noteSizeEnd: number = Config.noteSizeMax;\r\n    public prevNoteSize: number = Config.noteSizeMax;\r\n    public nextNoteSize: number = Config.noteSizeMax;\r\n    private _noteSizeFinal: number = Config.noteSizeMax;\r\n    public prevNoteSecondsStart: number = 0.0;\r\n    public prevNoteSecondsStartUnscaled: number = 0.0;\r\n    public prevNoteSecondsEnd: number = 0.0;\r\n    public prevNoteSecondsEndUnscaled: number = 0.0;\r\n    public prevNoteTicksStart: number = 0.0;\r\n    public prevNoteTicksEnd: number = 0.0;\r\n    private _prevNoteSizeFinal: number = Config.noteSizeMax;\r\n\r\n    public prevSlideStart: boolean = false;\r\n    public prevSlideEnd: boolean = false;\r\n    public nextSlideStart: boolean = false;\r\n    public nextSlideEnd: boolean = false;\r\n    public prevSlideRatioStart: number = 0.0;\r\n    public prevSlideRatioEnd: number = 0.0;\r\n    public nextSlideRatioStart: number = 0.0;\r\n    public nextSlideRatioEnd: number = 0.0;\r\n\r\n    public readonly envelopeStarts: number[] = [];\r\n    public readonly envelopeEnds: number[] = [];\r\n    private readonly _modifiedEnvelopeIndices: number[] = [];\r\n    private _modifiedEnvelopeCount: number = 0;\r\n    public lowpassCutoffDecayVolumeCompensation: number = 1.0;\r\n\r\n    constructor(/*private _perNote: boolean*/) {\r\n        //const length: number = this._perNote ? EnvelopeComputeIndex.length : InstrumentAutomationIndex.length;\r\n        const length: number = EnvelopeComputeIndex.length;\r\n        for (let i: number = 0; i < length; i++) {\r\n            this.envelopeStarts[i] = 1.0;\r\n            this.envelopeEnds[i] = 1.0;\r\n        }\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.noteSecondsEnd = 0.0;\r\n        this.noteSecondsEndUnscaled = 0.0;\r\n        this.noteTicksEnd = 0.0;\r\n        this._noteSizeFinal = Config.noteSizeMax;\r\n        this.prevNoteSecondsEnd = 0.0;\r\n        this.prevNoteSecondsEndUnscaled = 0.0;\r\n        this.prevNoteTicksEnd = 0.0;\r\n        this._prevNoteSizeFinal = Config.noteSizeMax;\r\n        this._modifiedEnvelopeCount = 0;\r\n    }\r\n\r\n    public computeEnvelopes(instrument: Instrument, currentPart: number, tickTimeStart: number, tickTimeStartReal: number, secondsPerTick: number, tone: Tone | null, timeScale: number, song: Song | null, instrumentState: InstrumentState): void {\r\n        const secondsPerTickUnscaled: number = secondsPerTick;\r\n        secondsPerTick *= timeScale;\r\n        const transition: Transition = instrument.getTransition();\r\n        if (tone != null && tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\r\n            this.prevNoteSecondsEnd = this.noteSecondsEnd;\r\n            this.prevNoteSecondsEndUnscaled = this.noteSecondsEndUnscaled;\r\n            this.prevNoteTicksEnd = this.noteTicksEnd;\r\n            this._prevNoteSizeFinal = this._noteSizeFinal;\r\n            this.noteSecondsEnd = 0.0;\r\n            this.noteSecondsEndUnscaled = 0.0;\r\n            this.noteTicksEnd = 0.0;\r\n        }\r\n        if (tone != null) {\r\n            if (tone.note != null) {\r\n                this._noteSizeFinal = tone.note.pins[tone.note.pins.length - 1].size;\r\n            } else {\r\n                this._noteSizeFinal = Config.noteSizeMax;\r\n            }\r\n        }\r\n        const tickTimeEnd: number = tickTimeStart + timeScale;\r\n        const tickTimeEndReal: number = tickTimeStartReal + 1.0;\r\n        const noteSecondsStart: number = this.noteSecondsEnd;\r\n        const noteSecondsStartUnscaled: number = this.noteSecondsEndUnscaled;\r\n        const noteSecondsEnd: number = noteSecondsStart + secondsPerTick;\r\n        const noteSecondsEndUnscaled: number = noteSecondsStartUnscaled + secondsPerTickUnscaled;\r\n        const noteTicksStart: number = this.noteTicksEnd;\r\n        const noteTicksEnd: number = noteTicksStart + 1.0;\r\n        const prevNoteSecondsStart: number = this.prevNoteSecondsEnd;\r\n        const prevNoteSecondsStartUnscaled: number = this.prevNoteSecondsEndUnscaled;\r\n        const prevNoteSecondsEnd: number = prevNoteSecondsStart + secondsPerTick;\r\n        const prevNoteSecondsEndUnscaled: number = prevNoteSecondsStartUnscaled + secondsPerTickUnscaled;\r\n        const prevNoteTicksStart: number = this.prevNoteTicksEnd;\r\n        const prevNoteTicksEnd: number = prevNoteTicksStart + 1.0;\r\n\r\n        const beatsPerTick: number = 1.0 / (Config.ticksPerPart * Config.partsPerBeat);\r\n        const beatTimeStart: number = beatsPerTick * tickTimeStart;\r\n        const beatTimeEnd: number = beatsPerTick * tickTimeEnd;\r\n\r\n        let noteSizeStart: number = this._noteSizeFinal;\r\n        let noteSizeEnd: number = this._noteSizeFinal;\r\n        let prevNoteSize: number = this._prevNoteSizeFinal;\r\n        let nextNoteSize: number = 0;\r\n        let prevSlideStart: boolean = false;\r\n        let prevSlideEnd: boolean = false;\r\n        let nextSlideStart: boolean = false;\r\n        let nextSlideEnd: boolean = false;\r\n        let prevSlideRatioStart: number = 0.0;\r\n        let prevSlideRatioEnd: number = 0.0;\r\n        let nextSlideRatioStart: number = 0.0;\r\n        let nextSlideRatioEnd: number = 0.0;\r\n        if (tone != null && tone.note != null && !tone.passedEndOfNote) {\r\n            const endPinIndex: number = tone.note.getEndPinIndex(currentPart);\r\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = tone.note.pins[endPinIndex];\r\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\r\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\r\n            const ratioStart: number = (tickTimeStartReal - startPinTick) / (endPinTick - startPinTick);\r\n            const ratioEnd: number = (tickTimeEndReal - startPinTick) / (endPinTick - startPinTick);\r\n            noteSizeStart = startPin.size + (endPin.size - startPin.size) * ratioStart;\r\n            noteSizeEnd = startPin.size + (endPin.size - startPin.size) * ratioEnd;\r\n\r\n            if (transition.slides) {\r\n                const noteStartTick: number = tone.noteStartPart * Config.ticksPerPart;\r\n                const noteEndTick: number = tone.noteEndPart * Config.ticksPerPart;\r\n                const noteLengthTicks: number = noteEndTick - noteStartTick;\r\n                const maximumSlideTicks: number = noteLengthTicks * 0.5;\r\n                const slideTicks: number = Math.min(maximumSlideTicks, instrument.slideTicks);\r\n                if (tone.prevNote != null && !tone.forceContinueAtStart) {\r\n                    if (tickTimeStartReal - noteStartTick < slideTicks) {\r\n                        prevSlideStart = true;\r\n                        prevSlideRatioStart = 0.5 * (1.0 - (tickTimeStartReal - noteStartTick) / slideTicks);\r\n                    }\r\n                    if (tickTimeEndReal - noteStartTick < slideTicks) {\r\n                        prevSlideEnd = true;\r\n                        prevSlideRatioEnd = 0.5 * (1.0 - (tickTimeEndReal - noteStartTick) / slideTicks);\r\n                    }\r\n                }\r\n                if (tone.nextNote != null && !tone.forceContinueAtEnd) {\r\n                    nextNoteSize = tone.nextNote.pins[0].size\r\n                    if (noteEndTick - tickTimeStartReal < slideTicks) {\r\n                        nextSlideStart = true;\r\n                        nextSlideRatioStart = 0.5 * (1.0 - (noteEndTick - tickTimeStartReal) / slideTicks);\r\n                    }\r\n                    if (noteEndTick - tickTimeEndReal < slideTicks) {\r\n                        nextSlideEnd = true;\r\n                        nextSlideRatioEnd = 0.5 * (1.0 - (noteEndTick - tickTimeEndReal) / slideTicks);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let lowpassCutoffDecayVolumeCompensation: number = 1.0;\r\n        let usedNoteSize: boolean = false;\r\n        for (let envelopeIndex: number = 0; envelopeIndex <= instrument.envelopeCount; envelopeIndex++) {\r\n            let automationTarget: AutomationTarget;\r\n            let targetIndex: number;\r\n            let envelope: Envelope;\r\n\r\n            if (envelopeIndex == instrument.envelopeCount) {\r\n                if (usedNoteSize /*|| !this._perNote*/) break;\r\n                // Special case: if no other envelopes used note size, default to applying it to note volume.\r\n                automationTarget = Config.instrumentAutomationTargets.dictionary[\"noteVolume\"];\r\n                targetIndex = 0;\r\n                envelope = Config.envelopes.dictionary[\"note size\"];\r\n            } else {\r\n                let envelopeSettings: EnvelopeSettings = instrument.envelopes[envelopeIndex];\r\n                automationTarget = Config.instrumentAutomationTargets[envelopeSettings.target];\r\n                targetIndex = envelopeSettings.index;\r\n                envelope = Config.envelopes[envelopeSettings.envelope];\r\n                if (envelope.type == EnvelopeType.noteSize) usedNoteSize = true;\r\n            }\r\n                        if (/*automationTarget.perNote == this._perNote &&*/ automationTarget.computeIndex != null) {\r\n                const computeIndex: number = automationTarget.computeIndex + targetIndex;\r\n                let envelopeStart: number = EnvelopeComputer.computeEnvelope(envelope, noteSecondsStart, beatTimeStart, noteSizeStart);\r\n                if (prevSlideStart) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsStart, beatTimeStart, prevNoteSize);\r\n                    envelopeStart += (other - envelopeStart) * prevSlideRatioStart;\r\n                }\r\n                if (nextSlideStart) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeStart, nextNoteSize);\r\n                    envelopeStart += (other - envelopeStart) * nextSlideRatioStart;\r\n                }\r\n                let envelopeEnd: number = envelopeStart;\r\n                if (instrument.discreteEnvelope == false) {\r\n                    envelopeEnd = EnvelopeComputer.computeEnvelope(envelope, noteSecondsEnd, beatTimeEnd, noteSizeEnd);\r\n                    if (prevSlideEnd) {\r\n                        const other: number = EnvelopeComputer.computeEnvelope(envelope, prevNoteSecondsEnd, beatTimeEnd, prevNoteSize);\r\n                        envelopeEnd += (other - envelopeEnd) * prevSlideRatioEnd;\r\n                    }\r\n                    if (nextSlideEnd) {\r\n                        const other: number = EnvelopeComputer.computeEnvelope(envelope, 0.0, beatTimeEnd, nextNoteSize);\r\n                        envelopeEnd += (other - envelopeEnd) * nextSlideRatioEnd;\r\n                    }\r\n                }\r\n\r\n                this.envelopeStarts[computeIndex] *= envelopeStart;\r\n                this.envelopeEnds[computeIndex] *= envelopeEnd;\r\n                this._modifiedEnvelopeIndices[this._modifiedEnvelopeCount++] = computeIndex;\r\n\r\n                if (automationTarget.isFilter) {\r\n                    const filterSettings: FilterSettings = /*this._perNote ?*/ (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter /*: instrument.eqFilter*/;\r\n                    if (filterSettings.controlPointCount > targetIndex && filterSettings.controlPoints[targetIndex].type == FilterType.lowPass) {\r\n                        lowpassCutoffDecayVolumeCompensation = Math.max(lowpassCutoffDecayVolumeCompensation, EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(envelope));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.noteSecondsStart = noteSecondsStart;\r\n        this.noteSecondsStartUnscaled = noteSecondsStartUnscaled;\r\n        this.noteSecondsEnd = noteSecondsEnd;\r\n        this.noteSecondsEndUnscaled = noteSecondsEndUnscaled;\r\n        this.noteTicksStart = noteTicksStart;\r\n        this.noteTicksEnd = noteTicksEnd;\r\n        this.prevNoteSecondsStart = prevNoteSecondsStart;\r\n        this.prevNoteSecondsStartUnscaled = prevNoteSecondsStartUnscaled;\r\n        this.prevNoteSecondsEnd = prevNoteSecondsEnd;\r\n        this.prevNoteSecondsEndUnscaled = prevNoteSecondsEndUnscaled;\r\n        this.prevNoteTicksStart = prevNoteTicksStart;\r\n        this.prevNoteTicksEnd = prevNoteTicksEnd;\r\n        this.prevNoteSize = prevNoteSize;\r\n        this.nextNoteSize = nextNoteSize;\r\n        this.noteSizeStart = noteSizeStart;\r\n        this.noteSizeEnd = noteSizeEnd;\r\n        this.prevSlideStart = prevSlideStart;\r\n        this.prevSlideEnd = prevSlideEnd;\r\n        this.nextSlideStart = nextSlideStart;\r\n        this.nextSlideEnd = nextSlideEnd;\r\n        this.prevSlideRatioStart = prevSlideRatioStart;\r\n        this.prevSlideRatioEnd = prevSlideRatioEnd;\r\n        this.nextSlideRatioStart = nextSlideRatioStart;\r\n        this.nextSlideRatioEnd = nextSlideRatioEnd;\r\n        this.lowpassCutoffDecayVolumeCompensation = lowpassCutoffDecayVolumeCompensation;\r\n    }\r\n\r\n    public clearEnvelopes(): void {\r\n        for (let envelopeIndex: number = 0; envelopeIndex < this._modifiedEnvelopeCount; envelopeIndex++) {\r\n            const computeIndex: number = this._modifiedEnvelopeIndices[envelopeIndex];\r\n            this.envelopeStarts[computeIndex] = 1.0;\r\n            this.envelopeEnds[computeIndex] = 1.0;\r\n        }\r\n        this._modifiedEnvelopeCount = 0;\r\n    }\r\n\r\n    public static computeEnvelope(envelope: Envelope, time: number, beats: number, noteSize: number): number {\r\n        switch (envelope.type) {\r\n            case EnvelopeType.noteSize: return Synth.noteSizeToVolumeMult(noteSize);\r\n            case EnvelopeType.none: return 1.0;\r\n            case EnvelopeType.twang: return 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.swell: return 1.0 - 1.0 / (1.0 + time * envelope.speed);\r\n            case EnvelopeType.tremolo: return 0.5 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.5;\r\n            case EnvelopeType.tremolo2: return 0.75 - Math.cos(beats * 2.0 * Math.PI * envelope.speed) * 0.25;\r\n            case EnvelopeType.punch: return Math.max(1.0, 2.0 - time * 10.0);\r\n            case EnvelopeType.flare: const attack: number = 0.25 / Math.sqrt(envelope.speed); return time < attack ? time / attack : 1.0 / (1.0 + (time - attack) * envelope.speed);\r\n            case EnvelopeType.decay: return Math.pow(2, -envelope.speed * time);\r\n            case EnvelopeType.blip: return 1.0 * +(time < (0.25 / Math.sqrt(envelope.speed)));\r\n            case EnvelopeType.wibble:\r\n                let temp = 0.5 - Math.cos(beats * envelope.speed) * 0.5;\r\n                temp = 1.0 / (1.0 + time * (envelope.speed - (temp / (1.5 / envelope.speed))));\r\n                temp = temp > 0.0 ? temp : 0.0;\r\n                return temp;\r\n            case EnvelopeType.linear: {\r\n                let lin = (1.0 - (time / (16 / envelope.speed)));\r\n                lin = lin > 0.0 ? lin : 0.0;\r\n                return lin;\r\n            }\r\n            case EnvelopeType.rise: {\r\n                let lin = (time / (16 / envelope.speed));\r\n                lin = lin < 1.0 ? lin : 1.0;\r\n                return lin;\r\n            }\r\n            default: throw new Error(\"Unrecognized operator envelope type.\");\r\n        }\r\n\r\n    }\r\n\r\n    public static getLowpassCutoffDecayVolumeCompensation(envelope: Envelope): number {\r\n        // This is a little hokey in the details, but I designed it a while ago and keep it \r\n        // around for compatibility. This decides how much to increase the volume (or\r\n        // expression) to compensate for a decaying lowpass cutoff to maintain perceived\r\n        // volume overall.\r\n        if (envelope.type == EnvelopeType.decay) return 1.25 + 0.025 * /*envelope.speed */ envelope.speed;\r\n        if (envelope.type == EnvelopeType.twang) return 1.0 + 0.02 * /*envelope.speed */ envelope.speed;\r\n        return 1.0;\r\n    }\r\n}\r\n\r\nclass Tone {\r\n    public instrumentIndex: number;\r\n    public readonly pitches: number[] = Array(Config.maxChordSize+2).fill(0);\r\n    public pitchCount: number = 0;\r\n    public chordSize: number = 0;\r\n    public drumsetPitch: number | null = null;\r\n    public note: Note | null = null;\r\n    public prevNote: Note | null = null;\r\n    public nextNote: Note | null = null;\r\n    public prevNotePitchIndex: number = 0;\r\n    public nextNotePitchIndex: number = 0;\r\n    public freshlyAllocated: boolean = true;\r\n    public atNoteStart: boolean = false;\r\n    public isOnLastTick: boolean = false; // Whether the tone is finished fading out and ready to be freed.\r\n    public passedEndOfNote: boolean = false;\r\n    public forceContinueAtStart: boolean = false;\r\n    public forceContinueAtEnd: boolean = false;\r\n    public noteStartPart: number = 0;\r\n    public noteEndPart: number = 0;\r\n    public ticksSinceReleased: number = 0;\r\n    public liveInputSamplesHeld: number = 0;\r\n    public lastInterval: number = 0;\r\n    public noiseSample: number = 0.0;\r\n    public noiseSampleA: number = 0.0;\r\n    public noiseSampleB: number = 0.0;\r\n    public stringSustainStart: number = 0;\r\n    public stringSustainEnd: number = 0;\r\n    public readonly phases: number[] = [];\r\n    public readonly operatorWaves: OperatorWave[] = [];\r\n    public readonly phaseDeltas: number[] = [];\r\n\t\t\t// advloop addition\r\n        public directions: number[] = [];\r\n        public chipWaveCompletions: number[] = [];\r\n        public chipWavePrevWaves: number[] = [];\r\n        public chipWaveCompletionsLastWave: number[] = [];\r\n           // advloop addition\r\n    public readonly phaseDeltaScales: number[] = [];\r\n    public expression: number = 0.0;\r\n    public expressionDelta: number = 0.0;\r\n    public readonly operatorExpressions: number[] = [];\r\n    public readonly operatorExpressionDeltas: number[] = [];\r\n    public readonly prevPitchExpressions: Array<number | null> = Array(Config.maxPitchOrOperatorCount).fill(null);\r\n    public prevVibrato: number | null = null;\r\n    public prevStringDecay: number | null = null;\r\n    public pulseWidth: number = 0.0;\r\n    public pulseWidthDelta: number = 0.0;\r\n    public decimalOffset: number = 0.0;\r\n    public supersawDynamism: number = 0.0;\r\n\tpublic supersawDynamismDelta: number = 0.0;\r\n\tpublic supersawUnisonDetunes: number[] = []; // These can change over time, but slowly enough that I'm not including corresponding delta values within a tick run.\r\n\tpublic supersawShape: number = 0.0;\r\n\tpublic supersawShapeDelta: number = 0.0;\r\n\tpublic supersawDelayLength: number = 0.0;\r\n\tpublic supersawDelayLengthDelta: number = 0.0;\r\n\tpublic supersawDelayLine: Float32Array | null = null;\r\n\tpublic supersawDelayIndex: number = -1;\r\n\tpublic supersawPrevPhaseDelta: number | null = null;\r\n    public readonly pickedStrings: PickedString[] = [];\r\n\r\n    public readonly noteFilters: DynamicBiquadFilter[] = [];\r\n    public noteFilterCount: number = 0;\r\n    public initialNoteFilterInput1: number = 0.0;\r\n    public initialNoteFilterInput2: number = 0.0;\r\n\r\n    public specialIntervalExpressionMult: number = 1.0;\r\n    public readonly feedbackOutputs: number[] = [];\r\n    public feedbackMult: number = 0.0;\r\n    public feedbackDelta: number = 0.0;\r\n    public stereoVolumeLStart: number = 0.0;\r\n    public stereoVolumeRStart: number = 0.0;\r\n    public stereoVolumeLDelta: number = 0.0;\r\n    public stereoVolumeRDelta: number = 0.0;\r\n    public stereoDelayStart: number = 0.0;\r\n    public stereoDelayEnd: number = 0.0;\r\n    public stereoDelayDelta: number = 0.0;\r\n    public customVolumeStart: number = 0.0;\r\n    public customVolumeEnd: number = 0.0;\r\n    public filterResonanceStart: number = 0.0;\r\n    public filterResonanceDelta: number = 0.0;\r\n    public isFirstOrder: boolean = false;\r\n\r\n    public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer(/*true*/);\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.noiseSample = 0.0;\r\n        this.noiseSampleA = 0.0;\r\n        this.noiseSampleB = 0.0;\r\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\r\n            this.phases[i] = 0.0;\r\n\t\t\t\t\t\t// advloop addition\r\n                this.directions[i] = 1;\r\n                this.chipWaveCompletions[i] = 0;\r\n                this.chipWavePrevWaves[i] = 0;\r\n                this.chipWaveCompletionsLastWave[i] = 0;\r\n                // advloop addition\r\n            this.operatorWaves[i] = Config.operatorWaves[0];\r\n            this.feedbackOutputs[i] = 0.0;\r\n            this.prevPitchExpressions[i] = null;\r\n        }\r\n        for (let i: number = 0; i < this.noteFilterCount; i++) {\r\n            this.noteFilters[i].resetOutput();\r\n        }\r\n        this.noteFilterCount = 0;\r\n        this.initialNoteFilterInput1 = 0.0;\r\n        this.initialNoteFilterInput2 = 0.0;\r\n        this.liveInputSamplesHeld = 0;\r\n        this.supersawDelayIndex = -1;\r\n        for (const pickedString of this.pickedStrings) {\r\n            pickedString.reset();\r\n        }\r\n        this.envelopeComputer.reset();\r\n        this.prevVibrato = null;\r\n        this.prevStringDecay = null;\r\n        this.supersawPrevPhaseDelta = null;\r\n        this.drumsetPitch = null;\r\n    }\r\n}\r\n\r\nclass InstrumentState {\r\n    public awake: boolean = false; // Whether the instrument's effects-processing loop should continue.\r\n    public computed: boolean = false; // Whether the effects-processing parameters are up-to-date for the current synth run.\r\n    public tonesAddedInThisTick: boolean = false; // Whether any instrument tones are currently active.\r\n    public flushingDelayLines: boolean = false; // If no tones were active recently, enter a mode where the delay lines are filled with zeros to reset them for later use.\r\n    public deactivateAfterThisTick: boolean = false; // Whether the instrument is ready to be deactivated because the delay lines, if any, are fully zeroed.\r\n    public attentuationProgress: number = 0.0; // How long since an active tone introduced an input signal to the delay lines, normalized from 0 to 1 based on how long to wait until the delay lines signal will have audibly dissapated.\r\n    public flushedSamples: number = 0; // How many delay line samples have been flushed to zero.\r\n    public readonly activeTones: Deque<Tone> = new Deque<Tone>();\r\n    public readonly activeModTones: Deque<Tone> = new Deque<Tone>();\r\n    public readonly releasedTones: Deque<Tone> = new Deque<Tone>(); // Tones that are in the process of fading out after the corresponding notes ended.\r\n    public readonly liveInputTones: Deque<Tone> = new Deque<Tone>(); // Tones that are initiated by a source external to the loaded song data.\r\n\r\n    public type: InstrumentType = InstrumentType.chip;\r\n    public synthesizer: Function | null = null;\r\n    public wave: Float32Array | null = null;\r\n\t\t\t\t // advloop addition\r\n            public isUsingAdvancedLoopControls = false;\r\n            public chipWaveLoopStart = 0;\r\n            public chipWaveLoopEnd = 0;\r\n            public chipWaveLoopMode = 0;\r\n            public chipWavePlayBackwards = false;\r\n            public chipWaveStartOffset = 0;\r\n            // advloop addition\r\n    public noisePitchFilterMult: number = 1.0;\r\n    public unison: Unison | null = null;\r\n    public unisonVoices: number = 1;\r\n    public unisonSpread: number = 0.0;\r\n    public unisonOffset: number = 0.0;\r\n    public unisonExpression: number = 1.4;\r\n    public unisonSign: number = 1.0;\r\n    public unisonBuzzes: boolean = false;\r\n    public chord: Chord | null = null;\r\n    public effects: number = 0;\r\n\r\n    public volumeScale: number = 0;\r\n    public aliases: boolean = false;\r\n    public arpTime: number = 0;\r\n    public vibratoTime: number = 0;\r\n    public nextVibratoTime: number = 0;\r\n    public envelopeTime: number = 0;\r\n\r\n    public eqFilterVolume: number = 1.0;\r\n    public eqFilterVolumeDelta: number = 0.0;\r\n    public mixVolume: number = 1.0;\r\n    public mixVolumeDelta: number = 0.0;\r\n    public delayInputMult: number = 0.0;\r\n    public delayInputMultDelta: number = 0.0;\r\n\r\n    public distortion: number = 0.0;\r\n    public distortionDelta: number = 0.0;\r\n    public distortionDrive: number = 0.0;\r\n    public distortionDriveDelta: number = 0.0;\r\n    public distortionFractionalInput1: number = 0.0;\r\n    public distortionFractionalInput2: number = 0.0;\r\n    public distortionFractionalInput3: number = 0.0;\r\n    public distortionPrevInput: number = 0.0;\r\n    public distortionNextOutput: number = 0.0;\r\n\r\n    public bitcrusherPrevInput: number = 0.0;\r\n    public bitcrusherCurrentOutput: number = 0.0;\r\n    public bitcrusherPhase: number = 1.0;\r\n    public bitcrusherPhaseDelta: number = 0.0;\r\n    public bitcrusherPhaseDeltaScale: number = 1.0;\r\n    public bitcrusherScale: number = 1.0;\r\n    public bitcrusherScaleScale: number = 1.0;\r\n    public bitcrusherFoldLevel: number = 1.0;\r\n    public bitcrusherFoldLevelScale: number = 1.0;\r\n\r\n    public readonly eqFilters: DynamicBiquadFilter[] = [];\r\n    public eqFilterCount: number = 0;\r\n    public initialEqFilterInput1: number = 0.0;\r\n    public initialEqFilterInput2: number = 0.0;\r\n\r\n    public panningDelayLine: Float32Array | null = null;\r\n    public panningDelayPos: number = 0;\r\n    public panningVolumeL: number = 0.0;\r\n    public panningVolumeR: number = 0.0;\r\n    public panningVolumeDeltaL: number = 0.0;\r\n    public panningVolumeDeltaR: number = 0.0;\r\n    public panningOffsetL: number = 0.0;\r\n    public panningOffsetR: number = 0.0;\r\n    public panningOffsetDeltaL: number = 0.0;\r\n    public panningOffsetDeltaR: number = 0.0;\r\n\r\n    public chorusDelayLineL: Float32Array | null = null;\r\n    public chorusDelayLineR: Float32Array | null = null;\r\n    public chorusDelayLineDirty: boolean = false;\r\n    public chorusDelayPos: number = 0;\r\n    public chorusPhase: number = 0;\r\n    public chorusVoiceMult: number = 0;\r\n    public chorusVoiceMultDelta: number = 0;\r\n    public chorusCombinedMult: number = 0;\r\n    public chorusCombinedMultDelta: number = 0;\r\n\r\n    public ringModMix: number = 0;\r\n    public ringModMixDelta: number = 0;\r\n    public ringModPhase: number = 0;\r\n    public ringModPhaseDelta: number = 0;\r\n    public ringModPhaseDeltaScale: number = 1.0;\r\n    public rmWaveformIndex: number = 0.0;\r\n    public rmPulseWidth: number = 0.0;\r\n    public rmHzOffset: number = 0.0;\r\n\r\n    public invertWave: boolean = false;\r\n\r\n    public echoDelayLineL: Float32Array | null = null;\r\n    public echoDelayLineR: Float32Array | null = null;\r\n    public echoDelayLineDirty: boolean = false;\r\n    public echoDelayPos: number = 0;\r\n    public echoDelayOffsetStart: number = 0;\r\n    public echoDelayOffsetEnd: number | null = null;\r\n    public echoDelayOffsetRatio: number = 0.0;\r\n    public echoDelayOffsetRatioDelta: number = 0.0;\r\n    public echoMult: number = 0.0;\r\n    public echoMultDelta: number = 0.0;\r\n    public echoShelfA1: number = 0.0;\r\n    public echoShelfB0: number = 0.0;\r\n    public echoShelfB1: number = 0.0;\r\n    public echoShelfSampleL: number = 0.0;\r\n    public echoShelfSampleR: number = 0.0;\r\n    public echoShelfPrevInputL: number = 0.0;\r\n    public echoShelfPrevInputR: number = 0.0;\r\n\r\n    public reverbDelayLine: Float32Array | null = null;\r\n    public reverbDelayLineDirty: boolean = false;\r\n    public reverbDelayPos: number = 0;\r\n    public reverbMult: number = 0.0;\r\n    public reverbMultDelta: number = 0.0;\r\n    public reverbShelfA1: number = 0.0;\r\n    public reverbShelfB0: number = 0.0;\r\n    public reverbShelfB1: number = 0.0;\r\n    public reverbShelfSample0: number = 0.0;\r\n    public reverbShelfSample1: number = 0.0;\r\n    public reverbShelfSample2: number = 0.0;\r\n    public reverbShelfSample3: number = 0.0;\r\n    public reverbShelfPrevInput0: number = 0.0;\r\n    public reverbShelfPrevInput1: number = 0.0;\r\n    public reverbShelfPrevInput2: number = 0.0;\r\n    public reverbShelfPrevInput3: number = 0.0;\r\n\r\n    public phaserSamples: Float32Array | null = null;\r\n    public phaserPrevInputs: Float32Array | null = null;\r\n    public phaserFeedbackMult: number = 0.0;\r\n    public phaserFeedbackMultDelta: number = 0.0;\r\n    public phaserMix: number = 0.0;\r\n    public phaserMixDelta: number = 0.0;\r\n    public phaserBreakCoef: number = 0.0;\r\n    public phaserBreakCoefDelta: number = 0.0;\r\n    public phaserStages: number = 0;\r\n    public phaserStagesDelta: number = 0;\r\n\r\n    public readonly envelopeComputer: EnvelopeComputer = new EnvelopeComputer();\r\n\r\n    public readonly spectrumWave: SpectrumWaveState = new SpectrumWaveState();\r\n    public readonly harmonicsWave: HarmonicsWaveState = new HarmonicsWaveState();\r\n    public readonly drumsetSpectrumWaves: SpectrumWaveState[] = [];\r\n\r\n    constructor() {\r\n        for (let i: number = 0; i < Config.drumCount; i++) {\r\n            this.drumsetSpectrumWaves[i] = new SpectrumWaveState();\r\n        }\r\n    }\r\n\r\n    public allocateNecessaryBuffers(synth: Synth, instrument: Instrument, samplesPerTick: number): void {\r\n        if (effectsIncludePanning(instrument.effects)) {\r\n            if (this.panningDelayLine == null || this.panningDelayLine.length < synth.panningDelayBufferSize) {\r\n                this.panningDelayLine = new Float32Array(synth.panningDelayBufferSize);\r\n            }\r\n        }\r\n        if (effectsIncludeChorus(instrument.effects)) {\r\n            if (this.chorusDelayLineL == null || this.chorusDelayLineL.length < synth.chorusDelayBufferSize) {\r\n                this.chorusDelayLineL = new Float32Array(synth.chorusDelayBufferSize);\r\n            }\r\n            if (this.chorusDelayLineR == null || this.chorusDelayLineR.length < synth.chorusDelayBufferSize) {\r\n                this.chorusDelayLineR = new Float32Array(synth.chorusDelayBufferSize);\r\n            }\r\n        }\r\n        if (effectsIncludeEcho(instrument.effects)) {\r\n            // account for tempo and delay automation changing delay length during a tick?\r\n            const safeEchoDelaySteps: number = Math.max(Config.echoDelayRange >> 1, (instrument.echoDelay + 1)); // The delay may be very short now, but if it increases later make sure we have enough sample history.\r\n            const baseEchoDelayBufferSize: number = Synth.fittingPowerOfTwo(safeEchoDelaySteps * Config.echoDelayStepTicks * samplesPerTick);\r\n            const safeEchoDelayBufferSize: number = baseEchoDelayBufferSize * 2; // If the tempo or delay changes and we suddenly need a longer delay, make sure that we have enough sample history to accomodate the longer delay.\r\n\r\n            if (this.echoDelayLineL == null || this.echoDelayLineR == null) {\r\n                this.echoDelayLineL = new Float32Array(safeEchoDelayBufferSize);\r\n                this.echoDelayLineR = new Float32Array(safeEchoDelayBufferSize);\r\n            } else if (this.echoDelayLineL.length < safeEchoDelayBufferSize || this.echoDelayLineR.length < safeEchoDelayBufferSize) {\r\n                // The echo delay length may change whlie the song is playing if tempo changes,\r\n                // so buffers may need to be reallocated, but we don't want to lose any echoes\r\n                // so we need to copy the contents of the old buffer to the new one.\r\n                const newDelayLineL: Float32Array = new Float32Array(safeEchoDelayBufferSize);\r\n                const newDelayLineR: Float32Array = new Float32Array(safeEchoDelayBufferSize);\r\n                const oldMask: number = this.echoDelayLineL.length - 1;\r\n\r\n                for (let i = 0; i < this.echoDelayLineL.length; i++) {\r\n                    newDelayLineL[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\r\n                    newDelayLineR[i] = this.echoDelayLineL[(this.echoDelayPos + i) & oldMask];\r\n                }\r\n\r\n                this.echoDelayPos = this.echoDelayLineL.length;\r\n                this.echoDelayLineL = newDelayLineL;\r\n                this.echoDelayLineR = newDelayLineR;\r\n            }\r\n        }\r\n        if (effectsIncludeReverb(instrument.effects)) {\r\n            // TODO: Make reverb delay line sample rate agnostic. Maybe just double buffer size for 96KHz? Adjust attenuation and shelf cutoff appropriately?\r\n            if (this.reverbDelayLine == null) {\r\n                this.reverbDelayLine = new Float32Array(Config.reverbDelayBufferSize);\r\n            }\r\n        }\r\n        if (effectsIncludePhaser(instrument.effects)) {\r\n            if (this.phaserSamples == null) {\r\n                this.phaserSamples = new Float32Array(Config.phaserMaxStages);\r\n                this.phaserPrevInputs = new Float32Array(Config.phaserMaxStages);\r\n            }\r\n        }\r\n    }\r\n\r\n    public deactivate(): void {\r\n        this.bitcrusherPrevInput = 0.0;\r\n        this.bitcrusherCurrentOutput = 0.0;\r\n        this.bitcrusherPhase = 1.0;\r\n        for (let i: number = 0; i < this.eqFilterCount; i++) {\r\n            this.eqFilters[i].resetOutput();\r\n        }\r\n        this.eqFilterCount = 0;\r\n        this.initialEqFilterInput1 = 0.0;\r\n        this.initialEqFilterInput2 = 0.0;\r\n        this.distortionFractionalInput1 = 0.0;\r\n        this.distortionFractionalInput2 = 0.0;\r\n        this.distortionFractionalInput3 = 0.0;\r\n        this.distortionPrevInput = 0.0;\r\n        this.distortionNextOutput = 0.0;\r\n        this.panningDelayPos = 0;\r\n        if (this.panningDelayLine != null) for (let i: number = 0; i < this.panningDelayLine.length; i++) this.panningDelayLine[i] = 0.0;\r\n        this.echoDelayOffsetEnd = null;\r\n        this.echoShelfSampleL = 0.0;\r\n        this.echoShelfSampleR = 0.0;\r\n        this.echoShelfPrevInputL = 0.0;\r\n        this.echoShelfPrevInputR = 0.0;\r\n        this.reverbShelfSample0 = 0.0;\r\n        this.reverbShelfSample1 = 0.0;\r\n        this.reverbShelfSample2 = 0.0;\r\n        this.reverbShelfSample3 = 0.0;\r\n        this.reverbShelfPrevInput0 = 0.0;\r\n        this.reverbShelfPrevInput1 = 0.0;\r\n        this.reverbShelfPrevInput2 = 0.0;\r\n        this.reverbShelfPrevInput3 = 0.0;\r\n        if (this.phaserSamples != null) for (let i: number = 0; i < this.phaserSamples.length; i++) this.phaserSamples[i] = 0.0;\r\n        if (this.phaserPrevInputs != null) for (let i: number = 0; i < this.phaserPrevInputs.length; i++) this.phaserPrevInputs[i] = 0.0;\r\n\r\n        this.volumeScale = 1.0;\r\n        this.aliases = false;\r\n\r\n        this.invertWave = false;\r\n\r\n        this.awake = false;\r\n        this.flushingDelayLines = false;\r\n        this.deactivateAfterThisTick = false;\r\n        this.attentuationProgress = 0.0;\r\n        this.flushedSamples = 0;\r\n    }\r\n\r\n    public resetAllEffects(): void {\r\n        this.deactivate();\r\n        // LFOs are reset here rather than in deactivate() for periodic oscillation that stays \"on the beat\". Resetting in deactivate() will cause it to reset with each note.\r\n        this.vibratoTime = 0;\r\n        this.nextVibratoTime = 0;\r\n        this.arpTime = 0;\r\n        this.envelopeTime = 0;\r\n        this.envelopeComputer.reset();\r\n        if (this.chorusDelayLineDirty) {\r\n            for (let i: number = 0; i < this.chorusDelayLineL!.length; i++) this.chorusDelayLineL![i] = 0.0;\r\n            for (let i: number = 0; i < this.chorusDelayLineR!.length; i++) this.chorusDelayLineR![i] = 0.0;\r\n        }\r\n        if (this.echoDelayLineDirty) {\r\n            for (let i: number = 0; i < this.echoDelayLineL!.length; i++) this.echoDelayLineL![i] = 0.0;\r\n            for (let i: number = 0; i < this.echoDelayLineR!.length; i++) this.echoDelayLineR![i] = 0.0;\r\n        }\r\n        if (this.reverbDelayLineDirty) {\r\n            for (let i: number = 0; i < this.reverbDelayLine!.length; i++) this.reverbDelayLine![i] = 0.0;\r\n        }\r\n\r\n        this.chorusPhase = 0.0;\r\n        this.ringModPhase = 0.0;\r\n    }\r\n\r\n    public compute(synth: Synth, instrument: Instrument, samplesPerTick: number, roundedSamplesPerTick: number, tone: Tone | null, channelIndex: number, instrumentIndex: number): void {\r\n        this.computed = true;\r\n\r\n        this.type = instrument.type;\r\n        this.synthesizer = Synth.getInstrumentSynthFunction(instrument);\r\n        this.unison = Config.unisons[instrument.unison];\r\n        this.unisonBuzzes = instrument.unisonBuzzes;\r\n        this.chord = instrument.getChord();\r\n        this.noisePitchFilterMult = Config.chipNoises[instrument.chipNoise].pitchFilterMult;\r\n        this.effects = instrument.effects;\t\r\n\r\n        this.aliases = instrument.aliases;\r\n        this.invertWave = instrument.invertWave;\r\n        const usesInvertWave: boolean = effectsIncludeInvertWave(this.effects);\r\n\r\n        if (usesInvertWave) {\r\n            if (synth.isModActive(Config.modulators.dictionary[\"invert wave\"].index, channelIndex, instrumentIndex)) {\r\n                this.invertWave = Boolean(Math.floor(synth.getModValue(Config.modulators.dictionary[\"invert wave\"].index, channelIndex, instrumentIndex, false)));\r\n            }\r\n        }\r\n        \r\n        this.volumeScale = 1.0;\r\n\r\n        this.allocateNecessaryBuffers(synth, instrument, samplesPerTick);\r\n\r\n        const samplesPerSecond: number = synth.samplesPerSecond;\r\n        this.updateWaves(instrument, samplesPerSecond);\r\n\r\n        const ticksIntoBar: number = synth.getTicksIntoBar();\r\n        const tickTimeStart: number = ticksIntoBar;\r\n        //const tickTimeEnd:   number = ticksIntoBar + 1.0;\r\n        const secondsPerTick: number = samplesPerTick / synth.samplesPerSecond;\r\n        const currentPart: number = synth.getCurrentPart();\r\n        let useEnvelopeSpeed: number = Config.arpSpeedScale[instrument.envelopeSpeed];\r\n        if (synth.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, instrumentIndex)) {\r\n            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, synth.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, instrumentIndex, false)));\r\n            if (Number.isInteger(useEnvelopeSpeed)) {\r\n                useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed];\r\n            } else {\r\n                // Linear interpolate envelope values\r\n                useEnvelopeSpeed = (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)];\r\n            }\r\n        }\r\n        this.envelopeComputer.computeEnvelopes(instrument, currentPart, this.envelopeTime, tickTimeStart, secondsPerTick, tone, useEnvelopeSpeed, synth.song, this);\r\n        const envelopeStarts: number[] = this.envelopeComputer.envelopeStarts;\r\n        const envelopeEnds: number[] = this.envelopeComputer.envelopeEnds;\r\n\r\n        const usesDistortion: boolean = effectsIncludeDistortion(this.effects);\r\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(this.effects);\r\n        const usesPanning: boolean = effectsIncludePanning(this.effects);\r\n        const usesChorus: boolean = effectsIncludeChorus(this.effects);\r\n        const usesEcho: boolean = effectsIncludeEcho(this.effects);\r\n        const usesReverb: boolean = effectsIncludeReverb(this.effects);\r\n        const usesRingModulation: boolean = effectsIncludeRM(this.effects);\r\n        const usesPhaser: boolean = effectsIncludePhaser(this.effects);\r\n\r\n        if (usesDistortion) {\r\n            let useDistortionStart: number = instrument.distortion;\r\n            let useDistortionEnd: number = instrument.distortion;\r\n\r\n            let useDistortionEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.distortion];\r\n            let useDistortionEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.distortion];\r\n\r\n            // Check for distortion mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex)) {\r\n                useDistortionStart = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, false);\r\n                useDistortionEnd = synth.getModValue(Config.modulators.dictionary[\"distortion\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song distortion\"].index, channelIndex, instrumentIndex)) {\r\n                useDistortionStart = clamp(0, Config.distortionRange, useDistortionStart * (synth.getModValue(Config.modulators.dictionary[\"song distortion\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song distortion\"].convertRealFactor) / Config.distortionRange);\r\n                useDistortionEnd = clamp(0, Config.distortionRange, useDistortionEnd * (synth.getModValue(Config.modulators.dictionary[\"song distortion\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song distortion\"].convertRealFactor) / Config.distortionRange);\r\n            }\r\n            const distortionSliderStart = Math.min(1.0, (useDistortionStart * useDistortionEnvelopeStart) / (Config.distortionRange - 1));\r\n            const distortionSliderEnd = Math.min(1.0, (useDistortionEnd * useDistortionEnvelopeEnd) / (Config.distortionRange - 1));\r\n            const distortionStart: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderStart) - 1.0) / 19.0, 2.0);\r\n            const distortionEnd: number = Math.pow(1.0 - 0.895 * (Math.pow(20.0, distortionSliderEnd) - 1.0) / 19.0, 2.0);\r\n            const distortionDriveStart: number = (1.0 + 2.0 * distortionSliderStart) / Config.distortionBaseVolume;\r\n            const distortionDriveEnd: number = (1.0 + 2.0 * distortionSliderEnd) / Config.distortionBaseVolume;\r\n            this.distortion = distortionStart;\r\n            this.distortionDelta = (distortionEnd - distortionStart) / roundedSamplesPerTick;\r\n            this.distortionDrive = distortionDriveStart;\r\n            this.distortionDriveDelta = (distortionDriveEnd - distortionDriveStart) / roundedSamplesPerTick;\r\n        }\r\n\r\n        if (usesBitcrusher) {\r\n            let freqSettingStart: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherFrequency])*/;\r\n            let freqSettingEnd: number = instrument.bitcrusherFreq /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherFrequency])*/;\r\n\r\n            let freqSettingEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.bitcrusherFrequency];\r\n            let freqSettingEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.bitcrusherFrequency];\r\n\r\n            // Check for freq crush mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex)) {\r\n                freqSettingStart = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, false);\r\n                freqSettingEnd = synth.getModValue(Config.modulators.dictionary[\"freq crush\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            let quantizationSettingStart: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeStarts[InstrumentAutomationIndex.bitcrusherQuantization])*/;\r\n            let quantizationSettingEnd: number = instrument.bitcrusherQuantization /** Math.sqrt(envelopeEnds[  InstrumentAutomationIndex.bitcrusherQuantization])*/;\r\n\r\n            let quantizationSettingEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.bitcrusherQuantization];\r\n            let quantizationSettingEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.bitcrusherQuantization];\r\n\r\n            // Check for bitcrush mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex)) {\r\n                quantizationSettingStart = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, false);\r\n                quantizationSettingEnd = synth.getModValue(Config.modulators.dictionary[\"bit crush\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            // Check for mod reverb, song scalar\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song bitcrush\"].index, channelIndex, instrumentIndex)) {\r\n                quantizationSettingStart = clamp(0, Config.bitcrusherQuantizationRange, quantizationSettingStart * (synth.getModValue(Config.modulators.dictionary[\"song bitcrush\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song bitcrush\"].convertRealFactor) / Config.bitcrusherQuantizationRange);\r\n                quantizationSettingEnd = clamp(0, Config.bitcrusherQuantizationRange, quantizationSettingEnd * (synth.getModValue(Config.modulators.dictionary[\"song bitcrush\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song bitcrush\"].convertRealFactor) / Config.bitcrusherQuantizationRange);\r\n            }\r\n            \r\n            if (synth.isModActive(Config.modulators.dictionary[\"song freqcrush\"].index, channelIndex, instrumentIndex)) {\r\n                freqSettingStart = clamp(0, Config.bitcrusherFreqRange, freqSettingStart * (synth.getModValue(Config.modulators.dictionary[\"song freqcrush\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song freqcrush\"].convertRealFactor) / Config.bitcrusherFreqRange);\r\n                freqSettingEnd = clamp(0, Config.bitcrusherFreqRange, freqSettingEnd * (synth.getModValue(Config.modulators.dictionary[\"song freqcrush\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song freqcrush\"].convertRealFactor) / Config.bitcrusherFreqRange);\r\n            }\r\n\r\n            const basePitch: number = Config.keys[synth.song!.key].basePitch + (Config.pitchesPerOctave * synth.song!.octave); // TODO: What if there's a key change mid-song?\r\n            const freqStart: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - (freqSettingStart*freqSettingEnvelopeStart)) * Config.bitcrusherOctaveStep);\r\n            const freqEnd: number = Instrument.frequencyFromPitch(basePitch + 60) * Math.pow(2.0, (Config.bitcrusherFreqRange - 1 - (freqSettingEnd*freqSettingEnvelopeEnd)) * Config.bitcrusherOctaveStep);\r\n            const phaseDeltaStart: number = Math.min(1.0, freqStart / samplesPerSecond);\r\n            const phaseDeltaEnd: number = Math.min(1.0, freqEnd / samplesPerSecond);\r\n            this.bitcrusherPhaseDelta = phaseDeltaStart;\r\n            this.bitcrusherPhaseDeltaScale = Math.pow(phaseDeltaEnd / phaseDeltaStart, 1.0 / roundedSamplesPerTick);\r\n\r\n            const scaleStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - (quantizationSettingStart*quantizationSettingEnvelopeStart)) * 0.5));\r\n            const scaleEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(2.0, 1.0 - Math.pow(2.0, (Config.bitcrusherQuantizationRange - 1 - (quantizationSettingEnd*quantizationSettingEnvelopeEnd)) * 0.5));\r\n            this.bitcrusherScale = scaleStart;\r\n            this.bitcrusherScaleScale = Math.pow(scaleEnd / scaleStart, 1.0 / roundedSamplesPerTick);\r\n\r\n            const foldLevelStart: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - (quantizationSettingStart*quantizationSettingEnvelopeStart));\r\n            const foldLevelEnd: number = 2.0 * Config.bitcrusherBaseVolume * Math.pow(1.5, Config.bitcrusherQuantizationRange - 1 - (quantizationSettingEnd*quantizationSettingEnvelopeEnd));\r\n            this.bitcrusherFoldLevel = foldLevelStart;\r\n            this.bitcrusherFoldLevelScale = Math.pow(foldLevelEnd / foldLevelStart, 1.0 / roundedSamplesPerTick);\r\n        }\r\n\r\n        let eqFilterVolume: number = 1.0; //this.envelopeComputer.lowpassCutoffDecayVolumeCompensation;\r\n        if (instrument.eqFilterType) {\r\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\r\n            const eqFilterSettingsStart: FilterSettings = instrument.eqFilter;\r\n            if (instrument.eqSubFilters[1] == null)\r\n                instrument.eqSubFilters[1] = new FilterSettings();\r\n            const eqFilterSettingsEnd: FilterSettings = instrument.eqSubFilters[1];\r\n\r\n            // Change location based on slider values\r\n            let startSimpleFreq: number = instrument.eqFilterSimpleCut;\r\n            let startSimpleGain: number = instrument.eqFilterSimplePeak;\r\n            let endSimpleFreq: number = instrument.eqFilterSimpleCut;\r\n            let endSimpleGain: number = instrument.eqFilterSimplePeak;\r\n\r\n            let filterChanges: boolean = false;\r\n\r\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex)) {\r\n                startSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, false);\r\n                endSimpleFreq = synth.getModValue(Config.modulators.dictionary[\"eq filt cut\"].index, channelIndex, instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n            if (synth.isModActive(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex)) {\r\n                startSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, false);\r\n                endSimpleGain = synth.getModValue(Config.modulators.dictionary[\"eq filt peak\"].index, channelIndex, instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n\r\n            let startPoint: FilterControlPoint;\r\n\r\n            if (filterChanges) {\r\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain);\r\n                eqFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain);\r\n\r\n                startPoint = eqFilterSettingsStart.controlPoints[0];\r\n                let endPoint: FilterControlPoint = eqFilterSettingsEnd.controlPoints[0];\r\n\r\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\r\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, 1.0, 1.0);\r\n\r\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\r\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n\r\n            } else {\r\n                eqFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, true);\r\n\r\n                startPoint = eqFilterSettingsStart.controlPoints[0];\r\n\r\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, 1.0, 1.0);\r\n\r\n                if (this.eqFilters.length < 1) this.eqFilters[0] = new DynamicBiquadFilter();\r\n                this.eqFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterStartCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n\r\n            }\r\n\r\n            eqFilterVolume *= startPoint.getVolumeCompensationMult();\r\n\r\n            this.eqFilterCount = 1;\r\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\r\n        }\r\n        else {\r\n            const eqFilterSettings: FilterSettings = (instrument.tmpEqFilterStart != null) ? instrument.tmpEqFilterStart : instrument.eqFilter;\r\n            //const eqAllFreqsEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterAllFreqs];\r\n            //const eqAllFreqsEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterAllFreqs];\r\n            for (let i: number = 0; i < eqFilterSettings.controlPointCount; i++) {\r\n                //const eqFreqEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterFreq0 + i];\r\n                //const eqFreqEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterFreq0 + i];\r\n                //const eqPeakEnvelopeStart: number = envelopeStarts[InstrumentAutomationIndex.eqFilterGain0 + i];\r\n                //const eqPeakEnvelopeEnd:   number = envelopeEnds[  InstrumentAutomationIndex.eqFilterGain0 + i];\r\n                let startPoint: FilterControlPoint = eqFilterSettings.controlPoints[i];\r\n                let endPoint: FilterControlPoint = (instrument.tmpEqFilterEnd != null && instrument.tmpEqFilterEnd.controlPoints[i] != null) ? instrument.tmpEqFilterEnd.controlPoints[i] : eqFilterSettings.controlPoints[i];\r\n\r\n                // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\r\n                if (startPoint.type != endPoint.type) {\r\n                    startPoint = endPoint;\r\n                }\r\n\r\n                startPoint.toCoefficients(Synth.tempFilterStartCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeStart * eqFreqEnvelopeStart*/ 1.0, /*eqPeakEnvelopeStart*/ 1.0);\r\n                endPoint.toCoefficients(Synth.tempFilterEndCoefficients, samplesPerSecond, /*eqAllFreqsEnvelopeEnd   * eqFreqEnvelopeEnd*/   1.0, /*eqPeakEnvelopeEnd*/   1.0);\r\n                if (this.eqFilters.length <= i) this.eqFilters[i] = new DynamicBiquadFilter();\r\n                this.eqFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n                eqFilterVolume *= startPoint.getVolumeCompensationMult();\r\n\r\n            }\r\n            this.eqFilterCount = eqFilterSettings.controlPointCount;\r\n            eqFilterVolume = Math.min(3.0, eqFilterVolume);\r\n        }\r\n\r\n        const mainInstrumentVolume: number = Synth.instrumentVolumeToVolumeMult(instrument.volume);\r\n        this.mixVolume = mainInstrumentVolume /** envelopeStarts[InstrumentAutomationIndex.mixVolume]*/;\r\n        let mixVolumeEnd: number = mainInstrumentVolume /** envelopeEnds[  InstrumentAutomationIndex.mixVolume]*/;\r\n\r\n        // Check for mod-related volume delta\r\n        if (synth.isModActive(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex)) {\r\n            // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n            const startVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, false);\r\n            const endVal: number = synth.getModValue(Config.modulators.dictionary[\"mix volume\"].index, channelIndex, instrumentIndex, true)\r\n            this.mixVolume *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\r\n            mixVolumeEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\r\n        }\r\n\r\n        // Check for SONG mod-related volume delta\r\n        if (synth.isModActive(Config.modulators.dictionary[\"song volume\"].index)) {\r\n            this.mixVolume *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, false)) / 100.0;\r\n            mixVolumeEnd *= (synth.getModValue(Config.modulators.dictionary[\"song volume\"].index, undefined, undefined, true)) / 100.0;\r\n        }\r\n\r\n        this.mixVolumeDelta = (mixVolumeEnd - this.mixVolume) / roundedSamplesPerTick;\r\n\r\n        let eqFilterVolumeStart: number = eqFilterVolume;\r\n        let eqFilterVolumeEnd: number = eqFilterVolume;\r\n        let delayInputMultStart: number = 1.0;\r\n        let delayInputMultEnd: number = 1.0;\r\n\r\n        if (usesPanning) {\r\n            const panEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.panning] * 2.0 - 1.0;\r\n            const panEnvelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.panning] * 2.0 - 1.0;\r\n\r\n            let usePanStart: number = instrument.pan;\r\n            let usePanEnd: number = instrument.pan;\r\n            // Check for pan mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex)) {\r\n                usePanStart = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, false);\r\n                usePanEnd = synth.getModValue(Config.modulators.dictionary[\"pan\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song panning\"].index, channelIndex, instrumentIndex)) {\r\n                usePanStart = clamp(-Config.panMax/2, Config.panMax, usePanStart + synth.getModValue(Config.modulators.dictionary[\"song panning\"].index, undefined, undefined, false));\r\n                usePanEnd = clamp(-Config.panMax/2, Config.panMax, usePanEnd + synth.getModValue(Config.modulators.dictionary[\"song panning\"].index, undefined, undefined, true));\r\n            }\r\n\r\n            let panStart: number = Math.max(-1.0, Math.min(1.0, ((usePanStart - Config.panCenter) / Config.panCenter) * panEnvelopeStart));\r\n            let panEnd: number = Math.max(-1.0, Math.min(1.0, ((usePanEnd - Config.panCenter) / Config.panCenter) * panEnvelopeEnd));\r\n\r\n            const volumeStartL: number = Math.cos((1 + panStart) * Math.PI * 0.25) * 1.414;\r\n            const volumeStartR: number = Math.cos((1 - panStart) * Math.PI * 0.25) * 1.414;\r\n            const volumeEndL: number = Math.cos((1 + panEnd) * Math.PI * 0.25) * 1.414;\r\n            const volumeEndR: number = Math.cos((1 - panEnd) * Math.PI * 0.25) * 1.414;\r\n            const maxDelaySamples: number = samplesPerSecond * Config.panDelaySecondsMax;\r\n\r\n            let usePanDelayStart: number = instrument.panDelay;\r\n            let usePanDelayEnd: number = instrument.panDelay;\r\n            // Check for pan delay mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex)) {\r\n                usePanDelayStart = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, false);\r\n                usePanDelayEnd = synth.getModValue(Config.modulators.dictionary[\"pan delay\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n\r\n            const delayStart: number = panStart * usePanDelayStart * maxDelaySamples / 10;\r\n            const delayEnd: number = panEnd * usePanDelayEnd * maxDelaySamples / 10;\r\n            const delayStartL: number = Math.max(0.0, delayStart);\r\n            const delayStartR: number = Math.max(0.0, -delayStart);\r\n            const delayEndL: number = Math.max(0.0, delayEnd);\r\n            const delayEndR: number = Math.max(0.0, -delayEnd);\r\n\r\n            this.panningVolumeL = volumeStartL;\r\n            this.panningVolumeR = volumeStartR;\r\n            this.panningVolumeDeltaL = (volumeEndL - volumeStartL) / roundedSamplesPerTick;\r\n            this.panningVolumeDeltaR = (volumeEndR - volumeStartR) / roundedSamplesPerTick;\r\n            this.panningOffsetL = this.panningDelayPos - delayStartL + synth.panningDelayBufferSize;\r\n            this.panningOffsetR = this.panningDelayPos - delayStartR + synth.panningDelayBufferSize;\r\n            this.panningOffsetDeltaL = (delayEndL - delayStartL) / roundedSamplesPerTick;\r\n            this.panningOffsetDeltaR = (delayEndR - delayStartR) / roundedSamplesPerTick;\r\n        }\r\n\r\n        if (usesChorus) {\r\n            const chorusEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.chorus];\r\n            const chorusEnvelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.chorus];\r\n            let useChorusStart: number = instrument.chorus;\r\n            let useChorusEnd: number = instrument.chorus;\r\n\r\n            // Check for chorus mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex)) {\r\n                useChorusStart = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, false);\r\n                useChorusEnd = synth.getModValue(Config.modulators.dictionary[\"chorus\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song chorus\"].index, channelIndex, instrumentIndex)) {\r\n                useChorusStart = clamp(0, Config.chorusRange, useChorusStart * (synth.getModValue(Config.modulators.dictionary[\"song chorus\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song chorus\"].convertRealFactor) / Config.chorusRange);\r\n                useChorusEnd = clamp(0, Config.chorusRange, useChorusEnd * (synth.getModValue(Config.modulators.dictionary[\"song chorus\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song chorus\"].convertRealFactor) / Config.chorusRange);\r\n            }\r\n            let chorusStart: number = Math.min(1.0, (useChorusStart*chorusEnvelopeStart) / (Config.chorusRange - 1));\r\n            let chorusEnd: number = Math.min(1.0, (useChorusEnd*chorusEnvelopeEnd) / (Config.chorusRange - 1));\r\n            chorusStart = chorusStart * 0.6 + (Math.pow(chorusStart, 6.0)) * 0.4;\r\n            chorusEnd = chorusEnd * 0.6 + (Math.pow(chorusEnd, 6.0)) * 0.4;\r\n            const chorusCombinedMultStart = 1.0 / Math.sqrt(3.0 * chorusStart * chorusStart + 1.0);\r\n            const chorusCombinedMultEnd = 1.0 / Math.sqrt(3.0 * chorusEnd * chorusEnd + 1.0);\r\n            this.chorusVoiceMult = chorusStart;\r\n            this.chorusVoiceMultDelta = (chorusEnd - chorusStart) / roundedSamplesPerTick;\r\n            this.chorusCombinedMult = chorusCombinedMultStart;\r\n            this.chorusCombinedMultDelta = (chorusCombinedMultEnd - chorusCombinedMultStart) / roundedSamplesPerTick;\r\n        }\r\n\r\n        if (usesRingModulation) {\r\n            let useRingModStart: number = instrument.ringModulation;\r\n            let useRingModEnd: number = instrument.ringModulation;\r\n            \r\n            let useRingModEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.ringModulation];\r\n            let useRingModEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.ringModulation];\r\n\r\n            let useRingModHzStart: number = Math.min(1.0, instrument.ringModulationHz / (Config.ringModHzRange - 1));\r\n            let useRingModHzEnd: number = Math.min(1.0, instrument.ringModulationHz/ (Config.ringModHzRange - 1));\r\n            let useRingModHzEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.ringModulationHz];\r\n            let useRingModHzEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.ringModulationHz];\r\n            let ringModMinHz: number = 20;\r\n            let ringModMaxHz: number = 4400;\r\n\r\n            if (synth.isModActive(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex)) {\r\n                useRingModStart = (synth.getModValue(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex, false));\r\n                useRingModEnd = (synth.getModValue(Config.modulators.dictionary[\"ring modulation\"].index, channelIndex, instrumentIndex, true));\r\n            }\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song ring modulation\"].index, channelIndex, instrumentIndex)) {\r\n                useRingModStart = clamp(0, Config.ringModRange, useRingModStart * (synth.getModValue(Config.modulators.dictionary[\"song ring modulation\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song ring modulation\"].convertRealFactor) / Config.ringModRange);\r\n                useRingModEnd = clamp(0, Config.ringModRange, useRingModEnd * (synth.getModValue(Config.modulators.dictionary[\"song ring modulation\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song ring modulation\"].convertRealFactor) / Config.ringModRange);\r\n            }\r\n            if (synth.isModActive(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex)) {\r\n                useRingModHzStart = Math.min(1.0, Math.max(0.0, (synth.getModValue(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex, false)) / (Config.ringModHzRange - 1)));\r\n                useRingModHzEnd = Math.min(1.0, Math.max(0.0, (synth.getModValue(Config.modulators.dictionary[\"ring mod hertz\"].index, channelIndex, instrumentIndex, false)) / (Config.ringModHzRange - 1)));\r\n            }\r\n            let ringModStart: number = Math.min(1.0, (useRingModStart * useRingModEnvelopeStart) / (Config.ringModRange - 1));\r\n            let ringModEnd: number = Math.min(1.0, (useRingModEnd * useRingModEnvelopeEnd) / (Config.ringModRange - 1));\r\n\r\n            this.ringModMix = ringModStart;\r\n            this.ringModMixDelta = (ringModEnd - ringModStart) / roundedSamplesPerTick;  \r\n\r\n            this.rmHzOffset = instrument.rmHzOffset;\r\n\r\n            let ringModPhaseDeltaStart = (clamp(1, ringModMaxHz+Config.rmHzOffsetCenter, ((ringModMinHz * Math.pow(ringModMaxHz / ringModMinHz, useRingModHzStart))*useRingModHzEnvelopeStart)+(this.rmHzOffset-Config.rmHzOffsetCenter))) / synth.samplesPerSecond;\r\n            let ringModPhaseDeltaEnd = (clamp(1, ringModMaxHz+Config.rmHzOffsetCenter, ((ringModMinHz * Math.pow(ringModMaxHz / ringModMinHz, useRingModHzEnd))*useRingModHzEnvelopeEnd)+(this.rmHzOffset-Config.rmHzOffsetCenter))) / synth.samplesPerSecond;\r\n            this.ringModPhaseDelta = ringModPhaseDeltaStart;\r\n            this.ringModPhaseDeltaScale = Math.pow(ringModPhaseDeltaEnd / ringModPhaseDeltaStart, 1.0 / roundedSamplesPerTick);\r\n            this.rmWaveformIndex = instrument.rmWaveformIndex;\r\n            this.rmPulseWidth = instrument.rmPulseWidth;\r\n            \r\n        }\r\n\r\n        let maxEchoMult = 0.0;\r\n        let averageEchoDelaySeconds: number = 0.0;\r\n        if (usesEcho) {\r\n            const echoSustainEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.echoSustain];\r\n            const echoSustainEnvelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.echoSustain];\r\n            let useEchoSustainStart: number = instrument.echoSustain;\r\n            let useEchoSustainEnd: number = instrument.echoSustain;\r\n            // Check for echo mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex)) {\r\n                useEchoSustainStart = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, false) );\r\n                useEchoSustainEnd = Math.max( 0.0, synth.getModValue(Config.modulators.dictionary[\"echo\"].index, channelIndex, instrumentIndex, true) );\r\n            }\r\n            const echoMultStart: number = Math.min(1.0, Math.pow((useEchoSustainStart * echoSustainEnvelopeStart) / Config.echoSustainRange, 1.1)) * 0.9;\r\n            const echoMultEnd: number = Math.min(1.0, Math.pow((useEchoSustainEnd * echoSustainEnvelopeEnd) / Config.echoSustainRange, 1.1)) * 0.9;\r\n            this.echoMult = echoMultStart;\r\n            this.echoMultDelta = Math.max(0.0, (echoMultEnd - echoMultStart) / roundedSamplesPerTick);\r\n            maxEchoMult = Math.max(echoMultStart, echoMultEnd);\r\n\r\n            // TODO: After computing a tick's settings once for multiple run lengths (which is\r\n            // good for audio worklet threads), compute the echo delay envelopes at tick (or\r\n            // part) boundaries to interpolate between two delay taps.\r\n            //const echoDelayEnvelopeStart:   number = envelopeStarts[InstrumentAutomationIndex.echoDelay];\r\n            //const echoDelayEnvelopeEnd:     number = envelopeEnds[  InstrumentAutomationIndex.echoDelay];\r\n            let useEchoDelayStart: number = instrument.echoDelay;\r\n            let useEchoDelayEnd: number = instrument.echoDelay;\r\n            let ignoreTicks: boolean = false;\r\n            // Check for pan delay mods\r\n            if (synth.isModActive(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex)) {\r\n                useEchoDelayStart = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, false);\r\n                useEchoDelayEnd = synth.getModValue(Config.modulators.dictionary[\"echo delay\"].index, channelIndex, instrumentIndex, true);\r\n                ignoreTicks = true;\r\n            }\r\n\r\n            const tmpEchoDelayOffsetStart: number = Math.round((useEchoDelayStart + 1) * Config.echoDelayStepTicks * samplesPerTick);\r\n            const tmpEchoDelayOffsetEnd: number = Math.round((useEchoDelayEnd + 1) * Config.echoDelayStepTicks * samplesPerTick);\r\n            if (this.echoDelayOffsetEnd != null && !ignoreTicks) {\r\n                this.echoDelayOffsetStart = this.echoDelayOffsetEnd;\r\n            } else {\r\n                this.echoDelayOffsetStart = tmpEchoDelayOffsetStart;\r\n            }\r\n\r\n            this.echoDelayOffsetEnd = tmpEchoDelayOffsetEnd;\r\n            averageEchoDelaySeconds = (this.echoDelayOffsetStart + this.echoDelayOffsetEnd) * 0.5 / samplesPerSecond;\r\n\r\n            this.echoDelayOffsetRatio = 0.0;\r\n            this.echoDelayOffsetRatioDelta = 1.0 / roundedSamplesPerTick;\r\n\r\n            const shelfRadians: number = 2.0 * Math.PI * Config.echoShelfHz / synth.samplesPerSecond;\r\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.echoShelfGain);\r\n            this.echoShelfA1 = Synth.tempFilterStartCoefficients.a[1];\r\n            this.echoShelfB0 = Synth.tempFilterStartCoefficients.b[0];\r\n            this.echoShelfB1 = Synth.tempFilterStartCoefficients.b[1];\r\n        }\r\n\r\n        let maxReverbMult = 0.0;\r\n\r\n        if (usesPhaser) {\r\n            const phaserMinFeedback: number = 0.0;\r\n            const phaserMaxFeedback: number = 0.95;\r\n            const phaserFeedbackMultSlider: number = instrument.phaserFeedback / Config.phaserFeedbackRange;\r\n            const phaserFeedbackMultEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.phaserFeedback];\r\n            const phaserFeedbackMultEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.phaserFeedback];\r\n            let phaserFeedbackMultRawStart: number = phaserFeedbackMultSlider * phaserFeedbackMultEnvelopeStart;\r\n            let phaserFeedbackMultRawEnd: number = phaserFeedbackMultSlider * phaserFeedbackMultEnvelopeEnd;\r\n            if (synth.isModActive(Config.modulators.dictionary[\"phaser feedback\"].index, channelIndex, instrumentIndex)) {\r\n                phaserFeedbackMultRawStart = synth.getModValue(Config.modulators.dictionary[\"phaser feedback\"].index, channelIndex, instrumentIndex, false) / (Config.phaserFeedbackRange);\r\n                phaserFeedbackMultRawEnd = synth.getModValue(Config.modulators.dictionary[\"phaser feedback\"].index, channelIndex, instrumentIndex, true) / (Config.phaserFeedbackRange);\r\n            }\r\n            const phaserFeedbackMultStart: number = Math.max(phaserMinFeedback, Math.min(phaserMaxFeedback, phaserFeedbackMultRawStart));\r\n            const phaserFeedbackMultEnd: number = Math.max(phaserMinFeedback, Math.min(phaserMaxFeedback, phaserFeedbackMultRawEnd));\r\n            this.phaserFeedbackMult = phaserFeedbackMultStart;\r\n            this.phaserFeedbackMultDelta = (phaserFeedbackMultEnd - phaserFeedbackMultStart) / roundedSamplesPerTick;\r\n            const phaserMixSlider: number = instrument.phaserMix / (Config.phaserMixRange - 1);\r\n\r\n            const phaserMixEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.phaserMix];\r\n            const phaserMixEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.phaserMix];\r\n            let phaserMixStart: number = phaserMixSlider * phaserMixEnvelopeStart;\r\n            let phaserMixEnd: number = phaserMixSlider * phaserMixEnvelopeEnd;\r\n\r\n            if (synth.isModActive(Config.modulators.dictionary[\"phaser\"].index, channelIndex, instrumentIndex)) {\r\n                phaserMixStart = Math.max(0, Math.min(Config.phaserMixRange - 1, synth.getModValue(Config.modulators.dictionary[\"phaser\"].index, channelIndex, instrumentIndex, false))) / (Config.phaserMixRange - 1)\r\n                phaserMixEnd = Math.max(0, Math.min(Config.phaserMixRange - 1, synth.getModValue(Config.modulators.dictionary[\"phaser\"].index, channelIndex, instrumentIndex, true))) / (Config.phaserMixRange - 1);\r\n            }\r\n            this.phaserMix = phaserMixStart;\r\n            this.phaserMixDelta = (phaserMixEnd - phaserMixStart) / roundedSamplesPerTick;\r\n\r\n            // @TODO: Use filtering.ts\r\n            const phaserBreakFreqSlider: number = instrument.phaserFreq / (Config.phaserFreqRange - 1);\r\n            let phaserBreakFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.phaserFreq];\r\n            let phaserBreakFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.phaserFreq];\r\n            let phaserBreakFreqRawStart: number = phaserBreakFreqSlider * phaserBreakFreqEnvelopeStart;\r\n            let phaserBreakFreqRawEnd: number = phaserBreakFreqSlider * phaserBreakFreqEnvelopeEnd;\r\n            if (synth.isModActive(Config.modulators.dictionary[\"phaser frequency\"].index, channelIndex, instrumentIndex)) {\r\n                phaserBreakFreqRawStart = synth.getModValue(Config.modulators.dictionary[\"phaser frequency\"].index, channelIndex, instrumentIndex, false) / (Config.phaserFreqRange);\r\n                phaserBreakFreqRawEnd = synth.getModValue(Config.modulators.dictionary[\"phaser frequency\"].index, channelIndex, instrumentIndex, true) / (Config.phaserFreqRange);\r\n            }\r\n            const phaserBreakFreqRemappedStart: number = Config.phaserMinFreq * Math.pow(Config.phaserMaxFreq / Config.phaserMinFreq, phaserBreakFreqRawStart);\r\n            const phaserBreakFreqRemappedEnd: number = Config.phaserMinFreq * Math.pow(Config.phaserMaxFreq / Config.phaserMinFreq, phaserBreakFreqRawEnd);\r\n            const phaserBreakFreqStart: number = Math.max(Config.phaserMinFreq, Math.min(Config.phaserMaxFreq, phaserBreakFreqRemappedStart)); \r\n            const phaserBreakFreqStartT: number = Math.tan(Math.PI * phaserBreakFreqStart / samplesPerSecond);\r\n            const phaserBreakCoefStart: number = (phaserBreakFreqStartT - 1) / (phaserBreakFreqStartT + 1);\r\n            const phaserBreakFreqEnd: number = Math.max(Config.phaserMinFreq, Math.min(Config.phaserMaxFreq, phaserBreakFreqRemappedEnd));\r\n            const phaserBreakFreqEndT: number = Math.tan(Math.PI * phaserBreakFreqEnd / samplesPerSecond);\r\n            const phaserBreakCoefEnd: number = (phaserBreakFreqEndT - 1) / (phaserBreakFreqEndT + 1);\r\n\r\n            this.phaserBreakCoef = phaserBreakCoefStart;\r\n            this.phaserBreakCoefDelta = (phaserBreakCoefEnd - phaserBreakCoefStart) / roundedSamplesPerTick;\r\n            const phaserStagesEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.phaserStages];\r\n            const phaserStagesEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.phaserStages];\r\n            const phaserStagesSlider: number = instrument.phaserStages;\r\n            \r\n            let phaserStagesStart = Math.max(Config.phaserMinStages, Math.min(Config.phaserMaxStages, phaserStagesSlider * phaserStagesEnvelopeStart));\r\n            let phaserStagesEnd = Math.max(Config.phaserMinStages, Math.min(Config.phaserMaxStages, phaserStagesSlider * phaserStagesEnvelopeEnd));\r\n\r\n            if (synth.isModActive(Config.modulators.dictionary[\"phaser stages\"].index, channelIndex, instrumentIndex)) {\r\n                phaserStagesStart = Math.round(synth.getModValue(Config.modulators.dictionary[\"phaser stages\"].index, channelIndex, instrumentIndex, false));\r\n                phaserStagesEnd = Math.round(synth.getModValue(Config.modulators.dictionary[\"phaser stages\"].index, channelIndex, instrumentIndex, false))\r\n            }\r\n\r\n            this.phaserStages = phaserStagesStart;\r\n            this.phaserStagesDelta = (phaserStagesEnd - phaserStagesStart) / roundedSamplesPerTick;\r\n        }\r\n            \r\n\r\n        if (usesReverb) {\r\n            const reverbEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.reverb];\r\n            const reverbEnvelopeEnd:   number = envelopeEnds[  EnvelopeComputeIndex.reverb];\r\n\r\n            let useReverbStart: number = instrument.reverb;\r\n            let useReverbEnd: number = instrument.reverb;\r\n\r\n            // Check for mod reverb, instrument level\r\n            if (synth.isModActive(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex)) {\r\n                useReverbStart = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, false);\r\n                useReverbEnd = synth.getModValue(Config.modulators.dictionary[\"reverb\"].index, channelIndex, instrumentIndex, true);\r\n            }\r\n            // Check for mod reverb, song scalar\r\n            if (synth.isModActive(Config.modulators.dictionary[\"song reverb\"].index, channelIndex, instrumentIndex)) {\r\n                useReverbStart *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, false) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\r\n                useReverbEnd *= (synth.getModValue(Config.modulators.dictionary[\"song reverb\"].index, undefined, undefined, true) - Config.modulators.dictionary[\"song reverb\"].convertRealFactor) / Config.reverbRange;\r\n            }\r\n\r\n            const reverbStart: number = Math.min(1.0, Math.pow(reverbEnvelopeStart * useReverbStart / Config.reverbRange, 0.667)) * 0.425;\r\n            const reverbEnd: number = Math.min(1.0, Math.pow(reverbEnvelopeEnd * useReverbEnd / Config.reverbRange, 0.667)) * 0.425;\r\n\r\n            this.reverbMult = reverbStart;\r\n            this.reverbMultDelta = (reverbEnd - reverbStart) / roundedSamplesPerTick;\r\n            maxReverbMult = Math.max(reverbStart, reverbEnd);\r\n\r\n            const shelfRadians: number = 2.0 * Math.PI * Config.reverbShelfHz / synth.samplesPerSecond;\r\n            Synth.tempFilterStartCoefficients.highShelf1stOrder(shelfRadians, Config.reverbShelfGain);\r\n            this.reverbShelfA1 = Synth.tempFilterStartCoefficients.a[1];\r\n            this.reverbShelfB0 = Synth.tempFilterStartCoefficients.b[0];\r\n            this.reverbShelfB1 = Synth.tempFilterStartCoefficients.b[1];\r\n        }\r\n\r\n        if (this.tonesAddedInThisTick) {\r\n            this.attentuationProgress = 0.0;\r\n            this.flushedSamples = 0;\r\n            this.flushingDelayLines = false;\r\n        } else if (!this.flushingDelayLines) {\r\n            // If this instrument isn't playing tones anymore, the volume can fade out by the\r\n            // end of the first tick. It's possible for filters and the panning delay line to\r\n            // continue past the end of the tone but they should have mostly dissipated by the\r\n            // end of the tick anyway.\r\n            if (this.attentuationProgress == 0.0) {\r\n                eqFilterVolumeEnd = 0.0;\r\n            } else {\r\n                eqFilterVolumeStart = 0.0;\r\n                eqFilterVolumeEnd = 0.0;\r\n            }\r\n\r\n            const attenuationThreshold: number = 1.0 / 256.0; // when the delay line signal has attenuated this much, it should be inaudible and should be flushed to zero.\r\n            const halfLifeMult: number = -Math.log2(attenuationThreshold);\r\n            let delayDuration: number = 0.0;\r\n\r\n            if (usesChorus) {\r\n                delayDuration += Config.chorusMaxDelay;\r\n            }\r\n\r\n            if (usesEcho) {\r\n                const attenuationPerSecond: number = Math.pow(maxEchoMult, 1.0 / averageEchoDelaySeconds);\r\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\r\n                const echoDuration: number = halfLife * halfLifeMult;\r\n                delayDuration += echoDuration;\r\n            }\r\n\r\n            if (usesReverb) {\r\n                const averageMult: number = maxReverbMult * 2.0;\r\n                const averageReverbDelaySeconds: number = (Config.reverbDelayBufferSize / 4.0) / samplesPerSecond;\r\n                const attenuationPerSecond: number = Math.pow(averageMult, 1.0 / averageReverbDelaySeconds);\r\n                const halfLife: number = -1.0 / Math.log2(attenuationPerSecond);\r\n                const reverbDuration: number = halfLife * halfLifeMult;\r\n                delayDuration += reverbDuration;\r\n            }\r\n\r\n            const secondsInTick: number = samplesPerTick / samplesPerSecond;\r\n            const progressInTick: number = secondsInTick / delayDuration;\r\n            const progressAtEndOfTick: number = this.attentuationProgress + progressInTick;\r\n            if (progressAtEndOfTick >= 1.0) {\r\n                delayInputMultEnd = 0.0;\r\n            }\r\n\r\n            this.attentuationProgress = progressAtEndOfTick;\r\n            if (this.attentuationProgress >= 1.0) {\r\n                this.flushingDelayLines = true;\r\n            }\r\n        } else {\r\n            // Flushing delay lines to zero since the signal has mostly dissipated.\r\n            eqFilterVolumeStart = 0.0;\r\n            eqFilterVolumeEnd = 0.0;\r\n            delayInputMultStart = 0.0;\r\n            delayInputMultEnd = 0.0;\r\n\r\n            let totalDelaySamples: number = 0;\r\n            if (usesChorus) totalDelaySamples += synth.chorusDelayBufferSize;\r\n            if (usesEcho) totalDelaySamples += this.echoDelayLineL!.length;\r\n            if (usesReverb) totalDelaySamples += Config.reverbDelayBufferSize;\r\n\r\n            this.flushedSamples += roundedSamplesPerTick;\r\n            if (this.flushedSamples >= totalDelaySamples) {\r\n                this.deactivateAfterThisTick = true;\r\n            }\r\n        }\r\n\r\n        this.eqFilterVolume = eqFilterVolumeStart;\r\n        this.eqFilterVolumeDelta = (eqFilterVolumeEnd - eqFilterVolumeStart) / roundedSamplesPerTick;\r\n        this.delayInputMult = delayInputMultStart;\r\n        this.delayInputMultDelta = (delayInputMultEnd - delayInputMultStart) / roundedSamplesPerTick;\r\n    }\r\n\r\n    public updateWaves(instrument: Instrument, samplesPerSecond: number): void {\r\n        this.volumeScale = 1.0;\r\n        if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.noise || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString || instrument.type == InstrumentType.spectrum) {\r\n            this.unisonVoices = instrument.unisonVoices;\r\n            this.unisonSpread = instrument.unisonSpread;\r\n            this.unisonOffset = instrument.unisonOffset;\r\n            this.unisonExpression = instrument.unisonExpression;\r\n            this.unisonSign = instrument.unisonSign;\r\n            this.unisonBuzzes = instrument.unisonBuzzes;\r\n        }\r\n        if (instrument.type == InstrumentType.chip) {\r\n            this.wave = (this.aliases) ? Config.rawChipWaves[instrument.chipWave].samples : Config.chipWaves[instrument.chipWave].samples;\r\n            this.isUsingAdvancedLoopControls = instrument.isUsingAdvancedLoopControls;\r\n            this.chipWaveLoopStart = instrument.chipWaveLoopStart;\r\n            this.chipWaveLoopEnd = instrument.chipWaveLoopEnd;\r\n            this.chipWaveLoopMode = instrument.chipWaveLoopMode;\r\n            this.chipWavePlayBackwards = instrument.chipWavePlayBackwards;\r\n            this.chipWaveStartOffset = instrument.chipWaveStartOffset;\r\n        } else if (instrument.type == InstrumentType.customChipWave) {\r\n            this.wave = (this.aliases) ? instrument.customChipWave! : instrument.customChipWaveIntegral!;\r\n            this.volumeScale = 0.05;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            this.wave = getDrumWave(instrument.chipNoise, inverseRealFourierTransform, scaleElementsByFactor);\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\r\n        } else if (instrument.type == InstrumentType.pickedString) {\r\n            this.wave = this.harmonicsWave.getCustomWave(instrument.harmonicsWave, instrument.type);\r\n        } else if (instrument.type == InstrumentType.spectrum) {\r\n            this.wave = this.spectrumWave.getCustomWave(instrument.spectrumWave, 8);\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            for (let i: number = 0; i < Config.drumCount; i++) {\r\n                this.drumsetSpectrumWaves[i].getCustomWave(instrument.drumsetSpectrumWaves[i], InstrumentState._drumsetIndexToSpectrumOctave(i));\r\n            }\r\n            this.wave = null;\r\n        } else {\r\n            this.wave = null;\r\n        }\r\n    }\r\n\r\n    public getDrumsetWave(pitch: number): Float32Array {\r\n        if (this.type == InstrumentType.drumset) {\r\n            return this.drumsetSpectrumWaves[pitch].wave!;\r\n        } else {\r\n            throw new Error(\"Unhandled instrument type in getDrumsetWave\");\r\n        }\r\n    }\r\n\r\n    public static drumsetIndexReferenceDelta(index: number): number {\r\n        return Instrument.frequencyFromPitch(Config.spectrumBasePitch + index * 6) / 44100;\r\n    }\r\n\r\n    private static _drumsetIndexToSpectrumOctave(index: number): number {\r\n        return 15 + Math.log2(InstrumentState.drumsetIndexReferenceDelta(index));\r\n    }\r\n}\r\n\r\nclass ChannelState {\r\n    public readonly instruments: InstrumentState[] = [];\r\n    public muted: boolean = false;\r\n    public singleSeamlessInstrument: number | null = null; // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\r\n}\r\n\r\nexport class Synth {\r\n\r\n    private syncSongState(): void {\r\n        const channelCount: number = this.song!.getChannelCount();\r\n        for (let i: number = this.channels.length; i < channelCount; i++) {\r\n            this.channels[i] = new ChannelState();\r\n        }\r\n        this.channels.length = channelCount;\r\n        for (let i: number = 0; i < channelCount; i++) {\r\n            const channel: Channel = this.song!.channels[i];\r\n            const channelState: ChannelState = this.channels[i];\r\n            for (let j: number = channelState.instruments.length; j < channel.instruments.length; j++) {\r\n                channelState.instruments[j] = new InstrumentState();\r\n            }\r\n            channelState.instruments.length = channel.instruments.length;\r\n\r\n            if (channelState.muted != channel.muted) {\r\n                channelState.muted = channel.muted;\r\n                if (channelState.muted) {\r\n                    for (const instrumentState of channelState.instruments) {\r\n                        instrumentState.resetAllEffects();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public initModFilters(song: Song | null): void {\r\n        if (song != null) {\r\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\r\n                    instrument.tmpEqFilterStart = instrument.eqFilter;\r\n                    instrument.tmpEqFilterEnd = null;\r\n                    instrument.tmpNoteFilterStart = instrument.noteFilter;\r\n                    instrument.tmpNoteFilterEnd = null;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public warmUpSynthesizer(song: Song | null): void {\r\n        // Don't bother to generate the drum waves unless the song actually\r\n        // uses them, since they may require a lot of computation.\r\n        if (song != null) {\r\n            this.syncSongState();\r\n            const samplesPerTick: number = this.getSamplesPerTick();\r\n            for (let channelIndex: number = 0; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                for (let instrumentIndex: number = 0; instrumentIndex < song.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                    const instrument: Instrument = song.channels[channelIndex].instruments[instrumentIndex];\r\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\r\n                    Synth.getInstrumentSynthFunction(instrument);\r\n                    instrumentState.vibratoTime = 0;\r\n                    instrumentState.nextVibratoTime = 0;\r\n                    instrumentState.envelopeTime = 0;\r\n                    instrumentState.arpTime = 0;\r\n                    instrumentState.updateWaves(instrument, this.samplesPerSecond);\r\n                    instrumentState.allocateNecessaryBuffers(this, instrument, samplesPerTick);\r\n                }\r\n\r\n            }\r\n        }\r\n        // JummBox needs to run synth functions for at least one sample (for JIT purposes)\r\n\t\t// before starting audio callbacks to avoid skipping the initial output.\r\n        var dummyArray = new Float32Array(1);\r\n        this.isPlayingSong = true;\r\n        this.synthesize(dummyArray, dummyArray, 1, true);\r\n        this.isPlayingSong = false;\r\n\t\t//BUGFIX FROM JUMMBOX\r\n    }\r\n\r\n    public computeLatestModValues(): void {\r\n\r\n        if (this.song != null && this.song.modChannelCount > 0) {\r\n\r\n            // Clear all mod values, and set up temp variables for the time a mod would be set at.\r\n            let latestModTimes: (number | null)[] = [];\r\n            let latestModInsTimes: (number | null)[][][] = [];\r\n            this.modValues = [];\r\n            this.nextModValues = [];\r\n            this.modInsValues = [];\r\n            this.nextModInsValues = [];\r\n            this.heldMods = [];\r\n            for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                latestModInsTimes[channel] = [];\r\n                this.modInsValues[channel] = [];\r\n                this.nextModInsValues[channel] = [];\r\n\r\n                for (let instrument: number = 0; instrument < this.song.channels[channel].instruments.length; instrument++) {\r\n                    this.modInsValues[channel][instrument] = [];\r\n                    this.nextModInsValues[channel][instrument] = [];\r\n                    latestModInsTimes[channel][instrument] = [];\r\n                }\r\n            }\r\n\r\n            // Find out where we're at in the fraction of the current bar.\r\n            let currentPart: number = this.beat * Config.partsPerBeat + this.part;\r\n\r\n            // For mod channels, calculate last set value for each mod\r\n            for (let channelIndex: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex < this.song.getChannelCount(); channelIndex++) {\r\n                if (!(this.song.channels[channelIndex].muted)) {\r\n\r\n                    let pattern: Pattern | null;\r\n\r\n                    for (let currentBar: number = this.bar; currentBar >= 0; currentBar--) {\r\n                        pattern = this.song.getPattern(channelIndex, currentBar);\r\n\r\n                        if (pattern != null) {\r\n                            let instrumentIdx: number = pattern.instruments[0];\r\n                            let instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIdx];\r\n                            let latestPinParts: number[] = [];\r\n                            let latestPinValues: number[] = [];\r\n\r\n                            let partsInBar: number = (currentBar == this.bar)\r\n                                ? currentPart\r\n                                : this.findPartsInBar(currentBar);\r\n\r\n                            for (const note of pattern.notes) {\r\n                                if (note.start <= partsInBar && (latestPinParts[Config.modCount - 1 - note.pitches[0]] == null || note.end > latestPinParts[Config.modCount - 1 - note.pitches[0]])) {\r\n                                    if (note.start == partsInBar) { // This can happen with next bar mods, and the value of the aligned note's start pin will be used.\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.start;\r\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[0].size;\r\n                                    }\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = note.end;\r\n                                        latestPinValues[Config.modCount - 1 - note.pitches[0]] = note.pins[note.pins.length - 1].size;\r\n                                    }\r\n                                    else {\r\n                                        latestPinParts[Config.modCount - 1 - note.pitches[0]] = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\r\n\r\n                                                latestPinValues[Config.modCount - 1 - note.pitches[0]] = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            // Set modulator value, if it wasn't set in another pattern already scanned\r\n                            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                if (latestPinParts[mod] != null) {\r\n                                    if (Config.modulators[instrument.modulators[mod]].forSong) {\r\n                                        if (latestModTimes[instrument.modulators[mod]] == null || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > (latestModTimes[instrument.modulators[mod]] as number)) {\r\n                                            this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], instrument.modInstruments[mod], instrument.modulators[mod]);\r\n                                            latestModTimes[instrument.modulators[mod]] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        // Generate list of used instruments\r\n                                        let usedInstruments: number[] = [];\r\n                                        // All\r\n                                        if (instrument.modInstruments[mod] == this.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                                            for (let i: number = 0; i < this.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\r\n                                                usedInstruments.push(i);\r\n                                            }\r\n                                        }\r\n                                        // Active\r\n                                        else if (instrument.modInstruments[mod] > this.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                                            const tgtPattern: Pattern | null = this.song.getPattern(instrument.modChannels[mod], currentBar);\r\n                                            if (tgtPattern != null)\r\n                                                usedInstruments = tgtPattern.instruments;\r\n                                        } else {\r\n                                            usedInstruments.push(instrument.modInstruments[mod]);\r\n                                        }\r\n                                        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\r\n                                            // Iterate through all used instruments by this modulator\r\n                                            // Special indices for mod filter targets, since they control multiple things.\r\n                                            const eqFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index;\r\n                                            const noteFilterParam: boolean = instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\r\n                                            let modulatorAdjust: number = instrument.modulators[mod];\r\n                                            if (eqFilterParam) {\r\n                                                modulatorAdjust = Config.modulators.length + (instrument.modFilterTypes[mod] | 0);\r\n                                            } else if (noteFilterParam) {\r\n                                                // Skip all possible indices for eq filter\r\n                                                modulatorAdjust = Config.modulators.length + 1 + (2 * Config.filterMaxPoints) + (instrument.modFilterTypes[mod] | 0);\r\n                                            }\r\n\r\n                                            if (latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] == null\r\n                                                || currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod] > latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust]!) {\r\n\r\n                                                if (eqFilterParam) {\r\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n                                                    if (instrument.modFilterTypes[mod] == 0) {\r\n                                                        tgtInstrument.tmpEqFilterStart = tgtInstrument.eqSubFilters[latestPinValues[mod]];\r\n                                                    } else {\r\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                                                            if (tgtInstrument.tmpEqFilterStart != null && tgtInstrument.tmpEqFilterStart == tgtInstrument.eqSubFilters[i]) {\r\n                                                                tgtInstrument.tmpEqFilterStart = new FilterSettings();\r\n                                                                tgtInstrument.tmpEqFilterStart.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\r\n                                                                i = Config.filterMorphCount;\r\n                                                            }\r\n                                                        }\r\n                                                        if (tgtInstrument.tmpEqFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpEqFilterStart.controlPointCount) {\r\n                                                            if (instrument.modFilterTypes[mod] % 2)\r\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\r\n                                                            else\r\n                                                                tgtInstrument.tmpEqFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\r\n                                                        }\r\n                                                    }\r\n                                                    tgtInstrument.tmpEqFilterEnd = tgtInstrument.tmpEqFilterStart;\r\n                                                } else if (noteFilterParam) {\r\n                                                    let tgtInstrument: Instrument = this.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n                                                    if (instrument.modFilterTypes[mod] == 0) {\r\n                                                        tgtInstrument.tmpNoteFilterStart = tgtInstrument.noteSubFilters[latestPinValues[mod]];\r\n                                                    } else {\r\n                                                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                                                            if (tgtInstrument.tmpNoteFilterStart != null && tgtInstrument.tmpNoteFilterStart == tgtInstrument.noteSubFilters[i]) {\r\n                                                                tgtInstrument.tmpNoteFilterStart = new FilterSettings();\r\n                                                                tgtInstrument.tmpNoteFilterStart.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\r\n                                                                i = Config.filterMorphCount;\r\n                                                            }\r\n                                                        }\r\n                                                        if (tgtInstrument.tmpNoteFilterStart != null && Math.floor((instrument.modFilterTypes[mod] - 1) / 2) < tgtInstrument.tmpNoteFilterStart.controlPointCount) {\r\n                                                            if (instrument.modFilterTypes[mod] % 2)\r\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].freq = latestPinValues[mod];\r\n                                                            else\r\n                                                                tgtInstrument.tmpNoteFilterStart.controlPoints[Math.floor((instrument.modFilterTypes[mod] - 1) / 2)].gain = latestPinValues[mod];\r\n                                                        }\r\n                                                    }\r\n                                                    tgtInstrument.tmpNoteFilterEnd = tgtInstrument.tmpNoteFilterStart;\r\n                                                }\r\n                                                else this.setModValue(latestPinValues[mod], latestPinValues[mod], instrument.modChannels[mod], usedInstruments[instrumentIndex], modulatorAdjust);\r\n\r\n                                                latestModInsTimes[instrument.modChannels[mod]][usedInstruments[instrumentIndex]][modulatorAdjust] = currentBar * Config.partsPerBeat * this.song.beatsPerBar + latestPinParts[mod];\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // Detects if a modulator is set, but not valid for the current effects/instrument type/filter type\r\n    // Note, setting 'none' or the intermediary steps when clicking to add a mod, like an unset channel/unset instrument, counts as valid.\r\n    // TODO: This kind of check is mirrored in SongEditor.ts' whenUpdated. Creates a lot of redundancy for adding new mods. Can be moved into new properties for mods, to avoid this later.\r\n    public determineInvalidModulators(instrument: Instrument): void {\r\n        if (this.song == null)\r\n            return;\r\n        for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n            instrument.invalidModulators[mod] = true;\r\n            // For song modulator, valid if any setting used\r\n            if (instrument.modChannels[mod] == -1) {\r\n                if (instrument.modulators[mod] != 0)\r\n                    instrument.invalidModulators[mod] = false;\r\n                continue;\r\n            }\r\n            const channel: Channel | null = this.song.channels[instrument.modChannels[mod]];\r\n            if (channel == null) continue;\r\n            let tgtInstrumentList: Instrument[] = [];\r\n            if (instrument.modInstruments[mod] >= channel.instruments.length) { // All or active\r\n                tgtInstrumentList = channel.instruments;\r\n            } else {\r\n                tgtInstrumentList = [channel.instruments[instrument.modInstruments[mod]]];\r\n            }\r\n            for (let i: number = 0; i < tgtInstrumentList.length; i++) {\r\n                const tgtInstrument: Instrument | null = tgtInstrumentList[i];\r\n                if (tgtInstrument == null) continue;\r\n                const str: string = Config.modulators[instrument.modulators[mod]].name;\r\n                // Check effects\r\n                if (!((Config.modulators[instrument.modulators[mod]].associatedEffect != EffectType.length && !(tgtInstrument.effects & (1 << Config.modulators[instrument.modulators[mod]].associatedEffect)))\r\n                    // Instrument type specific\r\n                    || ((tgtInstrument.type != InstrumentType.fm && tgtInstrument.type != InstrumentType.fm6op) && (str == \"fm slider 1\" || str == \"fm slider 2\" || str == \"fm slider 3\" || str == \"fm slider 4\" || str == \"fm feedback\"))\r\n                    || tgtInstrument.type != InstrumentType.fm6op && (str == \"fm slider 5\" || str == \"fm slider 6\")\r\n                    || ((tgtInstrument.type != InstrumentType.pwm && tgtInstrument.type != InstrumentType.supersaw) && (str == \"pulse width\" || str == \"decimal offset\"))\r\n                    || ((tgtInstrument.type != InstrumentType.supersaw) && (str == \"dynamism\" || str == \"spread\" || str == \"saw shape\"))\r\n                    // Arp check\r\n                    || (!tgtInstrument.getChord().arpeggiates && (str == \"arp speed\" || str == \"reset arp\"))\r\n                    // EQ Filter check\r\n                    || (tgtInstrument.eqFilterType && str == \"eq filter\")\r\n                    || (!tgtInstrument.eqFilterType && (str == \"eq filt cut\" || str == \"eq filt peak\"))\r\n                    || (str == \"eq filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(false))\r\n                    // Note Filter check\r\n                    || (tgtInstrument.noteFilterType && str == \"note filter\")\r\n                    || (!tgtInstrument.noteFilterType && (str == \"note filt cut\" || str == \"note filt peak\"))\r\n                    || (str == \"note filter\" && Math.floor((instrument.modFilterTypes[mod] + 1) / 2) > tgtInstrument.getLargestControlPointCount(true)))) {\r\n\r\n                    instrument.invalidModulators[mod] = false;\r\n                    i = tgtInstrumentList.length;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private static operatorAmplitudeCurve(amplitude: number): number {\r\n        return (Math.pow(16.0, amplitude / 15.0) - 1.0) / 15.0;\r\n    }\r\n\r\n    public samplesPerSecond: number = 44100;\r\n    public panningDelayBufferSize: number;\r\n    public panningDelayBufferMask: number;\r\n    public chorusDelayBufferSize: number;\r\n    public chorusDelayBufferMask: number;\r\n    // TODO: reverb\r\n\r\n    public song: Song | null = null;\r\n    public preferLowerLatency: boolean = false; // enable when recording performances from keyboard or MIDI. Takes effect next time you activate audio.\r\n    public anticipatePoorPerformance: boolean = false; // enable on mobile devices to reduce audio stutter glitches. Takes effect next time you activate audio.\r\n    public liveInputDuration: number = 0;\r\n    public liveBassInputDuration: number = 0;\r\n    public liveInputStarted: boolean = false;\r\n    public liveBassInputStarted: boolean = false;\r\n    public liveInputPitches: number[] = [];\r\n    public liveBassInputPitches: number[] = [];\r\n    public liveInputChannel: number = 0;\r\n    public liveBassInputChannel: number = 0;\r\n    public liveInputInstruments: number[] = [];\r\n    public liveBassInputInstruments: number[] = [];\r\n    public loopRepeatCount: number = -1;\r\n    public volume: number = 1.0;\r\n    public oscRefreshEventTimer: number = 0;\r\n    public oscEnabled: boolean = true;\r\n    public enableMetronome: boolean = false;\r\n    public countInMetronome: boolean = false;\r\n    public renderingSong: boolean = false;\r\n    public heldMods: HeldMod[] = [];\r\n    private wantToSkip: boolean = false;\r\n    private playheadInternal: number = 0.0;\r\n    private bar: number = 0;\r\n    private prevBar: number | null = null;\r\n    private nextBar: number | null = null;\r\n    private beat: number = 0;\r\n    private part: number = 0;\r\n    private tick: number = 0;\r\n    public isAtStartOfTick: boolean = true;\r\n    public isAtEndOfTick: boolean = true;\r\n    public tickSampleCountdown: number = 0;\r\n    private modValues: (number | null)[] = [];\r\n    public modInsValues: (number | null)[][][] = [];\r\n    private nextModValues: (number | null)[] = [];\r\n    public nextModInsValues: (number | null)[][][] = [];\r\n    private isPlayingSong: boolean = false;\r\n    private isRecording: boolean = false;\r\n    private liveInputEndTime: number = 0.0;\r\n    private browserAutomaticallyClearsAudioBuffer: boolean = true; // Assume true until proven otherwise. Older Chrome does not clear the buffer so it needs to be cleared manually.\r\n\r\n    public static readonly tempFilterStartCoefficients: FilterCoefficients = new FilterCoefficients();\r\n    public static readonly tempFilterEndCoefficients: FilterCoefficients = new FilterCoefficients();\r\n    private tempDrumSetControlPoint: FilterControlPoint = new FilterControlPoint();\r\n    public tempFrequencyResponse: FrequencyResponse = new FrequencyResponse();\r\n    public loopBarStart: number = -1;\r\n    public loopBarEnd: number = -1;\r\n\r\n\r\n\r\n    private static readonly fmSynthFunctionCache: Dictionary<Function> = {};\r\n    private static readonly fm6SynthFunctionCache: Dictionary<Function> = {};\r\n    private static readonly effectsFunctionCache: Function[] = Array(1 << 7).fill(undefined); // keep in sync with the number of post-process effects.\r\n    private static readonly pickedStringFunctionCache: Function[] = Array(3).fill(undefined); // keep in sync with the number of unison voices.\r\n\r\n    public readonly channels: ChannelState[] = [];\r\n    private readonly tonePool: Deque<Tone> = new Deque<Tone>();\r\n    private readonly tempMatchedPitchTones: Array<Tone | null> = Array(Config.maxChordSize).fill(null);\r\n\r\n    private startedMetronome: boolean = false;\r\n    private metronomeSamplesRemaining: number = -1;\r\n    private metronomeAmplitude: number = 0.0;\r\n    private metronomePrevAmplitude: number = 0.0;\r\n    private metronomeFilter: number = 0.0;\r\n    private limit: number = 0.0;\r\n\r\n    private tempMonoInstrumentSampleBuffer: Float32Array | null = null;\r\n\r\n    private audioCtx: any | null = null;\r\n    private scriptNode: any | null = null;\r\n\r\n    public get playing(): boolean {\r\n        return this.isPlayingSong;\r\n    }\r\n\r\n    public get recording(): boolean {\r\n        return this.isRecording;\r\n    }\r\n\r\n    public get playhead(): number {\r\n        return this.playheadInternal;\r\n    }\r\n\r\n    public set playhead(value: number) {\r\n        if (this.song != null) {\r\n            this.playheadInternal = Math.max(0, Math.min(this.song.barCount, value));\r\n            let remainder: number = this.playheadInternal;\r\n            this.bar = Math.floor(remainder);\r\n            remainder = this.song.beatsPerBar * (remainder - this.bar);\r\n            this.beat = Math.floor(remainder);\r\n            remainder = Config.partsPerBeat * (remainder - this.beat);\r\n            this.part = Math.floor(remainder);\r\n            remainder = Config.ticksPerPart * (remainder - this.part);\r\n            this.tick = Math.floor(remainder);\r\n            this.tickSampleCountdown = 0;\r\n            this.isAtStartOfTick = true;\r\n            this.prevBar = null;\r\n        }\r\n    }\r\n\r\n    public getSamplesPerBar(): number {\r\n        if (this.song == null) throw new Error();\r\n        return this.getSamplesPerTick() * Config.ticksPerPart * Config.partsPerBeat * this.song.beatsPerBar;\r\n    }\r\n\r\n    public getTicksIntoBar(): number {\r\n        return (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n    }\r\n    public getCurrentPart(): number {\r\n        return (this.beat * Config.partsPerBeat + this.part);\r\n    }\r\n\r\n    private findPartsInBar(bar: number): number {\r\n        if (this.song == null) return 0;\r\n        let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n        for (let channel: number = this.song.pitchChannelCount + this.song.noiseChannelCount; channel < this.song.getChannelCount(); channel++) {\r\n            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n            if (pattern != null) {\r\n                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\r\n                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                    if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\r\n                        for (const note of pattern.notes) {\r\n                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                // Find the earliest next bar note.\r\n                                if (partsInBar > note.start)\r\n                                    partsInBar = note.start;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return partsInBar;\r\n    }\r\n\r\n    // Returns the total samples in the song\r\n    public getTotalSamples(enableIntro: boolean, enableOutro: boolean, loop: number): number {\r\n        if (this.song == null)\r\n            return -1;\r\n\r\n        // Compute the window to be checked (start bar to end bar)\r\n        let startBar: number = enableIntro ? 0 : this.song.loopStart;\r\n        let endBar: number = enableOutro ? this.song.barCount : (this.song.loopStart + this.song.loopLength);\r\n        let hasTempoMods: boolean = false;\r\n        let hasNextBarMods: boolean = false;\r\n        let prevTempo: number = this.song.tempo;\r\n\r\n        // Determine if any tempo or next bar mods happen anywhere in the window\r\n        for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\r\n            for (let bar: number = startBar; bar < endBar; bar++) {\r\n                let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                if (pattern != null) {\r\n                    let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\r\n                    for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index) {\r\n                            hasTempoMods = true;\r\n                        }\r\n                        if (instrument.modulators[mod] == Config.modulators.dictionary[\"next bar\"].index) {\r\n                            hasNextBarMods = true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // If intro is not zero length, determine what the \"entry\" tempo is going into the start part, by looking at mods that came before...\r\n        if (startBar > 0) {\r\n            let latestTempoPin: number | null = null;\r\n            let latestTempoValue: number = 0;\r\n\r\n            for (let bar: number = startBar - 1; bar >= 0; bar--) {\r\n                for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\r\n                    let pattern = this.song.getPattern(channel, bar);\r\n\r\n                    if (pattern != null) {\r\n                        let instrumentIdx: number = pattern.instruments[0];\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n\r\n                        let partsInBar: number = this.findPartsInBar(bar);\r\n\r\n                        for (const note of pattern.notes) {\r\n                            if (instrument.modulators[Config.modCount - 1 - note.pitches[0]] == Config.modulators.dictionary[\"tempo\"].index) {\r\n                                if (note.start < partsInBar && (latestTempoPin == null || note.end > latestTempoPin)) {\r\n                                    if (note.end <= partsInBar) {\r\n                                        latestTempoPin = note.end;\r\n                                        latestTempoValue = note.pins[note.pins.length - 1].size;\r\n                                    }\r\n                                    else {\r\n                                        latestTempoPin = partsInBar;\r\n                                        // Find the pin where bar change happens, and compute where pin volume would be at that time\r\n                                        for (let pinIdx = 0; pinIdx < note.pins.length; pinIdx++) {\r\n                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                const transitionLength: number = note.pins[pinIdx].time - note.pins[pinIdx - 1].time;\r\n                                                const toNextBarLength: number = partsInBar - note.start - note.pins[pinIdx - 1].time;\r\n                                                const deltaVolume: number = note.pins[pinIdx].size - note.pins[pinIdx - 1].size;\r\n\r\n                                                latestTempoValue = Math.round(note.pins[pinIdx - 1].size + deltaVolume * toNextBarLength / transitionLength);\r\n                                                pinIdx = note.pins.length;\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Done once you process a pattern where tempo mods happened, since the search happens backward\r\n                if (latestTempoPin != null) {\r\n                    prevTempo = latestTempoValue + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                    bar = -1;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hasTempoMods || hasNextBarMods) {\r\n            // Run from start bar to end bar and observe looping, computing average tempo across each bar\r\n            let bar: number = startBar;\r\n            let ended: boolean = false;\r\n            let totalSamples: number = 0;\r\n\r\n            while (!ended) {\r\n                // Compute the subsection of the pattern that will play\r\n                let partsInBar: number = Config.partsPerBeat * this.song.beatsPerBar;\r\n                let currentPart: number = 0;\r\n\r\n                if (hasNextBarMods) {\r\n                    partsInBar = this.findPartsInBar(bar);\r\n                }\r\n\r\n                // Compute average tempo in this tick window, or use last tempo if nothing happened\r\n                if (hasTempoMods) {\r\n                    let foundMod: boolean = false;\r\n                    for (let channel: number = this.song.getChannelCount() - 1; channel >= this.song.pitchChannelCount + this.song.noiseChannelCount; channel--) {\r\n                        if (foundMod == false) {\r\n                            let pattern: Pattern | null = this.song.getPattern(channel, bar);\r\n                            if (pattern != null) {\r\n                                let instrument: Instrument = this.song.channels[channel].instruments[pattern.instruments[0]];\r\n                                for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                                    if (foundMod == false && instrument.modulators[mod] == Config.modulators.dictionary[\"tempo\"].index\r\n                                        && pattern.notes.find(n => n.pitches[0] == (Config.modCount - 1 - mod))) {\r\n                                        // Only the first tempo mod instrument for this bar will be checked (well, the first with a note in this bar).\r\n                                        foundMod = true;\r\n                                        // Need to re-sort the notes by start time to make the next part much less painful.\r\n                                        pattern.notes.sort(function (a, b) { return (a.start == b.start) ? a.pitches[0] - b.pitches[0] : a.start - b.start; });\r\n                                        for (const note of pattern.notes) {\r\n                                            if (note.pitches[0] == (Config.modCount - 1 - mod)) {\r\n                                                // Compute samples up to this note\r\n                                                totalSamples += (Math.min(partsInBar - currentPart, note.start - currentPart)) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                                                if (note.start < partsInBar) {\r\n                                                    for (let pinIdx: number = 1; pinIdx < note.pins.length; pinIdx++) {\r\n                                                        // Compute samples up to this pin\r\n                                                        if (note.pins[pinIdx - 1].time + note.start <= partsInBar) {\r\n                                                            const tickLength: number = Config.ticksPerPart * Math.min(partsInBar - (note.start + note.pins[pinIdx - 1].time), note.pins[pinIdx].time - note.pins[pinIdx - 1].time);\r\n                                                            const prevPinTempo: number = note.pins[pinIdx - 1].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                                                            let currPinTempo: number = note.pins[pinIdx].size + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                                                            if (note.pins[pinIdx].time + note.start > partsInBar) {\r\n                                                                // Compute an intermediary tempo since bar changed over mid-pin. Maybe I'm deep in \"what if\" territory now!\r\n                                                                currPinTempo = note.pins[pinIdx - 1].size + (note.pins[pinIdx].size - note.pins[pinIdx - 1].size) * (partsInBar - (note.start + note.pins[pinIdx - 1].time)) / (note.pins[pinIdx].time - note.pins[pinIdx - 1].time) + Config.modulators.dictionary[\"tempo\"].convertRealFactor;\r\n                                                            }\r\n                                                            let bpmScalar: number = Config.partsPerBeat * Config.ticksPerPart / 60;\r\n\r\n                                                            if (currPinTempo != prevPinTempo) {\r\n\r\n                                                                // Definite integral of SamplesPerTick w/r/t beats to find total samples from start point to end point for a variable tempo\r\n                                                                // The starting formula is\r\n                                                                // SamplesPerTick = SamplesPerSec / ((PartsPerBeat * TicksPerPart) / SecPerMin) * BeatsPerMin )\r\n                                                                //\r\n                                                                // This is an expression of samples per tick \"instantaneously\", and it can be multiplied by a number of ticks to get a sample count.\r\n                                                                // But this isn't the full story. BeatsPerMin, e.g. tempo, changes throughout the interval so it has to be expressed in terms of ticks, \"t\"\r\n                                                                // ( Also from now on PartsPerBeat, TicksPerPart, and SecPerMin are combined into one scalar, called \"BPMScalar\" )\r\n                                                                // Substituting BPM for a step variable that moves with respect to the current tick, we get\r\n                                                                // SamplesPerTick = SamplesPerSec / (BPMScalar * ( (EndTempo - StartTempo / TickLength) * t + StartTempo ) )\r\n                                                                //\r\n                                                                // When this equation is integrated from 0 to TickLength with respect to t, we get the following expression:\r\n                                                                //   Samples = - SamplesPerSec * TickLength * ( log( BPMScalar * EndTempo * TickLength ) - log( BPMScalar * StartTempo * TickLength ) ) / BPMScalar * ( StartTempo - EndTempo )\r\n\r\n                                                                totalSamples += - this.samplesPerSecond * tickLength * (Math.log(bpmScalar * currPinTempo * tickLength) - Math.log(bpmScalar * prevPinTempo * tickLength)) / (bpmScalar * (prevPinTempo - currPinTempo));\r\n\r\n                                                            }\r\n                                                            else {\r\n\r\n                                                                // No tempo change between the two pins.\r\n                                                                totalSamples += tickLength * this.getSamplesPerTickSpecificBPM(currPinTempo);\r\n\r\n                                                            }\r\n                                                            prevTempo = currPinTempo;\r\n                                                        }\r\n                                                        currentPart = Math.min(note.start + note.pins[pinIdx].time, partsInBar);\r\n                                                    }\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Compute samples for the rest of the bar\r\n                totalSamples += (partsInBar - currentPart) * Config.ticksPerPart * this.getSamplesPerTickSpecificBPM(prevTempo);\r\n\r\n                bar++;\r\n                if (loop != 0 && bar == this.song.loopStart + this.song.loopLength) {\r\n                    bar = this.song.loopStart;\r\n                    if (loop > 0) loop--;\r\n                }\r\n                if (bar >= endBar) {\r\n                    ended = true;\r\n                }\r\n\r\n            }\r\n\r\n            return Math.ceil(totalSamples);\r\n        }\r\n        else {\r\n            // No tempo or next bar mods... phew! Just calculate normally.\r\n            return this.getSamplesPerBar() * this.getTotalBars(enableIntro, enableOutro, loop);\r\n        }\r\n    }\r\n\r\n    public getTotalBars(enableIntro: boolean, enableOutro: boolean, useLoopCount: number = this.loopRepeatCount): number {\r\n        if (this.song == null) throw new Error();\r\n        let bars: number = this.song.loopLength * (useLoopCount + 1);\r\n        if (enableIntro) bars += this.song.loopStart;\r\n        if (enableOutro) bars += this.song.barCount - (this.song.loopStart + this.song.loopLength);\r\n        return bars;\r\n    }\r\n\r\n    constructor(song: Song | string | null = null) {\r\n        this.computeDelayBufferSizes();\r\n        if (song != null) this.setSong(song);\r\n    }\r\n\r\n    public setSong(song: Song | string): void {\r\n        if (typeof (song) == \"string\") {\r\n            this.song = new Song(song);\r\n        } else if (song instanceof Song) {\r\n            this.song = song;\r\n        }\r\n        this.prevBar = null;\r\n    }\r\n\r\n    private computeDelayBufferSizes(): void {\r\n        this.panningDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.panDelaySecondsMax);\r\n        this.panningDelayBufferMask = this.panningDelayBufferSize - 1;\r\n        this.chorusDelayBufferSize = Synth.fittingPowerOfTwo(this.samplesPerSecond * Config.chorusMaxDelay);\r\n        this.chorusDelayBufferMask = this.chorusDelayBufferSize - 1;\r\n    }\r\n\r\n    private activateAudio(): void {\r\n        const bufferSize: number = this.anticipatePoorPerformance ? (this.preferLowerLatency ? 2048 : 4096) : (this.preferLowerLatency ? 512 : 2048);\r\n        if (this.audioCtx == null || this.scriptNode == null || this.scriptNode.bufferSize != bufferSize) {\r\n            if (this.scriptNode != null) this.deactivateAudio();\r\n            const latencyHint: string = this.anticipatePoorPerformance ? (this.preferLowerLatency ? \"balanced\" : \"playback\") : (this.preferLowerLatency ? \"interactive\" : \"balanced\");\r\n            this.audioCtx = this.audioCtx || new (window.AudioContext || window.webkitAudioContext)({ latencyHint: latencyHint });\r\n            this.samplesPerSecond = this.audioCtx.sampleRate;\r\n            this.scriptNode = this.audioCtx.createScriptProcessor ? this.audioCtx.createScriptProcessor(bufferSize, 0, 2) : this.audioCtx.createJavaScriptNode(bufferSize, 0, 2); // bufferSize samples per callback buffer, 0 input channels, 2 output channels (left/right)\r\n            this.scriptNode.onaudioprocess = this.audioProcessCallback;\r\n            this.scriptNode.channelCountMode = 'explicit';\r\n            this.scriptNode.channelInterpretation = 'speakers';\r\n            this.scriptNode.connect(this.audioCtx.destination);\r\n\r\n            this.computeDelayBufferSizes();\r\n        }\r\n        this.audioCtx.resume();\r\n    }\r\n\r\n    private deactivateAudio(): void {\r\n        if (this.audioCtx != null && this.scriptNode != null) {\r\n            this.scriptNode.disconnect(this.audioCtx.destination);\r\n            this.scriptNode = null;\r\n            if (this.audioCtx.close) this.audioCtx.close(); // firefox is missing this function?\r\n            this.audioCtx = null;\r\n        }\r\n    }\r\n\r\n    public maintainLiveInput(): void {\r\n        this.activateAudio();\r\n        this.liveInputEndTime = performance.now() + 10000.0;\r\n    }\r\n\r\n    public play(): void {\r\n        if (this.isPlayingSong) return;\r\n        this.initModFilters(this.song);\r\n        this.computeLatestModValues();\r\n        this.activateAudio();\r\n        this.warmUpSynthesizer(this.song);\r\n        this.isPlayingSong = true;\r\n    }\r\n\r\n    public pause(): void {\r\n        if (!this.isPlayingSong) return;\r\n        this.isPlayingSong = false;\r\n        this.isRecording = false;\r\n        this.modValues = [];\r\n        this.nextModValues = [];\r\n        this.heldMods = [];\r\n        if (this.song != null) {\r\n            this.song.inVolumeCap = 0.0;\r\n            this.song.outVolumeCap = 0.0;\r\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\r\n                this.modInsValues[channelIndex] = [];\r\n                this.nextModInsValues[channelIndex] = [];\r\n            }\r\n        }\r\n        this.preferLowerLatency = false;\r\n    }\r\n\r\n    public startRecording(): void {\r\n        this.preferLowerLatency = true;\r\n        this.isRecording = true;\r\n        this.play();\r\n    }\r\n\r\n    public resetEffects(): void {\r\n        this.limit = 0.0;\r\n        this.freeAllTones();\r\n        if (this.song != null) {\r\n            for (const channelState of this.channels) {\r\n                for (const instrumentState of channelState.instruments) {\r\n                    instrumentState.resetAllEffects();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public setModValue(volumeStart: number, volumeEnd: number, channelIndex: number, instrumentIndex: number, setting: number): number {\r\n        let val: number = volumeStart + Config.modulators[setting].convertRealFactor;\r\n        let nextVal: number = volumeEnd + Config.modulators[setting].convertRealFactor;\r\n        // should these be turned into a function?\r\n        /* if (Config.modulators[setting].optionalModify == \"invert-0to50\") {\r\n            val = 50 - val;\r\n            nextVal = 50 - nextVal;\r\n        }\r\n        if (Config.modulators[setting].optionalModify == \"invert-0to99\") {\r\n            val = 99 - val;\r\n            nextVal = 99 - nextVal;\r\n        } */\r\n        if (Config.modulators[setting].forSong) {\r\n            if (this.modValues[setting] == null || this.modValues[setting] != val || this.nextModValues[setting] != nextVal) {\r\n                this.modValues[setting] = val;\r\n                this.nextModValues[setting] = nextVal;\r\n            }\r\n        } else {\r\n            if (this.modInsValues[channelIndex][instrumentIndex][setting] == null\r\n                || this.modInsValues[channelIndex][instrumentIndex][setting] != val\r\n                || this.nextModInsValues[channelIndex][instrumentIndex][setting] != nextVal) {\r\n                this.modInsValues[channelIndex][instrumentIndex][setting] = val;\r\n                this.nextModInsValues[channelIndex][instrumentIndex][setting] = nextVal;\r\n            }\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    public getModValue(setting: number, channel?: number | null, instrument?: number | null, nextVal?: boolean): number {\r\n        const forSong: boolean = Config.modulators[setting].forSong;\r\n        if (forSong) {\r\n            if (this.modValues[setting] != null && this.nextModValues[setting] != null) {\r\n                return nextVal ? this.nextModValues[setting]! : this.modValues[setting]!;\r\n            }\r\n        } else if (channel != undefined && instrument != undefined) {\r\n            if (this.modInsValues[channel][instrument][setting] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                return nextVal ? this.nextModInsValues[channel][instrument][setting]! : this.modInsValues[channel][instrument][setting]!;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    // Checks if any mod is active for the given channel/instrument OR if any mod is active for the song scope. Could split the logic if needed later.\r\n    public isAnyModActive(channel: number, instrument: number): boolean {\r\n        for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n            if ((this.modValues != undefined && this.modValues[setting] != null)\r\n                || (this.modInsValues != undefined && this.modInsValues[channel] != undefined && this.modInsValues[channel][instrument] != undefined && this.modInsValues[channel][instrument][setting] != null)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public unsetMod(setting: number, channel?: number, instrument?: number) {\r\n        if (this.isModActive(setting) || (channel != undefined && instrument != undefined && this.isModActive(setting, channel, instrument))) {\r\n            this.modValues[setting] = null;\r\n            this.nextModValues[setting] = null;\r\n            for (let i: number = 0; i < this.heldMods.length; i++) {\r\n                if (channel != undefined && instrument != undefined) {\r\n                    if (this.heldMods[i].channelIndex == channel && this.heldMods[i].instrumentIndex == instrument && this.heldMods[i].setting == setting)\r\n                        this.heldMods.splice(i, 1);\r\n                } else {\r\n                    if (this.heldMods[i].setting == setting)\r\n                        this.heldMods.splice(i, 1);\r\n                }\r\n            }\r\n            if (channel != undefined && instrument != undefined) {\r\n                this.modInsValues[channel][instrument][setting] = null;\r\n                this.nextModInsValues[channel][instrument][setting] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    public isFilterModActive(forNoteFilter: boolean, channelIdx: number, instrumentIdx: number) {\r\n        const instrument: Instrument = this.song!.channels[channelIdx].instruments[instrumentIdx];\r\n\r\n        if (forNoteFilter) {\r\n            if (instrument.noteFilterType)\r\n                return false;\r\n            if (instrument.tmpNoteFilterEnd != null)\r\n                return true;\r\n        }\r\n        else {\r\n            if (instrument.eqFilterType)\r\n                return false;\r\n            if (instrument.tmpEqFilterEnd != null)\r\n                return true;\r\n        }\r\n        return false\r\n    }\r\n\r\n    public isModActive(setting: number, channel?: number, instrument?: number): boolean {\r\n        const forSong: boolean = Config.modulators[setting].forSong;\r\n        if (forSong) {\r\n            return (this.modValues != undefined && this.modValues[setting] != null);\r\n        } else if (channel != undefined && instrument != undefined && this.modInsValues != undefined && this.modInsValues[channel] != null && this.modInsValues[channel][instrument] != null) {\r\n            return (this.modInsValues[channel][instrument][setting] != null);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Force a modulator to be held at the given volumeStart for a brief duration.\r\n    public forceHoldMods(volumeStart: number, channelIndex: number, instrumentIndex: number, setting: number): void {\r\n        let found: boolean = false;\r\n        for (let i: number = 0; i < this.heldMods.length; i++) {\r\n            if (this.heldMods[i].channelIndex == channelIndex && this.heldMods[i].instrumentIndex == instrumentIndex && this.heldMods[i].setting == setting) {\r\n                this.heldMods[i].volume = volumeStart;\r\n                this.heldMods[i].holdFor = 24;\r\n                found = true;\r\n            }\r\n        }\r\n        // Default: hold for 24 ticks / 12 parts (half a beat).\r\n        if (!found)\r\n            this.heldMods.push({ volume: volumeStart, channelIndex: channelIndex, instrumentIndex: instrumentIndex, setting: setting, holdFor: 24 });\r\n    }\r\n\r\n    public snapToStart(): void {\r\n        this.bar = 0;\r\n        this.resetEffects();\r\n        this.snapToBar();\r\n    }\r\n\r\n    public goToBar(bar: number): void {\r\n        this.bar = bar;\r\n        this.resetEffects();\r\n        this.playheadInternal = this.bar;\r\n    }\r\n\r\n    public snapToBar(): void {\r\n        this.playheadInternal = this.bar;\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = 0;\r\n    }\r\n\r\n    // this thing is relating to shift+b btw\r\n    public jumpIntoLoop(): void {\r\n        if (!this.song) return;\r\n        if (this.bar < this.song.loopStart || this.bar >= this.song.loopStart + this.song.loopLength) {\r\n            const oldBar: number = this.bar;\r\n            this.bar = this.song.loopStart;\r\n            this.playheadInternal += this.bar - oldBar;\r\n\r\n            if (this.playing)\r\n                this.computeLatestModValues();\r\n        } \r\n    }\r\n    \r\n    public goToNextBar(): void {\r\n        if (!this.song) return;\r\n        this.prevBar = this.bar;\r\n        const oldBar: number = this.bar;\r\n        this.bar++;\r\n        if (this.bar >= this.song.barCount) {\r\n            this.bar = 0;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n    public goToPrevBar(): void {\r\n        if (!this.song) return;\r\n        this.prevBar = null;\r\n        const oldBar: number = this.bar;\r\n        this.bar--;\r\n        if (this.bar < 0 || this.bar >= this.song.barCount) {\r\n            this.bar = this.song.barCount - 1;\r\n        }\r\n        this.playheadInternal += this.bar - oldBar;\r\n\r\n        if (this.playing)\r\n            this.computeLatestModValues();\r\n    }\r\n\r\n\r\n    // Idk if this is doing what I think its doing\r\n    private getNextBar(): number {\r\n        let nextBar: number = this.bar + 1;\r\n        if (this.song?.loopType != null) {\r\n            if (this.song.loopType != 2) { \r\n                if (this.isRecording) {\r\n                    if (nextBar >= this.song!.barCount) {\r\n                        nextBar = this.song!.barCount - 1;\r\n                    }\r\n                } else if ((this.bar == this.loopBarEnd && !this.renderingSong) /*) || (_loopType == 2 && (this.bar == this.song!.barCount-1))*/ ) {\r\n                        nextBar = this.loopBarStart; \r\n                    }\r\n                    else if (this.loopRepeatCount != 0 && nextBar == Math.max(this.loopBarEnd+1, this.song!.loopStart + this.song!.loopLength)) {\r\n                        nextBar = this.song!.loopStart;\r\n                    }\r\n            } else if (this.song.loopType == 2 && (this.bar == this.song!.barCount-1)) {\r\n                nextBar = 0; \r\n            }\r\n        } else {\r\n            if (this.isRecording) {\r\n                if (nextBar >= this.song!.barCount) {\r\n                    nextBar = this.song!.barCount - 1;\r\n                }\r\n            } else if (this.bar == this.loopBarEnd && !this.renderingSong) {\r\n                nextBar = this.loopBarStart;\r\n            }\r\n            else if (this.loopRepeatCount != 0 && nextBar == Math.max(this.loopBarEnd+1, this.song!.loopStart + this.song!.loopLength)) {\r\n                nextBar = this.song!.loopStart;\r\n            }\r\n        }\r\n        return nextBar;\r\n    }\r\n\r\n    public skipBar(): void {\r\n        if (!this.song) return;\r\n        const samplesPerTick: number = this.getSamplesPerTick();\r\n        this.prevBar = this.bar; // Bugfix by LeoV\r\n        if (this.loopBarEnd != this.bar)\r\n            this.bar++;\r\n        else {\r\n            this.bar = this.loopBarStart;\r\n        }\r\n        this.beat = 0;\r\n        this.part = 0;\r\n        this.tick = 0;\r\n        this.tickSampleCountdown = samplesPerTick;\r\n\t    this.isAtStartOfTick = true;\r\n\t\t\t//BUGFIX FROM JUMMBOX\r\n\r\n        if (this.loopRepeatCount != 0 && this.bar == Math.max(this.song.loopStart + this.song.loopLength, this.loopBarEnd)) {\r\n            this.bar = this.song.loopStart;\r\n            if (this.loopBarStart != -1) this.bar = this.loopBarStart;\r\n            if (this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n        }\r\n\r\n    }\r\n\r\n    private audioProcessCallback = (audioProcessingEvent: any): void => {\r\n        const outputBuffer = audioProcessingEvent.outputBuffer;\r\n        const outputDataL: Float32Array = outputBuffer.getChannelData(0);\r\n        const outputDataR: Float32Array = outputBuffer.getChannelData(1);\r\n\r\n        if (this.browserAutomaticallyClearsAudioBuffer && (outputDataL[0] != 0.0 || outputDataR[0] != 0.0 || outputDataL[outputBuffer.length - 1] != 0.0 || outputDataR[outputBuffer.length - 1] != 0.0)) {\r\n            // If the buffer is ever initially nonzero, then this must be an older browser that doesn't automatically clear the audio buffer.\r\n            this.browserAutomaticallyClearsAudioBuffer = false;\r\n        }\r\n        if (!this.browserAutomaticallyClearsAudioBuffer) {\r\n            // If this browser does not clear the buffer automatically, do so manually before continuing.\r\n            const length: number = outputBuffer.length;\r\n            for (let i: number = 0; i < length; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n        }\r\n\r\n        if (!this.isPlayingSong && performance.now() >= this.liveInputEndTime) {\r\n            this.deactivateAudio();\r\n        } else {\r\n            this.synthesize(outputDataL, outputDataR, outputBuffer.length, this.isPlayingSong);\r\n\r\n            if (this.oscEnabled) {\r\n                if (this.oscRefreshEventTimer <= 0) {\r\n                    events.raise(\"oscillascopeUpdate\", outputDataL, outputDataR);\r\n                    this.oscRefreshEventTimer = 2;\r\n                } else {\r\n                    this.oscRefreshEventTimer--;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public synthesize(outputDataL: Float32Array, outputDataR: Float32Array, outputBufferLength: number, playSong: boolean = true): void {\r\n        if (this.song == null) {\r\n            for (let i: number = 0; i < outputBufferLength; i++) {\r\n                outputDataL[i] = 0.0;\r\n                outputDataR[i] = 0.0;\r\n            }\r\n            this.deactivateAudio();\r\n            return;\r\n        }\r\n\r\n        const song: Song = this.song;\r\n        this.song.inVolumeCap = 0.0 // Reset volume cap for this run\r\n        this.song.outVolumeCap = 0.0;\r\n\r\n        let samplesPerTick: number = this.getSamplesPerTick();\r\n        let ended: boolean = false;\r\n\r\n        // Check the bounds of the playhead:\r\n        if (this.tickSampleCountdown <= 0 || this.tickSampleCountdown > samplesPerTick) {\r\n            this.tickSampleCountdown = samplesPerTick;\r\n            this.isAtStartOfTick = true;\r\n        }\r\n        if (playSong) {\r\n            if (this.beat >= song.beatsPerBar) {\r\n                this.beat = 0;\r\n                this.part = 0;\r\n                this.tick = 0;\r\n                this.tickSampleCountdown = samplesPerTick;\r\n                this.isAtStartOfTick = true;\r\n\r\n                this.prevBar = this.bar;\r\n                this.bar = this.getNextBar();\r\n                if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\r\n            }\r\n            if (this.bar >= song.barCount) {\r\n                this.bar = 0;\r\n                if (this.loopRepeatCount != -1) {\r\n                    ended = true;\r\n                    this.pause();\r\n                }\r\n            }\r\n        }\r\n\r\n        //const synthStartTime: number = performance.now();\r\n\r\n        this.syncSongState();\r\n\r\n        if (this.tempMonoInstrumentSampleBuffer == null || this.tempMonoInstrumentSampleBuffer.length < outputBufferLength) {\r\n            this.tempMonoInstrumentSampleBuffer = new Float32Array(outputBufferLength);\r\n        }\r\n\r\n        // Post processing parameters:\r\n        const volume: number = +this.volume;\r\n        const limitDecay: number = 1.0 - Math.pow(0.5, this.song.limitDecay / this.samplesPerSecond);\r\n        const limitRise: number = 1.0 - Math.pow(0.5, this.song.limitRise / this.samplesPerSecond);\r\n        let limit: number = +this.limit;\r\n\t    \t\t\tlet skippedBars = [];\r\n        let firstSkippedBufferIndex = -1;\r\n\t\t//BUGFIX FROM JUMMBOX\r\n\r\n        let bufferIndex: number = 0;\r\n        while (bufferIndex < outputBufferLength && !ended) {\r\n\r\n            this.nextBar = this.getNextBar();\r\n            if (this.nextBar >= song.barCount) this.nextBar = null;\r\n\r\n            const samplesLeftInBuffer: number = outputBufferLength - bufferIndex;\r\n            const samplesLeftInTick: number = Math.ceil(this.tickSampleCountdown);\r\n            const runLength: number = Math.min(samplesLeftInTick, samplesLeftInBuffer);\r\n            const runEnd: number = bufferIndex + runLength;\r\n\r\n            // Handle mod synth\r\n            if (this.isPlayingSong || this.renderingSong) {\r\n\r\n                // First modulation pass. Determines active tones.\r\n                // Runs everything but Dot X/Y mods, to let them always come after morph.\r\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                    const channel: Channel = song.channels[channelIndex];\r\n                    const channelState: ChannelState = this.channels[channelIndex];\r\n\r\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong);\r\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.activeModTones.get(i);\r\n                            const channel: Channel = song.channels[channelIndex];\r\n                            const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n                            let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n\r\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\r\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index)\r\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\r\n                                continue;\r\n                            }\r\n                            this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                 // Second modulation pass.\r\n                // Only for Dot X/Y mods.\r\n                for (let channelIndex: number = song.pitchChannelCount + song.noiseChannelCount; channelIndex < song.getChannelCount(); channelIndex++) {\r\n                    const channel: Channel = song.channels[channelIndex];\r\n                    const channelState: ChannelState = this.channels[channelIndex];\r\n\r\n                    for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                        const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n                        for (let i: number = 0; i < instrumentState.activeModTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.activeModTones.get(i);\r\n                            const channel: Channel = song.channels[channelIndex];\r\n                            const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n                            let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n\r\n                            if ((instrument.modulators[mod] == Config.modulators.dictionary[\"note filter\"].index\r\n                                || instrument.modulators[mod] == Config.modulators.dictionary[\"eq filter\"].index)\r\n                                && instrument.modFilterTypes[mod] != null && instrument.modFilterTypes[mod] > 0) {\r\n\r\n                                this.playModTone(song, channelIndex, samplesPerTick, bufferIndex, runLength, tone, false, false);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Handle next bar mods if they were set\r\n            if (this.wantToSkip) {\r\n\t\t    \t\t\t\t\t// Unable to continue, as we have skipped back to a previously visited bar without generating new samples, which means we are infinitely skipping.\r\n                // In this case processing will return before the designated number of samples are processed. In other words, silence will be generated.\r\n                let barVisited = skippedBars.includes(this.bar);\r\n                if (barVisited && bufferIndex == firstSkippedBufferIndex) {\r\n                    this.pause();\r\n                    return;\r\n                }\r\n                if (firstSkippedBufferIndex == -1) {\r\n                    firstSkippedBufferIndex = bufferIndex;\r\n                }\r\n                if (!barVisited)\r\n                    skippedBars.push(this.bar);\r\n\t\t\t\t//BUGFIX FROM JUMMBOX\r\n                this.wantToSkip = false;\r\n                this.skipBar();\r\n\t\t    \t\t\t\t\tcontinue;\r\n\t\t\t\t\t//BUGFIX FROM JUMMBOX\r\n            }\r\n\r\n            for (let channelIndex: number = 0; channelIndex < song.pitchChannelCount + song.noiseChannelCount; channelIndex++) {\r\n                const channel: Channel = song.channels[channelIndex];\r\n                const channelState: ChannelState = this.channels[channelIndex];\r\n\r\n                if (this.isAtStartOfTick) {\r\n                    this.determineCurrentActiveTones(song, channelIndex, samplesPerTick, playSong && !this.countInMetronome);\r\n                    this.determineLiveInputTones(song, channelIndex, samplesPerTick);\r\n                }\r\n                for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\r\n                    const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n\r\n                    if (this.isAtStartOfTick) {\r\n                        let tonesPlayedInThisInstrument: number = instrumentState.activeTones.count() + instrumentState.liveInputTones.count();\r\n\r\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.releasedTones.get(i);\r\n                            if (tone.ticksSinceReleased >= Math.abs(instrument.getFadeOutTicks())) {\r\n                                this.freeReleasedTone(instrumentState, i);\r\n                                i--;\r\n                                continue;\r\n                            }\r\n                            const shouldFadeOutFast: boolean = (tonesPlayedInThisInstrument >= Config.maximumTonesPerChannel);\r\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, true, shouldFadeOutFast);\r\n                            tonesPlayedInThisInstrument++;\r\n                        }\r\n\r\n                        if (instrumentState.awake) {\r\n                            if (!instrumentState.computed) {\r\n                                instrumentState.compute(this, instrument, samplesPerTick, Math.ceil(samplesPerTick), null, channelIndex, instrumentIndex);\r\n                            }\r\n\r\n                            instrumentState.computed = false;\r\n                            instrumentState.envelopeComputer.clearEnvelopes();\r\n                        }\r\n                    }\r\n\r\n                    for (let i: number = 0; i < instrumentState.activeTones.count(); i++) {\r\n                        const tone: Tone = instrumentState.activeTones.get(i);\r\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\r\n                    }\r\n\r\n                    for (let i: number = 0; i < instrumentState.liveInputTones.count(); i++) {\r\n                        const tone: Tone = instrumentState.liveInputTones.get(i);\r\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\r\n                    }\r\n\r\n                    for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\r\n                        const tone: Tone = instrumentState.releasedTones.get(i);\r\n                        this.playTone(channelIndex, bufferIndex, runLength, tone);\r\n                    }\r\n\r\n                    if (instrumentState.awake) {\r\n                        Synth.effectsSynth(this, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\r\n                    }\r\n\r\n                    // Update LFO time for instruments (used to be deterministic based on bar position but now vibrato/arp speed messes that up!)\r\n\r\n                    const tickSampleCountdown: number = this.tickSampleCountdown;\r\n                    const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n                    const endRatio: number = 1.0 - (tickSampleCountdown - runLength) / samplesPerTick;\r\n                    const ticksIntoBar: number = (this.beat * Config.partsPerBeat + this.part) * Config.ticksPerPart + this.tick;\r\n                    const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n                    const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n                    const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n                    const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n                    let useVibratoSpeed: number = instrument.vibratoSpeed;\r\n\r\n                    instrumentState.vibratoTime = instrumentState.nextVibratoTime;\r\n\r\n                    if (this.isModActive(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex)) {\r\n                        useVibratoSpeed = this.getModValue(Config.modulators.dictionary[\"vibrato speed\"].index, channelIndex, instrumentIndex);\r\n                    }\r\n\r\n                    if (useVibratoSpeed == 0) {\r\n                        instrumentState.vibratoTime = 0;\r\n                        instrumentState.nextVibratoTime = 0;\r\n                    }\r\n                    else {\r\n                        instrumentState.nextVibratoTime += useVibratoSpeed * 0.1 * (partTimeEnd - partTimeStart);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.enableMetronome || this.countInMetronome) {\r\n                if (this.part == 0) {\r\n                    if (!this.startedMetronome) {\r\n                        const midBeat: boolean = (song.beatsPerBar > 4 && (song.beatsPerBar % 2 == 0) && this.beat == song.beatsPerBar / 2);\r\n                        const periods: number = (this.beat == 0) ? 8 : midBeat ? 6 : 4;\r\n                        const hz: number = (this.beat == 0) ? 1600 : midBeat ? 1200 : 800;\r\n                        const amplitude: number = (this.beat == 0) ? 0.06 : midBeat ? 0.05 : 0.04;\r\n                        const samplesPerPeriod: number = this.samplesPerSecond / hz;\r\n                        const radiansPerSample: number = Math.PI * 2.0 / samplesPerPeriod;\r\n                        this.metronomeSamplesRemaining = Math.floor(samplesPerPeriod * periods);\r\n                        this.metronomeFilter = 2.0 * Math.cos(radiansPerSample);\r\n                        this.metronomeAmplitude = amplitude * Math.sin(radiansPerSample);\r\n                        this.metronomePrevAmplitude = 0.0;\r\n\r\n                        this.startedMetronome = true;\r\n                    }\r\n                    if (this.metronomeSamplesRemaining > 0) {\r\n                        const stopIndex: number = Math.min(runEnd, bufferIndex + this.metronomeSamplesRemaining);\r\n                        this.metronomeSamplesRemaining -= stopIndex - bufferIndex;\r\n                        for (let i: number = bufferIndex; i < stopIndex; i++) {\r\n                            outputDataL[i] += this.metronomeAmplitude;\r\n                            outputDataR[i] += this.metronomeAmplitude;\r\n                            const tempAmplitude: number = this.metronomeFilter * this.metronomeAmplitude - this.metronomePrevAmplitude;\r\n                            this.metronomePrevAmplitude = this.metronomeAmplitude;\r\n                            this.metronomeAmplitude = tempAmplitude;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.startedMetronome = false;\r\n                }\r\n            }\r\n\r\n            // Post processing:\r\n            for (let i: number = bufferIndex; i < runEnd; i++) {\r\n                // A compressor/limiter.\r\n                const sampleL = outputDataL[i] * song.masterGain * song.masterGain;\r\n                const sampleR = outputDataR[i] * song.masterGain * song.masterGain;\r\n                const absL: number = sampleL < 0.0 ? -sampleL : sampleL;\r\n                const absR: number = sampleR < 0.0 ? -sampleR : sampleR;\r\n                const abs: number = absL > absR ? absL : absR;\r\n                this.song.inVolumeCap = (this.song.inVolumeCap > abs ? this.song.inVolumeCap : abs); // Analytics, spit out raw input volume\r\n                // Determines which formula to use. 0 when volume is between [0, compressionThreshold], 1 when between (compressionThreshold, limitThreshold], 2 above\r\n                const limitRange: number = (+(abs > song.compressionThreshold)) + (+(abs > song.limitThreshold));\r\n                // Determine the target amplification based on the range of the curve\r\n                const limitTarget: number =\r\n                    (+(limitRange == 0)) * (((abs + 1 - song.compressionThreshold) * 0.8 + 0.25) * song.compressionRatio + 1.05 * (1 - song.compressionRatio))\r\n                    + (+(limitRange == 1)) * (1.05)\r\n                    + (+(limitRange == 2)) * (1.05 * ((abs + 1 - song.limitThreshold) * song.limitRatio + (1 - song.limitThreshold)));\r\n                // Move the limit towards the target\r\n                limit += ((limitTarget - limit) * (limit < limitTarget ? limitRise : limitDecay));\r\n                const limitedVolume = volume / (limit >= 1 ? limit * 1.05 : limit * 0.8 + 0.25);\r\n                outputDataL[i] = sampleL * limitedVolume;\r\n                outputDataR[i] = sampleR * limitedVolume;\r\n\r\n                this.song.outVolumeCap = (this.song.outVolumeCap > abs * limitedVolume ? this.song.outVolumeCap : abs * limitedVolume); // Analytics, spit out limited output volume\r\n            }\r\n\r\n            bufferIndex += runLength;\r\n\r\n            this.isAtStartOfTick = false;\r\n            this.tickSampleCountdown -= runLength;\r\n            if (this.tickSampleCountdown <= 0) {\r\n                this.isAtStartOfTick = true;\r\n\r\n                // Track how long tones have been released, and free them if there are too many.\r\n                // Also reset awake InstrumentStates that didn't have any Tones during this tick.\r\n                for (const channelState of this.channels) {\r\n                    for (const instrumentState of channelState.instruments) {\r\n                        for (let i: number = 0; i < instrumentState.releasedTones.count(); i++) {\r\n                            const tone: Tone = instrumentState.releasedTones.get(i);\r\n                            if (tone.isOnLastTick) {\r\n                                this.freeReleasedTone(instrumentState, i);\r\n                                i--;\r\n                            } else {\r\n                                tone.ticksSinceReleased++;\r\n                            }\r\n                        }\r\n                        if (instrumentState.deactivateAfterThisTick) {\r\n                            instrumentState.deactivate();\r\n                        }\r\n                        instrumentState.tonesAddedInThisTick = false;\r\n                    }\r\n                }\r\n\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                        let instrumentState: InstrumentState = this.channels[channel].instruments[instrumentIdx];\r\n\r\n                        // Update arpeggio time, which is used to calculate arpeggio position\r\n                        let useArpeggioSpeed: number = instrument.arpeggioSpeed;\r\n                        if (this.isModActive(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx)) {\r\n                            useArpeggioSpeed = clamp(0, Config.arpSpeedScale.length, this.getModValue(Config.modulators.dictionary[\"arp speed\"].index, channel, instrumentIdx, false));\r\n                            if (Number.isInteger(useArpeggioSpeed)) {\r\n                                instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                            } else {\r\n                                // Linear interpolate arpeggio values\r\n                                instrumentState.arpTime += (1 - (useArpeggioSpeed % 1)) * Config.arpSpeedScale[Math.floor(useArpeggioSpeed)] + (useArpeggioSpeed % 1) * Config.arpSpeedScale[Math.ceil(useArpeggioSpeed)];\r\n                            }\r\n                        }\r\n                        else {\r\n                            instrumentState.arpTime += Config.arpSpeedScale[useArpeggioSpeed];\r\n                        }\r\n\r\n                        // Update envelope time, which is used to calculate (all envelopes') position\r\n                        let useEnvelopeSpeed: number = instrument.envelopeSpeed;\r\n                        if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx)) {\r\n                            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length-1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channel, instrumentIdx, false)));\r\n                            if (Number.isInteger(useEnvelopeSpeed)) {\r\n                                instrumentState.envelopeTime += Config.arpSpeedScale[useEnvelopeSpeed];\r\n                            } else {\r\n                                // Linear interpolate envelope values\r\n                                instrumentState.envelopeTime += (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)];\r\n                            }\r\n                        }\r\n                        else {\r\n                            instrumentState.envelopeTime += Config.arpSpeedScale[useEnvelopeSpeed];\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Update next-used filters after each run\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrumentIdx: number = 0; instrumentIdx < this.song.channels[channel].instruments.length; instrumentIdx++) {\r\n                        let instrument: Instrument = this.song.channels[channel].instruments[instrumentIdx];\r\n                        if (instrument.tmpEqFilterEnd != null) {\r\n                            instrument.tmpEqFilterStart = instrument.tmpEqFilterEnd;\r\n                        } else {\r\n                            instrument.tmpEqFilterStart = instrument.eqFilter;\r\n                        }\r\n                        if (instrument.tmpNoteFilterEnd != null) {\r\n                            instrument.tmpNoteFilterStart = instrument.tmpNoteFilterEnd;\r\n                        } else {\r\n                            instrument.tmpNoteFilterStart = instrument.noteFilter;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                this.tick++;\r\n                this.tickSampleCountdown += samplesPerTick;\r\n                if (this.tick == Config.ticksPerPart) {\r\n                    this.tick = 0;\r\n                    this.part++;\r\n                    this.liveInputDuration--;\r\n                    this.liveBassInputDuration--;\r\n                    // Decrement held modulator counters after each run\r\n                    for (let i: number = 0; i < this.heldMods.length; i++) {\r\n                        this.heldMods[i].holdFor--;\r\n                        if (this.heldMods[i].holdFor <= 0) {\r\n                            this.heldMods.splice(i, 1);\r\n                        }\r\n                    }\r\n\r\n                    if (this.part == Config.partsPerBeat) {\r\n                        this.part = 0;\r\n\r\n                        if (playSong) {\r\n                            this.beat++;\r\n                            if (this.beat == song.beatsPerBar) {\r\n                                // bar changed, reset for next bar:\r\n                                this.beat = 0;\r\n\r\n                                if (this.countInMetronome) {\r\n                                    this.countInMetronome = false;\r\n                                } else {\r\n                                    this.prevBar = this.bar;\r\n                                    this.bar = this.getNextBar();\r\n                                    if (this.bar <= this.prevBar && this.loopRepeatCount > 0) this.loopRepeatCount--;\r\n\r\n                                    if (this.bar >= song.barCount) {\r\n                                        this.bar = 0;\r\n                                        if (this.loopRepeatCount != -1) {\r\n                                            ended = true;\r\n                                            this.resetEffects();\r\n                                            this.pause();\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Update mod values so that next values copy to current values\r\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                if (this.nextModValues != null && this.nextModValues[setting] != null)\r\n                    this.modValues[setting] = this.nextModValues[setting];\r\n            }\r\n\r\n            // Set samples per tick if song tempo mods changed it\r\n            if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\r\n                samplesPerTick = this.getSamplesPerTick();\r\n                this.tickSampleCountdown = Math.min(this.tickSampleCountdown, samplesPerTick);\r\n            }\r\n\r\n            // Bound LFO times to be within their period (to keep values from getting large)\r\n            // I figured this modulo math probably doesn't have to happen every LFO tick.\r\n            for (let channelIndex: number = 0; channelIndex < this.song.pitchChannelCount + this.song.noiseChannelCount; channelIndex++) {\r\n                for (let instrumentIndex = 0; instrumentIndex < this.channels[channelIndex].instruments.length; instrumentIndex++) {\r\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[instrumentIndex];\r\n                    const instrument: Instrument = this.song.channels[channelIndex].instruments[instrumentIndex];\r\n                    instrumentState.nextVibratoTime = (instrumentState.nextVibratoTime % (Config.vibratoTypes[instrument.vibratoType].period / (Config.ticksPerPart * samplesPerTick / this.samplesPerSecond)));\r\n                    instrumentState.arpTime = (instrumentState.arpTime % (2520 * Config.ticksPerArpeggio)); // 2520 = LCM of 4, 5, 6, 7, 8, 9 (arp sizes)\r\n                    instrumentState.envelopeTime = (instrumentState.envelopeTime % (Config.partsPerBeat * Config.ticksPerPart * this.song.beatsPerBar));\r\n                }\r\n            }\r\n\r\n            for (let setting: number = 0; setting < Config.modulators.length; setting++) {\r\n                for (let channel: number = 0; channel < this.song.pitchChannelCount + this.song.noiseChannelCount; channel++) {\r\n                    for (let instrument: number = 0; instrument < this.song.getMaxInstrumentsPerChannel(); instrument++) {\r\n                        if (this.nextModInsValues != null && this.nextModInsValues[channel] != null && this.nextModInsValues[channel][instrument] != null && this.nextModInsValues[channel][instrument][setting] != null) {\r\n                            this.modInsValues[channel][instrument][setting] = this.nextModInsValues[channel][instrument][setting];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Optimization: Avoid persistent reverb values in the float denormal range.\r\n        if (!Number.isFinite(limit) || Math.abs(limit) < epsilon) limit = 0.0;\r\n        this.limit = limit;\r\n\r\n        if (playSong && !this.countInMetronome) {\r\n            this.playheadInternal = (((this.tick + 1.0 - this.tickSampleCountdown / samplesPerTick) / 2.0 + this.part) / Config.partsPerBeat + this.beat) / song.beatsPerBar + this.bar;\r\n        }\r\n\r\n        /*\r\n        const synthDuration: number = performance.now() - synthStartTime;\r\n        // Performance measurements:\r\n        samplesAccumulated += outputBufferLength;\r\n        samplePerformance += synthDuration;\r\n    \t\r\n        if (samplesAccumulated >= 44100 * 4) {\r\n            const secondsGenerated = samplesAccumulated / 44100;\r\n            const secondsRequired = samplePerformance / 1000;\r\n            const ratio = secondsRequired / secondsGenerated;\r\n            console.log(ratio);\r\n            samplePerformance = 0;\r\n            samplesAccumulated = 0;\r\n        }\r\n        */\r\n    }\r\n\r\n    private freeTone(tone: Tone): void {\r\n        this.tonePool.pushBack(tone);\r\n    }\r\n\r\n    private newTone(): Tone {\r\n        if (this.tonePool.count() > 0) {\r\n            const tone: Tone = this.tonePool.popBack();\r\n            tone.freshlyAllocated = true;\r\n            return tone;\r\n        }\r\n        return new Tone();\r\n    }\r\n\r\n    private releaseTone(instrumentState: InstrumentState, tone: Tone): void {\r\n        instrumentState.releasedTones.pushFront(tone);\r\n        tone.atNoteStart = false;\r\n        tone.passedEndOfNote = true;\r\n    }\r\n\r\n    private freeReleasedTone(instrumentState: InstrumentState, toneIndex: number): void {\r\n        this.freeTone(instrumentState.releasedTones.get(toneIndex));\r\n        instrumentState.releasedTones.remove(toneIndex);\r\n    }\r\n\r\n    public freeAllTones(): void {\r\n        for (const channelState of this.channels) {\r\n            for (const instrumentState of channelState.instruments) {\r\n                while (instrumentState.activeTones.count() > 0) this.freeTone(instrumentState.activeTones.popBack());\r\n                while (instrumentState.activeModTones.count() > 0) this.freeTone(instrumentState.activeModTones.popBack());\r\n                while (instrumentState.releasedTones.count() > 0) this.freeTone(instrumentState.releasedTones.popBack());\r\n                while (instrumentState.liveInputTones.count() > 0) this.freeTone(instrumentState.liveInputTones.popBack());\r\n            }\r\n        }\r\n    }\r\n\r\n    private determineLiveInputTones(song: Song, channelIndex: number, samplesPerTick: number): void {\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const pitches: number[] = this.liveInputPitches;\r\n        const bassPitches: number[] = this.liveBassInputPitches;\r\n\r\n        for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n            const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n            const toneList: Deque<Tone> = instrumentState.liveInputTones;\r\n            let toneCount: number = 0;\r\n            const instrument: Instrument = channel.instruments[instrumentIndex];\r\n            let filteredPitches = pitches;\r\n            if (effectsIncludeNoteRange(instrument.effects)) filteredPitches = pitches.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\r\n            let filteredBassPitches: number[] = bassPitches;\r\n            if (effectsIncludeNoteRange(instrument.effects)) filteredBassPitches = bassPitches.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\r\n            if (this.liveInputDuration > 0 && (channelIndex == this.liveInputChannel) && pitches.length > 0 && this.liveInputInstruments.indexOf(instrumentIndex) != -1) {\r\n                const instrument: Instrument = channel.instruments[instrumentIndex];\r\n\r\n                if (instrument.getChord().singleTone) {\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= toneCount) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\r\n                        tone = this.newTone();\r\n                        toneList.set(toneCount, tone);\r\n                    } else {\r\n                        tone = toneList.get(toneCount);\r\n                    }\r\n                    toneCount++;\r\n\r\n                    for (let i: number = 0; i < filteredPitches.length; i++) {\r\n                        tone.pitches[i] = filteredPitches[i];\r\n                    }\r\n                    tone.pitchCount = filteredPitches.length;\r\n                    tone.chordSize = 1;\r\n                    tone.instrumentIndex = instrumentIndex;\r\n                    tone.note = tone.prevNote = tone.nextNote = null;\r\n                    tone.atNoteStart = this.liveInputStarted;\r\n                    tone.forceContinueAtStart = false;\r\n                    tone.forceContinueAtEnd = false;\r\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                } else {\r\n                    //const transition: Transition = instrument.getTransition();\r\n\r\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, filteredPitches);\r\n\r\n                    for (let i: number = 0; i < filteredPitches.length; i++) {\r\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n                        let tone: Tone;\r\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\r\n                            tone = this.tempMatchedPitchTones[toneCount]!;\r\n                            this.tempMatchedPitchTones[toneCount] = null;\r\n                            if (tone.pitchCount != 1 || tone.pitches[0] != filteredPitches[i]) {\r\n                                this.releaseTone(instrumentState, tone);\r\n                                tone = this.newTone();\r\n                            }\r\n                            toneList.pushBack(tone);\r\n                        } else {\r\n                            tone = this.newTone();\r\n                            toneList.pushBack(tone);\r\n                        }\r\n                        toneCount++;\r\n\r\n                        tone.pitches[0] = filteredPitches[i];\r\n                        tone.pitchCount = 1;\r\n                        tone.chordSize = filteredPitches.length;\r\n                        tone.instrumentIndex = instrumentIndex;\r\n                        tone.note = tone.prevNote = tone.nextNote = null;\r\n                        tone.atNoteStart = this.liveInputStarted;\r\n                        tone.forceContinueAtStart = false;\r\n                        tone.forceContinueAtEnd = false;\r\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (this.liveBassInputDuration > 0 && (channelIndex == this.liveBassInputChannel) && filteredBassPitches.length > 0 && this.liveBassInputInstruments.indexOf(instrumentIndex) != -1) {\r\n                const instrument: Instrument = channel.instruments[instrumentIndex];\r\n\r\n                if (instrument.getChord().singleTone) {\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= toneCount) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (!instrument.getTransition().isSeamless && this.liveInputStarted) {\r\n                        this.releaseTone(instrumentState, toneList.get(toneCount));\r\n                        tone = this.newTone();\r\n                        toneList.set(toneCount, tone);\r\n                    } else {\r\n                        tone = toneList.get(toneCount);\r\n                    }\r\n                    toneCount++;\r\n\r\n                    for (let i: number = 0; i < filteredBassPitches.length; i++) {\r\n                        tone.pitches[i] = filteredBassPitches[i];\r\n                    }\r\n                    tone.pitchCount = filteredBassPitches.length;\r\n                    tone.chordSize = 1;\r\n                    tone.instrumentIndex = instrumentIndex;\r\n                    tone.note = tone.prevNote = tone.nextNote = null;\r\n                    tone.atNoteStart = this.liveBassInputStarted;\r\n                    tone.forceContinueAtStart = false;\r\n                    tone.forceContinueAtEnd = false;\r\n                    this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                } else {\r\n                    //const transition: Transition = instrument.getTransition();\r\n\r\n                    this.moveTonesIntoOrderedTempMatchedList(toneList, filteredBassPitches);\r\n\r\n                    for (let i: number = 0; i < filteredBassPitches.length; i++) {\r\n                        //const strumOffsetParts: number = i * instrument.getChord().strumParts;\r\n\r\n                        let tone: Tone;\r\n                        if (this.tempMatchedPitchTones[toneCount] != null) {\r\n                            tone = this.tempMatchedPitchTones[toneCount]!;\r\n                            this.tempMatchedPitchTones[toneCount] = null;\r\n                            if (tone.pitchCount != 1 || tone.pitches[0] != filteredBassPitches[i]) {\r\n                                this.releaseTone(instrumentState, tone);\r\n                                tone = this.newTone();\r\n                            }\r\n                            toneList.pushBack(tone);\r\n                        } else {\r\n                            tone = this.newTone();\r\n                            toneList.pushBack(tone);\r\n                        }\r\n                        toneCount++;\r\n\r\n                        tone.pitches[0] = filteredBassPitches[i];\r\n                        tone.pitchCount = 1;\r\n                        tone.chordSize = filteredBassPitches.length;\r\n                        tone.instrumentIndex = instrumentIndex;\r\n                        tone.note = tone.prevNote = tone.nextNote = null;\r\n                        tone.atNoteStart = this.liveBassInputStarted;\r\n                        tone.forceContinueAtStart = false;\r\n                        tone.forceContinueAtEnd = false;\r\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                    }\r\n                }\r\n            }\r\n\r\n            while (toneList.count() > toneCount) {\r\n                this.releaseTone(instrumentState, toneList.popBack());\r\n            }\r\n\r\n            this.clearTempMatchedPitchTones(toneCount, instrumentState);\r\n        }\r\n\r\n        this.liveInputStarted = false;\r\n        this.liveBassInputStarted = false;\r\n    }\r\n\r\n    // Returns the chord type of the instrument in the adjacent pattern if it is compatible for a\r\n    // seamless transition across patterns, otherwise returns null.\r\n    private adjacentPatternHasCompatibleInstrumentTransition(song: Song, channel: Channel, pattern: Pattern, otherPattern: Pattern, instrumentIndex: number, transition: Transition, chord: Chord, note: Note, otherNote: Note, forceContinue: boolean): Chord | null {\r\n        if (song.patternInstruments && otherPattern.instruments.indexOf(instrumentIndex) == -1) {\r\n            // The adjacent pattern does not contain the same instrument as the current pattern.\r\n\r\n            if (pattern.instruments.length > 1 || otherPattern.instruments.length > 1) {\r\n                // The current or adjacent pattern contains more than one instrument, don't bother\r\n                // trying to connect them.\r\n                return null;\r\n            }\r\n            // Otherwise, the two patterns each contain one instrument, but not the same instrument.\r\n            // Try to connect them.\r\n            const otherInstrument: Instrument = channel.instruments[otherPattern.instruments[0]];\r\n\r\n            if (forceContinue) {\r\n                // Even non-seamless instruments can be connected across patterns if forced.\r\n                return otherInstrument.getChord();\r\n            }\r\n\r\n            // Otherwise, check that both instruments are seamless across patterns.\r\n            const otherTransition: Transition = otherInstrument.getTransition();\r\n            if (transition.includeAdjacentPatterns && otherTransition.includeAdjacentPatterns && otherTransition.slides == transition.slides) {\r\n                return otherInstrument.getChord();\r\n            } else {\r\n                return null;\r\n            }\r\n        } else {\r\n            // If both patterns contain the same instrument, check that it is seamless across patterns.\r\n            return (forceContinue || transition.includeAdjacentPatterns) ? chord : null;\r\n        }\r\n    }\r\n\r\n    public static adjacentNotesHaveMatchingPitches(firstNote: Note, secondNote: Note): boolean {\r\n        if (firstNote.pitches.length != secondNote.pitches.length) return false;\r\n        const firstNoteInterval: number = firstNote.pins[firstNote.pins.length - 1].interval;\r\n        for (const pitch of firstNote.pitches) {\r\n            if (secondNote.pitches.indexOf(pitch + firstNoteInterval) == -1) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private moveTonesIntoOrderedTempMatchedList(toneList: Deque<Tone>, notePitches: number[]): void {\r\n        // The tones are about to seamlessly transition to a new note. The pitches\r\n        // from the old note may or may not match any of the pitches in the new\r\n        // note, and not necessarily in order, but if any do match, they'll sound\r\n        // better if those tones continue to have the same pitch. Attempt to find\r\n        // the right spot for each old tone in the new chord if possible.\r\n\r\n        for (let i: number = 0; i < toneList.count(); i++) {\r\n            const tone: Tone = toneList.get(i);\r\n            const pitch: number = tone.pitches[0] + tone.lastInterval;\r\n            for (let j: number = 0; j < notePitches.length; j++) {\r\n                if (notePitches[j] == pitch) {\r\n                    this.tempMatchedPitchTones[j] = tone;\r\n                    toneList.remove(i);\r\n                    i--;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Any tones that didn't get matched should just fill in the gaps.\r\n        while (toneList.count() > 0) {\r\n            const tone: Tone = toneList.popFront();\r\n            for (let j: number = 0; j < this.tempMatchedPitchTones.length; j++) {\r\n                if (this.tempMatchedPitchTones[j] == null) {\r\n                    this.tempMatchedPitchTones[j] = tone;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private determineCurrentActiveTones(song: Song, channelIndex: number, samplesPerTick: number, playSong: boolean): void {\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const pattern: Pattern | null = song.getPattern(channelIndex, this.bar);\r\n        const currentPart: number = this.getCurrentPart();\r\n        const currentTick: number = this.tick + Config.ticksPerPart * currentPart;\r\n\r\n        if (playSong && song.getChannelIsMod(channelIndex)) {\r\n\r\n            // For mod channels, notes aren't strictly arranged chronologically. Also, each pitch value could play or not play at a given time. So... a bit more computation involved!\r\n            // The same transition logic should apply though, even though it isn't really used by mod channels.\r\n            let notes: (Note | null)[] = [];\r\n            let prevNotes: (Note | null)[] = [];\r\n            let nextNotes: (Note | null)[] = [];\r\n            let fillCount: number = Config.modCount;\r\n            while (fillCount--) {\r\n                notes.push(null);\r\n                prevNotes.push(null);\r\n                nextNotes.push(null);\r\n            }\r\n\r\n            if (pattern != null && !channel.muted) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= currentPart) {\r\n                        // Actually need to check which note starts closer to the start of this note.\r\n                        if (prevNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].end > (prevNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            prevNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                    else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) {\r\n                        notes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                    }\r\n                    else if (pattern.notes[i].start > currentPart) {\r\n                        // Actually need to check which note starts closer to the end of this note.\r\n                        if (nextNotes[pattern.notes[i].pitches[0]] == null || pattern.notes[i].start < (nextNotes[pattern.notes[i].pitches[0]] as Note).start) {\r\n                            nextNotes[pattern.notes[i].pitches[0]] = pattern.notes[i];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            let modToneCount: number = 0;\r\n            const newInstrumentIndex: number = (song.patternInstruments && (pattern != null)) ? pattern!.instruments[0] : 0;\r\n            const instrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\r\n            const toneList: Deque<Tone> = instrumentState.activeModTones;\r\n            for (let mod: number = 0; mod < Config.modCount; mod++) {\r\n                if (notes[mod] != null) {\r\n                    if (prevNotes[mod] != null && (prevNotes[mod] as Note).end != (notes[mod] as Note).start) prevNotes[mod] = null;\r\n                    if (nextNotes[mod] != null && (nextNotes[mod] as Note).start != (notes[mod] as Note).end) nextNotes[mod] = null;\r\n\r\n                }\r\n\r\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\r\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\r\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\r\n                    while (sourceInstrumentState.activeModTones.count() > 0) {\r\n                        destInstrumentState.activeModTones.pushFront(sourceInstrumentState.activeModTones.popBack());\r\n                    }\r\n                }\r\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\r\n\r\n                if (notes[mod] != null) {\r\n                    let prevNoteForThisInstrument: Note | null = prevNotes[mod];\r\n                    let nextNoteForThisInstrument: Note | null = nextNotes[mod];\r\n\r\n                    let forceContinueAtStart: boolean = false;\r\n                    let forceContinueAtEnd: boolean = false;\r\n                    const atNoteStart: boolean = (Config.ticksPerPart * notes[mod]!.start == currentTick) && this.isAtStartOfTick;\r\n                    let tone: Tone;\r\n                    if (toneList.count() <= modToneCount) {\r\n                        tone = this.newTone();\r\n                        toneList.pushBack(tone);\r\n                    } else if (atNoteStart && (prevNoteForThisInstrument == null)) {\r\n                        const oldTone: Tone = toneList.get(modToneCount);\r\n                        if (oldTone.isOnLastTick) {\r\n                            this.freeTone(oldTone);\r\n                        } else {\r\n                            this.releaseTone(instrumentState, oldTone);\r\n                        }\r\n                        tone = this.newTone();\r\n                        toneList.set(modToneCount, tone);\r\n                    } else {\r\n                        tone = toneList.get(modToneCount);\r\n                    }\r\n                    modToneCount++;\r\n\r\n                    for (let i: number = 0; i < notes[mod]!.pitches.length; i++) {\r\n                        tone.pitches[i] = notes[mod]!.pitches[i];\r\n                    }\r\n                    tone.pitchCount = notes[mod]!.pitches.length;\r\n                    tone.chordSize = 1;\r\n                    tone.instrumentIndex = newInstrumentIndex;\r\n                    tone.note = notes[mod];\r\n                    tone.noteStartPart = notes[mod]!.start;\r\n                    tone.noteEndPart = notes[mod]!.end;\r\n                    tone.prevNote = prevNoteForThisInstrument;\r\n                    tone.nextNote = nextNoteForThisInstrument;\r\n                    tone.prevNotePitchIndex = 0;\r\n                    tone.nextNotePitchIndex = 0;\r\n                    tone.atNoteStart = atNoteStart;\r\n                    tone.passedEndOfNote = false;\r\n                    tone.forceContinueAtStart = forceContinueAtStart;\r\n                    tone.forceContinueAtEnd = forceContinueAtEnd;\r\n                }\r\n                \r\n            }\r\n            // Automatically free or release seamless tones if there's no new note to take over.\r\n            while (toneList.count() > modToneCount) {\r\n                const tone: Tone = toneList.popBack();\r\n                const channel: Channel = song.channels[channelIndex];\r\n                if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\r\n                    const instrumentState: InstrumentState = this.channels[channelIndex].instruments[tone.instrumentIndex];\r\n                    this.releaseTone(instrumentState, tone);\r\n                } else {\r\n                    this.freeTone(tone);\r\n                }\r\n            }\r\n\r\n        }\r\n        else if (!song.getChannelIsMod(channelIndex)) {\r\n\r\n            let note: Note | null = null;\r\n            let prevNote: Note | null = null;\r\n            let nextNote: Note | null = null;\r\n\r\n            // Bit Obvious, but this if statement is getting what notes are supposed to be played and what the previous note is.\r\n            if (playSong && pattern != null && !channel.muted && (!this.isRecording || this.liveInputChannel != channelIndex)) {\r\n                for (let i: number = 0; i < pattern.notes.length; i++) {\r\n                    if (pattern.notes[i].end <= currentPart) { // All notes that this applies to is a previous note\r\n                        prevNote = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start <= currentPart && pattern.notes[i].end > currentPart) { // This is the current note\r\n                        note = pattern.notes[i];\r\n                    } else if (pattern.notes[i].start > currentPart) { // All notes this applies to is a next note\r\n                        nextNote = pattern.notes[i];\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // If the previous or next note isn't right before or after the current note, then it'll set itself as null.\r\n                if (note != null) {\r\n                    if (prevNote != null && prevNote.end != note.start) prevNote = null;\r\n                    if (nextNote != null && nextNote.start != note.end) nextNote = null;\r\n                }\r\n            }\r\n\r\n            // Seamless tones from a pattern with a single instrument can be transferred to a different single seamless instrument in the next pattern.\r\n            if (pattern != null && (!song.layeredInstruments || channel.instruments.length == 1 || (song.patternInstruments && pattern.instruments.length == 1))) {\r\n                const newInstrumentIndex: number = song.patternInstruments ? pattern.instruments[0] : 0;\r\n                if (channelState.singleSeamlessInstrument != null && channelState.singleSeamlessInstrument != newInstrumentIndex && channelState.singleSeamlessInstrument < channelState.instruments.length) {\r\n                    const sourceInstrumentState: InstrumentState = channelState.instruments[channelState.singleSeamlessInstrument];\r\n                    const destInstrumentState: InstrumentState = channelState.instruments[newInstrumentIndex];\r\n                    while (sourceInstrumentState.activeTones.count() > 0) {\r\n                        destInstrumentState.activeTones.pushFront(sourceInstrumentState.activeTones.popBack());\r\n                    }\r\n                }\r\n                channelState.singleSeamlessInstrument = newInstrumentIndex;\r\n            } else {\r\n                channelState.singleSeamlessInstrument = null;\r\n            }\r\n\r\n            for (let instrumentIndex: number = 0; instrumentIndex < channel.instruments.length; instrumentIndex++) {\r\n                const instrumentState: InstrumentState = channelState.instruments[instrumentIndex];\r\n                const toneList: Deque<Tone> = instrumentState.activeTones;\r\n                let toneCount: number = 0;\r\n                if ((note != null) && (!song.patternInstruments || (pattern!.instruments.indexOf(instrumentIndex) != -1))) {\r\n                    const instrument: Instrument = channel.instruments[instrumentIndex];\r\n                    let prevNoteForThisInstrument: Note | null = prevNote;\r\n                    let nextNoteForThisInstrument: Note | null = nextNote;\r\n\r\n                    const partsPerBar: Number = Config.partsPerBeat * song.beatsPerBar;\r\n                    const transition: Transition = instrument.getTransition();\r\n                    const chord: Chord = instrument.getChord();\r\n                    const useStrumSpeed: boolean = chord.strumParts > 0;\r\n                    let forceContinueAtStart: boolean = false;\r\n                    let forceContinueAtEnd: boolean = false;\r\n                    let tonesInPrevNote: number = 0;\r\n                    let tonesInNextNote: number = 0;\r\n                    if (note.start == 0) {\r\n                        // If the beginning of the note coincides with the beginning of the pattern,\r\n                        let prevPattern: Pattern | null = (this.prevBar == null) ? null : song.getPattern(channelIndex, this.prevBar);\r\n                        if (prevPattern != null) {\r\n                            const lastNote: Note | null = (prevPattern.notes.length <= 0) ? null : prevPattern.notes[prevPattern.notes.length - 1];\r\n                            if (lastNote != null && lastNote.end == partsPerBar) {\r\n                                const patternForcesContinueAtStart: boolean = note.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(lastNote, note);\r\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, prevPattern, instrumentIndex, transition, chord, note, lastNote, patternForcesContinueAtStart);\r\n                                if (chordOfCompatibleInstrument != null) {\r\n                                    prevNoteForThisInstrument = lastNote;\r\n                                    let prevPitchesForThisInstrument: number[] = prevNoteForThisInstrument.pitches;\r\n                                    // @TODO: This may or may not be needed, I'm not entirely sure yet...\r\n                                    // if (effectsIncludeNoteRange(instrument.effects)) prevPitchesForThisInstrument = prevPitchesForThisInstrument.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\r\n                                    tonesInPrevNote = chordOfCompatibleInstrument.singleTone ? 1 : prevPitchesForThisInstrument.length;\r\n                                    forceContinueAtStart = patternForcesContinueAtStart;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (prevNoteForThisInstrument != null) {\r\n                        let prevPitchesForThisInstrument: number[] = prevNoteForThisInstrument.pitches;\r\n                        // @TODO: This may or may not be needed, I'm not entirely sure yet...\r\n                        // if (effectsIncludeNoteRange(instrument.effects)) prevPitchesForThisInstrument = prevPitchesForThisInstrument.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\r\n                        tonesInPrevNote = chord.singleTone ? 1 : prevPitchesForThisInstrument.length\r\n                    }\r\n                    if (note.end == partsPerBar) {\r\n                        // If the end of the note coincides with the end of the pattern, look for an\r\n                        // adjacent note at the beginning of the next pattern.\r\n                        let nextPattern: Pattern | null = (this.nextBar == null) ? null : song.getPattern(channelIndex, this.nextBar);\r\n                        if (nextPattern != null) {\r\n                            const firstNote: Note | null = (nextPattern.notes.length <= 0) ? null : nextPattern.notes[0];\r\n                            if (firstNote != null && firstNote.start == 0) {\r\n                                const nextPatternForcesContinueAtStart: boolean = firstNote.continuesLastPattern && Synth.adjacentNotesHaveMatchingPitches(note, firstNote);\r\n                                const chordOfCompatibleInstrument: Chord | null = this.adjacentPatternHasCompatibleInstrumentTransition(song, channel, pattern!, nextPattern, instrumentIndex, transition, chord, note, firstNote, nextPatternForcesContinueAtStart);\r\n                                if (chordOfCompatibleInstrument != null) {\r\n                                    nextNoteForThisInstrument = firstNote;\r\n                                    let nextPitchesForThisInstrument: number[] = nextNoteForThisInstrument.pitches;\r\n                                    // @TODO: This may or may not be needed, I'm not entirely sure yet...\r\n                                    // if (effectsIncludeNoteRange(instrument.effects)) nextPitchesForThisInstrument = nextPitchesForThisInstrument.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\r\n                                    tonesInNextNote = chordOfCompatibleInstrument.singleTone ? 1 : nextPitchesForThisInstrument.length;\r\n                                    forceContinueAtEnd = nextPatternForcesContinueAtStart;\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (nextNoteForThisInstrument != null) {\r\n                        let nextPitchesForThisInstrument: number[] = nextNoteForThisInstrument.pitches;\r\n                        // @TODO: This may or may not be needed, I'm not entirely sure yet...\r\n                        // if (effectsIncludeNoteRange(instrument.effects)) nextPitchesForThisInstrument = nextPitchesForThisInstrument.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\r\n                        tonesInNextNote = chord.singleTone ? 1 : nextPitchesForThisInstrument.length;\r\n                    }\r\n\r\n                    let filteredPitches: number[] = note.pitches;\r\n                    if (effectsIncludeNoteRange(instrument.effects)) filteredPitches = note.pitches.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\r\n                    if (chord.singleTone && !(filteredPitches.length <= 0)) {\r\n                        const atNoteStart: boolean = (Config.ticksPerPart * note.start == currentTick);\r\n                        let tone: Tone;\r\n                        if (toneList.count() <= toneCount) {\r\n                            tone = this.newTone();\r\n                            toneList.pushBack(tone);\r\n                        } else if (atNoteStart && ((!(transition.isSeamless || instrument.clicklessTransition) && !forceContinueAtStart) || prevNoteForThisInstrument == null)) {\r\n                            const oldTone: Tone = toneList.get(toneCount);\r\n                            if (oldTone.isOnLastTick) {\r\n                                this.freeTone(oldTone);\r\n                            } else {\r\n                                this.releaseTone(instrumentState, oldTone);\r\n                            }\r\n                            tone = this.newTone();\r\n                            toneList.set(toneCount, tone);\r\n                        } else {\r\n                            tone = toneList.get(toneCount);\r\n                        }\r\n                        toneCount++;\r\n\r\n                        for (let i: number = 0; i < filteredPitches.length; i++) {\r\n                            tone.pitches[i] = filteredPitches[i];\r\n                        }\r\n                        tone.pitchCount = filteredPitches.length;\r\n                        tone.chordSize = 1;\r\n                        tone.instrumentIndex = instrumentIndex;\r\n                        tone.note = note;\r\n                        tone.noteStartPart = note.start;\r\n                        tone.noteEndPart = note.end;\r\n                        tone.prevNote = prevNoteForThisInstrument;\r\n                        tone.nextNote = nextNoteForThisInstrument;\r\n                        tone.prevNotePitchIndex = 0;\r\n                        tone.nextNotePitchIndex = 0;\r\n                        tone.atNoteStart = atNoteStart;\r\n                        tone.passedEndOfNote = false;\r\n                        tone.forceContinueAtStart = forceContinueAtStart;\r\n                        tone.forceContinueAtEnd = forceContinueAtEnd;\r\n                        this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                    } else {\r\n                        const transition: Transition = instrument.getTransition();\r\n\r\n                        if (((transition.isSeamless && !transition.slides && chord.strumParts == 0) || forceContinueAtStart) && (Config.ticksPerPart * note.start == currentTick) && prevNoteForThisInstrument != null) {\r\n                            this.moveTonesIntoOrderedTempMatchedList(toneList, filteredPitches);\r\n                        }\r\n\r\n                        let strumOffsetParts: number = 0;\r\n                        for (let i: number = 0; i < filteredPitches.length; i++) {\r\n\r\n                            let prevNoteForThisTone: Note | null = (tonesInPrevNote > i) ? prevNoteForThisInstrument : null;\r\n                            let noteForThisTone: Note = note;\r\n                            let pitchesForThisTone: number[] = filteredPitches;\r\n                            let nextNoteForThisTone: Note | null = (tonesInNextNote > i) ? nextNoteForThisInstrument : null;\r\n                            let noteStartPart: number = noteForThisTone.start + strumOffsetParts;\r\n                            let passedEndOfNote: boolean = false;\r\n\r\n                            // Strumming may mean that a note's actual start time may be after the\r\n                            // note's displayed start time. If the note start hasn't been reached yet,\r\n                            // carry over the previous tone if available and seamless, otherwise skip\r\n                            // the new tone until it is ready to start.\r\n                            if (noteStartPart > currentPart) {\r\n                                if (toneList.count() > i && (transition.isSeamless || forceContinueAtStart) && prevNoteForThisTone != null) {\r\n                                    // Continue the previous note's chord until the current one takes over.\r\n                                    nextNoteForThisTone = noteForThisTone;\r\n                                    noteForThisTone = prevNoteForThisTone;\r\n                                    pitchesForThisTone = noteForThisTone.pitches;\r\n                                    if (effectsIncludeNoteRange(instrument.effects)) pitchesForThisTone = pitchesForThisTone.filter(pitch => pitch >= instrument.lowerNoteLimit && pitch <= instrument.upperNoteLimit);\r\n                                    prevNoteForThisTone = null;\r\n                                    noteStartPart = noteForThisTone.start + strumOffsetParts;\r\n                                    passedEndOfNote = true;\r\n                                } else {\r\n                                    // This and the rest of the tones in the chord shouldn't start yet.\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            let noteEndPart: number = noteForThisTone.end;\r\n                            if ((transition.isSeamless || forceContinueAtStart) && nextNoteForThisTone != null) {\r\n                                noteEndPart = Math.min(Config.partsPerBeat * this.song!.beatsPerBar, noteEndPart + strumOffsetParts);\r\n                            }\r\n                            if ((!transition.continues && !forceContinueAtStart) || prevNoteForThisTone == null) {\r\n                                // if (useStrumSpeed) strumOffsetParts += Config.strumSpeedScale[instrument.strumParts];\r\n                                if (useStrumSpeed) strumOffsetParts += instrument.strumParts;\r\n                            }\r\n\r\n                            const atNoteStart: boolean = (Config.ticksPerPart * noteStartPart == currentTick);\r\n                            let tone: Tone;\r\n                            if (this.tempMatchedPitchTones[toneCount] != null) {\r\n                                tone = this.tempMatchedPitchTones[toneCount]!;\r\n                                this.tempMatchedPitchTones[toneCount] = null;\r\n                                toneList.pushBack(tone);\r\n                            } else if (toneList.count() <= toneCount) {\r\n                                tone = this.newTone();\r\n                                toneList.pushBack(tone);\r\n                            } else if (atNoteStart && ((!transition.isSeamless && !forceContinueAtStart) || prevNoteForThisTone == null)) {\r\n                                const oldTone: Tone = toneList.get(toneCount);\r\n                                if (oldTone.isOnLastTick) {\r\n                                    this.freeTone(oldTone);\r\n                                } else {\r\n                                    this.releaseTone(instrumentState, oldTone);\r\n                                }\r\n                                tone = this.newTone();\r\n                                toneList.set(toneCount, tone);\r\n                            } else {\r\n                                tone = toneList.get(toneCount);\r\n                            }\r\n                            toneCount++;\r\n\r\n                            tone.pitches[0] = pitchesForThisTone[i];\r\n                            tone.pitchCount = 1;\r\n                            tone.chordSize = pitchesForThisTone.length;\r\n                            tone.instrumentIndex = instrumentIndex;\r\n                            tone.note = noteForThisTone;\r\n                            tone.noteStartPart = noteStartPart;\r\n                            tone.noteEndPart = noteEndPart;\r\n                            tone.prevNote = prevNoteForThisTone;\r\n                            tone.nextNote = nextNoteForThisTone;\r\n                            tone.prevNotePitchIndex = i;\r\n                            tone.nextNotePitchIndex = i;\r\n                            tone.atNoteStart = atNoteStart;\r\n                            tone.passedEndOfNote = passedEndOfNote;\r\n                            tone.forceContinueAtStart = forceContinueAtStart && prevNoteForThisTone != null;\r\n                            tone.forceContinueAtEnd = forceContinueAtEnd && nextNoteForThisTone != null;\r\n                            this.computeTone(song, channelIndex, samplesPerTick, tone, false, false);\r\n                        }\r\n                    }\r\n                    if (transition.continues && (toneList.count() <= 0) || (note.pitches.length <= 0)) instrumentState.envelopeComputer.reset(); //stop computing effects envelopes\r\n                }\r\n                // Automatically free or release seamless tones if there's no new note to take over.\r\n                while (toneList.count() > toneCount) {\r\n                    const tone: Tone = toneList.popBack();\r\n                    const channel: Channel = song.channels[channelIndex];\r\n                    if (tone.instrumentIndex < channel.instruments.length && !tone.isOnLastTick) {\r\n                        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\r\n                        this.releaseTone(instrumentState, tone);\r\n                    } else {\r\n                        this.freeTone(tone);\r\n                    }\r\n                }\r\n\r\n                this.clearTempMatchedPitchTones(toneCount, instrumentState);\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearTempMatchedPitchTones(toneCount: number, instrumentState: InstrumentState): void {\r\n        for (let i: number = toneCount; i < this.tempMatchedPitchTones.length; i++) {\r\n            const oldTone: Tone | null = this.tempMatchedPitchTones[i];\r\n            if (oldTone != null) {\r\n                if (oldTone.isOnLastTick) {\r\n                    this.freeTone(oldTone);\r\n                } else {\r\n                    this.releaseTone(instrumentState, oldTone);\r\n                }\r\n                this.tempMatchedPitchTones[i] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private playTone(channelIndex: number, bufferIndex: number, runLength: number, tone: Tone): void {\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\r\n\r\n        if (instrumentState.synthesizer != null) instrumentState.synthesizer!(this, bufferIndex, runLength, tone, instrumentState);\r\n        tone.envelopeComputer.clearEnvelopes();\r\n        instrumentState.envelopeComputer.clearEnvelopes();\r\n    }\r\n\r\n    // Computes mod note position at the start and end of the window and \"plays\" the mod tone, setting appropriate mod data.\r\n    private playModTone(song: Song, channelIndex: number, samplesPerTick: number, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n\r\n        if (tone.note != null) {\r\n            const ticksIntoBar: number = this.getTicksIntoBar();\r\n            const partTimeTickStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n            const partTimeTickEnd: number = (ticksIntoBar + 1) / Config.ticksPerPart;\r\n            const tickSampleCountdown: number = this.tickSampleCountdown;\r\n            const startRatio: number = 1.0 - (tickSampleCountdown) / samplesPerTick;\r\n            const endRatio: number = 1.0 - (tickSampleCountdown - roundedSamplesPerTick) / samplesPerTick;\r\n            const partTimeStart: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * startRatio;\r\n            const partTimeEnd: number = partTimeTickStart + (partTimeTickEnd - partTimeTickStart) * endRatio;\r\n            const tickTimeStart: number = Config.ticksPerPart * partTimeStart;\r\n            const tickTimeEnd: number = Config.ticksPerPart * partTimeEnd;\r\n            const endPinIndex: number = tone.note.getEndPinIndex(this.getCurrentPart());\r\n            const startPin: NotePin = tone.note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = tone.note.pins[endPinIndex];\r\n            const startPinTick: number = (tone.note.start + startPin.time) * Config.ticksPerPart;\r\n            const endPinTick: number = (tone.note.start + endPin.time) * Config.ticksPerPart;\r\n            const ratioStart: number = (tickTimeStart - startPinTick) / (endPinTick - startPinTick);\r\n            const ratioEnd: number = (tickTimeEnd - startPinTick) / (endPinTick - startPinTick);\r\n            tone.expression = startPin.size + (endPin.size - startPin.size) * ratioStart;\r\n            tone.expressionDelta = (startPin.size + (endPin.size - startPin.size) * ratioEnd) - tone.expression;\r\n\r\n            Synth.modSynth(this, bufferIndex, roundedSamplesPerTick, tone, instrument);\r\n        }\r\n    }\r\n\r\n    private static computeChordExpression(chordSize: number): number {\r\n        return 1.0 / ((chordSize - 1) * 0.25 + 1.0);\r\n    }\r\n\r\n    private computeTone(song: Song, channelIndex: number, samplesPerTick: number, tone: Tone, released: boolean, shouldFadeOutFast: boolean): void {\r\n        const roundedSamplesPerTick: number = Math.ceil(samplesPerTick);\r\n        const channel: Channel = song.channels[channelIndex];\r\n        const channelState: ChannelState = this.channels[channelIndex];\r\n        const instrument: Instrument = channel.instruments[tone.instrumentIndex];\r\n        const instrumentState: InstrumentState = channelState.instruments[tone.instrumentIndex];\r\n        instrumentState.awake = true;\r\n        instrumentState.tonesAddedInThisTick = true;\r\n        if (!instrumentState.computed) {\r\n            instrumentState.compute(this, instrument, samplesPerTick, roundedSamplesPerTick, tone, channelIndex, tone.instrumentIndex);\r\n        }\r\n        const transition: Transition = instrument.getTransition();\r\n        const chord: Chord = instrument.getChord();\r\n        const chordExpression: number = chord.singleTone ? 1.0 : Synth.computeChordExpression(tone.chordSize);\r\n        const isNoiseChannel: boolean = song.getChannelIsNoise(channelIndex);\r\n        const intervalScale: number = isNoiseChannel ? Config.noiseInterval : 1;\r\n        const secondsPerPart: number = Config.ticksPerPart * samplesPerTick / this.samplesPerSecond;\r\n        const sampleTime: number = 1.0 / this.samplesPerSecond;\r\n        const beatsPerPart: number = 1.0 / Config.partsPerBeat;\r\n        const ticksIntoBar: number = this.getTicksIntoBar();\r\n        const partTimeStart: number = (ticksIntoBar) / Config.ticksPerPart;\r\n        const partTimeEnd: number = (ticksIntoBar + 1.0) / Config.ticksPerPart;\r\n        const currentPart: number = this.getCurrentPart();\r\n\r\n        let specialIntervalMult: number = 1.0;\r\n        tone.specialIntervalExpressionMult = 1.0;\r\n\r\n        //if (synth.isModActive(ModSetting.mstPan, channelIndex, tone.instrumentIndex)) {\r\n        //    startPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, false);\r\n        //    endPan = synth.getModValue(ModSetting.mstPan, false, channel, instrumentIdx, true);\r\n        //}\r\n\r\n        let toneIsOnLastTick: boolean = shouldFadeOutFast;\r\n        let intervalStart: number = 0.0;\r\n        let intervalEnd: number = 0.0;\r\n        let fadeExpressionStart: number = 1.0;\r\n        let fadeExpressionEnd: number = 1.0;\r\n        let chordExpressionStart: number = chordExpression;\r\n        let chordExpressionEnd: number = chordExpression;\r\n\r\n        let expressionReferencePitch: number = 16; // A low \"E\" as a MIDI pitch.\r\n        let basePitch: number = Config.keys[song.key].basePitch + (Config.pitchesPerOctave * song.octave);\r\n        let baseExpression: number = 1.0;\r\n        let pitchDamping: number = 48;\r\n        if (instrument.type == InstrumentType.spectrum) {\r\n            baseExpression = Config.spectrumBaseExpression;\r\n            if (isNoiseChannel) {\r\n                basePitch = Config.spectrumBasePitch;\r\n                baseExpression *= 2.0; // Note: spectrum is louder for drum channels than pitch channels!\r\n            }\r\n            expressionReferencePitch = Config.spectrumBasePitch;\r\n            pitchDamping = 28;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            basePitch = Config.spectrumBasePitch;\r\n            baseExpression = Config.drumsetBaseExpression;\r\n            expressionReferencePitch = basePitch;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            // dogebox2 code, makes basic noise affected by keys in pitch channels\r\n            basePitch = isNoiseChannel ? Config.chipNoises[instrument.chipNoise].basePitch : basePitch + Config.chipNoises[instrument.chipNoise].basePitch - 12;\r\n            // maybe also lower expression in pitch channels?\r\n            baseExpression = Config.noiseBaseExpression;\r\n            expressionReferencePitch = basePitch;\r\n            pitchDamping = Config.chipNoises[instrument.chipNoise].isSoft ? 24.0 : 60.0;\r\n        } else if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\r\n            baseExpression = Config.fmBaseExpression;\r\n        } else if (instrument.type == InstrumentType.chip){\r\n                baseExpression = Config.chipBaseExpression;\r\n\t\t\t\tif (Config.chipWaves[instrument.chipWave].isCustomSampled) {\r\n\t\t\t\t\tif (Config.chipWaves[instrument.chipWave].isPercussion){\r\n\t\t\t\t\t\tbasePitch = -84.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length/Config.chipWaves[instrument.chipWave].sampleRate!) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey!);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tbasePitch += -96.37 + Math.log2(Config.chipWaves[instrument.chipWave].samples.length/Config.chipWaves[instrument.chipWave].sampleRate!) * -12 - (-60 + Config.chipWaves[instrument.chipWave].rootKey!); \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (Config.chipWaves[instrument.chipWave].isSampled && !Config.chipWaves[instrument.chipWave].isPercussion) {\r\n\t\t\t\t\t\tbasePitch = basePitch - 63 + Config.chipWaves[instrument.chipWave].extraSampleDetune!\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (Config.chipWaves[instrument.chipWave].isSampled && Config.chipWaves[instrument.chipWave].isPercussion) {\r\n\t\t\t\t\tbasePitch = -51 + Config.chipWaves[instrument.chipWave].extraSampleDetune!;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n            } else if (instrument.type == InstrumentType.customChipWave) {\r\n            baseExpression = Config.chipBaseExpression;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            baseExpression = Config.harmonicsBaseExpression;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            baseExpression = Config.pwmBaseExpression;\r\n        } else if (instrument.type == InstrumentType.supersaw) {\r\n\t\t\tbaseExpression = Config.supersawBaseExpression;\r\n        } else if (instrument.type == InstrumentType.pickedString) {\r\n            baseExpression = Config.pickedStringBaseExpression;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            baseExpression = 1.0;\r\n            expressionReferencePitch = 0;\r\n            pitchDamping = 1.0;\r\n            basePitch = 0;\r\n        } else {\r\n            throw new Error(\"Unknown instrument type in computeTone.\");\r\n        }\r\n\r\n        if ((tone.atNoteStart && !transition.isSeamless && !tone.forceContinueAtStart) || tone.freshlyAllocated) {\r\n            tone.reset();\r\n\t\t\t\t\t\t // advloop addition\r\n                         if (instrument.type == InstrumentType.chip && instrument.isUsingAdvancedLoopControls) {\r\n                const chipWaveLength = Config.rawRawChipWaves[instrument.chipWave].samples.length - 1;\r\n                const firstOffset = instrument.chipWaveStartOffset / chipWaveLength;\r\n                // const lastOffset = (chipWaveLength - 0.01) / chipWaveLength;\r\n                // @TODO: This is silly and I should actually figure out how to\r\n                // properly keep lastOffset as 1.0 and not get it wrapped back\r\n                // to 0 once it's in `Synth.loopableChipSynth`.\r\n                const lastOffset = 0.999999999999999;\r\n                for (let i = 0; i < Config.maxPitchOrOperatorCount; i++) {\r\n                    tone.phases[i] = instrument.chipWavePlayBackwards ? Math.max(0, Math.min(lastOffset, firstOffset)) : Math.max(0, firstOffset);\r\n                    tone.directions[i] = instrument.chipWavePlayBackwards ? -1 : 1;\r\n                    tone.chipWaveCompletions[i] = 0;\r\n                    tone.chipWavePrevWaves[i] = 0;\r\n                    tone.chipWaveCompletionsLastWave[i] = 0;\r\n                }\r\n                // console.log(tone.directions);\r\n            }\r\n                // advloop addition\r\n        }\r\n        tone.freshlyAllocated = false;\r\n\r\n        for (let i: number = 0; i < Config.maxPitchOrOperatorCount; i++) {\r\n            tone.phaseDeltas[i] = 0.0;\r\n            tone.phaseDeltaScales[i] = 0.0;\r\n            tone.operatorExpressions[i] = 0.0;\r\n            tone.operatorExpressionDeltas[i] = 0.0;\r\n        }\r\n        tone.expression = 0.0;\r\n        tone.expressionDelta = 0.0;\r\n        for (let i: number = 0; i < (instrument.type == InstrumentType.fm6op ? 6 : Config.operatorCount); i++) {\r\n            tone.operatorWaves[i] = Synth.getOperatorWave(instrument.operators[i].waveform, instrument.operators[i].pulseWidth);\r\n        }\r\n\r\n        if (released) {\r\n            const startTicksSinceReleased: number = tone.ticksSinceReleased;\r\n            const endTicksSinceReleased: number = tone.ticksSinceReleased + 1.0;\r\n            intervalStart = intervalEnd = tone.lastInterval;\r\n            const fadeOutTicks: number = Math.abs(instrument.getFadeOutTicks());\r\n            fadeExpressionStart = Synth.noteSizeToVolumeMult((1.0 - startTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\r\n            fadeExpressionEnd = Synth.noteSizeToVolumeMult((1.0 - endTicksSinceReleased / fadeOutTicks) * Config.noteSizeMax);\r\n\r\n            if (shouldFadeOutFast) {\r\n                fadeExpressionEnd = 0.0;\r\n            }\r\n\r\n            if (tone.ticksSinceReleased + 1 >= fadeOutTicks) toneIsOnLastTick = true;\r\n        } else if (tone.note == null) {\r\n            fadeExpressionStart = fadeExpressionEnd = 1.0;\r\n            tone.lastInterval = 0;\r\n            tone.ticksSinceReleased = 0;\r\n            tone.liveInputSamplesHeld += roundedSamplesPerTick;\r\n        } else {\r\n            const note: Note = tone.note;\r\n            const nextNote: Note | null = tone.nextNote;\r\n\r\n            const noteStartPart: number = tone.noteStartPart;\r\n            const noteEndPart: number = tone.noteEndPart;\r\n\r\n\r\n            const endPinIndex: number = note.getEndPinIndex(currentPart);\r\n            const startPin: NotePin = note.pins[endPinIndex - 1];\r\n            const endPin: NotePin = note.pins[endPinIndex];\r\n            const noteStartTick: number = noteStartPart * Config.ticksPerPart;\r\n            const noteEndTick: number = noteEndPart * Config.ticksPerPart;\r\n            const pinStart: number = (note.start + startPin.time) * Config.ticksPerPart;\r\n            const pinEnd: number = (note.start + endPin.time) * Config.ticksPerPart;\r\n\r\n            tone.ticksSinceReleased = 0;\r\n\r\n            const tickTimeStart: number = currentPart * Config.ticksPerPart + this.tick;\r\n            const tickTimeEnd: number = tickTimeStart + 1.0;\r\n            const noteTicksPassedTickStart: number = tickTimeStart - noteStartTick;\r\n            const noteTicksPassedTickEnd: number = tickTimeEnd - noteStartTick;\r\n            const pinRatioStart: number = Math.min(1.0, (tickTimeStart - pinStart) / (pinEnd - pinStart));\r\n            const pinRatioEnd: number = Math.min(1.0, (tickTimeEnd - pinStart) / (pinEnd - pinStart));\r\n            fadeExpressionStart = 1.0;\r\n            fadeExpressionEnd = 1.0;\r\n            intervalStart = startPin.interval + (endPin.interval - startPin.interval) * pinRatioStart;\r\n            intervalEnd = startPin.interval + (endPin.interval - startPin.interval) * pinRatioEnd;\r\n            tone.lastInterval = intervalEnd;\r\n\r\n            if ((!transition.isSeamless && !tone.forceContinueAtEnd) || nextNote == null) {\r\n                const fadeOutTicks: number = -instrument.getFadeOutTicks();\r\n                if (fadeOutTicks > 0.0) {\r\n                    // If the tone should fade out before the end of the note, do so here.\r\n                    const noteLengthTicks: number = noteEndTick - noteStartTick;\r\n                    fadeExpressionStart *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickStart) / fadeOutTicks);\r\n                    fadeExpressionEnd *= Math.min(1.0, (noteLengthTicks - noteTicksPassedTickEnd) / fadeOutTicks);\r\n                    if (tickTimeEnd >= noteStartTick + noteLengthTicks) toneIsOnLastTick = true;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        tone.isOnLastTick = toneIsOnLastTick;\r\n\r\n        let tmpNoteFilter: FilterSettings = instrument.noteFilter;\r\n        let startPoint: FilterControlPoint;\r\n        let endPoint: FilterControlPoint;\r\n\r\n        if (instrument.noteFilterType) {\r\n            // Simple EQ filter (old style). For analysis, using random filters from normal style since they are N/A in this context.\r\n            const noteFilterSettingsStart: FilterSettings = instrument.noteFilter;\r\n            if (instrument.noteSubFilters[1] == null)\r\n                instrument.noteSubFilters[1] = new FilterSettings();\r\n            const noteFilterSettingsEnd: FilterSettings = instrument.noteSubFilters[1];\r\n\r\n            // Change location based on slider values\r\n            let startSimpleFreq: number = instrument.noteFilterSimpleCut;\r\n            let startSimpleGain: number = instrument.noteFilterSimplePeak;\r\n            let endSimpleFreq: number = instrument.noteFilterSimpleCut;\r\n            let endSimpleGain: number = instrument.noteFilterSimplePeak;\r\n            let filterChanges: boolean = false;\r\n\r\n            if (this.isModActive(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex)) {\r\n                startSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, false);\r\n                endSimpleFreq = this.getModValue(Config.modulators.dictionary[\"note filt cut\"].index, channelIndex, tone.instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n            if (this.isModActive(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex)) {\r\n                startSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, false);\r\n                endSimpleGain = this.getModValue(Config.modulators.dictionary[\"note filt peak\"].index, channelIndex, tone.instrumentIndex, true);\r\n                filterChanges = true;\r\n            }\r\n\r\n            noteFilterSettingsStart.convertLegacySettingsForSynth(startSimpleFreq, startSimpleGain, !filterChanges);\r\n            noteFilterSettingsEnd.convertLegacySettingsForSynth(endSimpleFreq, endSimpleGain, !filterChanges);\r\n\r\n            startPoint = noteFilterSettingsStart.controlPoints[0];\r\n            endPoint = noteFilterSettingsEnd.controlPoints[0];\r\n\r\n            // Temporarily override so that envelope computer uses appropriate computed note filter\r\n            instrument.noteFilter = noteFilterSettingsStart;\r\n            instrument.tmpNoteFilterStart = noteFilterSettingsStart;\r\n        }\r\n\r\n        // Compute envelopes *after* resetting the tone, otherwise the envelope computer gets reset too!\r\n        const envelopeComputer: EnvelopeComputer = tone.envelopeComputer;\r\n        let useEnvelopeSpeed: number = Config.arpSpeedScale[instrument.envelopeSpeed];\r\n        if (this.isModActive(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex)) {\r\n            useEnvelopeSpeed = Math.max(0, Math.min(Config.arpSpeedScale.length - 1, this.getModValue(Config.modulators.dictionary[\"envelope speed\"].index, channelIndex, tone.instrumentIndex, false)));\r\n            if (Number.isInteger(useEnvelopeSpeed)) {\r\n                useEnvelopeSpeed = Config.arpSpeedScale[useEnvelopeSpeed];\r\n            } else {\r\n                // Linear interpolate envelope values\r\n                useEnvelopeSpeed = (1 - (useEnvelopeSpeed % 1)) * Config.arpSpeedScale[Math.floor(useEnvelopeSpeed)] + (useEnvelopeSpeed % 1) * Config.arpSpeedScale[Math.ceil(useEnvelopeSpeed)];\r\n            }\r\n        }\r\n        envelopeComputer.computeEnvelopes(instrument, currentPart, instrumentState.envelopeTime, Config.ticksPerPart * partTimeStart, samplesPerTick / this.samplesPerSecond, tone, useEnvelopeSpeed, this.song, instrumentState);\r\n        const envelopeStarts: number[] = tone.envelopeComputer.envelopeStarts;\r\n        const envelopeEnds: number[] = tone.envelopeComputer.envelopeEnds;\r\n        instrument.noteFilter = tmpNoteFilter;\r\n        if (transition.continues && (tone.prevNote == null || tone.note == null)) {\r\n            instrumentState.envelopeComputer.reset();\r\n        }\r\n\r\n        if (tone.note != null && transition.slides) {\r\n            // Slide interval and chordExpression at the start and/or end of the note if necessary.\r\n            const prevNote: Note | null = tone.prevNote;\r\n            const nextNote: Note | null = tone.nextNote;\r\n            if (prevNote != null) {\r\n                const intervalDiff: number = prevNote.pitches[tone.prevNotePitchIndex] + prevNote.pins[prevNote.pins.length - 1].interval - tone.pitches[0];\r\n                if (envelopeComputer.prevSlideStart) intervalStart += intervalDiff * envelopeComputer.prevSlideRatioStart;\r\n                if (envelopeComputer.prevSlideEnd) intervalEnd += intervalDiff * envelopeComputer.prevSlideRatioEnd;\r\n                if (!chord.singleTone) {\r\n                    const chordSizeDiff: number = prevNote.pitches.length - tone.chordSize;\r\n                    if (envelopeComputer.prevSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioStart);\r\n                    if (envelopeComputer.prevSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.prevSlideRatioEnd);\r\n                }\r\n            }\r\n            if (nextNote != null) {\r\n                const intervalDiff: number = nextNote.pitches[tone.nextNotePitchIndex] - (tone.pitches[0] + tone.note.pins[tone.note.pins.length - 1].interval);\r\n                if (envelopeComputer.nextSlideStart) intervalStart += intervalDiff * envelopeComputer.nextSlideRatioStart;\r\n                if (envelopeComputer.nextSlideEnd) intervalEnd += intervalDiff * envelopeComputer.nextSlideRatioEnd;\r\n                if (!chord.singleTone) {\r\n                    const chordSizeDiff: number = nextNote.pitches.length - tone.chordSize;\r\n                    if (envelopeComputer.nextSlideStart) chordExpressionStart = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioStart);\r\n                    if (envelopeComputer.nextSlideEnd) chordExpressionEnd = Synth.computeChordExpression(tone.chordSize + chordSizeDiff * envelopeComputer.nextSlideRatioEnd);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (effectsIncludePitchShift(instrument.effects)||this.isModActive(Config.modulators.dictionary[\"song pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\r\n            let pitchShift: number = Config.justIntonationSemitones[instrument.pitchShift] / intervalScale;\r\n            let pitchShiftScalarStart: number = 1.0;\r\n            let pitchShiftScalarEnd: number = 1.0;\r\n            if (this.isModActive(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\r\n                pitchShift = Config.justIntonationSemitones[Config.justIntonationSemitones.length - 1];\r\n                pitchShiftScalarStart = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pitchShiftCenter);\r\n                pitchShiftScalarEnd = (this.getModValue(Config.modulators.dictionary[\"pitch shift\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pitchShiftCenter);\r\n            }\r\n            if (this.isModActive(Config.modulators.dictionary[\"song pitch shift\"].index, channelIndex, tone.instrumentIndex)) {\r\n                pitchShift = Config.justIntonationSemitones[Config.justIntonationSemitones.length - 1];\r\n                pitchShiftScalarStart = clamp((-Config.pitchShiftRange*2)+1, Config.pitchShiftRange-1, (pitchShiftScalarStart + this.getModValue(Config.modulators.dictionary[\"song pitch shift\"].index, undefined, undefined, true))-1) / (Config.pitchShiftCenter);\r\n                pitchShiftScalarEnd = clamp((-Config.pitchShiftRange*2)+1, Config.pitchShiftRange-1, (pitchShiftScalarEnd + this.getModValue(Config.modulators.dictionary[\"song pitch shift\"].index, undefined, undefined, true))-1) / (Config.pitchShiftCenter);\r\n            }\r\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.pitchShift];\r\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.pitchShift];\r\n            intervalStart += pitchShift * envelopeStart * pitchShiftScalarStart;\r\n            intervalEnd += pitchShift * envelopeEnd * pitchShiftScalarEnd;\r\n        }\r\n        if (effectsIncludeDetune(instrument.effects) || this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\r\n            const envelopeStart: number = envelopeStarts[EnvelopeComputeIndex.detune];\r\n            const envelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.detune];\r\n            let modDetuneStart: number = instrument.detune;\r\n            let modDetuneEnd: number = instrument.detune;\r\n            if (this.isModActive(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex)) {\r\n                modDetuneStart = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, false) + Config.detuneCenter;\r\n                modDetuneEnd = this.getModValue(Config.modulators.dictionary[\"detune\"].index, channelIndex, tone.instrumentIndex, true) + Config.detuneCenter;\r\n            }\r\n            if (this.isModActive(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex)) {\r\n                modDetuneStart += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, false);\r\n                modDetuneEnd += 4 * this.getModValue(Config.modulators.dictionary[\"song detune\"].index, channelIndex, tone.instrumentIndex, true);\r\n            }\r\n            intervalStart += Synth.detuneToCents(modDetuneStart) * envelopeStart * Config.pitchesPerOctave / (12.0 * 100.0);\r\n            intervalEnd += Synth.detuneToCents(modDetuneEnd) * envelopeEnd * Config.pitchesPerOctave / (12.0 * 100.0);\r\n        }\r\n        if (effectsIncludeVibrato(instrument.effects)) {\r\n            let delayTicks: number;\r\n            let vibratoAmplitudeStart: number;\r\n            let vibratoAmplitudeEnd: number;\r\n            // Custom vibrato\r\n            if (instrument.vibrato == Config.vibratos.length) {\r\n                delayTicks = instrument.vibratoDelay * 2; // Delay was changed from parts to ticks in BB v9\r\n                // Special case: if vibrato delay is max, NEVER vibrato.\r\n                if (instrument.vibratoDelay == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol)\r\n                    delayTicks = Number.POSITIVE_INFINITY;\r\n                vibratoAmplitudeStart = instrument.vibratoDepth;\r\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\r\n            } else {\r\n                delayTicks = Config.vibratos[instrument.vibrato].delayTicks;\r\n                vibratoAmplitudeStart = Config.vibratos[instrument.vibrato].amplitude;\r\n                vibratoAmplitudeEnd = vibratoAmplitudeStart;\r\n            }\r\n\r\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex)) {\r\n                delayTicks = this.getModValue(Config.modulators.dictionary[\"vibrato delay\"].index, channelIndex, tone.instrumentIndex, false) * 2; // Delay was changed from parts to ticks in BB v9\r\n                if (delayTicks == Config.modulators.dictionary[\"vibrato delay\"].maxRawVol * 2)\r\n                    delayTicks = Number.POSITIVE_INFINITY;\r\n\r\n            }\r\n\r\n            if (this.isModActive(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex)) {\r\n                vibratoAmplitudeStart = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, false) / 25;\r\n                vibratoAmplitudeEnd = this.getModValue(Config.modulators.dictionary[\"vibrato depth\"].index, channelIndex, tone.instrumentIndex, true) / 25;\r\n            }\r\n\r\n\r\n            // To maintain pitch continuity, (mostly for picked string which retriggers impulse\r\n            // otherwise) remember the vibrato at the end of this run and reuse it at the start\r\n            // of the next run if available.\r\n            let vibratoStart: number;\r\n            if (tone.prevVibrato != null) {\r\n                vibratoStart = tone.prevVibrato;\r\n            } else {\r\n                let vibratoLfoStart: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.vibratoTime);\r\n                const vibratoDepthEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.vibratoDepth];\r\n                vibratoStart = vibratoAmplitudeStart * vibratoLfoStart * vibratoDepthEnvelopeStart;\r\n                if (delayTicks > 0.0) {\r\n                    const ticksUntilVibratoStart: number = delayTicks - envelopeComputer.noteTicksStart;\r\n                    vibratoStart *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoStart / 2.0));\r\n                }\r\n            }\r\n\r\n            let vibratoLfoEnd: number = Synth.getLFOAmplitude(instrument, secondsPerPart * instrumentState.nextVibratoTime);\r\n            const vibratoDepthEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.vibratoDepth];\r\n            if (instrument.type != InstrumentType.mod) {\r\n                let vibratoEnd: number = vibratoAmplitudeEnd * vibratoLfoEnd * vibratoDepthEnvelopeEnd;\r\n                if (delayTicks > 0.0) {\r\n                    const ticksUntilVibratoEnd: number = delayTicks - envelopeComputer.noteTicksEnd;\r\n                    vibratoEnd *= Math.max(0.0, Math.min(1.0, 1.0 - ticksUntilVibratoEnd / 2.0));\r\n                }\r\n\r\n                tone.prevVibrato = vibratoEnd;\r\n\r\n                intervalStart += vibratoStart;\r\n                intervalEnd += vibratoEnd;\r\n            }\r\n        }\r\n\r\n        if ((!transition.isSeamless && !tone.forceContinueAtStart) || tone.prevNote == null) {\r\n            // Fade in the beginning of the note.\r\n            const fadeInSeconds: number = instrument.getFadeInSeconds();\r\n            if (fadeInSeconds > 0.0) {\r\n                fadeExpressionStart *= Math.min(1.0, envelopeComputer.noteSecondsStartUnscaled / fadeInSeconds);\r\n                fadeExpressionEnd *= Math.min(1.0, envelopeComputer.noteSecondsEndUnscaled / fadeInSeconds);\r\n            }\r\n        }\r\n\r\n\r\n        if (instrument.type == InstrumentType.drumset && tone.drumsetPitch == null) {\r\n            // It's possible that the note will change while the user is editing it,\r\n            // but the tone's pitches don't get updated because the tone has already\r\n            // ended and is fading out. To avoid an array index out of bounds error, clamp the pitch.\r\n            tone.drumsetPitch = tone.pitches[0];\r\n            if (tone.note != null) tone.drumsetPitch += tone.note.pickMainInterval();\r\n            tone.drumsetPitch = Math.max(0, Math.min(Config.drumCount - 1, tone.drumsetPitch));\r\n        }\r\n\r\n        let noteFilterExpression: number = envelopeComputer.lowpassCutoffDecayVolumeCompensation;\r\n        if (!effectsIncludeNoteFilter(instrument.effects)) {\r\n            tone.noteFilterCount = 0;\r\n        } else {\r\n\r\n            const noteAllFreqsEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterAllFreqs];\r\n            const noteAllFreqsEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterAllFreqs];\r\n\r\n            // Simple note filter\r\n            if (instrument.noteFilterType) {\r\n                const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0];\r\n                const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0];\r\n                const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0];\r\n                const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0];\r\n\r\n                startPoint!.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\r\n                endPoint!.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\r\n\r\n                if (tone.noteFilters.length < 1) tone.noteFilters[0] = new DynamicBiquadFilter();\r\n                tone.noteFilters[0].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint!.type == FilterType.lowPass);\r\n                noteFilterExpression *= startPoint!.getVolumeCompensationMult();\r\n\r\n                tone.noteFilterCount = 1;\r\n            }\r\n            else {\r\n                const noteFilterSettings: FilterSettings = (instrument.tmpNoteFilterStart != null) ? instrument.tmpNoteFilterStart : instrument.noteFilter;\r\n\r\n                for (let i: number = 0; i < noteFilterSettings.controlPointCount; i++) {\r\n                    const noteFreqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterFreq0 + i];\r\n                    const noteFreqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterFreq0 + i];\r\n                    const notePeakEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.noteFilterGain0 + i];\r\n                    const notePeakEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.noteFilterGain0 + i];\r\n                    let startPoint: FilterControlPoint = noteFilterSettings.controlPoints[i];\r\n                    const endPoint: FilterControlPoint = (instrument.tmpNoteFilterEnd != null && instrument.tmpNoteFilterEnd.controlPoints[i] != null) ? instrument.tmpNoteFilterEnd.controlPoints[i] : noteFilterSettings.controlPoints[i];\r\n\r\n                    // If switching dot type, do it all at once and do not try to interpolate since no valid interpolation exists.\r\n                    if (startPoint.type != endPoint.type) {\r\n                        startPoint = endPoint;\r\n                    }\r\n\r\n                    startPoint.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeStart * noteFreqEnvelopeStart, notePeakEnvelopeStart);\r\n                    endPoint.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, noteAllFreqsEnvelopeEnd * noteFreqEnvelopeEnd, notePeakEnvelopeEnd);\r\n                    if (tone.noteFilters.length <= i) tone.noteFilters[i] = new DynamicBiquadFilter();\r\n                    tone.noteFilters[i].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, startPoint.type == FilterType.lowPass);\r\n                    noteFilterExpression *= startPoint.getVolumeCompensationMult();\r\n                }\r\n                tone.noteFilterCount = noteFilterSettings.controlPointCount;\r\n            }\r\n        }\r\n\r\n        if (instrument.type == InstrumentType.drumset) {\r\n            const drumsetFilterEnvelope: Envelope = instrument.getDrumsetEnvelope(tone.drumsetPitch!);\r\n            //const timeScale: number = Config.arpSpeedScale[instrument.envelopeSpeed];\r\n            //secondsPerTick *= timeScale;\r\n            // If the drumset lowpass cutoff decays, compensate by increasing expression.\r\n                        noteFilterExpression *= EnvelopeComputer.getLowpassCutoffDecayVolumeCompensation(drumsetFilterEnvelope)\r\n\r\n            // Drumset filters use the same envelope timing as the rest of the envelopes, but do not include support for slide transitions.\r\n            let drumsetFilterEnvelopeStart: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.noteSizeStart);\r\n\r\n            // Apply slide interpolation to drumset envelope.\r\n            if (envelopeComputer.prevSlideStart) {\r\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsStart, beatsPerPart * partTimeStart, envelopeComputer.prevNoteSize);\r\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.prevSlideRatioStart;\r\n            }\r\n            if (envelopeComputer.nextSlideStart) {\r\n                const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeStart, envelopeComputer.nextNoteSize);\r\n                drumsetFilterEnvelopeStart += (other - drumsetFilterEnvelopeStart) * envelopeComputer.nextSlideRatioStart;\r\n            }\r\n            \r\n            let drumsetFilterEnvelopeEnd: number = drumsetFilterEnvelopeStart;\r\n\r\n            if ( instrument.discreteEnvelope == false ) {\r\n                drumsetFilterEnvelopeEnd = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.noteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.noteSizeEnd);\r\n\r\n                if (envelopeComputer.prevSlideEnd) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, envelopeComputer.prevNoteSecondsEnd, beatsPerPart * partTimeEnd, envelopeComputer.prevNoteSize);\r\n                    drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.prevSlideRatioEnd;\r\n                }\r\n                if (envelopeComputer.nextSlideEnd) {\r\n                    const other: number = EnvelopeComputer.computeEnvelope(drumsetFilterEnvelope, 0.0, beatsPerPart * partTimeEnd, envelopeComputer.nextNoteSize);\r\n                    drumsetFilterEnvelopeEnd += (other - drumsetFilterEnvelopeEnd) * envelopeComputer.nextSlideRatioEnd;\r\n                }\r\n            }\r\n\r\n            const point: FilterControlPoint = this.tempDrumSetControlPoint;\r\n            point.type = FilterType.lowPass;\r\n            point.gain = FilterControlPoint.getRoundedSettingValueFromLinearGain(0.5);\r\n            point.freq = FilterControlPoint.getRoundedSettingValueFromHz(8000.0);\r\n            // Drumset envelopes are warped to better imitate the legacy simplified 2nd order lowpass at ~48000Hz that I used to use.\r\n            point.toCoefficients(Synth.tempFilterStartCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeStart * (1.0 + drumsetFilterEnvelopeStart), 1.0);\r\n            point.toCoefficients(Synth.tempFilterEndCoefficients, this.samplesPerSecond, drumsetFilterEnvelopeEnd * (1.0 + drumsetFilterEnvelopeEnd), 1.0);\r\n            if (tone.noteFilters.length == tone.noteFilterCount) tone.noteFilters[tone.noteFilterCount] = new DynamicBiquadFilter();\r\n            tone.noteFilters[tone.noteFilterCount].loadCoefficientsWithGradient(Synth.tempFilterStartCoefficients, Synth.tempFilterEndCoefficients, 1.0 / roundedSamplesPerTick, true);\r\n            tone.noteFilterCount++;\r\n        }\r\n\r\n        noteFilterExpression = Math.min(3.0, noteFilterExpression);\r\n\r\n        if (instrument.type == InstrumentType.fm || instrument.type == InstrumentType.fm6op) {\r\n            // phase modulation!\r\n\r\n            let sineExpressionBoost: number = 1.0;\r\n            let totalCarrierExpression: number = 0.0;\r\n\r\n            let arpeggioInterval: number = 0;\r\n            const arpeggiates: boolean = chord.arpeggiates;\r\n            if (tone.pitchCount > 1 && arpeggiates) {\r\n                const arpeggio: number = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\r\n                arpeggioInterval = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n            }\r\n\r\n\r\n            const carrierCount: number = (instrument.type == InstrumentType.fm6op ? instrument.customAlgorithm.carrierCount : Config.algorithms[instrument.algorithm].carrierCount);\r\n            for (let i: number = 0; i < (instrument.type == InstrumentType.fm6op? 6 : Config.operatorCount); i++) {\r\n\r\n                const associatedCarrierIndex: number = (instrument.type == InstrumentType.fm6op ? instrument.customAlgorithm.associatedCarrier[i]-1:Config.algorithms[instrument.algorithm].associatedCarrier[i] - 1);\r\n                const pitch: number = tone.pitches[arpeggiates ? 0 : ((i < tone.pitchCount) ? i : ((associatedCarrierIndex < tone.pitchCount) ? associatedCarrierIndex : 0))];\r\n                const freqMult = Config.operatorFrequencies[instrument.operators[i].frequency].mult;\r\n                const interval = Config.operatorCarrierInterval[associatedCarrierIndex] + arpeggioInterval;\r\n                const pitchStart: number = basePitch + (pitch + intervalStart) * intervalScale + interval;\r\n                const pitchEnd: number = basePitch + (pitch + intervalEnd) * intervalScale + interval;\r\n                const baseFreqStart: number = Instrument.frequencyFromPitch(pitchStart);\r\n                const baseFreqEnd: number = Instrument.frequencyFromPitch(pitchEnd);\r\n                const hzOffset: number = Config.operatorFrequencies[instrument.operators[i].frequency].hzOffset;\r\n                const targetFreqStart: number = freqMult * baseFreqStart + hzOffset;\r\n                const targetFreqEnd: number = freqMult * baseFreqEnd + hzOffset;\r\n\r\n                \r\n                const freqEnvelopeStart: number = envelopeStarts[EnvelopeComputeIndex.operatorFrequency0 + i];\r\n                const freqEnvelopeEnd: number = envelopeEnds[EnvelopeComputeIndex.operatorFrequency0 + i];\r\n                let freqStart: number;\r\n                let freqEnd: number;\r\n                if (freqEnvelopeStart != 1.0 || freqEnvelopeEnd != 1.0) {\r\n                    freqStart = Math.pow(2.0, Math.log2(targetFreqStart / baseFreqStart) * freqEnvelopeStart) * baseFreqStart;\r\n                    freqEnd = Math.pow(2.0, Math.log2(targetFreqEnd / baseFreqEnd) * freqEnvelopeEnd) * baseFreqEnd;\r\n                } else {\r\n                    freqStart = targetFreqStart;\r\n                    freqEnd = targetFreqEnd;\r\n                }\r\n                tone.phaseDeltas[i] = freqStart * sampleTime;\r\n                tone.phaseDeltaScales[i] = Math.pow(freqEnd / freqStart, 1.0 / roundedSamplesPerTick);\r\n\r\n                let amplitudeStart: number = instrument.operators[i].amplitude;\r\n                let amplitudeEnd: number = instrument.operators[i].amplitude;\r\n                if (i < 4){\r\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex)) {\r\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, false) / 15.0;\r\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 1\"].index + i, channelIndex, tone.instrumentIndex, true) / 15.0;\r\n                    }\r\n                } else {\r\n                    if (this.isModActive(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex)) {\r\n                        amplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex, false) / 15.0;\r\n                        amplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm slider 5\"].index + i-4, channelIndex, tone.instrumentIndex, true) / 15.0;\r\n                    }\r\n                }\r\n\r\n                const amplitudeCurveStart: number = Synth.operatorAmplitudeCurve(amplitudeStart);\r\n                const amplitudeCurveEnd: number = Synth.operatorAmplitudeCurve(amplitudeEnd);\r\n                const amplitudeMultStart: number = amplitudeCurveStart * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n                const amplitudeMultEnd: number = amplitudeCurveEnd * Config.operatorFrequencies[instrument.operators[i].frequency].amplitudeSign;\r\n\r\n                let expressionStart: number = amplitudeMultStart;\r\n                let expressionEnd: number = amplitudeMultEnd;\r\n\r\n\r\n                if (i < carrierCount) {\r\n                    // carrier\r\n                    let pitchExpressionStart: number;\r\n                    if (tone.prevPitchExpressions[i] != null) {\r\n                        pitchExpressionStart = tone.prevPitchExpressions[i]!;\r\n                    } else {\r\n                        pitchExpressionStart = Math.pow(2.0, -(pitchStart - expressionReferencePitch) / pitchDamping);\r\n                    }\r\n                    const pitchExpressionEnd: number = Math.pow(2.0, -(pitchEnd - expressionReferencePitch) / pitchDamping);\r\n                    tone.prevPitchExpressions[i] = pitchExpressionEnd;\r\n                    expressionStart *= pitchExpressionStart;\r\n                    expressionEnd *= pitchExpressionEnd;\r\n\r\n                    totalCarrierExpression += amplitudeCurveEnd;\r\n                } else {\r\n                    // modulator\r\n                    expressionStart *= Config.sineWaveLength * 1.5;\r\n                    expressionEnd *= Config.sineWaveLength * 1.5;\r\n\r\n                    sineExpressionBoost *= 1.0 - Math.min(1.0, instrument.operators[i].amplitude / 15);\r\n                }\r\n\r\n                expressionStart *= envelopeStarts[EnvelopeComputeIndex.operatorAmplitude0 + i];\r\n                expressionEnd *= envelopeEnds[EnvelopeComputeIndex.operatorAmplitude0 + i];\r\n\r\n                // Check for mod-related volume delta\r\n                // @jummbus - This amplification is also applied to modulator FM operators which distorts the sound.\r\n                // The fix is to apply this only to carriers, but as this is a legacy bug and it can cause some interesting sounds, it's left in.\r\n                // You can use the mix volume modulator instead to avoid this effect.\r\n\r\n                if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                    const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\r\n                    const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true);\r\n                    expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\r\n                    expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\r\n                }\r\n\r\n                tone.operatorExpressions[i] = expressionStart;\r\n                tone.operatorExpressionDeltas[i] = (expressionEnd - expressionStart) / roundedSamplesPerTick;\r\n\r\n            }\r\n\r\n            sineExpressionBoost *= (Math.pow(2.0, (2.0 - 1.4 * instrument.feedbackAmplitude / 15.0)) - 1.0) / 3.0;\r\n            sineExpressionBoost *= 1.0 - Math.min(1.0, Math.max(0.0, totalCarrierExpression - 1) / 2.0);\r\n            sineExpressionBoost = 1.0 + sineExpressionBoost * 3.0;\r\n            const expressionStart: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionStart * chordExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume];\r\n            const expressionEnd: number = baseExpression * sineExpressionBoost * noteFilterExpression * fadeExpressionEnd * chordExpressionEnd * envelopeEnds[EnvelopeComputeIndex.noteVolume];\r\n            tone.expression = expressionStart;\r\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\r\n\r\n\r\n            let useFeedbackAmplitudeStart: number = instrument.feedbackAmplitude;\r\n            let useFeedbackAmplitudeEnd: number = instrument.feedbackAmplitude;\r\n            if (this.isModActive(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex)) {\r\n                useFeedbackAmplitudeStart *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, false) / 15.0;\r\n                useFeedbackAmplitudeEnd *= this.getModValue(Config.modulators.dictionary[\"fm feedback\"].index, channelIndex, tone.instrumentIndex, true) / 15.0;\r\n            }\r\n\r\n            let feedbackAmplitudeStart: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeStart / 15.0;\r\n            const feedbackAmplitudeEnd: number = Config.sineWaveLength * 0.3 * useFeedbackAmplitudeEnd / 15.0;\r\n\r\n            let feedbackStart: number = feedbackAmplitudeStart * envelopeStarts[EnvelopeComputeIndex.feedbackAmplitude];\r\n            let feedbackEnd: number = feedbackAmplitudeEnd * envelopeEnds[EnvelopeComputeIndex.feedbackAmplitude];\r\n            tone.feedbackMult = feedbackStart;\r\n            tone.feedbackDelta = (feedbackEnd - feedbackStart) / roundedSamplesPerTick;\r\n\r\n\r\n        } else {\r\n            const freqEndRatio: number = Math.pow(2.0, (intervalEnd - intervalStart) * intervalScale / 12.0);\r\n\t\t\tconst basePhaseDeltaScale: number = Math.pow(freqEndRatio, 1.0 / roundedSamplesPerTick);\r\n\r\n\r\n            let pitch: number = tone.pitches[0];\r\n            if (tone.pitchCount > 1 && (chord.arpeggiates || chord.customInterval)) {\r\n                const arpeggio: number = Math.floor(instrumentState.arpTime / Config.ticksPerArpeggio);\r\n                if (chord.customInterval) {\r\n                    const intervalOffset: number = tone.pitches[1 + getArpeggioPitchIndex(tone.pitchCount - 1, instrument.fastTwoNoteArp, arpeggio)] - tone.pitches[0];\r\n                    specialIntervalMult = Math.pow(2.0, intervalOffset / 12.0);\r\n                    tone.specialIntervalExpressionMult = Math.pow(2.0, -intervalOffset / pitchDamping);\r\n                } else {\r\n                    pitch = tone.pitches[getArpeggioPitchIndex(tone.pitchCount, instrument.fastTwoNoteArp, arpeggio)];\r\n                }\r\n            }\r\n\r\n            const startPitch: number = basePitch + (pitch + intervalStart) * intervalScale;\r\n            const endPitch: number = basePitch + (pitch + intervalEnd) * intervalScale;\r\n            let pitchExpressionStart: number;\r\n            // TODO: use the second element of prevPitchExpressions for the unison voice, compute a separate expression delta for it.\r\n            if (tone.prevPitchExpressions[0] != null) {\r\n                pitchExpressionStart = tone.prevPitchExpressions[0]!;\r\n            } else {\r\n                pitchExpressionStart = Math.pow(2.0, -(startPitch - expressionReferencePitch) / pitchDamping);\r\n            }\r\n            const pitchExpressionEnd: number = Math.pow(2.0, -(endPitch - expressionReferencePitch) / pitchDamping);\r\n            tone.prevPitchExpressions[0] = pitchExpressionEnd;\r\n            let settingsExpressionMult: number = baseExpression * noteFilterExpression;\r\n\r\n            if (instrument.type == InstrumentType.noise) {\r\n                settingsExpressionMult *= Config.chipNoises[instrument.chipNoise].expression;\r\n            }\r\n            if (instrument.type == InstrumentType.chip) {\r\n                settingsExpressionMult *= Config.chipWaves[instrument.chipWave].expression;\r\n            }\r\n            if (instrument.type == InstrumentType.pwm) {\r\n                const basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\r\n\r\n                // Check for PWM mods to this instrument\r\n                let pulseWidthModStart: number = basePulseWidth;\r\n                let pulseWidthModEnd: number = basePulseWidth;\r\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\r\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\r\n                }\r\n\r\n                const pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\r\n                const pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\r\n                tone.pulseWidth = pulseWidthStart;\r\n                tone.pulseWidthDelta = (pulseWidthEnd - pulseWidthStart) / roundedSamplesPerTick;\r\n\r\n                //decimal offset mods\r\n                let decimalOffsetModStart: number = instrument.decimalOffset;\r\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\r\n                }\r\n \r\n                const decimalOffsetStart: number = decimalOffsetModStart * envelopeStarts[EnvelopeComputeIndex.decimalOffset];\r\n                tone.decimalOffset = decimalOffsetStart;\r\n                \r\n                tone.pulseWidth -= (tone.decimalOffset) / 10000;\r\n            }\r\n            if (instrument.type == InstrumentType.pickedString) {\r\n                // Check for sustain mods\r\n                let useSustainStart: number = instrument.stringSustain;\r\n                let useSustainEnd: number = instrument.stringSustain;\r\n                if (this.isModActive(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    useSustainStart = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, false);\r\n                    useSustainEnd = this.getModValue(Config.modulators.dictionary[\"sustain\"].index, channelIndex, tone.instrumentIndex, true);\r\n                }\r\n\r\n                tone.stringSustainStart = useSustainStart;\r\n                tone.stringSustainEnd = useSustainEnd;\r\n\r\n                // Increase expression to compensate for string decay.\r\n                settingsExpressionMult *= Math.pow(2.0, 0.7 * (1.0 - useSustainStart / (Config.stringSustainRange - 1)));\r\n\r\n            }\r\n\r\n            const startFreq: number = Instrument.frequencyFromPitch(startPitch);\r\n            if (instrument.type == InstrumentType.chip || instrument.type == InstrumentType.customChipWave || instrument.type == InstrumentType.harmonics || instrument.type == InstrumentType.pickedString || instrument.type == InstrumentType.spectrum || instrument.type == InstrumentType.pwm || instrument.type == InstrumentType.noise) {\r\n                // These instruments have two waves at different frequencies for the unison feature.\r\n                //const unison: Unison = Config.unisons[instrument.unison];\r\n                const unisonVoices: number = instrument.unisonVoices;\r\n                const unisonSpread: number = instrument.unisonSpread;\r\n                const unisonOffset: number = instrument.unisonOffset;\r\n                const unisonExpression: number = instrument.unisonExpression;\r\n                //const unisonSign: number = Config.unisons[instrument.unisonSign];\r\n                //const unison: Unison = [voices:, ];\r\n                const voiceCountExpression: number = (instrument.type == InstrumentType.pickedString) ? 1 : unisonVoices / 2.0;\r\n                settingsExpressionMult *= unisonExpression * voiceCountExpression;\r\n                const unisonEnvelopeStart = envelopeStarts[EnvelopeComputeIndex.unison];\r\n                const unisonEnvelopeEnd = envelopeEnds[EnvelopeComputeIndex.unison];\r\n                const unisonAStart: number = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeStart / 12.0);\r\n                const unisonAEnd: number = Math.pow(2.0, (unisonOffset + unisonSpread) * unisonEnvelopeEnd / 12.0);\r\n                const unisonBStart: number = Math.pow(2.0, (unisonOffset - unisonSpread) * unisonEnvelopeStart / 12.0) * specialIntervalMult;\r\n                const unisonBEnd: number = Math.pow(2.0, (unisonOffset- unisonSpread) * unisonEnvelopeEnd / 12.0) * specialIntervalMult;\r\n                tone.phaseDeltas[0] = startFreq * sampleTime * unisonAStart;\r\n                tone.phaseDeltas[1] = startFreq * sampleTime * unisonBStart;\r\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale * Math.pow(unisonAEnd / unisonAStart, 1.0 / roundedSamplesPerTick);\r\n                tone.phaseDeltaScales[1] = basePhaseDeltaScale * Math.pow(unisonBEnd / unisonBStart, 1.0 / roundedSamplesPerTick);\r\n            } else {\r\n                tone.phaseDeltas[0] = startFreq * sampleTime;\r\n                tone.phaseDeltaScales[0] = basePhaseDeltaScale;\r\n            }\r\n\r\n             // TODO: make expressionStart and expressionEnd variables earlier and modify those\r\n\t\t\t// instead of these supersawExpression variables.\r\n\t\t\tlet supersawExpressionStart: number = 1.0;\r\n\t\t\tlet supersawExpressionEnd: number = 1.0;\r\n\t\t\tif (instrument.type == InstrumentType.supersaw) {\r\n\t\t\t\tconst minFirstVoiceAmplitude: number = 1.0 / Math.sqrt(Config.supersawVoiceCount);\r\n\r\n                // Dynamism mods\r\n                let useDynamismStart: number = instrument.supersawDynamism / Config.supersawDynamismMax;\r\n                let useDynamismEnd: number = instrument.supersawDynamism / Config.supersawDynamismMax;\r\n                if (this.isModActive(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    useDynamismStart = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawDynamismMax;\r\n                    useDynamismEnd = (this.getModValue(Config.modulators.dictionary[\"dynamism\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawDynamismMax;\r\n                }\r\n\r\n\t\t\t\tconst curvedDynamismStart: number = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismStart * envelopeStarts[EnvelopeComputeIndex.supersawDynamism]), 0.2);\r\n\t\t\t\tconst curvedDynamismEnd:   number = 1.0 - Math.pow(Math.max(0.0, 1.0 - useDynamismEnd * envelopeEnds[  EnvelopeComputeIndex.supersawDynamism]), 0.2);\r\n\t\t\t\tconst firstVoiceAmplitudeStart: number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismStart);\r\n\t\t\t\tconst firstVoiceAmplitudeEnd:   number = Math.pow(2.0, Math.log2(minFirstVoiceAmplitude) * curvedDynamismEnd);\r\n\r\n\t\t\t\tconst dynamismStart: number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeStart, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\r\n\t\t\t\tconst dynamismEnd:   number = Math.sqrt((1.0 / Math.pow(firstVoiceAmplitudeEnd, 2.0) - 1.0) / (Config.supersawVoiceCount - 1.0));\r\n\t\t\t\ttone.supersawDynamism = dynamismStart;\r\n\t\t\t\ttone.supersawDynamismDelta = (dynamismEnd - dynamismStart) / roundedSamplesPerTick;\r\n\r\n\t\t\t\tconst initializeSupersaw: boolean = (tone.supersawDelayIndex == -1);\r\n\t\t\t\tif (initializeSupersaw) {\r\n\t\t\t\t\t// Goal: generate sawtooth phases such that the combined initial amplitude\r\n\t\t\t\t\t// cancel out to minimize pop. Algorithm: generate sorted phases, iterate over\r\n\t\t\t\t\t// their sawtooth drop points to find a combined zero crossing, then offset the\r\n\t\t\t\t\t// phases so they start there.\r\n\r\n\t\t\t\t\t// Generate random phases in ascending order by adding positive randomly\r\n\t\t\t\t\t// sized gaps between adjacent phases. For a proper distribution of random\r\n\t\t\t\t\t// events, the gaps sizes should be an \"exponential distribution\", which is\r\n\t\t\t\t\t// just: -Math.log(Math.random()). At the end, normalize the phases to a 0-1\r\n\t\t\t\t\t// range by dividing by the final value of the accumulator.\r\n\t\t\t\t\tlet accumulator: number = 0.0;\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\r\n\t\t\t\t\t\ttone.phases[i] = accumulator;\r\n\t\t\t\t\t\taccumulator += -Math.log(Math.random());\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst amplitudeSum: number = 1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart;\r\n\t\t\t\t\tconst slope: number = amplitudeSum;\r\n\r\n\t\t\t\t\t// Find the initial amplitude of the sum of sawtooths with the normalized\r\n\t\t\t\t\t// set of phases.\r\n\t\t\t\t\tlet sample: number = 0.0;\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\r\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\r\n\t\t\t\t\t\tconst normalizedPhase: number = tone.phases[i] / accumulator;\r\n\t\t\t\t\t\ttone.phases[i] = normalizedPhase;\r\n\t\t\t\t\t\tsample += (normalizedPhase - 0.5) * amplitude;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Find the phase of the zero crossing of the sum of the sawtooths. You can\r\n\t\t\t\t\t// use a constant slope and the distance between sawtooth drops to determine if\r\n\t\t\t\t\t// the zero crossing occurs between them. Note that a small phase means that\r\n\t\t\t\t\t// the corresponding drop for that wave is far away, and a big phase means the\r\n\t\t\t\t\t// drop is nearby, so to iterate forward through the drops we iterate backward\r\n\t\t\t\t\t// through the phases.\r\n\t\t\t\t\tlet zeroCrossingPhase: number = 1.0;\r\n\t\t\t\t\tlet prevDrop: number = 0.0;\r\n\t\t\t\t\tfor (let i: number = Config.supersawVoiceCount - 1; i >= 0; i--) {\r\n\t\t\t\t\t\tconst nextDrop: number = 1.0 - tone.phases[i];\r\n\t\t\t\t\t\tconst phaseDelta: number = nextDrop - prevDrop;\r\n\t\t\t\t\t\tif (sample < 0.0) {\r\n\t\t\t\t\t\t\tconst distanceToZeroCrossing: number = -sample / slope;\r\n\t\t\t\t\t\t\tif (distanceToZeroCrossing < phaseDelta) {\r\n\t\t\t\t\t\t\t\tzeroCrossingPhase = prevDrop + distanceToZeroCrossing;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tconst amplitude: number = (i == 0) ? 1.0 : dynamismStart;\r\n\t\t\t\t\t\tsample += phaseDelta * slope - amplitude;\r\n\t\t\t\t\t\tprevDrop = nextDrop;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (let i: number = 0; i < Config.supersawVoiceCount; i++) {\r\n\t\t\t\t\t\ttone.phases[i] += zeroCrossingPhase;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Randomize the (initially sorted) order of the phases (aside from the\r\n\t\t\t\t\t// first one) so that they don't correlate to the detunes that are also\r\n\t\t\t\t\t// based on index.\r\n\t\t\t\t\tfor (let i: number = 1; i < Config.supersawVoiceCount - 1; i++) {\r\n\t\t\t\t\t\tconst swappedIndex: number = i + Math.floor(Math.random() * (Config.supersawVoiceCount - i));\r\n\t\t\t\t\t\tconst temp: number = tone.phases[i];\r\n\t\t\t\t\t\ttone.phases[i] = tone.phases[swappedIndex];\r\n\t\t\t\t\t\ttone.phases[swappedIndex] = temp;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst baseSpreadSlider: number = instrument.supersawSpread / Config.supersawSpreadMax;\r\n\t\t\t\t// Spread mods\r\n\t\t\t\tlet useSpreadStart: number = baseSpreadSlider;\r\n\t\t\t\tlet useSpreadEnd:   number = baseSpreadSlider;\r\n                if (this.isModActive(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    useSpreadStart = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawSpreadMax;\r\n                    useSpreadEnd = (this.getModValue(Config.modulators.dictionary[\"spread\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawSpreadMax;\r\n                }\r\n\r\n\t\t\t\tconst spreadSliderStart: number = useSpreadStart * envelopeStarts[EnvelopeComputeIndex.supersawSpread];\r\n\t\t\t\tconst spreadSliderEnd:   number = useSpreadEnd * envelopeEnds[  EnvelopeComputeIndex.supersawSpread];\r\n\t\t\t\t// Just use the average detune for the current tick in the below loop.\r\n\t\t\t\tconst averageSpreadSlider: number = (spreadSliderStart + spreadSliderEnd) * 0.5;\r\n\t\t\t\tconst curvedSpread: number = Math.pow(1.0 - Math.sqrt(Math.max(0.0, 1.0 - averageSpreadSlider)), 1.75);\r\n\t\t\t\tfor (let i = 0; i < Config.supersawVoiceCount; i++) {\r\n\t\t\t\t\t// Spread out the detunes around the center;\r\n\t\t\t\t\tconst offset: number = (i == 0) ? 0.0 : Math.pow((((i + 1) >> 1) - 0.5 + 0.025 * ((i & 2) - 1)) / (Config.supersawVoiceCount >> 1), 1.1) * ((i & 1) * 2 - 1);\r\n\t\t\t\t\ttone.supersawUnisonDetunes[i] = Math.pow(2.0, curvedSpread * offset / 12.0);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst baseShape: number = instrument.supersawShape / Config.supersawShapeMax;\r\n\t\t\t\t// Saw shape mods\r\n\t\t\t\tlet useShapeStart: number = baseShape * envelopeStarts[EnvelopeComputeIndex.supersawShape];\r\n\t\t\t\tlet useShapeEnd:   number = baseShape * envelopeEnds[  EnvelopeComputeIndex.supersawShape];\r\n                if (this.isModActive(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    useShapeStart = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, false)) / Config.supersawShapeMax;\r\n                    useShapeEnd = (this.getModValue(Config.modulators.dictionary[\"saw shape\"].index, channelIndex, tone.instrumentIndex, true)) / Config.supersawShapeMax;\r\n                }\r\n\r\n\t\t\t\tconst shapeStart: number = useShapeStart * envelopeStarts[EnvelopeComputeIndex.supersawShape];\r\n\t\t\t\tconst shapeEnd:   number = useShapeEnd * envelopeEnds[EnvelopeComputeIndex.supersawShape];\r\n\t\t\t\ttone.supersawShape = shapeStart;\r\n\t\t\t\ttone.supersawShapeDelta = (shapeEnd - shapeStart) / roundedSamplesPerTick;\r\n\r\n                //decimal offset mods\r\n                let decimalOffsetModStart: number = instrument.decimalOffset;\r\n                if (this.isModActive(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    decimalOffsetModStart = this.getModValue(Config.modulators.dictionary[\"decimal offset\"].index, channelIndex, tone.instrumentIndex, false);\r\n                }\r\n \r\n                const decimalOffsetStart: number = decimalOffsetModStart * envelopeStarts[EnvelopeComputeIndex.decimalOffset];\r\n                // ...is including tone.decimalOffset still necessary?\r\n                tone.decimalOffset = decimalOffsetStart;\r\n\r\n                const basePulseWidth: number = getPulseWidthRatio(instrument.pulseWidth);\r\n\r\n                // Check for PWM mods to this instrument\r\n                let pulseWidthModStart: number = basePulseWidth;\r\n                let pulseWidthModEnd: number = basePulseWidth;\r\n                if (this.isModActive(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex)) {\r\n                    pulseWidthModStart = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, false)) / (Config.pulseWidthRange * 2);\r\n                    pulseWidthModEnd = (this.getModValue(Config.modulators.dictionary[\"pulse width\"].index, channelIndex, tone.instrumentIndex, true)) / (Config.pulseWidthRange * 2);\r\n                }\r\n\r\n                let pulseWidthStart: number = pulseWidthModStart * envelopeStarts[EnvelopeComputeIndex.pulseWidth];\r\n                let pulseWidthEnd: number = pulseWidthModEnd * envelopeEnds[EnvelopeComputeIndex.pulseWidth];\r\n                pulseWidthStart -= decimalOffsetStart / 10000;\r\n                pulseWidthEnd -= decimalOffsetStart / 10000;\r\n\t\t\t\tconst phaseDeltaStart: number = (tone.supersawPrevPhaseDelta != null) ? tone.supersawPrevPhaseDelta : startFreq * sampleTime;\r\n\t\t\t\tconst phaseDeltaEnd: number = startFreq * sampleTime * freqEndRatio;\r\n\t\t\t\ttone.supersawPrevPhaseDelta = phaseDeltaEnd;\r\n\t\t\t\tconst delayLengthStart = pulseWidthStart / phaseDeltaStart;\r\n\t\t\t\tconst delayLengthEnd = pulseWidthEnd / phaseDeltaEnd;\r\n\t\t\t\ttone.supersawDelayLength = delayLengthStart;\r\n\t\t\t\ttone.supersawDelayLengthDelta = (delayLengthEnd - delayLengthStart) / roundedSamplesPerTick;\r\n\t\t\t\tconst minBufferLength: number = Math.ceil(Math.max(delayLengthStart, delayLengthEnd)) + 2;\r\n\r\n\t\t\t\tif (tone.supersawDelayLine == null || tone.supersawDelayLine.length <= minBufferLength) {\r\n\t\t\t\t\t// The delay line buffer will get reused for other tones so might as well\r\n\t\t\t\t\t// start off with a buffer size that is big enough for most notes.\r\n\t\t\t\t\tconst likelyMaximumLength: number = Math.ceil(0.5 * this.samplesPerSecond / Instrument.frequencyFromPitch(24));\r\n\t\t\t\t\tconst newDelayLine: Float32Array = new Float32Array(Synth.fittingPowerOfTwo(Math.max(likelyMaximumLength, minBufferLength)));\r\n\t\t\t\t\tif (!initializeSupersaw && tone.supersawDelayLine != null) {\r\n\t\t\t\t\t\t// If the tone has already started but the buffer needs to be reallocated,\r\n\t\t\t\t\t\t// transfer the old data to the new buffer.\r\n\t\t\t\t\t\tconst oldDelayBufferMask: number = (tone.supersawDelayLine.length - 1) >> 0;\r\n\t\t\t\t\t\tconst startCopyingFromIndex: number = tone.supersawDelayIndex;\r\n\t\t\t\t\t\tfor (let i: number = 0; i < tone.supersawDelayLine.length; i++) {\r\n\t\t\t\t\t\t\tnewDelayLine[i] = tone.supersawDelayLine[(startCopyingFromIndex + i) & oldDelayBufferMask];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttone.supersawDelayLine = newDelayLine;\r\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\r\n\t\t\t\t} else if (initializeSupersaw) {\r\n\t\t\t\t\ttone.supersawDelayLine.fill(0.0);\r\n\t\t\t\t\ttone.supersawDelayIndex = tone.supersawDelayLine.length;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst pulseExpressionRatio: number = Config.pwmBaseExpression / Config.supersawBaseExpression;\r\n\t\t\t\tsupersawExpressionStart *= (1.0 + (pulseExpressionRatio - 1.0) * shapeStart) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismStart * dynamismStart);\r\n\t\t\t\tsupersawExpressionEnd *= (1.0 + (pulseExpressionRatio - 1.0) * shapeEnd) / Math.sqrt(1.0 + (Config.supersawVoiceCount - 1.0) * dynamismEnd * dynamismEnd);\r\n\t\t\t}\r\n\r\n\t\t\tlet expressionStart: number = settingsExpressionMult * fadeExpressionStart * chordExpressionStart * pitchExpressionStart * envelopeStarts[EnvelopeComputeIndex.noteVolume] * supersawExpressionStart;\r\n\t\t\tlet expressionEnd:   number = settingsExpressionMult * fadeExpressionEnd   * chordExpressionEnd   * pitchExpressionEnd   * envelopeEnds[  EnvelopeComputeIndex.noteVolume] * supersawExpressionEnd;\r\n\r\n            // Check for mod-related volume delta\r\n            if (this.isModActive(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex)) {\r\n                // Linear falloff below 0, normal volume formula above 0. Seems to work best for scaling since the normal volume mult formula has a big gap from -25 to -24.\r\n                const startVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, false);\r\n                const endVal: number = this.getModValue(Config.modulators.dictionary[\"note volume\"].index, channelIndex, tone.instrumentIndex, true)\r\n                expressionStart *= ((startVal <= 0) ? ((startVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(startVal));\r\n                expressionEnd *= ((endVal <= 0) ? ((endVal + Config.volumeRange / 2) / (Config.volumeRange / 2)) : Synth.instrumentVolumeToVolumeMult(endVal));\r\n            }\r\n\r\n            tone.expression = expressionStart;\r\n            tone.expressionDelta = (expressionEnd - expressionStart) / roundedSamplesPerTick;\r\n\r\n\r\n            if (instrument.type == InstrumentType.pickedString) {\r\n                let stringDecayStart: number;\r\n                if (tone.prevStringDecay != null) {\r\n                    stringDecayStart = tone.prevStringDecay;\r\n                } else {\r\n                    const sustainEnvelopeStart: number = tone.envelopeComputer.envelopeStarts[EnvelopeComputeIndex.stringSustain];\r\n                    stringDecayStart = 1.0 - Math.min(1.0, sustainEnvelopeStart * tone.stringSustainStart / (Config.stringSustainRange - 1));\r\n                }\r\n                const sustainEnvelopeEnd: number = tone.envelopeComputer.envelopeEnds[EnvelopeComputeIndex.stringSustain];\r\n                let stringDecayEnd: number = 1.0 - Math.min(1.0, sustainEnvelopeEnd * tone.stringSustainEnd / (Config.stringSustainRange - 1));\r\n                tone.prevStringDecay = stringDecayEnd;\r\n\r\n                //const unison: Unison = Config.unisons[instrument.unison];\r\n                const unisonVoices: number = instrument.unisonVoices;\r\n                for (let i: number = tone.pickedStrings.length; i < unisonVoices; i++) {\r\n                    tone.pickedStrings[i] = new PickedString();\r\n                }\r\n\r\n                if (tone.atNoteStart && !transition.continues && !tone.forceContinueAtStart) {\r\n                    for (const pickedString of tone.pickedStrings) {\r\n                        // Force the picked string to retrigger the attack impulse at the start of the note.\r\n                        pickedString.delayIndex = -1;\r\n                    }\r\n                }\r\n\r\n                for (let i: number = 0; i < unisonVoices; i++) {\r\n                    tone.pickedStrings[i].update(this, instrumentState, tone, i, roundedSamplesPerTick, stringDecayStart, stringDecayEnd, instrument.stringSustainType);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public static getLFOAmplitude(instrument: Instrument, secondsIntoBar: number): number {\r\n        let effect: number = 0.0;\r\n        for (const vibratoPeriodSeconds of Config.vibratoTypes[instrument.vibratoType].periodsSeconds) {\r\n            effect += Math.sin(Math.PI * 2.0 * secondsIntoBar / vibratoPeriodSeconds);\r\n        }\r\n        return effect;\r\n    }\r\n\r\n\r\n    public static getInstrumentSynthFunction(instrument: Instrument): Function {\r\n        if (instrument.type == InstrumentType.fm) {\r\n            const fingerprint: string = instrument.algorithm + \"_\" + instrument.feedbackType;\r\n            if (Synth.fmSynthFunctionCache[fingerprint] == undefined) {\r\n                const synthSource: string[] = [];\r\n\r\n                for (const line of Synth.fmSourceTemplate) {\r\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n                        const outputs: string[] = [];\r\n                        for (let j: number = 0; j < Config.algorithms[instrument.algorithm].carrierCount; j++) {\r\n                            outputs.push(\"operator\" + j + \"Scaled\");\r\n                        }\r\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n                        for (let j: number = Config.operatorCount - 1; j >= 0; j--) {\r\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\r\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n                                    let modulators = \"\";\r\n                                    for (const modulatorNumber of Config.algorithms[instrument.algorithm].modulatedBy[j]) {\r\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n                                    }\r\n\r\n                                    const feedbackIndices: ReadonlyArray<number> = Config.feedbacks[instrument.feedbackType].indices[j];\r\n                                    if (feedbackIndices.length > 0) {\r\n                                        modulators += \" + feedbackMult * (\";\r\n                                        const feedbacks: string[] = [];\r\n                                        for (const modulatorNumber of feedbackIndices) {\r\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n                                        }\r\n                                        modulators += feedbacks.join(\" + \") + \")\";\r\n                                    }\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n                                } else {\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (line.indexOf(\"#\") != -1) {\r\n                        for (let j: number = 0; j < Config.operatorCount; j++) {\r\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\r\n                        }\r\n                    } else {\r\n                        synthSource.push(line);\r\n                    }\r\n                }\r\n\r\n                //console.log(synthSource.join(\"\\n\"));\r\n\r\n                const wrappedFmSynth: string = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\r\n\r\n\t\t\t\tSynth.fmSynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFmSynth)(Config, Synth);\r\n\r\n            }\r\n            return Synth.fmSynthFunctionCache[fingerprint];\r\n        } else if (instrument.type == InstrumentType.chip) {\r\n\t\t                 // advloop addition\r\n                if (instrument.isUsingAdvancedLoopControls) {\r\n                    return Synth.loopableChipSynth;\r\n                }\r\n                // advloop addition\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.customChipWave) {\r\n            return Synth.chipSynth;\r\n        } else if (instrument.type == InstrumentType.harmonics) {\r\n            return Synth.harmonicsSynth;\r\n        } else if (instrument.type == InstrumentType.pwm) {\r\n            return Synth.pulseWidthSynth;\r\n        } else if (instrument.type == InstrumentType.supersaw) {\r\n\t\t\treturn Synth.supersawSynth;\r\n        } else if (instrument.type == InstrumentType.pickedString) {\r\n            return Synth.pickedStringSynth;\r\n        } else if (instrument.type == InstrumentType.noise) {\r\n            return Synth.noiseSynth;\r\n        } else if (instrument.type == InstrumentType.spectrum) {\r\n            return Synth.spectrumSynth;\r\n        } else if (instrument.type == InstrumentType.drumset) {\r\n            return Synth.drumsetSynth;\r\n        } else if (instrument.type == InstrumentType.mod) {\r\n            return Synth.modSynth;\r\n        } else if (instrument.type == InstrumentType.fm6op) {\r\n            const fingerprint: string = instrument.customAlgorithm.name + \"_\" + instrument.customFeedbackType.name;\r\n            if (Synth.fm6SynthFunctionCache[fingerprint] == undefined) {\r\n                const synthSource: string[] = [];\r\n\r\n                for (const line of Synth.fmSourceTemplate) {\r\n                    if (line.indexOf(\"// CARRIER OUTPUTS\") != -1) {\r\n                        const outputs: string[] = [];\r\n                        for (let j: number = 0; j < instrument.customAlgorithm.carrierCount; j++) {\r\n                            outputs.push(\"operator\" + j + \"Scaled\");\r\n                        }\r\n                        synthSource.push(line.replace(\"/*operator#Scaled*/\", outputs.join(\" + \")));\r\n                    } else if (line.indexOf(\"// INSERT OPERATOR COMPUTATION HERE\") != -1) {\r\n                        for (let j: number = Config.operatorCount+2 - 1; j >= 0; j--) {\r\n                            for (const operatorLine of Synth.operatorSourceTemplate) {\r\n                                if (operatorLine.indexOf(\"/* + operator@Scaled*/\") != -1) {\r\n                                    let modulators = \"\";\r\n                                    for (const modulatorNumber of instrument.customAlgorithm.modulatedBy[j]) {\r\n                                        modulators += \" + operator\" + (modulatorNumber - 1) + \"Scaled\";\r\n                                    }\r\n\r\n                                    const feedbackIndices: ReadonlyArray<number> = instrument.customFeedbackType.indices[j];\r\n                                    if (feedbackIndices.length > 0) {\r\n                                        modulators += \" + feedbackMult * (\";\r\n                                        const feedbacks: string[] = [];\r\n                                        for (const modulatorNumber of feedbackIndices) {\r\n                                            feedbacks.push(\"operator\" + (modulatorNumber - 1) + \"Output\");\r\n                                        }\r\n                                        modulators += feedbacks.join(\" + \") + \")\";\r\n                                    }\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\").replace(\"/* + operator@Scaled*/\", modulators));\r\n                                } else {\r\n                                    synthSource.push(operatorLine.replace(/\\#/g, j + \"\"));\r\n                                }\r\n                            }\r\n                        }\r\n                    } else if (line.indexOf(\"#\") != -1) {\r\n                        for (let j = 0; j < Config.operatorCount+2; j++) {\r\n                            synthSource.push(line.replace(/\\#/g, j + \"\"));\r\n                        }\r\n                    } else {\r\n                        synthSource.push(line);\r\n                    }\r\n                }\r\n\r\n                //console.log(synthSource.join(\"\\n\"));\r\n\r\n                const wrappedFm6Synth: string = \"return (synth, bufferIndex, roundedSamplesPerTick, tone, instrument) => {\" + synthSource.join(\"\\n\") + \"}\";\r\n\r\n\t\t\t\tSynth.fm6SynthFunctionCache[fingerprint] = new Function(\"Config\", \"Synth\", wrappedFm6Synth)(Config, Synth);\r\n            }\r\n            return Synth.fm6SynthFunctionCache[fingerprint];\r\n        }else{\r\n            throw new Error(\"Unrecognized instrument type: \" + instrument.type);\r\n        }\r\n    }\r\n// advloop addition\r\n        static wrap(x: number, b: number): number {\r\n            return (x % b + b) % b;\r\n        }\r\n        static loopableChipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n            // @TODO:\r\n            // - Longer declicking? This is more difficult than I thought.\r\n            //   When determining this automatically is difficult (or the input\r\n            //   samples are expected to vary too much), this is left up to the\r\n            //   user.\r\n            const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\r\n            // const aliases = false;\r\n            const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n            const wave: Float32Array = instrumentState.wave!;\r\n            const volumeScale: number = instrumentState.volumeScale;\r\n            const waveLength: number = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\r\n            let chipWaveLoopEnd: number = Math.max(0, Math.min(waveLength, instrumentState.chipWaveLoopEnd));\r\n            let chipWaveLoopStart: number = Math.max(0, Math.min(chipWaveLoopEnd - 1, instrumentState.chipWaveLoopStart));\r\n\t\t\t// @TODO: This is where to set things up for the release loop mode.\r\n           // const ticksSinceReleased = tone.ticksSinceReleased;\r\n            // if (ticksSinceReleased > 0) {\r\n            //     chipWaveLoopStart = 0;\r\n            //     chipWaveLoopEnd = waveLength - 1;\r\n            // }\r\n            let chipWaveLoopLength: number = chipWaveLoopEnd - chipWaveLoopStart;\r\n\t\t\tif (chipWaveLoopLength < 2) {\r\n                chipWaveLoopStart = 0;\r\n                chipWaveLoopEnd = waveLength;\r\n                chipWaveLoopLength = waveLength;\r\n            }\r\n            const chipWaveLoopMode: number = instrumentState.chipWaveLoopMode;\r\n            const chipWavePlayBackwards: boolean = instrumentState.chipWavePlayBackwards;\r\n            const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n            if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\r\n                tone.phases[1] = tone.phases[0];\r\n            let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\r\n            let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\r\n            let directionA: number = tone.directions[0];\r\n            let directionB: number = tone.directions[1];\r\n            let chipWaveCompletionA: number = tone.chipWaveCompletions[0];\r\n            let chipWaveCompletionB: number = tone.chipWaveCompletions[1];\r\n            if (chipWaveLoopMode === 3 || chipWaveLoopMode === 2 || chipWaveLoopMode === 0) {\r\n                // If playing once or looping, we force the correct direction,\r\n                // since it shouldn't really change. This is mostly so that if\r\n                // the mode is changed midway through playback, it won't get\r\n                // stuck on the wrong direction.\r\n                if (!chipWavePlayBackwards) {\r\n                    directionA = 1;\r\n                    directionB = 1;\r\n                } else {\r\n                    directionA = -1;\r\n                    directionB = -1;\r\n                }\r\n            }\r\n            if (chipWaveLoopMode === 0 || chipWaveLoopMode === 1) {\r\n                // If looping or ping-ponging, we clear the completion status,\r\n                // as it's not relevant anymore. This is mostly so that if the\r\n                // mode is changed midway through playback, it won't get stuck\r\n                // on zero volume.\r\n                chipWaveCompletionA = 0;\r\n                chipWaveCompletionB = 0;\r\n            }\r\n            let lastWaveA: number = tone.chipWaveCompletionsLastWave[0];\r\n            let lastWaveB: number = tone.chipWaveCompletionsLastWave[1];\r\n            const chipWaveCompletionFadeLength: number = 1000;\r\n            const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n            const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n            let expression: number = +tone.expression;\r\n            const expressionDelta: number = +tone.expressionDelta;\r\n            let phaseA: number = Synth.wrap(tone.phases[0], 1) * waveLength;\r\n            let phaseB: number = Synth.wrap(tone.phases[1], 1) * waveLength;\r\n            let prevWaveIntegralA: number = 0;\r\n            let prevWaveIntegralB: number = 0;\r\n            if (!aliases) {\r\n                const phaseAInt = Math.floor(phaseA);\r\n                const phaseBInt = Math.floor(phaseB);\r\n                const indexA = Synth.wrap(phaseAInt, waveLength);\r\n               const indexB = Synth.wrap(phaseBInt, waveLength);\r\n                const phaseRatioA = phaseA - phaseAInt;\r\n                const phaseRatioB = phaseB - phaseBInt;\r\n                prevWaveIntegralA = +wave[indexA];\r\n                prevWaveIntegralB = +wave[indexB];\r\n                prevWaveIntegralA += (wave[Synth.wrap(indexA + 1, waveLength)] - prevWaveIntegralA) * phaseRatioA;\r\n                prevWaveIntegralB += (wave[Synth.wrap(indexB + 1, waveLength)] - prevWaveIntegralB) * phaseRatioB;\r\n           }\r\n            const filters = tone.noteFilters;\r\n            const filterCount: number = tone.noteFilterCount | 0;\r\n            let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n            let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n            const applyFilters: Function = Synth.applyFilters;\r\n            const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n            let prevWaveA: number = tone.chipWavePrevWaves[0];\r\n            let prevWaveB: number = tone.chipWavePrevWaves[1];\r\n            for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n                if (chipWaveCompletionA > 0 && chipWaveCompletionA < chipWaveCompletionFadeLength) {\r\n                    chipWaveCompletionA++;\r\n                }\r\n                if (chipWaveCompletionB > 0 && chipWaveCompletionB < chipWaveCompletionFadeLength) {\r\n                    chipWaveCompletionB++;\r\n                }\r\n               let wrapped: number = 0;\r\n                phaseA += phaseDeltaA * directionA;\r\n                phaseB += phaseDeltaB * directionB;\r\n                if (chipWaveLoopMode === 2) {\r\n                    // once\r\n                    if (directionA === 1) {\r\n                        if (phaseA > waveLength) {\r\n                            if (chipWaveCompletionA <= 0) {\r\n                                lastWaveA = prevWaveA;\r\n                                chipWaveCompletionA++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseA < 0) {\r\n                            if (chipWaveCompletionA <= 0) {\r\n                                lastWaveA = prevWaveA;\r\n                                chipWaveCompletionA++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                    if (directionB === 1) {\r\n                        if (phaseB > waveLength) {\r\n                            if (chipWaveCompletionB <= 0) {\r\n                                lastWaveB = prevWaveB;\r\n                                chipWaveCompletionB++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseB < 0) {\r\n                            if (chipWaveCompletionB <= 0) {\r\n                                lastWaveB = prevWaveB;\r\n                                chipWaveCompletionB++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                } else if (chipWaveLoopMode === 3) {\r\n                    // loop once\r\n                    if (directionA === 1) {\r\n                        if (phaseA > chipWaveLoopEnd) {\r\n                            if (chipWaveCompletionA <= 0) {\r\n                                lastWaveA = prevWaveA;\r\n                                chipWaveCompletionA++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseA < chipWaveLoopStart) {\r\n                            if (chipWaveCompletionA <= 0) {\r\n                                lastWaveA = prevWaveA;\r\n                                chipWaveCompletionA++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                    if (directionB === 1) {\r\n                        if (phaseB > chipWaveLoopEnd) {\r\n                            if (chipWaveCompletionB <= 0) {\r\n                                lastWaveB = prevWaveB;\r\n                                chipWaveCompletionB++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseB < chipWaveLoopStart) {\r\n                            if (chipWaveCompletionB <= 0) {\r\n                                lastWaveB = prevWaveB;\r\n                                chipWaveCompletionB++;\r\n                            }\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                } else if (chipWaveLoopMode === 0) {\r\n                    // loop\r\n                    if (directionA === 1) {\r\n                        if (phaseA > chipWaveLoopEnd) {\r\n                            phaseA = chipWaveLoopStart + Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\r\n                            // phaseA = chipWaveLoopStart;\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseA < chipWaveLoopStart) {\r\n                            phaseA = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\r\n                            // phaseA = chipWaveLoopEnd;\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                    if (directionB === 1) {\r\n                        if (phaseB > chipWaveLoopEnd) {\r\n                            phaseB = chipWaveLoopStart + Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\r\n                            // phaseB = chipWaveLoopStart;\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionB === -1) {\r\n                        if (phaseB < chipWaveLoopStart) {\r\n                            phaseB = chipWaveLoopEnd - Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\r\n                            // phaseB = chipWaveLoopEnd;\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n                } else if (chipWaveLoopMode === 1) {\r\n                    // ping-pong\r\n                    if (directionA === 1) {\r\n                        if (phaseA > chipWaveLoopEnd) {\r\n                            phaseA = chipWaveLoopEnd - Synth.wrap(phaseA - chipWaveLoopEnd, chipWaveLoopLength);\r\n                            // phaseA = chipWaveLoopEnd;\r\n                            directionA = -1;\r\n                           wrapped = 1;\r\n                        }\r\n                    } else if (directionA === -1) {\r\n                        if (phaseA < chipWaveLoopStart) {\r\n                            phaseA = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseA, chipWaveLoopLength);\r\n                            // phaseA = chipWaveLoopStart;\r\n                            directionA = 1;\r\n                           wrapped = 1;\r\n                        }\r\n                    }\r\n                    if (directionB === 1) {\r\n                        if (phaseB > chipWaveLoopEnd) {\r\n                            phaseB = chipWaveLoopEnd - Synth.wrap(phaseB - chipWaveLoopEnd, chipWaveLoopLength);\r\n                            // phaseB = chipWaveLoopEnd;\r\n                            directionB = -1;\r\n                            wrapped = 1;\r\n                        }\r\n                    } else if (directionB === -1) {\r\n                        if (phaseB < chipWaveLoopStart) {\r\n                            phaseB = chipWaveLoopStart + Synth.wrap(chipWaveLoopStart - phaseB, chipWaveLoopLength);\r\n                            // phaseB = chipWaveLoopStart;\r\n                            directionB = 1;\r\n                            wrapped = 1;\r\n                        }\r\n                    }\r\n               }\r\n                let waveA = 0;\r\n                let waveB = 0;\r\n                let inputSample = 0;\r\n                if (aliases) {\r\n                    waveA = wave[Synth.wrap(Math.floor(phaseA), waveLength)];\r\n                    waveB = wave[Synth.wrap(Math.floor(phaseB), waveLength)];\r\n                    prevWaveA = waveA;\r\n                    prevWaveB = waveB;\r\n                    const completionFadeA: number = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\r\n                    const completionFadeB: number = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\r\n                    inputSample = 0;\r\n                    if (chipWaveCompletionA > 0) {\r\n                        inputSample += lastWaveA * completionFadeA;\r\n                    } else {\r\n                        inputSample += waveA;\r\n                    }\r\n                    if (chipWaveCompletionB > 0) {\r\n                        inputSample += lastWaveB * completionFadeB;\r\n                    } else {\r\n                        inputSample += waveB;\r\n                    }\r\n                }\r\n                else {\r\n                    const phaseAInt = Math.floor(phaseA);\r\n                    const phaseBInt = Math.floor(phaseB);\r\n                    const indexA = Synth.wrap(phaseAInt, waveLength);\r\n                    const indexB = Synth.wrap(phaseBInt, waveLength);\r\n                    let nextWaveIntegralA = wave[indexA];\r\n                    let nextWaveIntegralB = wave[indexB];\r\n                    const phaseRatioA = phaseA - phaseAInt;\r\n                    const phaseRatioB = phaseB - phaseBInt;\r\n                    nextWaveIntegralA += (wave[Synth.wrap(indexA + 1, waveLength)] - nextWaveIntegralA) * phaseRatioA;\r\n                    nextWaveIntegralB += (wave[Synth.wrap(indexB + 1, waveLength)] - nextWaveIntegralB) * phaseRatioB;\r\n                    if (!(chipWaveLoopMode === 0 && chipWaveLoopStart === 0 && chipWaveLoopEnd === waveLength) && wrapped !== 0) {\r\n                        let pwia = 0;\r\n                        let pwib = 0;\r\n                        const phaseA_ = Math.max(0, phaseA - phaseDeltaA * directionA);\r\n                        const phaseB_ = Math.max(0, phaseB - phaseDeltaB * directionB);\r\n                        const phaseAInt = Math.floor(phaseA_);\r\n                        const phaseBInt = Math.floor(phaseB_);\r\n                        const indexA = Synth.wrap(phaseAInt, waveLength);\r\n                        const indexB = Synth.wrap(phaseBInt, waveLength);\r\n                        pwia = wave[indexA];\r\n                        pwib = wave[indexB];\r\n                        pwia += (wave[Synth.wrap(indexA + 1, waveLength)] - pwia) * (phaseA_ - phaseAInt) * directionA;\r\n                        pwib += (wave[Synth.wrap(indexB + 1, waveLength)] - pwib) * (phaseB_ - phaseBInt) * directionB;\r\n                        prevWaveIntegralA = pwia;\r\n                        prevWaveIntegralB = pwib;\r\n\t\t\t\t   }\r\n                   if (chipWaveLoopMode === 1 && wrapped !== 0) {\r\n                       waveA = prevWaveA;\r\n                       waveB = prevWaveB;\r\n                   } else {\r\n                       waveA = (nextWaveIntegralA - prevWaveIntegralA) / (phaseDeltaA * directionA);\r\n                       waveB = (nextWaveIntegralB - prevWaveIntegralB) / (phaseDeltaB * directionB);\r\n                   }\r\n                   prevWaveA = waveA;\r\n                   prevWaveB = waveB;\r\n\t\t\t\t   prevWaveIntegralA = nextWaveIntegralA;\r\n\t\t\t\t   prevWaveIntegralB = nextWaveIntegralB;\r\n                    const completionFadeA = chipWaveCompletionA > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionA, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\r\n                    const completionFadeB = chipWaveCompletionB > 0 ? ((chipWaveCompletionFadeLength - Math.min(chipWaveCompletionB, chipWaveCompletionFadeLength)) / chipWaveCompletionFadeLength) : 1;\r\n                    if (chipWaveCompletionA > 0) {\r\n                        inputSample += lastWaveA * completionFadeA;\r\n                    } else {\r\n                        inputSample += waveA;\r\n                    }\r\n                    if (chipWaveCompletionB > 0) {\r\n                        inputSample += lastWaveB * completionFadeB;\r\n                    } else {\r\n                        inputSample += waveB * unisonSign;\r\n                    }\r\n                }\r\n                const sample = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n                initialFilterInput2 = initialFilterInput1;\r\n                initialFilterInput1 = inputSample * volumeScale;\r\n                phaseDeltaA *= phaseDeltaScaleA;\r\n                phaseDeltaB *= phaseDeltaScaleB;\r\n                const output = sample * expression;\r\n                expression += expressionDelta;\r\n                data[sampleIndex] += output;\r\n            }\r\n            tone.phases[0] = phaseA / waveLength;\r\n            tone.phases[1] = phaseB / waveLength;\r\n            tone.phaseDeltas[0] = phaseDeltaA / waveLength;\r\n            tone.phaseDeltas[1] = phaseDeltaB / waveLength;\r\n            tone.directions[0] = directionA;\r\n            tone.directions[1] = directionB;\r\n            tone.chipWaveCompletions[0] = chipWaveCompletionA;\r\n            tone.chipWaveCompletions[1] = chipWaveCompletionB;\r\n            tone.chipWavePrevWaves[0] = prevWaveA;\r\n            tone.chipWavePrevWaves[1] = prevWaveB;\r\n            tone.chipWaveCompletionsLastWave[0] = lastWaveA;\r\n            tone.chipWaveCompletionsLastWave[1] = lastWaveB;\r\n            tone.expression = expression;\r\n            synth.sanitizeFilters(filters);\r\n            tone.initialNoteFilterInput1 = initialFilterInput1;\r\n            tone.initialNoteFilterInput2 = initialFilterInput2;\r\n        }\r\n        // advloop addition\r\n    private static chipSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const aliases: boolean = (effectsIncludeDistortion(instrumentState.effects) && instrumentState.aliases);\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        const volumeScale = instrumentState.volumeScale;\r\n\r\n        const waveLength = (aliases && instrumentState.type == 8) ? wave.length : wave.length - 1;\r\n\t\t\t//BUGFIX FROM JUMMBOX\r\n\r\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n        if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\r\n            tone.phases[1] = tone.phases[0];\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\r\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\r\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n        let prevWaveIntegralA: number = 0;\r\n        let prevWaveIntegralB: number = 0;\r\n\r\n        if (!aliases) {\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            prevWaveIntegralA = +wave[indexA];\r\n            prevWaveIntegralB = +wave[indexB];\r\n            prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n            prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n        }\r\n\r\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            let waveA: number;\r\n            let waveB: number;\r\n            let inputSample: number;\r\n\r\n            if (aliases) {\r\n                waveA = wave[(0 | phaseA) % waveLength];\r\n                waveB = wave[(0 | phaseB) % waveLength];\r\n                inputSample = waveA + waveB;\r\n            } else {\r\n                const phaseAInt: number = phaseA | 0;\r\n                const phaseBInt: number = phaseB | 0;\r\n                const indexA: number = phaseAInt % waveLength;\r\n                const indexB: number = phaseBInt % waveLength;\r\n                let nextWaveIntegralA: number = wave[indexA];\r\n                let nextWaveIntegralB: number = wave[indexB];\r\n                const phaseRatioA: number = phaseA - phaseAInt;\r\n                const phaseRatioB: number = phaseB - phaseBInt;\r\n                nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n                nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n                waveA = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n                waveB = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n                prevWaveIntegralA = nextWaveIntegralA;\r\n                prevWaveIntegralB = nextWaveIntegralB;\r\n                inputSample = waveA + waveB * unisonSign;\r\n            }\r\n\r\n            const sample: number = applyFilters(inputSample * volumeScale, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t//BUGFIX FROM JUMMBOX\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample * volumeScale;\r\n\r\n            phaseDeltaA *= phaseDeltaScaleA;\r\n            phaseDeltaB *= phaseDeltaScaleB;\r\n\r\n            const output: number = sample * expression;\r\n\t\t//BUGFIX FROM JUMMBOX\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\r\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\r\n        tone.expression = expression;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static harmonicsSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        const waveLength: number = wave.length - 1; // The first sample is duplicated at the end, don't double-count it.\r\n\r\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n        if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\r\n            tone.phases[1] = tone.phases[0];\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * waveLength;\r\n        let phaseDeltaB: number = tone.phaseDeltas[1] * waveLength;\r\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phaseA: number = (tone.phases[0] % 1) * waveLength;\r\n        let phaseB: number = (tone.phases[1] % 1) * waveLength;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        const phaseAInt: number = phaseA | 0;\r\n        const phaseBInt: number = phaseB | 0;\r\n        const indexA: number = phaseAInt % waveLength;\r\n        const indexB: number = phaseBInt % waveLength;\r\n        const phaseRatioA: number = phaseA - phaseAInt;\r\n        const phaseRatioB: number = phaseB - phaseBInt;\r\n        let prevWaveIntegralA: number = +wave[indexA];\r\n        let prevWaveIntegralB: number = +wave[indexB];\r\n        prevWaveIntegralA += (wave[indexA + 1] - prevWaveIntegralA) * phaseRatioA;\r\n        prevWaveIntegralB += (wave[indexB + 1] - prevWaveIntegralB) * phaseRatioB;\r\n\r\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n\r\n            const phaseAInt: number = phaseA | 0;\r\n            const phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt % waveLength;\r\n            const indexB: number = phaseBInt % waveLength;\r\n            let nextWaveIntegralA: number = wave[indexA];\r\n            let nextWaveIntegralB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n            const phaseRatioB: number = phaseB - phaseBInt;\r\n            nextWaveIntegralA += (wave[indexA + 1] - nextWaveIntegralA) * phaseRatioA;\r\n            nextWaveIntegralB += (wave[indexB + 1] - nextWaveIntegralB) * phaseRatioB;\r\n            const waveA: number = (nextWaveIntegralA - prevWaveIntegralA) / phaseDeltaA;\r\n            const waveB: number = (nextWaveIntegralB - prevWaveIntegralB) / phaseDeltaB;\r\n            prevWaveIntegralA = nextWaveIntegralA;\r\n            prevWaveIntegralB = nextWaveIntegralB;\r\n\r\n            const inputSample: number = waveA + waveB * unisonSign;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phaseDeltaA *= phaseDeltaScaleA;\r\n            phaseDeltaB *= phaseDeltaScaleB;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / waveLength;\r\n        tone.phases[1] = phaseB / waveLength;\r\n        tone.phaseDeltas[0] = phaseDeltaA / waveLength;\r\n        tone.phaseDeltas[1] = phaseDeltaB / waveLength;\r\n        tone.expression = expression;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static pickedStringSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        // This algorithm is similar to the Karpluss-Strong algorithm in principle, but with an\r\n        // all-pass filter for dispersion and with more control over the impulse harmonics.\r\n        // The source code is processed as a string before being compiled, in order to\r\n        // handle the unison feature. If unison is disabled or set to none, then only one\r\n        // string voice is required, otherwise two string voices are required. We only want\r\n        // to compute the minimum possible number of string voices, so omit the code for\r\n        // processing extra ones if possible. Any line containing a \"#\" is duplicated for\r\n        // each required voice, replacing the \"#\" with the voice index.\r\n\r\n        const voiceCount: number = instrumentState.unisonVoices;\r\n        let pickedStringFunction: Function = Synth.pickedStringFunctionCache[voiceCount];\r\n        if (pickedStringFunction == undefined) {\r\n            let pickedStringSource: string = \"return (synth, bufferIndex, runLength, tone, instrumentState) => {\";\r\n\r\n\r\n            pickedStringSource += `\r\n\t\t\t\tconst Config = beepbox.Config;\r\n\t\t\t\tconst Synth = beepbox.Synth;\r\n\t\t\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\r\n\t\t\t\t\r\n\t\t\t\tlet pickedString# = tone.pickedStrings[#];\r\n\t\t\t\tlet allPassSample# = +pickedString#.allPassSample;\r\n\t\t\t\tlet allPassPrevInput# = +pickedString#.allPassPrevInput;\r\n\t\t\t\tlet sustainFilterSample# = +pickedString#.sustainFilterSample;\r\n\t\t\t\tlet sustainFilterPrevOutput2# = +pickedString#.sustainFilterPrevOutput2;\r\n\t\t\t\tlet sustainFilterPrevInput1# = +pickedString#.sustainFilterPrevInput1;\r\n\t\t\t\tlet sustainFilterPrevInput2# = +pickedString#.sustainFilterPrevInput2;\r\n\t\t\t\tlet fractionalDelaySample# = +pickedString#.fractionalDelaySample;\r\n\t\t\t\tconst delayLine# = pickedString#.delayLine;\r\n\t\t\t\tconst delayBufferMask# = (delayLine#.length - 1) >> 0;\r\n\t\t\t\tlet delayIndex# = pickedString#.delayIndex|0;\r\n\t\t\t\tdelayIndex# = (delayIndex# & delayBufferMask#) + delayLine#.length;\r\n\t\t\t\tlet delayLength# = +pickedString#.prevDelayLength;\r\n\t\t\t\tconst delayLengthDelta# = +pickedString#.delayLengthDelta;\r\n\t\t\t\tlet allPassG# = +pickedString#.allPassG;\r\n\t\t\t\tlet sustainFilterA1# = +pickedString#.sustainFilterA1;\r\n\t\t\t\tlet sustainFilterA2# = +pickedString#.sustainFilterA2;\r\n\t\t\t\tlet sustainFilterB0# = +pickedString#.sustainFilterB0;\r\n\t\t\t\tlet sustainFilterB1# = +pickedString#.sustainFilterB1;\r\n\t\t\t\tlet sustainFilterB2# = +pickedString#.sustainFilterB2;\r\n\t\t\t\tconst allPassGDelta# = +pickedString#.allPassGDelta;\r\n\t\t\t\tconst sustainFilterA1Delta# = +pickedString#.sustainFilterA1Delta;\r\n\t\t\t\tconst sustainFilterA2Delta# = +pickedString#.sustainFilterA2Delta;\r\n\t\t\t\tconst sustainFilterB0Delta# = +pickedString#.sustainFilterB0Delta;\r\n\t\t\t\tconst sustainFilterB1Delta# = +pickedString#.sustainFilterB1Delta;\r\n\t\t\t\tconst sustainFilterB2Delta# = +pickedString#.sustainFilterB2Delta;\r\n\t\t\t\t\r\n\t\t\t\tlet expression = +tone.expression;\r\n\t\t\t\tconst expressionDelta = +tone.expressionDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst unisonSign = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n\t\t\t\tconst delayResetOffset# = pickedString#.delayResetOffset|0;\r\n\t\t\t\t\r\n\t\t\t\tconst filters = tone.noteFilters;\r\n\t\t\t\tconst filterCount = tone.noteFilterCount|0;\r\n\t\t\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\r\n\t\t\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\r\n\t\t\t\tconst applyFilters = Synth.applyFilters;\r\n\t\t\t\t\r\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\r\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t\t\tconst targetSampleTime# = delayIndex# - delayLength#;\r\n\t\t\t\t\tconst lowerIndex# = (targetSampleTime# + 0.125) | 0; // Offset to improve stability of all-pass filter.\r\n\t\t\t\t\tconst upperIndex# = lowerIndex# + 1;\r\n\t\t\t\t\tconst fractionalDelay# = upperIndex# - targetSampleTime#;\r\n\t\t\t\t\tconst fractionalDelayG# = (1.0 - fractionalDelay#) / (1.0 + fractionalDelay#); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\t\tconst prevInput# = delayLine#[lowerIndex# & delayBufferMask#];\r\n\t\t\t\t\tconst input# = delayLine#[upperIndex# & delayBufferMask#];\r\n\t\t\t\t\tfractionalDelaySample# = fractionalDelayG# * input# + prevInput# - fractionalDelayG# * fractionalDelaySample#;\r\n\t\t\t\t\t\r\n\t\t\t\t\tallPassSample# = fractionalDelaySample# * allPassG# + allPassPrevInput# - allPassG# * allPassSample#;\r\n\t\t\t\t\tallPassPrevInput# = fractionalDelaySample#;\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst sustainFilterPrevOutput1# = sustainFilterSample#;\r\n\t\t\t\t\tsustainFilterSample# = sustainFilterB0# * allPassSample# + sustainFilterB1# * sustainFilterPrevInput1# + sustainFilterB2# * sustainFilterPrevInput2# - sustainFilterA1# * sustainFilterSample# - sustainFilterA2# * sustainFilterPrevOutput2#;\r\n\t\t\t\t\tsustainFilterPrevOutput2# = sustainFilterPrevOutput1#;\r\n\t\t\t\t\tsustainFilterPrevInput2# = sustainFilterPrevInput1#;\r\n\t\t\t\t\tsustainFilterPrevInput1# = allPassSample#;\r\n\t\t\t\t\t\r\n\t\t\t\t\tdelayLine#[delayIndex# & delayBufferMask#] += sustainFilterSample#;\r\n\t\t\t\t\tdelayLine#[(delayIndex# + delayResetOffset#) & delayBufferMask#] = 0.0;\r\n\t\t\t\t\tdelayIndex#++;\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst inputSample = (`\r\n\r\n            const sampleList: string[] = [];\r\n            for (let voice: number = 0; voice < voiceCount; voice++) {\r\n                sampleList.push(\"fractionalDelaySample\" + voice + (voice == 1 ? \" * unisonSign\" : \"\"));\r\n            }\r\n\r\n            pickedStringSource += sampleList.join(\" + \");\r\n\r\n            pickedStringSource += `) * expression;\r\n\t\t\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\t\t\tinitialFilterInput1 = inputSample;\r\n\t\t\t\t\tdata[sampleIndex] += sample;\r\n\t\t\t\t\t\r\n\t\t\t\t\texpression += expressionDelta;\r\n\t\t\t\t\tdelayLength# += delayLengthDelta#;\r\n\t\t\t\t\tallPassG# += allPassGDelta#;\r\n\t\t\t\t\tsustainFilterA1# += sustainFilterA1Delta#;\r\n\t\t\t\t\tsustainFilterA2# += sustainFilterA2Delta#;\r\n\t\t\t\t\tsustainFilterB0# += sustainFilterB0Delta#;\r\n\t\t\t\t\tsustainFilterB1# += sustainFilterB1Delta#;\r\n\t\t\t\t\tsustainFilterB2# += sustainFilterB2Delta#;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\r\n\t\t\t\tconst epsilon = (1.0e-24);\r\n\t\t\t\tif (!Number.isFinite(allPassSample#) || Math.abs(allPassSample#) < epsilon) allPassSample# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(allPassPrevInput#) || Math.abs(allPassPrevInput#) < epsilon) allPassPrevInput# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(sustainFilterSample#) || Math.abs(sustainFilterSample#) < epsilon) sustainFilterSample# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevOutput2#) || Math.abs(sustainFilterPrevOutput2#) < epsilon) sustainFilterPrevOutput2# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput1#) || Math.abs(sustainFilterPrevInput1#) < epsilon) sustainFilterPrevInput1# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(sustainFilterPrevInput2#) || Math.abs(sustainFilterPrevInput2#) < epsilon) sustainFilterPrevInput2# = 0.0;\r\n\t\t\t\tif (!Number.isFinite(fractionalDelaySample#) || Math.abs(fractionalDelaySample#) < epsilon) fractionalDelaySample# = 0.0;\r\n\t\t\t\tpickedString#.allPassSample = allPassSample#;\r\n\t\t\t\tpickedString#.allPassPrevInput = allPassPrevInput#;\r\n\t\t\t\tpickedString#.sustainFilterSample = sustainFilterSample#;\r\n\t\t\t\tpickedString#.sustainFilterPrevOutput2 = sustainFilterPrevOutput2#;\r\n\t\t\t\tpickedString#.sustainFilterPrevInput1 = sustainFilterPrevInput1#;\r\n\t\t\t\tpickedString#.sustainFilterPrevInput2 = sustainFilterPrevInput2#;\r\n\t\t\t\tpickedString#.fractionalDelaySample = fractionalDelaySample#;\r\n\t\t\t\tpickedString#.delayIndex = delayIndex#;\r\n\t\t\t\tpickedString#.prevDelayLength = delayLength#;\r\n\t\t\t\tpickedString#.allPassG = allPassG#;\r\n\t\t\t\tpickedString#.sustainFilterA1 = sustainFilterA1#;\r\n\t\t\t\tpickedString#.sustainFilterA2 = sustainFilterA2#;\r\n\t\t\t\tpickedString#.sustainFilterB0 = sustainFilterB0#;\r\n\t\t\t\tpickedString#.sustainFilterB1 = sustainFilterB1#;\r\n\t\t\t\tpickedString#.sustainFilterB2 = sustainFilterB2#;\r\n\t\t\t\t\r\n\t\t\t\ttone.expression = expression;\r\n\t\t\t\t\r\n\t\t\t\tsynth.sanitizeFilters(filters);\r\n\t\t\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\r\n\t\t\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\r\n\t\t\t}`\r\n\r\n            // Duplicate lines containing \"#\" for each voice and replace the \"#\" with the voice index.\r\n            pickedStringSource = pickedStringSource.replace(/^.*\\#.*$/mg, line => {\r\n                const lines = [];\r\n                for (let voice: number = 0; voice < voiceCount; voice++) {\r\n                    lines.push(line.replace(/\\#/g, String(voice)));\r\n                }\r\n                return lines.join(\"\\n\");\r\n            });\r\n\r\n            //console.log(pickedStringSource);\r\n            pickedStringFunction = new Function(\"Config\", \"Synth\", pickedStringSource)(Config, Synth);\r\n\t\t\tSynth.pickedStringFunctionCache[voiceCount] = pickedStringFunction;\r\n        }\r\n\r\n        pickedStringFunction(synth, bufferIndex, roundedSamplesPerTick, tone, instrumentState);\r\n    }\r\n\r\n    private static effectsSynth(synth: Synth, outputDataL: Float32Array, outputDataR: Float32Array, bufferIndex: number, runLength: number, instrumentState: InstrumentState): void {\r\n        // TODO: If automation is involved, don't assume sliders will stay at zero.\r\n        // @jummbus - ^ Correct, removed the non-zero checks as modulation can change them.\r\n\r\n        const usesDistortion: boolean = effectsIncludeDistortion(instrumentState.effects);\r\n        const usesBitcrusher: boolean = effectsIncludeBitcrusher(instrumentState.effects);\r\n        const usesEqFilter: boolean = instrumentState.eqFilterCount > 0;\r\n        const usesPanning: boolean = effectsIncludePanning(instrumentState.effects);\r\n        const usesChorus: boolean = effectsIncludeChorus(instrumentState.effects);\r\n        const usesEcho: boolean = effectsIncludeEcho(instrumentState.effects);\r\n        const usesReverb: boolean = effectsIncludeReverb(instrumentState.effects);\r\n        const usesRingModulation: boolean = effectsIncludeRM(instrumentState.effects);\r\n        const usesPhaser: boolean = effectsIncludePhaser(instrumentState.effects);\r\n        const usesInvertWave: boolean = effectsIncludeInvertWave(instrumentState.effects) && instrumentState.invertWave;\r\n        let signature: number = 0; if (usesDistortion) signature = signature | 1;\r\n        signature = signature << 1; if (usesBitcrusher) signature = signature | 1;\r\n        signature = signature << 1; if (usesEqFilter) signature = signature | 1;\r\n        signature = signature << 1; if (usesPanning) signature = signature | 1;\r\n        signature = signature << 1; if (usesChorus) signature = signature | 1;\r\n        signature = signature << 1; if (usesEcho) signature = signature | 1;\r\n        signature = signature << 1; if (usesReverb) signature = signature | 1;\r\n        signature = signature << 1; if (usesRingModulation) signature = signature | 1;\r\n        signature = signature << 1; if (usesPhaser) signature = signature | 1;\r\n        signature = signature << 1; if (usesInvertWave) signature = signature | 1;\r\n\r\n        let effectsFunction: Function = Synth.effectsFunctionCache[signature];\r\n        if (effectsFunction == undefined) {\r\n            let effectsSource: string = \"return (synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState) => {\";\r\n\r\n            const usesDelays: boolean = usesChorus || usesReverb || usesEcho;\r\n\r\n            effectsSource += `\r\n\t\t\t\tconst tempMonoInstrumentSampleBuffer = synth.tempMonoInstrumentSampleBuffer;\r\n\t\t\t\t\r\n\t\t\t\tlet mixVolume = +instrumentState.mixVolume;\r\n\t\t\t\tconst mixVolumeDelta = +instrumentState.mixVolumeDelta;`\r\n\r\n            if (usesDelays) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tlet delayInputMult = +instrumentState.delayInputMult;\r\n\t\t\t\tconst delayInputMultDelta = +instrumentState.delayInputMultDelta;`\r\n            }\r\n\r\n            if(usesInvertWave) {\r\n                effectsSource += `\r\n                let isInverted = +instrumentState.invertWave;\r\n                `\r\n            }\r\n\r\n            if (usesDistortion) {\r\n                // Distortion can sometimes create noticeable aliasing.\r\n                // It seems the established industry best practice for distortion antialiasing\r\n                // is to upsample the inputs (\"zero stuffing\" followed by a brick wall lowpass\r\n                // at the original nyquist frequency), perform the distortion, then downsample\r\n                // (the lowpass again followed by dropping in-between samples). This is\r\n                // \"mathematically correct\" in that it preserves only the intended frequencies,\r\n                // but it has several unfortunate tradeoffs depending on the choice of filter,\r\n                // introducing latency and/or time smearing, since no true brick wall filter\r\n                // exists. For the time being, I've opted to instead generate in-between input\r\n                // samples using fractional delay all-pass filters, and after distorting them,\r\n                // I \"downsample\" these with a simple weighted sum.\r\n\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst distortionBaseVolume = +Config.distortionBaseVolume;\r\n\t\t\t\tlet distortion = instrumentState.distortion;\r\n\t\t\t\tconst distortionDelta = instrumentState.distortionDelta;\r\n\t\t\t\tlet distortionDrive = instrumentState.distortionDrive;\r\n\t\t\t\tconst distortionDriveDelta = instrumentState.distortionDriveDelta;\r\n\t\t\t\tconst distortionFractionalResolution = 4.0;\r\n\t\t\t\tconst distortionOversampleCompensation = distortionBaseVolume / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelay1 = 1.0 / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelay2 = 2.0 / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelay3 = 3.0 / distortionFractionalResolution;\r\n\t\t\t\tconst distortionFractionalDelayG1 = (1.0 - distortionFractionalDelay1) / (1.0 + distortionFractionalDelay1); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\tconst distortionFractionalDelayG2 = (1.0 - distortionFractionalDelay2) / (1.0 + distortionFractionalDelay2); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\tconst distortionFractionalDelayG3 = (1.0 - distortionFractionalDelay3) / (1.0 + distortionFractionalDelay3); // Inlined version of FilterCoefficients.prototype.allPass1stOrderFractionalDelay\r\n\t\t\t\tconst distortionNextOutputWeight1 = Math.cos(Math.PI * distortionFractionalDelay1) * 0.5 + 0.5;\r\n\t\t\t\tconst distortionNextOutputWeight2 = Math.cos(Math.PI * distortionFractionalDelay2) * 0.5 + 0.5;\r\n\t\t\t\tconst distortionNextOutputWeight3 = Math.cos(Math.PI * distortionFractionalDelay3) * 0.5 + 0.5;\r\n\t\t\t\tconst distortionPrevOutputWeight1 = 1.0 - distortionNextOutputWeight1;\r\n\t\t\t\tconst distortionPrevOutputWeight2 = 1.0 - distortionNextOutputWeight2;\r\n\t\t\t\tconst distortionPrevOutputWeight3 = 1.0 - distortionNextOutputWeight3;\r\n\t\t\t\t\r\n\t\t\t\tlet distortionFractionalInput1 = +instrumentState.distortionFractionalInput1;\r\n\t\t\t\tlet distortionFractionalInput2 = +instrumentState.distortionFractionalInput2;\r\n\t\t\t\tlet distortionFractionalInput3 = +instrumentState.distortionFractionalInput3;\r\n\t\t\t\tlet distortionPrevInput = +instrumentState.distortionPrevInput;\r\n\t\t\t\tlet distortionNextOutput = +instrumentState.distortionNextOutput;`\r\n            }\r\n\r\n            if (usesBitcrusher) {\r\n                effectsSource += `\r\n\r\n\t\t\t\tlet bitcrusherPrevInput = +instrumentState.bitcrusherPrevInput;\r\n\t\t\t\tlet bitcrusherCurrentOutput = +instrumentState.bitcrusherCurrentOutput;\r\n\t\t\t\tlet bitcrusherPhase = +instrumentState.bitcrusherPhase;\r\n\t\t\t\tlet bitcrusherPhaseDelta = +instrumentState.bitcrusherPhaseDelta;\r\n\t\t\t\tconst bitcrusherPhaseDeltaScale = +instrumentState.bitcrusherPhaseDeltaScale;\r\n\t\t\t\tlet bitcrusherScale = +instrumentState.bitcrusherScale;\r\n\t\t\t\tconst bitcrusherScaleScale = +instrumentState.bitcrusherScaleScale;\r\n\t\t\t\tlet bitcrusherFoldLevel = +instrumentState.bitcrusherFoldLevel;\r\n\t\t\t\tconst bitcrusherFoldLevelScale = +instrumentState.bitcrusherFoldLevelScale;`\r\n            }\r\n\r\n            if (usesRingModulation) {\r\n                effectsSource += `\r\n                let ringModMix = +instrumentState.ringModMix;\r\n                let ringModMixDelta = +instrumentState.ringModMixDelta;\r\n                let ringModPhase = +instrumentState.ringModPhase;\r\n                let ringModPhaseDelta = +instrumentState.ringModPhaseDelta;\r\n                let ringModPhaseDeltaScale = +instrumentState.ringModPhaseDeltaScale;\r\n                let rmWaveformIndex = +instrumentState.rmWaveformIndex;\r\n                let rmPulseWidth = +instrumentState.rmPulseWidth;\r\n\r\n                let waveform = Config.operatorWaves[rmWaveformIndex].samples; // index presumably comes from a dropdown\r\n                if (rmWaveformIndex == 2) {\r\n                    waveform = Synth.getOperatorWave(rmWaveformIndex, rmPulseWidth).samples; \r\n                }\r\n                const waveformLength = waveform.length - 1;\r\n                `\r\n            }\r\n\r\n            if (usesPhaser) {\r\n                effectsSource += `\r\n                \r\n                const phaserSamples = instrumentState.phaserSamples;\r\n                const phaserPrevInputs = instrumentState.phaserPrevInputs;\r\n                let phaserStages = instrumentState.phaserStages;\r\n                let phaserStagesInt = Math.floor(phaserStages);\r\n                const phaserStagesDelta = instrumentState.phaserStagesDelta;\r\n                const phaserFeedbackMultDelta = +instrumentState.phaserFeedbackMultDelta;\r\n                let phaserFeedbackMult = +instrumentState.phaserFeedbackMult;\r\n                const phaserMixDelta = +instrumentState.phaserMixDelta;\r\n                let phaserMix = +instrumentState.phaserMix;\r\n                const phaserBreakCoefDelta = +instrumentState.phaserBreakCoefDelta;\r\n                let phaserBreakCoef = +instrumentState.phaserBreakCoef;\r\n                `\r\n            }\r\n\r\n            if (usesEqFilter) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tlet filters = instrumentState.eqFilters;\r\n\t\t\t\tconst filterCount = instrumentState.eqFilterCount|0;\r\n\t\t\t\tlet initialFilterInput1 = +instrumentState.initialEqFilterInput1;\r\n\t\t\t\tlet initialFilterInput2 = +instrumentState.initialEqFilterInput2;\r\n\t\t\t\tconst applyFilters = Synth.applyFilters;`\r\n            }\r\n\r\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\r\n            effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tlet eqFilterVolume = +instrumentState.eqFilterVolume;\r\n\t\t\t\tconst eqFilterVolumeDelta = +instrumentState.eqFilterVolumeDelta;`\r\n\r\n            if (usesPanning) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst panningMask = synth.panningDelayBufferMask >>> 0;\r\n\t\t\t\tconst panningDelayLine = instrumentState.panningDelayLine;\r\n\t\t\t\tlet panningDelayPos = instrumentState.panningDelayPos & panningMask;\r\n\t\t\t\tlet   panningVolumeL      = +instrumentState.panningVolumeL;\r\n\t\t\t\tlet   panningVolumeR      = +instrumentState.panningVolumeR;\r\n\t\t\t\tconst panningVolumeDeltaL = +instrumentState.panningVolumeDeltaL;\r\n\t\t\t\tconst panningVolumeDeltaR = +instrumentState.panningVolumeDeltaR;\r\n\t\t\t\tlet   panningOffsetL      = +instrumentState.panningOffsetL;\r\n\t\t\t\tlet   panningOffsetR      = +instrumentState.panningOffsetR;\r\n\t\t\t\tconst panningOffsetDeltaL = 1.0 - instrumentState.panningOffsetDeltaL;\r\n\t\t\t\tconst panningOffsetDeltaR = 1.0 - instrumentState.panningOffsetDeltaR;`\r\n            }\r\n\r\n            if (usesChorus) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst chorusMask = synth.chorusDelayBufferMask >>> 0;\r\n\t\t\t\tconst chorusDelayLineL = instrumentState.chorusDelayLineL;\r\n\t\t\t\tconst chorusDelayLineR = instrumentState.chorusDelayLineR;\r\n\t\t\t\tinstrumentState.chorusDelayLineDirty = true;\r\n\t\t\t\tlet chorusDelayPos = instrumentState.chorusDelayPos & chorusMask;\r\n\t\t\t\t\r\n\t\t\t\tlet chorusVoiceMult = +instrumentState.chorusVoiceMult;\r\n\t\t\t\tconst chorusVoiceMultDelta = +instrumentState.chorusVoiceMultDelta;\r\n\t\t\t\tlet chorusCombinedMult = +instrumentState.chorusCombinedMult;\r\n\t\t\t\tconst chorusCombinedMultDelta = +instrumentState.chorusCombinedMultDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst chorusDuration = +beepbox.Config.chorusPeriodSeconds;\r\n\t\t\t\tconst chorusAngle = Math.PI * 2.0 / (chorusDuration * synth.samplesPerSecond);\r\n\t\t\t\tconst chorusRange = synth.samplesPerSecond * beepbox.Config.chorusDelayRange;\r\n\t\t\t\tconst chorusOffset0 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][0] * chorusRange;\r\n\t\t\t\tconst chorusOffset1 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][1] * chorusRange;\r\n\t\t\t\tconst chorusOffset2 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[0][2] * chorusRange;\r\n\t\t\t\tconst chorusOffset3 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][0] * chorusRange;\r\n\t\t\t\tconst chorusOffset4 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][1] * chorusRange;\r\n\t\t\t\tconst chorusOffset5 = synth.chorusDelayBufferSize - beepbox.Config.chorusDelayOffsets[1][2] * chorusRange;\r\n\t\t\t\tlet chorusPhase = instrumentState.chorusPhase % (Math.PI * 2.0);\r\n\t\t\t\tlet chorusTap0Index = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]);\r\n\t\t\t\tlet chorusTap1Index = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]);\r\n\t\t\t\tlet chorusTap2Index = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]);\r\n\t\t\t\tlet chorusTap3Index = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]);\r\n\t\t\t\tlet chorusTap4Index = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]);\r\n\t\t\t\tlet chorusTap5Index = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]);\r\n\t\t\t\tchorusPhase += chorusAngle * runLength;\r\n\t\t\t\tconst chorusTap0End = chorusDelayPos + chorusOffset0 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][0]) + runLength;\r\n\t\t\t\tconst chorusTap1End = chorusDelayPos + chorusOffset1 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][1]) + runLength;\r\n\t\t\t\tconst chorusTap2End = chorusDelayPos + chorusOffset2 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[0][2]) + runLength;\r\n\t\t\t\tconst chorusTap3End = chorusDelayPos + chorusOffset3 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][0]) + runLength;\r\n\t\t\t\tconst chorusTap4End = chorusDelayPos + chorusOffset4 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][1]) + runLength;\r\n\t\t\t\tconst chorusTap5End = chorusDelayPos + chorusOffset5 - chorusRange * Math.sin(chorusPhase + beepbox.Config.chorusPhaseOffsets[1][2]) + runLength;\r\n\t\t\t\tconst chorusTap0Delta = (chorusTap0End - chorusTap0Index) / runLength;\r\n\t\t\t\tconst chorusTap1Delta = (chorusTap1End - chorusTap1Index) / runLength;\r\n\t\t\t\tconst chorusTap2Delta = (chorusTap2End - chorusTap2Index) / runLength;\r\n\t\t\t\tconst chorusTap3Delta = (chorusTap3End - chorusTap3Index) / runLength;\r\n\t\t\t\tconst chorusTap4Delta = (chorusTap4End - chorusTap4Index) / runLength;\r\n\t\t\t\tconst chorusTap5Delta = (chorusTap5End - chorusTap5Index) / runLength;`\r\n            }\r\n\r\n            if (usesEcho) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tlet echoMult = +instrumentState.echoMult;\r\n\t\t\t\tconst echoMultDelta = +instrumentState.echoMultDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst echoDelayLineL = instrumentState.echoDelayLineL;\r\n\t\t\t\tconst echoDelayLineR = instrumentState.echoDelayLineR;\r\n\t\t\t\tconst echoMask = (echoDelayLineL.length - 1) >>> 0;\r\n\t\t\t\tinstrumentState.echoDelayLineDirty = true;\r\n\t\t\t\t\r\n\t\t\t\tlet echoDelayPos = instrumentState.echoDelayPos & echoMask;\r\n\t\t\t\tconst echoDelayOffsetStart = (echoDelayLineL.length - instrumentState.echoDelayOffsetStart) & echoMask;\r\n\t\t\t\tconst echoDelayOffsetEnd   = (echoDelayLineL.length - instrumentState.echoDelayOffsetEnd) & echoMask;\r\n\t\t\t\tlet echoDelayOffsetRatio = +instrumentState.echoDelayOffsetRatio;\r\n\t\t\t\tconst echoDelayOffsetRatioDelta = +instrumentState.echoDelayOffsetRatioDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst echoShelfA1 = +instrumentState.echoShelfA1;\r\n\t\t\t\tconst echoShelfB0 = +instrumentState.echoShelfB0;\r\n\t\t\t\tconst echoShelfB1 = +instrumentState.echoShelfB1;\r\n\t\t\t\tlet echoShelfSampleL = +instrumentState.echoShelfSampleL;\r\n\t\t\t\tlet echoShelfSampleR = +instrumentState.echoShelfSampleR;\r\n\t\t\t\tlet echoShelfPrevInputL = +instrumentState.echoShelfPrevInputL;\r\n\t\t\t\tlet echoShelfPrevInputR = +instrumentState.echoShelfPrevInputR;`\r\n            }\r\n\r\n            if (usesReverb) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst reverbMask = Config.reverbDelayBufferMask >>> 0; //TODO: Dynamic reverb buffer size.\r\n\t\t\t\tconst reverbDelayLine = instrumentState.reverbDelayLine;\r\n\t\t\t\tinstrumentState.reverbDelayLineDirty = true;\r\n\t\t\t\tlet reverbDelayPos = instrumentState.reverbDelayPos & reverbMask;\r\n\t\t\t\t\r\n\t\t\t\tlet reverb = +instrumentState.reverbMult;\r\n\t\t\t\tconst reverbDelta = +instrumentState.reverbMultDelta;\r\n\t\t\t\t\r\n\t\t\t\tconst reverbShelfA1 = +instrumentState.reverbShelfA1;\r\n\t\t\t\tconst reverbShelfB0 = +instrumentState.reverbShelfB0;\r\n\t\t\t\tconst reverbShelfB1 = +instrumentState.reverbShelfB1;\r\n\t\t\t\tlet reverbShelfSample0 = +instrumentState.reverbShelfSample0;\r\n\t\t\t\tlet reverbShelfSample1 = +instrumentState.reverbShelfSample1;\r\n\t\t\t\tlet reverbShelfSample2 = +instrumentState.reverbShelfSample2;\r\n\t\t\t\tlet reverbShelfSample3 = +instrumentState.reverbShelfSample3;\r\n\t\t\t\tlet reverbShelfPrevInput0 = +instrumentState.reverbShelfPrevInput0;\r\n\t\t\t\tlet reverbShelfPrevInput1 = +instrumentState.reverbShelfPrevInput1;\r\n\t\t\t\tlet reverbShelfPrevInput2 = +instrumentState.reverbShelfPrevInput2;\r\n\t\t\t\tlet reverbShelfPrevInput3 = +instrumentState.reverbShelfPrevInput3;`\r\n            }\r\n\r\n            effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tconst stopIndex = bufferIndex + runLength;\r\n\t\t\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t\t\tlet sample = tempMonoInstrumentSampleBuffer[sampleIndex];\r\n\t\t\t\t\ttempMonoInstrumentSampleBuffer[sampleIndex] = 0.0;`\r\n\r\n            if(usesInvertWave) {\r\n                effectsSource += `\r\n                    sample = sample*-1;\r\n                `\r\n            }\r\n\r\n            if (usesDistortion) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst distortionReverse = 1.0 - distortion;\r\n\t\t\t\t\tconst distortionNextInput = sample * distortionDrive;\r\n\t\t\t\t\tsample = distortionNextOutput;\r\n\t\t\t\t\tdistortionNextOutput = distortionNextInput / (distortionReverse * Math.abs(distortionNextInput) + distortion);\r\n\t\t\t\t\tdistortionFractionalInput1 = distortionFractionalDelayG1 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG1 * distortionFractionalInput1;\r\n\t\t\t\t\tdistortionFractionalInput2 = distortionFractionalDelayG2 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG2 * distortionFractionalInput2;\r\n\t\t\t\t\tdistortionFractionalInput3 = distortionFractionalDelayG3 * distortionNextInput + distortionPrevInput - distortionFractionalDelayG3 * distortionFractionalInput3;\r\n\t\t\t\t\tconst distortionOutput1 = distortionFractionalInput1 / (distortionReverse * Math.abs(distortionFractionalInput1) + distortion);\r\n\t\t\t\t\tconst distortionOutput2 = distortionFractionalInput2 / (distortionReverse * Math.abs(distortionFractionalInput2) + distortion);\r\n\t\t\t\t\tconst distortionOutput3 = distortionFractionalInput3 / (distortionReverse * Math.abs(distortionFractionalInput3) + distortion);\r\n\t\t\t\t\tdistortionNextOutput += distortionOutput1 * distortionNextOutputWeight1 + distortionOutput2 * distortionNextOutputWeight2 + distortionOutput3 * distortionNextOutputWeight3;\r\n\t\t\t\t\tsample += distortionOutput1 * distortionPrevOutputWeight1 + distortionOutput2 * distortionPrevOutputWeight2 + distortionOutput3 * distortionPrevOutputWeight3;\r\n\t\t\t\t\tsample *= distortionOversampleCompensation;\r\n\t\t\t\t\tdistortionPrevInput = distortionNextInput;\r\n\t\t\t\t\tdistortion += distortionDelta;\r\n\t\t\t\t\tdistortionDrive += distortionDriveDelta;`\r\n            }\r\n\r\n            if (usesBitcrusher) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tbitcrusherPhase += bitcrusherPhaseDelta;\r\n\t\t\t\t\tif (bitcrusherPhase < 1.0) {\r\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\r\n\t\t\t\t\t\tsample = bitcrusherCurrentOutput;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbitcrusherPhase = bitcrusherPhase % 1.0;\r\n\t\t\t\t\t\tconst ratio = bitcrusherPhase / bitcrusherPhaseDelta;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst lerpedInput = sample + (bitcrusherPrevInput - sample) * ratio;\r\n\t\t\t\t\t\tbitcrusherPrevInput = sample;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst bitcrusherWrapLevel = bitcrusherFoldLevel * 4.0;\r\n\t\t\t\t\t\tconst wrappedSample = (((lerpedInput + bitcrusherFoldLevel) % bitcrusherWrapLevel) + bitcrusherWrapLevel) % bitcrusherWrapLevel;\r\n\t\t\t\t\t\tconst foldedSample = bitcrusherFoldLevel - Math.abs(bitcrusherFoldLevel * 2.0 - wrappedSample);\r\n\t\t\t\t\t\tconst scaledSample = foldedSample / bitcrusherScale;\r\n\t\t\t\t\t\tconst oldValue = bitcrusherCurrentOutput;\r\n\t\t\t\t\t\tconst newValue = (((scaledSample > 0 ? scaledSample + 1 : scaledSample)|0)-.5) * bitcrusherScale;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsample = oldValue + (newValue - oldValue) * ratio;\r\n\t\t\t\t\t\tbitcrusherCurrentOutput = newValue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbitcrusherPhaseDelta *= bitcrusherPhaseDeltaScale;\r\n\t\t\t\t\tbitcrusherScale *= bitcrusherScaleScale;\r\n\t\t\t\t\tbitcrusherFoldLevel *= bitcrusherFoldLevelScale;`\r\n            }\r\n\r\n            if (usesRingModulation) {\r\n                effectsSource += ` \r\n\r\n                const ringModOutput = sample * waveform[(ringModPhase*waveformLength)|0];\r\n                sample = sample * (1 - ringModMix) + ringModOutput * ringModMix;\r\n\r\n                ringModMix += ringModMixDelta;\r\n                ringModPhase += ringModPhaseDelta;\r\n                ringModPhase = ringModPhase % 1.0;\r\n                ringModPhaseDelta *= ringModPhaseDeltaScale;\r\n\r\n                `}\r\n\r\n            if (usesPhaser) {\r\n                effectsSource += `\r\n                        const phaserFeedback = phaserSamples[Math.max(0,phaserStagesInt - 1)] * phaserFeedbackMult;\r\n                        for (let stage = 0; stage < phaserStagesInt; stage++) {\r\n                            const phaserInput = stage === 0 ? sample + phaserFeedback : phaserSamples[stage - 1];\r\n                            const phaserPrevInput = phaserPrevInputs[stage];\r\n                            const phaserSample = phaserSamples[stage];\r\n                            const phaserNextOutput = phaserBreakCoef * phaserInput + phaserPrevInput - phaserBreakCoef * phaserSample;\r\n                            phaserPrevInputs[stage] = phaserInput;\r\n                            phaserSamples[stage] = phaserNextOutput;\r\n                        }\r\n                        const phaserOutput = phaserSamples[Math.max(0,phaserStagesInt - 1)];\r\n                        sample = sample + phaserOutput * phaserMix;\r\n                        phaserFeedbackMult += phaserFeedbackMultDelta;\r\n                        phaserBreakCoef += phaserBreakCoefDelta;\r\n                        phaserMix += phaserMixDelta;\r\n                        phaserStages += phaserStagesDelta;\r\n                        /*phaserStagesInt = Math.floor(phaserStages);*/\r\n                    `\r\n            }\r\n\r\n            if (usesEqFilter) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst inputSample = sample;\r\n\t\t\t\t\tsample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\t\t\tinitialFilterInput1 = inputSample;`\r\n            }\r\n\r\n            // The eq filter volume is also used to fade out the instrument state, so always include it.\r\n            effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tsample *= eqFilterVolume;\r\n\t\t\t\t\teqFilterVolume += eqFilterVolumeDelta;`\r\n\r\n            if (usesPanning) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tpanningDelayLine[panningDelayPos] = sample;\r\n\t\t\t\t\tconst panningRatioL  = panningOffsetL % 1;\r\n\t\t\t\t\tconst panningRatioR  = panningOffsetR % 1;\r\n\t\t\t\t\tconst panningTapLA   = panningDelayLine[(panningOffsetL) & panningMask];\r\n\t\t\t\t\tconst panningTapLB   = panningDelayLine[(panningOffsetL + 1) & panningMask];\r\n\t\t\t\t\tconst panningTapRA   = panningDelayLine[(panningOffsetR) & panningMask];\r\n\t\t\t\t\tconst panningTapRB   = panningDelayLine[(panningOffsetR + 1) & panningMask];\r\n\t\t\t\t\tconst panningTapL    = panningTapLA + (panningTapLB - panningTapLA) * panningRatioL;\r\n\t\t\t\t\tconst panningTapR    = panningTapRA + (panningTapRB - panningTapRA) * panningRatioR;\r\n\t\t\t\t\tlet sampleL = panningTapL * panningVolumeL;\r\n\t\t\t\t\tlet sampleR = panningTapR * panningVolumeR;\r\n\t\t\t\t\tpanningDelayPos = (panningDelayPos + 1) & panningMask;\r\n\t\t\t\t\tpanningVolumeL += panningVolumeDeltaL;\r\n\t\t\t\t\tpanningVolumeR += panningVolumeDeltaR;\r\n\t\t\t\t\tpanningOffsetL += panningOffsetDeltaL;\r\n\t\t\t\t\tpanningOffsetR += panningOffsetDeltaR;`\r\n            } else {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet sampleL = sample;\r\n\t\t\t\t\tlet sampleR = sample;`\r\n            }\r\n\r\n            if (usesChorus) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst chorusTap0Ratio = chorusTap0Index % 1;\r\n\t\t\t\t\tconst chorusTap1Ratio = chorusTap1Index % 1;\r\n\t\t\t\t\tconst chorusTap2Ratio = chorusTap2Index % 1;\r\n\t\t\t\t\tconst chorusTap3Ratio = chorusTap3Index % 1;\r\n\t\t\t\t\tconst chorusTap4Ratio = chorusTap4Index % 1;\r\n\t\t\t\t\tconst chorusTap5Ratio = chorusTap5Index % 1;\r\n\t\t\t\t\tconst chorusTap0A = chorusDelayLineL[(chorusTap0Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap0B = chorusDelayLineL[(chorusTap0Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap1A = chorusDelayLineL[(chorusTap1Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap1B = chorusDelayLineL[(chorusTap1Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap2A = chorusDelayLineL[(chorusTap2Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap2B = chorusDelayLineL[(chorusTap2Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap3A = chorusDelayLineR[(chorusTap3Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap3B = chorusDelayLineR[(chorusTap3Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap4A = chorusDelayLineR[(chorusTap4Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap4B = chorusDelayLineR[(chorusTap4Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap5A = chorusDelayLineR[(chorusTap5Index) & chorusMask];\r\n\t\t\t\t\tconst chorusTap5B = chorusDelayLineR[(chorusTap5Index + 1) & chorusMask];\r\n\t\t\t\t\tconst chorusTap0 = chorusTap0A + (chorusTap0B - chorusTap0A) * chorusTap0Ratio;\r\n\t\t\t\t\tconst chorusTap1 = chorusTap1A + (chorusTap1B - chorusTap1A) * chorusTap1Ratio;\r\n\t\t\t\t\tconst chorusTap2 = chorusTap2A + (chorusTap2B - chorusTap2A) * chorusTap2Ratio;\r\n\t\t\t\t\tconst chorusTap3 = chorusTap3A + (chorusTap3B - chorusTap3A) * chorusTap3Ratio;\r\n\t\t\t\t\tconst chorusTap4 = chorusTap4A + (chorusTap4B - chorusTap4A) * chorusTap4Ratio;\r\n\t\t\t\t\tconst chorusTap5 = chorusTap5A + (chorusTap5B - chorusTap5A) * chorusTap5Ratio;\r\n\t\t\t\t\tchorusDelayLineL[chorusDelayPos] = sampleL * delayInputMult;\r\n\t\t\t\t\tchorusDelayLineR[chorusDelayPos] = sampleR * delayInputMult;\r\n\t\t\t\t\tsampleL = chorusCombinedMult * (sampleL + chorusVoiceMult * (chorusTap1 - chorusTap0 - chorusTap2));\r\n\t\t\t\t\tsampleR = chorusCombinedMult * (sampleR + chorusVoiceMult * (chorusTap4 - chorusTap3 - chorusTap5));\r\n\t\t\t\t\tchorusDelayPos = (chorusDelayPos + 1) & chorusMask;\r\n\t\t\t\t\tchorusTap0Index += chorusTap0Delta;\r\n\t\t\t\t\tchorusTap1Index += chorusTap1Delta;\r\n\t\t\t\t\tchorusTap2Index += chorusTap2Delta;\r\n\t\t\t\t\tchorusTap3Index += chorusTap3Delta;\r\n\t\t\t\t\tchorusTap4Index += chorusTap4Delta;\r\n\t\t\t\t\tchorusTap5Index += chorusTap5Delta;\r\n\t\t\t\t\tchorusVoiceMult += chorusVoiceMultDelta;\r\n\t\t\t\t\tchorusCombinedMult += chorusCombinedMultDelta;`\r\n            }\r\n\r\n            if (usesEcho) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst echoTapStartIndex = (echoDelayPos + echoDelayOffsetStart) & echoMask;\r\n\t\t\t\t\tconst echoTapEndIndex   = (echoDelayPos + echoDelayOffsetEnd  ) & echoMask;\r\n\t\t\t\t\tconst echoTapStartL = echoDelayLineL[echoTapStartIndex];\r\n\t\t\t\t\tconst echoTapEndL   = echoDelayLineL[echoTapEndIndex];\r\n\t\t\t\t\tconst echoTapStartR = echoDelayLineR[echoTapStartIndex];\r\n\t\t\t\t\tconst echoTapEndR   = echoDelayLineR[echoTapEndIndex];\r\n\t\t\t\t\tconst echoTapL = (echoTapStartL + (echoTapEndL - echoTapStartL) * echoDelayOffsetRatio) * echoMult;\r\n\t\t\t\t\tconst echoTapR = (echoTapStartR + (echoTapEndR - echoTapStartR) * echoDelayOffsetRatio) * echoMult;\r\n\t\t\t\t\t\r\n\t\t\t\t\techoShelfSampleL = echoShelfB0 * echoTapL + echoShelfB1 * echoShelfPrevInputL - echoShelfA1 * echoShelfSampleL;\r\n\t\t\t\t\techoShelfSampleR = echoShelfB0 * echoTapR + echoShelfB1 * echoShelfPrevInputR - echoShelfA1 * echoShelfSampleR;\r\n\t\t\t\t\techoShelfPrevInputL = echoTapL;\r\n\t\t\t\t\techoShelfPrevInputR = echoTapR;\r\n\t\t\t\t\tsampleL += echoShelfSampleL;\r\n\t\t\t\t\tsampleR += echoShelfSampleR;\r\n\t\t\t\t\t\r\n\t\t\t\t\techoDelayLineL[echoDelayPos] = sampleL * delayInputMult;\r\n\t\t\t\t\techoDelayLineR[echoDelayPos] = sampleR * delayInputMult;\r\n\t\t\t\t\techoDelayPos = (echoDelayPos + 1) & echoMask;\r\n\t\t\t\t\techoDelayOffsetRatio += echoDelayOffsetRatioDelta;\r\n\t\t\t\t\techoMult += echoMultDelta;\r\n                    `\r\n            }\r\n\r\n            if (usesReverb) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\t// Reverb, implemented using a feedback delay network with a Hadamard matrix and lowpass filters.\r\n\t\t\t\t\t// good ratios:    0.555235 + 0.618033 + 0.818 +   1.0 = 2.991268\r\n\t\t\t\t\t// Delay lengths:  3041     + 3385     + 4481  +  5477 = 16384 = 2^14\r\n\t\t\t\t\t// Buffer offsets: 3041    -> 6426   -> 10907 -> 16384\r\n\t\t\t\t\tconst reverbDelayPos1 = (reverbDelayPos +  3041) & reverbMask;\r\n\t\t\t\t\tconst reverbDelayPos2 = (reverbDelayPos +  6426) & reverbMask;\r\n\t\t\t\t\tconst reverbDelayPos3 = (reverbDelayPos + 10907) & reverbMask;\r\n\t\t\t\t\tconst reverbSample0 = (reverbDelayLine[reverbDelayPos]);\r\n\t\t\t\t\tconst reverbSample1 = reverbDelayLine[reverbDelayPos1];\r\n\t\t\t\t\tconst reverbSample2 = reverbDelayLine[reverbDelayPos2];\r\n\t\t\t\t\tconst reverbSample3 = reverbDelayLine[reverbDelayPos3];\r\n\t\t\t\t\tconst reverbTemp0 = -(reverbSample0 + sampleL) + reverbSample1;\r\n\t\t\t\t\tconst reverbTemp1 = -(reverbSample0 + sampleR) - reverbSample1;\r\n\t\t\t\t\tconst reverbTemp2 = -reverbSample2 + reverbSample3;\r\n\t\t\t\t\tconst reverbTemp3 = -reverbSample2 - reverbSample3;\r\n\t\t\t\t\tconst reverbShelfInput0 = (reverbTemp0 + reverbTemp2) * reverb;\r\n\t\t\t\t\tconst reverbShelfInput1 = (reverbTemp1 + reverbTemp3) * reverb;\r\n\t\t\t\t\tconst reverbShelfInput2 = (reverbTemp0 - reverbTemp2) * reverb;\r\n\t\t\t\t\tconst reverbShelfInput3 = (reverbTemp1 - reverbTemp3) * reverb;\r\n\t\t\t\t\treverbShelfSample0 = reverbShelfB0 * reverbShelfInput0 + reverbShelfB1 * reverbShelfPrevInput0 - reverbShelfA1 * reverbShelfSample0;\r\n\t\t\t\t\treverbShelfSample1 = reverbShelfB0 * reverbShelfInput1 + reverbShelfB1 * reverbShelfPrevInput1 - reverbShelfA1 * reverbShelfSample1;\r\n\t\t\t\t\treverbShelfSample2 = reverbShelfB0 * reverbShelfInput2 + reverbShelfB1 * reverbShelfPrevInput2 - reverbShelfA1 * reverbShelfSample2;\r\n\t\t\t\t\treverbShelfSample3 = reverbShelfB0 * reverbShelfInput3 + reverbShelfB1 * reverbShelfPrevInput3 - reverbShelfA1 * reverbShelfSample3;\r\n\t\t\t\t\treverbShelfPrevInput0 = reverbShelfInput0;\r\n\t\t\t\t\treverbShelfPrevInput1 = reverbShelfInput1;\r\n\t\t\t\t\treverbShelfPrevInput2 = reverbShelfInput2;\r\n\t\t\t\t\treverbShelfPrevInput3 = reverbShelfInput3;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos1] = reverbShelfSample0 * delayInputMult;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos2] = reverbShelfSample1 * delayInputMult;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos3] = reverbShelfSample2 * delayInputMult;\r\n\t\t\t\t\treverbDelayLine[reverbDelayPos ] = reverbShelfSample3 * delayInputMult;\r\n\t\t\t\t\treverbDelayPos = (reverbDelayPos + 1) & reverbMask;\r\n\t\t\t\t\tsampleL += reverbSample1 + reverbSample2 + reverbSample3;\r\n\t\t\t\t\tsampleR += reverbSample0 + reverbSample2 - reverbSample3;\r\n\t\t\t\t\treverb += reverbDelta;`\r\n            }\r\n\r\n            effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\toutputDataL[sampleIndex] += sampleL * mixVolume;\r\n\t\t\t\t\toutputDataR[sampleIndex] += sampleR * mixVolume;\r\n\t\t\t\t\tmixVolume += mixVolumeDelta;`\r\n\r\n            if (usesDelays) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\t\tdelayInputMult += delayInputMultDelta;`\r\n            }\r\n\r\n            effectsSource += `\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tinstrumentState.mixVolume = mixVolume;\r\n\t\t\t\tinstrumentState.eqFilterVolume = eqFilterVolume;\r\n\t\t\t\t\r\n\t\t\t\t// Avoid persistent denormal or NaN values in the delay buffers and filter history.\r\n\t\t\t\tconst epsilon = (1.0e-24);`\r\n\r\n            if (usesDelays) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tinstrumentState.delayInputMult = delayInputMult;`\r\n            }\r\n\r\n            if (usesDistortion) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tinstrumentState.distortion = distortion;\r\n\t\t\t\tinstrumentState.distortionDrive = distortionDrive;\r\n\t\t\t\t\r\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput1) || Math.abs(distortionFractionalInput1) < epsilon) distortionFractionalInput1 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput2) || Math.abs(distortionFractionalInput2) < epsilon) distortionFractionalInput2 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionFractionalInput3) || Math.abs(distortionFractionalInput3) < epsilon) distortionFractionalInput3 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionPrevInput) || Math.abs(distortionPrevInput) < epsilon) distortionPrevInput = 0.0;\r\n\t\t\t\tif (!Number.isFinite(distortionNextOutput) || Math.abs(distortionNextOutput) < epsilon) distortionNextOutput = 0.0;\r\n\t\t\t\t\r\n\t\t\t\tinstrumentState.distortionFractionalInput1 = distortionFractionalInput1;\r\n\t\t\t\tinstrumentState.distortionFractionalInput2 = distortionFractionalInput2;\r\n\t\t\t\tinstrumentState.distortionFractionalInput3 = distortionFractionalInput3;\r\n\t\t\t\tinstrumentState.distortionPrevInput = distortionPrevInput;\r\n\t\t\t\tinstrumentState.distortionNextOutput = distortionNextOutput;`\r\n            }\r\n\r\n            if (usesBitcrusher) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\tif (Math.abs(bitcrusherPrevInput) < epsilon) bitcrusherPrevInput = 0.0;\r\n\t\t\t\tif (Math.abs(bitcrusherCurrentOutput) < epsilon) bitcrusherCurrentOutput = 0.0;\r\n\t\t\t\tinstrumentState.bitcrusherPrevInput = bitcrusherPrevInput;\r\n\t\t\t\tinstrumentState.bitcrusherCurrentOutput = bitcrusherCurrentOutput;\r\n\t\t\t\tinstrumentState.bitcrusherPhase = bitcrusherPhase;\r\n\t\t\t\tinstrumentState.bitcrusherPhaseDelta = bitcrusherPhaseDelta;\r\n\t\t\t\tinstrumentState.bitcrusherScale = bitcrusherScale;\r\n\t\t\t\tinstrumentState.bitcrusherFoldLevel = bitcrusherFoldLevel;`\r\n\r\n            }\r\n\r\n            if (usesRingModulation) {\r\n                effectsSource += ` \r\n\r\n                instrumentState.ringModMix = ringModMix;\r\n                instrumentState.ringModMixDelta = ringModMixDelta;\r\n                instrumentState.ringModPhase = ringModPhase;\r\n                instrumentState.ringModPhaseDelta = ringModPhaseDelta;\r\n                instrumentState.ringModPhaseDeltaScale = ringModPhaseDeltaScale;\r\n                instrumentState.rmWaveformIndex = rmWaveformIndex;\r\n                instrumentState.rmPulseWidth = rmPulseWidth;\r\n                `}\r\n\r\n            if (usesPhaser) {\r\n                effectsSource += `\r\n                \r\n                for (let stage = 0; stage < phaserStages; stage++) {\r\n                    if (!Number.isFinite(phaserPrevInputs[stage]) || Math.abs(phaserPrevInputs[stage]) < epsilon) phaserPrevInputs[stage] = 0.0;\r\n                    if (!Number.isFinite(phaserSamples[stage]) || Math.abs(phaserSamples[stage]) < epsilon) phaserSamples[stage] = 0.0;\r\n                }\r\n                \r\n                instrumentState.phaserMix = phaserMix;\r\n                instrumentState.phaserFeedbackMult = phaserFeedbackMult;\r\n                instrumentState.phaserBreakCoef = phaserBreakCoef;\r\n                `\r\n            }\r\n\r\n            if (usesEqFilter) {\r\n                effectsSource += `\r\n\t\t\t\t\t\r\n\t\t\t\tsynth.sanitizeFilters(filters);\r\n\t\t\t\t// The filter input here is downstream from another filter so we\r\n\t\t\t\t// better make sure it's safe too.\r\n\t\t\t\tif (!(initialFilterInput1 < 100) || !(initialFilterInput2 < 100)) {\r\n\t\t\t\t\tinitialFilterInput1 = 0.0;\r\n\t\t\t\t\tinitialFilterInput2 = 0.0;\r\n\t\t\t\t}\r\n\t\t\t\tif (Math.abs(initialFilterInput1) < epsilon) initialFilterInput1 = 0.0;\r\n\t\t\t\tif (Math.abs(initialFilterInput2) < epsilon) initialFilterInput2 = 0.0;\r\n\t\t\t\tinstrumentState.initialEqFilterInput1 = initialFilterInput1;\r\n\t\t\t\tinstrumentState.initialEqFilterInput2 = initialFilterInput2;`\r\n            }\r\n\r\n            if (usesPanning) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tSynth.sanitizeDelayLine(panningDelayLine, panningDelayPos, panningMask);\r\n\t\t\t\tinstrumentState.panningDelayPos = panningDelayPos;\r\n\t\t\t\tinstrumentState.panningVolumeL = panningVolumeL;\r\n\t\t\t\tinstrumentState.panningVolumeR = panningVolumeR;\r\n\t\t\t\tinstrumentState.panningOffsetL = panningOffsetL;\r\n\t\t\t\tinstrumentState.panningOffsetR = panningOffsetR;`\r\n            }\r\n\r\n            if (usesChorus) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineL, chorusDelayPos, chorusMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(chorusDelayLineR, chorusDelayPos, chorusMask);\r\n\t\t\t\tinstrumentState.chorusPhase = chorusPhase;\r\n\t\t\t\tinstrumentState.chorusDelayPos = chorusDelayPos;\r\n\t\t\t\tinstrumentState.chorusVoiceMult = chorusVoiceMult;\r\n\t\t\t\tinstrumentState.chorusCombinedMult = chorusCombinedMult;`\r\n            }\r\n\r\n            if (usesEcho) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineL, echoDelayPos, echoMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(echoDelayLineR, echoDelayPos, echoMask);\r\n\t\t\t\tinstrumentState.echoDelayPos = echoDelayPos;\r\n\t\t\t\tinstrumentState.echoMult = echoMult;\r\n\t\t\t\tinstrumentState.echoDelayOffsetRatio = echoDelayOffsetRatio;\r\n\t\t\t\t\r\n\t\t\t\tif (!Number.isFinite(echoShelfSampleL) || Math.abs(echoShelfSampleL) < epsilon) echoShelfSampleL = 0.0;\r\n\t\t\t\tif (!Number.isFinite(echoShelfSampleR) || Math.abs(echoShelfSampleR) < epsilon) echoShelfSampleR = 0.0;\r\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputL) || Math.abs(echoShelfPrevInputL) < epsilon) echoShelfPrevInputL = 0.0;\r\n\t\t\t\tif (!Number.isFinite(echoShelfPrevInputR) || Math.abs(echoShelfPrevInputR) < epsilon) echoShelfPrevInputR = 0.0;\r\n\t\t\t\tinstrumentState.echoShelfSampleL = echoShelfSampleL;\r\n\t\t\t\tinstrumentState.echoShelfSampleR = echoShelfSampleR;\r\n\t\t\t\tinstrumentState.echoShelfPrevInputL = echoShelfPrevInputL;\r\n\t\t\t\tinstrumentState.echoShelfPrevInputR = echoShelfPrevInputR;`\r\n            }\r\n\r\n            if (usesReverb) {\r\n                effectsSource += `\r\n\t\t\t\t\r\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos        , reverbMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  3041, reverbMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos +  6426, reverbMask);\r\n\t\t\t\tSynth.sanitizeDelayLine(reverbDelayLine, reverbDelayPos + 10907, reverbMask);\r\n\t\t\t\tinstrumentState.reverbDelayPos = reverbDelayPos;\r\n\t\t\t\tinstrumentState.reverbMult = reverb;\r\n\t\t\t\t\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample0) || Math.abs(reverbShelfSample0) < epsilon) reverbShelfSample0 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample1) || Math.abs(reverbShelfSample1) < epsilon) reverbShelfSample1 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample2) || Math.abs(reverbShelfSample2) < epsilon) reverbShelfSample2 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfSample3) || Math.abs(reverbShelfSample3) < epsilon) reverbShelfSample3 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput0) || Math.abs(reverbShelfPrevInput0) < epsilon) reverbShelfPrevInput0 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput1) || Math.abs(reverbShelfPrevInput1) < epsilon) reverbShelfPrevInput1 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput2) || Math.abs(reverbShelfPrevInput2) < epsilon) reverbShelfPrevInput2 = 0.0;\r\n\t\t\t\tif (!Number.isFinite(reverbShelfPrevInput3) || Math.abs(reverbShelfPrevInput3) < epsilon) reverbShelfPrevInput3 = 0.0;\r\n\t\t\t\tinstrumentState.reverbShelfSample0 = reverbShelfSample0;\r\n\t\t\t\tinstrumentState.reverbShelfSample1 = reverbShelfSample1;\r\n\t\t\t\tinstrumentState.reverbShelfSample2 = reverbShelfSample2;\r\n\t\t\t\tinstrumentState.reverbShelfSample3 = reverbShelfSample3;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput0 = reverbShelfPrevInput0;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput1 = reverbShelfPrevInput1;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput2 = reverbShelfPrevInput2;\r\n\t\t\t\tinstrumentState.reverbShelfPrevInput3 = reverbShelfPrevInput3;`\r\n            }\r\n\r\n            effectsSource += \"}\";\r\n\r\n            //console.log(effectsSource);\r\n            effectsFunction = new Function(\"Config\", \"Synth\", effectsSource)(Config, Synth);\r\n            Synth.effectsFunctionCache[signature] = effectsFunction;\r\n        }\r\n\r\n        effectsFunction(synth, outputDataL, outputDataR, bufferIndex, runLength, instrumentState);\r\n    }\r\n\r\n    private static pulseWidthSynth(synth: Synth, bufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n\r\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n        if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\r\n            tone.phases[1] = tone.phases[0];\r\n        let phaseDeltaA: number = tone.phaseDeltas[0];\r\n        let phaseDeltaB: number = tone.phaseDeltas[1];\r\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n        const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let phaseA: number = (tone.phases[0] % 1);\r\n        let phaseB: number = (tone.phases[1] % 1);\r\n\r\n        let pulseWidth: number = tone.pulseWidth;\r\n        const pulseWidthDelta: number = tone.pulseWidthDelta;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        const stopIndex: number = bufferIndex + roundedSamplesPerTick;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\r\n            const sawPhaseA: number = phaseA % 1;\r\n            const sawPhaseB: number = (phaseA + pulseWidth) % 1;\r\n            const sawPhaseC: number = phaseB % 1;\r\n            const sawPhaseD: number = (phaseB + pulseWidth) % 1;\r\n\r\n            let pulseWaveA: number = sawPhaseB - sawPhaseA;\r\n            let pulseWaveB: number = sawPhaseD - sawPhaseC;\r\n\r\n            // This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \r\n            if (!instrumentState.aliases) {\r\n                if (sawPhaseA < phaseDeltaA) {\r\n                    var t = sawPhaseA / phaseDeltaA;\r\n                    pulseWaveA += (t + t - t * t - 1) * 0.5;\r\n                } else if (sawPhaseA > 1.0 - phaseDeltaA) {\r\n                    var t = (sawPhaseA - 1.0) / phaseDeltaA;\r\n                    pulseWaveA += (t + t + t * t + 1) * 0.5;\r\n                }\r\n                if (sawPhaseB < phaseDeltaA) {\r\n                    var t = sawPhaseB / phaseDeltaA;\r\n                    pulseWaveA -= (t + t - t * t - 1) * 0.5;\r\n                } else if (sawPhaseB > 1.0 - phaseDeltaA) {\r\n                    var t = (sawPhaseB - 1.0) / phaseDeltaA;\r\n                    pulseWaveA -= (t + t + t * t + 1) * 0.5;\r\n                }\r\n\r\n                if (sawPhaseC < phaseDeltaB) {\r\n                    var t = sawPhaseC / phaseDeltaB;\r\n                    pulseWaveB += (t + t - t * t - 1) * 0.5;\r\n                } else if (sawPhaseC > 1.0 - phaseDeltaB) {\r\n                    var t = (sawPhaseC - 1.0) / phaseDeltaB;\r\n                    pulseWaveB += (t + t + t * t + 1) * 0.5;\r\n                }\r\n                if (sawPhaseD < phaseDeltaB) {\r\n                    var t = sawPhaseD / phaseDeltaB;\r\n                    pulseWaveB -= (t + t - t * t - 1) * 0.5;\r\n                } else if (sawPhaseD > 1.0 - phaseDeltaB) {\r\n                    var t = (sawPhaseD - 1.0) / phaseDeltaB;\r\n                    pulseWaveB -= (t + t + t * t + 1) * 0.5;\r\n                }\r\n            }\r\n\r\n            const inputSample: number = pulseWaveA + pulseWaveB * unisonSign;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phaseA += phaseDeltaA;\r\n            phaseB += phaseDeltaB;\r\n            phaseDeltaA *= phaseDeltaScaleA;\r\n            phaseDeltaB *= phaseDeltaScaleB;\r\n            pulseWidth += pulseWidthDelta;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phaseA;\r\n        tone.phases[1] = phaseB;\r\n        tone.phaseDeltas[0] = phaseDeltaA;\r\n        tone.phaseDeltas[1] = phaseDeltaB;\r\n        tone.expression = expression;\r\n        tone.pulseWidth = pulseWidth;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static supersawSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n\t\tconst data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n\t\tconst voiceCount: number = Config.supersawVoiceCount|0;\r\n\r\n\t\tlet phaseDelta: number = tone.phaseDeltas[0];\r\n\t\tconst phaseDeltaScale: number = +tone.phaseDeltaScales[0];\r\n\t\tlet expression: number = +tone.expression;\r\n\t\tconst expressionDelta: number = +tone.expressionDelta;\r\n\t\tlet phases: number[] = tone.phases;\r\n\r\n\t\tlet dynamism: number = +tone.supersawDynamism;\r\n\t\tconst dynamismDelta: number = +tone.supersawDynamismDelta;\r\n\t\tconst unisonDetunes: number[] = tone.supersawUnisonDetunes;\r\n\t\tlet shape: number = +tone.supersawShape;\r\n\t\tconst shapeDelta: number = +tone.supersawShapeDelta;\r\n\t\tlet delayLength: number = +tone.supersawDelayLength;\r\n\t\tconst delayLengthDelta: number = +tone.supersawDelayLengthDelta;\r\n\t\tconst delayLine: Float32Array = tone.supersawDelayLine!;\r\n\t\tconst delayBufferMask: number = (delayLine.length - 1) >> 0;\r\n\t\tlet delayIndex: number = tone.supersawDelayIndex|0;\r\n\t\tdelayIndex = (delayIndex & delayBufferMask) + delayLine.length;\r\n\r\n\t\tconst filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n\t\tconst filterCount: number = tone.noteFilterCount|0;\r\n\t\tlet initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n\t\tlet initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n\t\tconst applyFilters: Function = Synth.applyFilters;\r\n\r\n\t\tconst stopIndex: number = bufferIndex + runLength;\r\n\t\tfor (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t// The phase initially starts at a zero crossing so apply\r\n\t\t\t// the delta before first sample to get a nonzero value.\r\n\t\t\tlet phase: number = (phases[0] + phaseDelta) % 1.0;\r\n\t\t\tlet supersawSample: number = phase - 0.5 * (1.0 + (voiceCount - 1.0) * dynamism);\r\n\r\n\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \r\n            if (!instrumentState.aliases) {\r\n                if (phase < phaseDelta) {\r\n                    var t: number = phase / phaseDelta;\r\n                    supersawSample -= (t + t - t * t - 1) * 0.5;\r\n                } else if (phase > 1.0 - phaseDelta) {\r\n                    var t: number = (phase - 1.0) / phaseDelta;\r\n                    supersawSample -= (t + t + t * t + 1) * 0.5;\r\n                }\r\n            }\r\n\r\n\t\t\tphases[0] = phase;\r\n\r\n\t\t\tfor (let i: number = 1; i < voiceCount; i++) {\r\n\t\t\t\tconst detunedPhaseDelta: number = phaseDelta * unisonDetunes[i];\r\n\t\t\t\t// The phase initially starts at a zero crossing so apply\r\n\t\t\t\t// the delta before first sample to get a nonzero value.\r\n\t\t\t\tlet phase: number = (phases[i] + detunedPhaseDelta) % 1.0;\r\n\t\t\t\tsupersawSample += phase * dynamism;\r\n\r\n\t\t\t\t// This is a PolyBLEP, which smooths out discontinuities at any frequency to reduce aliasing. \r\n                if (!instrumentState.aliases) {\r\n                    if (phase < detunedPhaseDelta) {\r\n                        const t: number = phase / detunedPhaseDelta;\r\n                        supersawSample -= (t + t - t * t - 1) * 0.5 * dynamism;\r\n                    } else if (phase > 1.0 - detunedPhaseDelta) {\r\n                        const t: number = (phase - 1.0) / detunedPhaseDelta;\r\n                        supersawSample -= (t + t + t * t + 1) * 0.5 * dynamism;\r\n                    }\r\n                }\r\n\r\n\t\t\t\tphases[i] = phase;\r\n\t\t\t}\r\n\r\n\t\t\tdelayLine[delayIndex & delayBufferMask] = supersawSample;\r\n\t\t\tconst delaySampleTime: number = delayIndex - delayLength;\r\n\t\t\tconst lowerIndex: number = delaySampleTime | 0;\r\n\t\t\tconst upperIndex: number = lowerIndex + 1;\r\n\t\t\tconst delayRatio: number = delaySampleTime - lowerIndex;\r\n\t\t\tconst prevDelaySample: number = delayLine[lowerIndex & delayBufferMask];\r\n\t\t\tconst nextDelaySample: number = delayLine[upperIndex & delayBufferMask];\r\n\t\t\tconst delaySample: number = prevDelaySample + (nextDelaySample - prevDelaySample) * delayRatio;\r\n\t\t\tdelayIndex++;\r\n\r\n\t\t\tconst inputSample: number = supersawSample - delaySample * shape;\r\n\t\t\tconst sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\tinitialFilterInput1 = inputSample;\r\n\r\n\t\t\tphaseDelta *= phaseDeltaScale;\r\n\t\t\tdynamism += dynamismDelta;\r\n\t\t\tshape += shapeDelta;\r\n\t\t\tdelayLength += delayLengthDelta;\r\n\r\n\t\t\tconst output: number = sample * expression;\r\n\t\t\texpression += expressionDelta;\r\n\r\n\t\t\tdata[sampleIndex] += output;\r\n\t\t}\r\n\r\n\t\ttone.phaseDeltas[0] = phaseDelta;\r\n\t\ttone.expression = expression;\r\n\t\ttone.supersawDynamism = dynamism;\r\n\t\ttone.supersawShape = shape;\r\n\t\ttone.supersawDelayLength = delayLength;\r\n\t\ttone.supersawDelayIndex = delayIndex;\r\n\r\n\t\tsynth.sanitizeFilters(filters);\r\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\r\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\r\n\t}\r\n\r\n    private static fmSourceTemplate: string[] = (`\r\n\t\tconst data = synth.tempMonoInstrumentSampleBuffer;\r\n\t\tconst sineWave = Config.sineWave;\r\n\t\t\t\r\n\t\t// I'm adding 1000 to the phase to ensure that it's never negative even when modulated by other waves because negative numbers don't work with the modulus operator very well.\r\n\t\tlet operator#Phase       = +((tone.phases[#] % 1) + 1000) * ` + Config.sineWaveLength + `;\r\n\t\tlet operator#PhaseDelta  = +tone.phaseDeltas[#] * ` + Config.sineWaveLength + `;\r\n\t\tlet operator#PhaseDeltaScale = +tone.phaseDeltaScales[#];\r\n\t\tlet operator#OutputMult  = +tone.operatorExpressions[#];\r\n\t\tconst operator#OutputDelta = +tone.operatorExpressionDeltas[#];\r\n\t\tlet operator#Output      = +tone.feedbackOutputs[#];\r\n        const operator#Wave      = tone.operatorWaves[#].samples;\r\n\t\tlet feedbackMult         = +tone.feedbackMult;\r\n\t\tconst feedbackDelta        = +tone.feedbackDelta;\r\n        let expression = +tone.expression;\r\n\t\tconst expressionDelta = +tone.expressionDelta;\r\n\t\t\r\n\t\tconst filters = tone.noteFilters;\r\n\t\tconst filterCount = tone.noteFilterCount|0;\r\n\t\tlet initialFilterInput1 = +tone.initialNoteFilterInput1;\r\n\t\tlet initialFilterInput2 = +tone.initialNoteFilterInput2;\r\n\t\tconst applyFilters = Synth.applyFilters;\r\n\t\t\r\n\t\tconst stopIndex = bufferIndex + roundedSamplesPerTick;\r\n\t\tfor (let sampleIndex = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n\t\t\t\t// INSERT OPERATOR COMPUTATION HERE\r\n\t\t\t\tconst fmOutput = (/*operator#Scaled*/); // CARRIER OUTPUTS\r\n\t\t\t\t\r\n\t\t\tconst inputSample = fmOutput;\r\n\t\t\tconst sample = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n\t\t\tinitialFilterInput2 = initialFilterInput1;\r\n\t\t\tinitialFilterInput1 = inputSample;\r\n\t\t\t\t\r\n\t\t\t\tfeedbackMult += feedbackDelta;\r\n\t\t\t\toperator#OutputMult += operator#OutputDelta;\r\n\t\t\t\toperator#Phase += operator#PhaseDelta;\r\n\t\t\toperator#PhaseDelta *= operator#PhaseDeltaScale;\r\n\t\t\t\r\n\t\t\tconst output = sample * expression;\r\n\t\t\texpression += expressionDelta;\r\n\r\n\t\t\tdata[sampleIndex] += output;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttone.phases[#] = operator#Phase / ` + Config.sineWaveLength + `;\r\n\t\t\ttone.phaseDeltas[#] = operator#PhaseDelta / ` + Config.sineWaveLength + `;\r\n\t\t\ttone.operatorExpressions[#] = operator#OutputMult;\r\n\t\t    tone.feedbackOutputs[#] = operator#Output;\r\n\t\t    tone.feedbackMult = feedbackMult;\r\n\t\t    tone.expression = expression;\r\n\t\t\t\r\n\t\tsynth.sanitizeFilters(filters);\r\n\t\ttone.initialNoteFilterInput1 = initialFilterInput1;\r\n\t\ttone.initialNoteFilterInput2 = initialFilterInput2;\r\n\t\t`).split(\"\\n\");\r\n\r\n    private static operatorSourceTemplate: string[] = (`\r\n\t\t\t\tconst operator#PhaseMix = operator#Phase/* + operator@Scaled*/;\r\n\t\t\t\tconst operator#PhaseInt = operator#PhaseMix|0;\r\n\t\t\t\tconst operator#Index    = operator#PhaseInt & ` + Config.sineWaveMask + `;\r\n                const operator#Sample   = operator#Wave[operator#Index];\r\n                operator#Output         = operator#Sample + (operator#Wave[operator#Index + 1] - operator#Sample) * (operator#PhaseMix - operator#PhaseInt);\r\n\t\t\t\tconst operator#Scaled   = operator#OutputMult * operator#Output;\r\n\t\t`).split(\"\\n\");\r\n\r\n        private static noiseSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n            const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n            const wave: Float32Array = instrumentState.wave!;\r\n            \r\n            const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n            if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\r\n                tone.phases[1] = tone.phases[0];\r\n            let phaseDeltaA: number = tone.phaseDeltas[0];\r\n            let phaseDeltaB: number = tone.phaseDeltas[1];\r\n            const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n            const phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n            let expression: number = +tone.expression;\r\n            const expressionDelta: number = +tone.expressionDelta;\r\n            let phaseA: number = (tone.phases[0] % 1) * Config.chipNoiseLength;\r\n            let phaseB: number = (tone.phases[1] % 1) * Config.chipNoiseLength;\r\n            if (tone.phases[0] == 0.0) {\r\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n                phaseA = Math.random() * Config.chipNoiseLength;\r\n                if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\r\n                    phaseB = phaseA;\r\n            }\r\n            if (tone.phases[1] == 0.0 && !(instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)) {\r\n                // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n                phaseB = Math.random() * Config.chipNoiseLength;\r\n            }\r\n            const phaseMask: number = Config.chipNoiseLength - 1;\r\n            let noiseSampleA: number = +tone.noiseSampleA;\r\n            let noiseSampleB: number = +tone.noiseSampleB;\r\n    \r\n            const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n            const filterCount: number = tone.noteFilterCount | 0;\r\n            let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n            let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n            const applyFilters: Function = Synth.applyFilters;\r\n    \r\n            // This is for a \"legacy\" style simplified 1st order lowpass filter with\r\n            // a cutoff frequency that is relative to the tone's fundamental frequency.\r\n            const pitchRelativefilterA: number = Math.min(1.0, phaseDeltaA * instrumentState.noisePitchFilterMult);\r\n            const pitchRelativefilterB: number = Math.min(1.0, phaseDeltaB * instrumentState.noisePitchFilterMult);\r\n    \r\n            const stopIndex: number = bufferIndex + runLength;\r\n            for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n                const waveSampleA: number = wave[phaseA & phaseMask];\r\n                const waveSampleB: number = wave[phaseB & phaseMask];\r\n    \r\n                noiseSampleA += (waveSampleA - noiseSampleA) * pitchRelativefilterA;\r\n                noiseSampleB += (waveSampleB - noiseSampleB) * pitchRelativefilterB;\r\n    \r\n                const inputSample: number = noiseSampleA + noiseSampleB * unisonSign;\r\n                const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n                initialFilterInput2 = initialFilterInput1;\r\n                initialFilterInput1 = inputSample;\r\n    \r\n                phaseA += phaseDeltaA;\r\n                phaseB += phaseDeltaB;\r\n                phaseDeltaA *= phaseDeltaScaleA;\r\n                phaseDeltaB *= phaseDeltaScaleB;\r\n    \r\n                const output: number = sample * expression;\r\n                expression += expressionDelta;\r\n    \r\n                data[sampleIndex] += output;\r\n            }\r\n    \r\n            tone.phases[0] = phaseA / Config.chipNoiseLength;\r\n            tone.phases[1] = phaseB / Config.chipNoiseLength;\r\n            tone.phaseDeltas[0] = phaseDeltaA;\r\n            tone.phaseDeltas[1] = phaseDeltaB;\r\n            tone.expression = expression;\r\n            tone.noiseSampleA = noiseSampleA;\r\n            tone.noiseSampleB = noiseSampleB;\r\n    \r\n            synth.sanitizeFilters(filters);\r\n            tone.initialNoteFilterInput1 = initialFilterInput1;\r\n            tone.initialNoteFilterInput2 = initialFilterInput2;\r\n        }\r\n\r\n    private static spectrumSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        const wave: Float32Array = instrumentState.wave!;\r\n        const samplesInPeriod: number = (1 << 7);\r\n\r\n        const unisonSign: number = tone.specialIntervalExpressionMult * instrumentState.unisonSign;\r\n        if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\r\n            tone.phases[1] = tone.phases[0];\r\n        let phaseDeltaA: number = tone.phaseDeltas[0] * samplesInPeriod;\r\n\t\tlet phaseDeltaB: number = tone.phaseDeltas[1] * samplesInPeriod;\r\n        const phaseDeltaScaleA: number = +tone.phaseDeltaScales[0];\r\n\t\tconst phaseDeltaScaleB: number = +tone.phaseDeltaScales[1];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n        let noiseSampleA: number = +tone.noiseSampleA;\r\n\t\tlet noiseSampleB: number = +tone.noiseSampleB;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        let phaseA: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\r\n\t\tlet phaseB: number = (tone.phases[1] % 1) * Config.spectrumNoiseLength;\r\n        if (tone.phases[0] == 0.0) {\r\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n            phaseA = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDeltaA;\r\n            if (instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)\r\n                phaseB = phaseA;\r\n        }\r\n        if (tone.phases[1] == 0.0 && !(instrumentState.unisonVoices == 1 && (instrumentState.unisonSpread == 0 || instrumentState.unisonBuzzes) && !instrumentState.chord!.customInterval)) {\r\n            // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n            phaseB = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDeltaB;\r\n        }\r\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\r\n\r\n        // This is for a \"legacy\" style simplified 1st order lowpass filter with\r\n        // a cutoff frequency that is relative to the tone's fundamental frequency.\r\n        const pitchRelativefilterA: number = Math.min(1.0, phaseDeltaA);\r\n        const pitchRelativefilterB: number = Math.min(1.0, phaseDeltaB);\r\n\r\n        const stopIndex: number = bufferIndex + runLength;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n            const phaseAInt: number = phaseA | 0;\r\n\t\t\tconst phaseBInt: number = phaseB | 0;\r\n            const indexA: number = phaseAInt & phaseMask;\r\n\t\t\tconst indexB: number = phaseBInt & phaseMask;\r\n            let waveSampleA: number = wave[indexA];\r\n\t\t\tlet waveSampleB: number = wave[indexB];\r\n            const phaseRatioA: number = phaseA - phaseAInt;\r\n\t\t\tconst phaseRatioB: number = phaseB - phaseBInt;\r\n            waveSampleA += (wave[indexA + 1] - waveSampleA) * phaseRatioA;\r\n\t\t\twaveSampleB += (wave[indexB + 1] - waveSampleB) * phaseRatioB;\r\n\r\n            noiseSampleA += (waveSampleA - noiseSampleA) * pitchRelativefilterA;\r\n\t\t\tnoiseSampleB += (waveSampleB - noiseSampleB) * pitchRelativefilterB;\r\n\r\n\r\n            const inputSample: number = noiseSampleA + noiseSampleB * unisonSign;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phaseA += phaseDeltaA;\r\n\t\t\tphaseB += phaseDeltaB;\r\n            phaseDeltaA *= phaseDeltaScaleA;\r\n\t\t\tphaseDeltaB *= phaseDeltaScaleB;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phaseA / Config.spectrumNoiseLength;\r\n        tone.phases[1] = phaseB / Config.spectrumNoiseLength;\r\n        tone.phaseDeltas[0] = phaseDeltaA / samplesInPeriod;\r\n        tone.phaseDeltas[1] = phaseDeltaB / samplesInPeriod;\r\n        tone.expression = expression;\r\n        tone.noiseSampleA = noiseSampleA;\r\n        tone.noiseSampleB = noiseSampleB;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static drumsetSynth(synth: Synth, bufferIndex: number, runLength: number, tone: Tone, instrumentState: InstrumentState): void {\r\n        const data: Float32Array = synth.tempMonoInstrumentSampleBuffer!;\r\n        let wave: Float32Array = instrumentState.getDrumsetWave(tone.drumsetPitch!);\r\n        const referenceDelta: number = InstrumentState.drumsetIndexReferenceDelta(tone.drumsetPitch!);\r\n        let phaseDelta: number = tone.phaseDeltas[0] / referenceDelta;\r\n        const phaseDeltaScale: number = +tone.phaseDeltaScales[0];\r\n        let expression: number = +tone.expression;\r\n        const expressionDelta: number = +tone.expressionDelta;\r\n\r\n        const filters: DynamicBiquadFilter[] = tone.noteFilters;\r\n        const filterCount: number = tone.noteFilterCount | 0;\r\n        let initialFilterInput1: number = +tone.initialNoteFilterInput1;\r\n        let initialFilterInput2: number = +tone.initialNoteFilterInput2;\r\n        const applyFilters: Function = Synth.applyFilters;\r\n\r\n        let phase: number = (tone.phases[0] % 1) * Config.spectrumNoiseLength;\r\n        // Zero phase means the tone was reset, just give noise a random start phase instead.\r\n        if (tone.phases[0] == 0.0) phase = Synth.findRandomZeroCrossing(wave, Config.spectrumNoiseLength) + phaseDelta;\r\n        const phaseMask: number = Config.spectrumNoiseLength - 1;\r\n\r\n        const stopIndex: number = bufferIndex + runLength;\r\n        for (let sampleIndex: number = bufferIndex; sampleIndex < stopIndex; sampleIndex++) {\r\n            const phaseInt: number = phase | 0;\r\n            const index: number = phaseInt & phaseMask;\r\n            let noiseSample: number = wave[index];\r\n            const phaseRatio: number = phase - phaseInt;\r\n            noiseSample += (wave[index + 1] - noiseSample) * phaseRatio;\r\n\r\n            const inputSample: number = noiseSample;\r\n            const sample: number = applyFilters(inputSample, initialFilterInput1, initialFilterInput2, filterCount, filters);\r\n            initialFilterInput2 = initialFilterInput1;\r\n            initialFilterInput1 = inputSample;\r\n\r\n            phase += phaseDelta;\r\n            phaseDelta *= phaseDeltaScale;\r\n\r\n            const output: number = sample * expression;\r\n            expression += expressionDelta;\r\n\r\n            data[sampleIndex] += output;\r\n        }\r\n\r\n        tone.phases[0] = phase / Config.spectrumNoiseLength;\r\n        tone.phaseDeltas[0] = phaseDelta * referenceDelta;\r\n        tone.expression = expression;\r\n\r\n        synth.sanitizeFilters(filters);\r\n        tone.initialNoteFilterInput1 = initialFilterInput1;\r\n        tone.initialNoteFilterInput2 = initialFilterInput2;\r\n    }\r\n\r\n    private static modSynth(synth: Synth, stereoBufferIndex: number, roundedSamplesPerTick: number, tone: Tone, instrument: Instrument): void {\r\n        // Note: present modulator value is tone.expressionStarts[0].\r\n\r\n        if (!synth.song) return;\r\n\r\n        let mod: number = Config.modCount - 1 - tone.pitches[0];\r\n\r\n        // Flagged as invalid because unused by current settings, skip\r\n        if (instrument.invalidModulators[mod]) return;\r\n\r\n        let setting: number = instrument.modulators[mod];\r\n\r\n        // Generate list of used instruments\r\n        let usedInstruments: number[] = [];\r\n        if (Config.modulators[instrument.modulators[mod]].forSong) {\r\n            // Instrument doesn't matter for song, just push a random index to run the modsynth once\r\n            usedInstruments.push(0);\r\n        } else {\r\n            // All\r\n            if (instrument.modInstruments[mod] == synth.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                for (let i: number = 0; i < synth.song.channels[instrument.modChannels[mod]].instruments.length; i++) {\r\n                    usedInstruments.push(i);\r\n                }\r\n            }\r\n            // Active\r\n            else if (instrument.modInstruments[mod] > synth.song.channels[instrument.modChannels[mod]].instruments.length) {\r\n                if (synth.song.getPattern(instrument.modChannels[mod], synth.bar) != null)\r\n                    usedInstruments = synth.song.getPattern(instrument.modChannels[mod], synth.bar)!.instruments;\r\n            } else {\r\n                usedInstruments.push(instrument.modInstruments[mod]);\r\n            }\r\n        }\r\n\r\n        for (let instrumentIndex: number = 0; instrumentIndex < usedInstruments.length; instrumentIndex++) {\r\n\r\n            synth.setModValue(tone.expression, tone.expression + tone.expressionDelta, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\r\n\r\n            // If mods are being held (for smoother playback while recording mods), use those values instead.\r\n            for (let i: number = 0; i < synth.heldMods.length; i++) {\r\n                if (Config.modulators[instrument.modulators[mod]].forSong) {\r\n                    if (synth.heldMods[i].setting == setting)\r\n                        synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\r\n                }\r\n                else if (synth.heldMods[i].channelIndex == instrument.modChannels[mod] && synth.heldMods[i].instrumentIndex == usedInstruments[instrumentIndex] && synth.heldMods[i].setting == setting) {\r\n                    synth.setModValue(synth.heldMods[i].volume, synth.heldMods[i].volume, instrument.modChannels[mod], usedInstruments[instrumentIndex], setting);\r\n                }\r\n            }\r\n\r\n            // Reset arps, but only at the start of the note\r\n            if (setting == Config.modulators.dictionary[\"reset arp\"].index && synth.tick == 0 && tone.noteStartPart == synth.beat * Config.partsPerBeat + synth.part) {\r\n                synth.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]].arpTime = 0;\r\n            }\r\n            // Denote next bar skip\r\n            else if (setting == Config.modulators.dictionary[\"next bar\"].index) {\r\n                synth.wantToSkip = true;\r\n            }\r\n            // Extra info for eq filter target needs to be set as well\r\n            else if (setting == Config.modulators.dictionary[\"eq filter\"].index) {\r\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n\r\n                if (!tgtInstrument.eqFilterType) {\r\n\r\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\r\n\r\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\r\n\r\n                        let pinIdx: number = 0;\r\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\r\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\r\n                        // 0 to 1 based on distance to next morph\r\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n\r\n                        // Compute the new settings to go to.\r\n                        if (tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size] != null) {\r\n                            tgtInstrument.tmpEqFilterEnd = FilterSettings.lerpFilters(tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.eqSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\r\n                        } else {\r\n                            // No mutation will occur to the filter object so we can safely return it without copying\r\n                            tgtInstrument.tmpEqFilterEnd = tgtInstrument.eqFilter;\r\n                        }\r\n\r\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\r\n                    else {\r\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\r\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                            if (tgtInstrument.tmpEqFilterEnd == tgtInstrument.eqSubFilters[i] && tgtInstrument.tmpEqFilterEnd != null) {\r\n                                tgtInstrument.tmpEqFilterEnd = new FilterSettings();\r\n                                tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqSubFilters[i]!.toJsonObject());\r\n                            }\r\n                        }\r\n                        if (tgtInstrument.tmpEqFilterEnd == null) {\r\n                            tgtInstrument.tmpEqFilterEnd = new FilterSettings();\r\n                            tgtInstrument.tmpEqFilterEnd.fromJsonObject(tgtInstrument.eqFilter.toJsonObject());\r\n                        }\r\n\r\n                        if (tgtInstrument.tmpEqFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\r\n                            if (dotTarget % 2) { // X\r\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\r\n                            } else { // Y\r\n                                tgtInstrument.tmpEqFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // Extra info for note filter target needs to be set as well\r\n            else if (setting == Config.modulators.dictionary[\"note filter\"].index) {\r\n                const tgtInstrument = synth.song.channels[instrument.modChannels[mod]].instruments[usedInstruments[instrumentIndex]];\r\n\r\n                if (!tgtInstrument.noteFilterType) {\r\n                    let dotTarget = instrument.modFilterTypes[mod] | 0;\r\n\r\n                    if (dotTarget == 0) { // Morph. Figure out the target filter's X/Y coords for this point. If no point exists with this index, or point types don't match, do lerp-out for this point and lerp-in of a new point\r\n\r\n                        let pinIdx: number = 0;\r\n                        const currentPart: number = synth.getTicksIntoBar() / Config.ticksPerPart;\r\n                        while (tone.note!.start + tone.note!.pins[pinIdx].time <= currentPart) pinIdx++;\r\n                        // 0 to 1 based on distance to next morph\r\n                        //let lerpStartRatio: number = (currentPart - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n                        let lerpEndRatio: number = ((currentPart - tone.note!.start + (roundedSamplesPerTick / (synth.getSamplesPerTick() * Config.ticksPerPart)) * Config.ticksPerPart) - tone.note!.pins[pinIdx - 1].time) / (tone.note!.pins[pinIdx].time - tone.note!.pins[pinIdx - 1].time);\r\n\r\n                        // Compute the new settings to go to.\r\n                        if (tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size] != null || tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size] != null) {\r\n                            tgtInstrument.tmpNoteFilterEnd = FilterSettings.lerpFilters(tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx - 1].size]!, tgtInstrument.noteSubFilters[tone.note!.pins[pinIdx].size]!, lerpEndRatio);\r\n                        } else {\r\n                            // No mutation will occur to the filter object so we can safely return it without copying\r\n                            tgtInstrument.tmpNoteFilterEnd = tgtInstrument.noteFilter;\r\n                        }\r\n\r\n                    } // Target (1 is dot 1 X, 2 is dot 1 Y, etc.)\r\n                    else {\r\n                        // Since we are directly manipulating the filter, make sure it is a new one and not an actual one of the instrument's filters\r\n\r\n                        for (let i: number = 0; i < Config.filterMorphCount; i++) {\r\n                            if (tgtInstrument.tmpNoteFilterEnd == tgtInstrument.noteSubFilters[i] && tgtInstrument.tmpNoteFilterEnd != null) {\r\n                                tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\r\n                                tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteSubFilters[i]!.toJsonObject());\r\n                            }\r\n                        }\r\n                        if (tgtInstrument.tmpNoteFilterEnd == null) {\r\n                            tgtInstrument.tmpNoteFilterEnd = new FilterSettings();\r\n                            tgtInstrument.tmpNoteFilterEnd.fromJsonObject(tgtInstrument.noteFilter.toJsonObject());\r\n                        }\r\n\r\n                        if (tgtInstrument.tmpNoteFilterEnd.controlPointCount > Math.floor((dotTarget - 1) / 2)) {\r\n                            if (dotTarget % 2) { // X\r\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].freq = tone.expression + tone.expressionDelta;\r\n                            } else { // Y\r\n                                tgtInstrument.tmpNoteFilterEnd.controlPoints[Math.floor((dotTarget - 1) / 2)].gain = tone.expression + tone.expressionDelta;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private static findRandomZeroCrossing(wave: Float32Array, waveLength: number): number {\r\n        let phase: number = Math.random() * waveLength;\r\n        const phaseMask: number = waveLength - 1;\r\n\r\n        // Spectrum and drumset waves sounds best when they start at a zero crossing,\r\n        // otherwise they pop. Try to find a zero crossing.\r\n        let indexPrev: number = phase & phaseMask;\r\n        let wavePrev: number = wave[indexPrev];\r\n        const stride: number = 16;\r\n        for (let attemptsRemaining: number = 128; attemptsRemaining > 0; attemptsRemaining--) {\r\n            const indexNext: number = (indexPrev + stride) & phaseMask;\r\n            const waveNext: number = wave[indexNext];\r\n            if (wavePrev * waveNext <= 0.0) {\r\n                // Found a zero crossing! Now let's narrow it down to two adjacent sample indices.\r\n                for (let i: number = 0; i < stride; i++) {\r\n                    const innerIndexNext: number = (indexPrev + 1) & phaseMask;\r\n                    const innerWaveNext: number = wave[innerIndexNext];\r\n                    if (wavePrev * innerWaveNext <= 0.0) {\r\n                        // Found the zero crossing again! Now let's find the exact intersection.\r\n                        const slope: number = innerWaveNext - wavePrev;\r\n                        phase = indexPrev;\r\n                        if (Math.abs(slope) > 0.00000001) {\r\n                            phase += -wavePrev / slope;\r\n                        }\r\n                        phase = Math.max(0, phase) % waveLength;\r\n                        break;\r\n                    } else {\r\n                        indexPrev = innerIndexNext;\r\n                        wavePrev = innerWaveNext;\r\n                    }\r\n                }\r\n                break;\r\n            } else {\r\n                indexPrev = indexNext;\r\n                wavePrev = waveNext;\r\n            }\r\n        }\r\n\r\n        return phase;\r\n    }\r\n\r\n    public static instrumentVolumeToVolumeMult(instrumentVolume: number): number {\r\n        return (instrumentVolume == -Config.volumeRange / 2.0) ? 0.0 : Math.pow(2, Config.volumeLogScale * instrumentVolume);\r\n    }\r\n    public static volumeMultToInstrumentVolume(volumeMult: number): number {\r\n        return (volumeMult <= 0.0) ? -Config.volumeRange / 2 : Math.min(Config.volumeRange, (Math.log(volumeMult) / Math.LN2) / Config.volumeLogScale);\r\n    }\r\n    public static noteSizeToVolumeMult(size: number): number {\r\n        return Math.pow(Math.max(0.0, size) / Config.noteSizeMax, 1.5);\r\n    }\r\n    public static volumeMultToNoteSize(volumeMult: number): number {\r\n        return Math.pow(Math.max(0.0, volumeMult), 1 / 1.5) * Config.noteSizeMax;\r\n    }\r\n\r\n    public static fadeInSettingToSeconds(setting: number): number {\r\n        return 0.0125 * (0.95 * setting + 0.05 * setting * setting);\r\n    }\r\n    public static secondsToFadeInSetting(seconds: number): number {\r\n        return clamp(0, Config.fadeInRange, Math.round((-0.95 + Math.sqrt(0.9025 + 0.2 * seconds / 0.0125)) / 0.1));\r\n    }\r\n    public static fadeOutSettingToTicks(setting: number): number {\r\n        return Config.fadeOutTicks[setting];\r\n    }\r\n    public static ticksToFadeOutSetting(ticks: number): number {\r\n        let lower: number = Config.fadeOutTicks[0];\r\n        if (ticks <= lower) return 0;\r\n        for (let i: number = 1; i < Config.fadeOutTicks.length; i++) {\r\n            let upper: number = Config.fadeOutTicks[i];\r\n            if (ticks <= upper) return (ticks < (lower + upper) / 2) ? i - 1 : i;\r\n            lower = upper;\r\n        }\r\n        return Config.fadeOutTicks.length - 1;\r\n    }\r\n\r\n    public static detuneToCents(detune: number): number {\r\n        // BeepBox formula, for reference:\r\n        // return detune * (Math.abs(detune) + 1) / 2;\r\n        return detune - Config.detuneCenter;\r\n    }\r\n    public static centsToDetune(cents: number): number {\r\n        // BeepBox formula, for reference:\r\n        // return Math.sign(cents) * (Math.sqrt(1 + 8 * Math.abs(cents)) - 1) / 2.0;\r\n        return cents + Config.detuneCenter;\r\n    }\r\n\r\n    public static getOperatorWave(waveform: number, pulseWidth: number) {\r\n        if (waveform != 2) {\r\n            return Config.operatorWaves[waveform];\r\n        }\r\n        else {\r\n            return Config.pwmOperatorWaves[pulseWidth];\r\n        }\r\n    }\r\n\r\n    public getSamplesPerTick(): number {\r\n        if (this.song == null) return 0;\r\n        let beatsPerMinute: number = this.song.getBeatsPerMinute();\r\n        if (this.isModActive(Config.modulators.dictionary[\"tempo\"].index)) {\r\n            beatsPerMinute = this.getModValue(Config.modulators.dictionary[\"tempo\"].index);\r\n        }\r\n        return this.getSamplesPerTickSpecificBPM(beatsPerMinute);\r\n    }\r\n\r\n    private getSamplesPerTickSpecificBPM(beatsPerMinute: number): number {\r\n        const beatsPerSecond: number = beatsPerMinute / 60.0;\r\n        const partsPerSecond: number = Config.partsPerBeat * beatsPerSecond;\r\n        const tickPerSecond: number = Config.ticksPerPart * partsPerSecond;\r\n        return this.samplesPerSecond / tickPerSecond;\r\n    }\r\n\r\n    public static fittingPowerOfTwo(x: number): number {\r\n        return 1 << (32 - Math.clz32(Math.ceil(x) - 1));\r\n    }\r\n\r\n    private sanitizeFilters(filters: DynamicBiquadFilter[]): void {\r\n        let reset: boolean = false;\r\n        for (const filter of filters) {\r\n            const output1: number = Math.abs(filter.output1);\r\n            const output2: number = Math.abs(filter.output2);\r\n            // If either is a large value, Infinity, or NaN, then just reset all filter history.\r\n            if (!(output1 < 100) || !(output2 < 100)) {\r\n                reset = true;\r\n                break;\r\n            }\r\n            if (output1 < epsilon) filter.output1 = 0.0;\r\n            if (output2 < epsilon) filter.output2 = 0.0;\r\n        }\r\n        if (reset) {\r\n            for (const filter of filters) {\r\n                filter.output1 = 0.0;\r\n                filter.output2 = 0.0;\r\n            }\r\n        }\r\n    }\r\n\r\n    public static sanitizeDelayLine(delayLine: Float32Array, lastIndex: number, mask: number): void {\r\n        while (true) {\r\n            lastIndex--;\r\n            const index: number = lastIndex & mask;\r\n            const sample: number = Math.abs(delayLine[index]);\r\n            if (Number.isFinite(sample) && (sample == 0.0 || sample >= epsilon)) break;\r\n            delayLine[index] = 0.0;\r\n        }\r\n    }\r\n\r\n    public static applyFilters(sample: number, input1: number, input2: number, filterCount: number, filters: DynamicBiquadFilter[]): number {\r\n        for (let i: number = 0; i < filterCount; i++) {\r\n            const filter: DynamicBiquadFilter = filters[i];\r\n            const output1: number = filter.output1;\r\n            const output2: number = filter.output2;\r\n            const a1: number = filter.a1;\r\n            const a2: number = filter.a2;\r\n            const b0: number = filter.b0;\r\n            const b1: number = filter.b1;\r\n            const b2: number = filter.b2;\r\n            sample = b0 * sample + b1 * input1 + b2 * input2 - a1 * output1 - a2 * output2;\r\n            filter.a1 = a1 + filter.a1Delta;\r\n            filter.a2 = a2 + filter.a2Delta;\r\n            if (filter.useMultiplicativeInputCoefficients) {\r\n                filter.b0 = b0 * filter.b0Delta;\r\n                filter.b1 = b1 * filter.b1Delta;\r\n                filter.b2 = b2 * filter.b2Delta;\r\n            } else {\r\n                filter.b0 = b0 + filter.b0Delta;\r\n                filter.b1 = b1 + filter.b1Delta;\r\n                filter.b2 = b2 + filter.b2Delta;\r\n            }\r\n            filter.output2 = output1;\r\n            filter.output1 = sample;\r\n            // Updating the input values is waste if the next filter doesn't exist...\r\n            input2 = output2;\r\n            input1 = output1;\r\n        }\r\n        return sample;\r\n    }\r\n}\r\n\r\n// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\nexport { Dictionary, DictionaryArray, FilterType, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config };","import {ColorConfig} from \"../editor/ColorConfig\";\r\nimport {HTML} from \"imperative-html/dist/esm/elements-strict\";\r\n\r\n\r\ndocument.head.appendChild(HTML.style({type: \"text/css\"}, `\r\n\t:root {\r\n\t\t--button-size: 26px;\r\n\t\t--settings-area-width: 192px;\r\n\t\t--play-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -5 -8 L -5 8 L 8 0 z\" fill=\"gray\"/></svg>');\r\n\t\t--pause-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-5\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/><rect x=\"3\" y=\"-7\" width=\"4\" height=\"14\" fill=\"gray\"/></svg>');\r\n\t\t--record-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"gray\"/></svg>');\r\n\t\t--stop-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"12\" height=\"12\" fill=\"gray\"/></svg>');\r\n\t\t--prev-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"-6\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M 6 -6 L 6 6 L -3 0 z\" fill=\"gray\"/></svg>');\r\n\t\t--next-bar-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><rect x=\"4\" y=\"-6\" width=\"2\" height=\"12\" fill=\"gray\"/><path d=\"M -6 -6 L -6 6 L 3 0 z\" fill=\"gray\"/></svg>');\r\n\t\t--volume-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t\t--unmuted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z M 15 11 L 16 10 A 7.2 7.2 0 0 1 16 16 L 15 15 A 5.8 5.8 0 0 0 15 12 z M 18 8 L 19 7 A 11.5 11.5 0 0 1 19 19 L 18 18 A 10.1 10.1 0 0 0 18 8 z\" fill=\"gray\"/></svg>');\r\n\t\t--muted-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"3 3 20 20\"><path d=\"M 4 16 L 4 10 L 8 10 L 13 5 L 13 21 L 8 16 z\" fill=\"gray\"/></svg>');\r\n\t\t--menu-down-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -2 L 4 -2 L 0 3 z\" fill=\"gray\"/></svg>');\r\n\t\t--select-arrows-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M -4 -3 L 4 -3 L 0 -8 z M -4 3 L 4 3 L 0 8 z\" fill=\"gray\"/></svg>');\r\n\t\t--file-page-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 2 0 L 2 -16 L 10 -16 L 14 -12 L 14 0 z M 3 -1 L 13 -1 L 13 -11 L 9 -11 L 9 -15 L 3 -15 z\" fill=\"gray\"/></svg>');\r\n\t\t--edit-pencil-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 0 L 1 -4 L 4 -1 z M 2 -5 L 10 -13 L 13 -10 L 5 -2 zM 11 -14 L 13 -16 L 14 -16 L 16 -14 L 16 -13 L 14 -11 z\" fill=\"gray\"/></svg>');\r\n\t\t--preferences-gear-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path d=\"M 5.78 -1.6 L 7.93 -0.94 L 7.93 0.94 L 5.78 1.6 L 4.85 3.53 L 5.68 5.61 L 4.21 6.78 L 2.36 5.52 L 0.27 5.99 L -0.85 7.94 L -2.68 7.52 L -2.84 5.28 L -4.52 3.95 L -6.73 4.28 L -7.55 2.59 L -5.9 1.07 L -5.9 -1.07 L -7.55 -2.59 L -6.73 -4.28 L -4.52 -3.95 L -2.84 -5.28 L -2.68 -7.52 L -0.85 -7.94 L 0.27 -5.99 L 2.36 -5.52 L 4.21 -6.78 L 5.68 -5.61 L 4.85 -3.53 M 2.92 0.67 L 2.92 -0.67 L 2.35 -1.87 L 1.3 -2.7 L 0 -3 L -1.3 -2.7 L -2.35 -1.87 L -2.92 -0.67 L -2.92 0.67 L -2.35 1.87 L -1.3 2.7 L -0 3 L 1.3 2.7 L 2.35 1.87 z\" fill=\"gray\"/></svg>');\r\n\t\t--customize-dial-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"> \\\r\n\t\t\t\t<g transform=\"translate(0,1)\" fill=\"gray\"> \\\r\n\t\t\t\t\t<circle cx=\"0\" cy=\"0\" r=\"6.5\" stroke=\"gray\" stroke-width=\"1\" fill=\"none\"/> \\\r\n\t\t\t\t\t<rect x=\"-1\" y=\"-5\" width=\"2\" height=\"4\" transform=\"rotate(30)\"/> \\\r\n\t\t\t\t\t<circle cx=\"-7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"-9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"-7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"-4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"0\" cy=\"-9\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"4.5\" cy=\"-7.79\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"7.79\" cy=\"-4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"9\" cy=\"0\" r=\"0.75\"/> \\\r\n\t\t\t\t\t<circle cx=\"7.79\" cy=\"4.5\" r=\"0.75\"/> \\\r\n\t\t\t\t</g> \\\r\n\t\t\t</svg>');\r\n\t\t--instrument-copy-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-5 -21 26 26\"><path d=\"M 0 -15 L 1 -15 L 1 0 L 13 0 L 13 1 L 0 1 L 0 -15 z M 2 -1 L 2 -17 L 10 -17 L 14 -13 L 14 -1 z M 3 -2 L 13 -2 L 13 -12 L 9 -12 L 9 -16 L 3 -16 z\" fill=\"currentColor\"></path></svg>');\r\n\t\t--instrument-paste-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"0 0 26 26\"><path d=\"M 8 18 L 6 18 L 6 5 L 17 5 L 17 7 M 9 8 L 16 8 L 20 12 L 20 22 L 9 22 z\" stroke=\"currentColor\" fill=\"none\"></path><path d=\"M 9 3 L 14 3 L 14 6 L 9 6 L 9 3 z M 16 8 L 20 12 L 16 12 L 16 8 z\" fill=\"currentColor\"></path></svg>');\r\n\t\t--export-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 3 L -8 8 L 8 8 L 8 3 L 6 3 L 6 6 L -6 6 L -6 3 z M 0 2 L -4 -2 L -1 -2 L -1 -8 L 1 -8 L 1 -2 L 4 -2 z\"/></svg>');\r\n\t\t--close-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -7.07 -5.66 L -5.66 -7.07 L 0 -1.4 L 5.66 -7.07 L 7.07 -5.66 L 1.4 0 L 7.07 5.66 L 5.66 7.07 L 0 1.4 L -5.66 7.07 L -7.07 5.66 L -1.4 0 z\"/></svg>');\r\n\t\t--add-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -8 -1 L -1 -1 L -1 -8  L 1 -8 L 1 -1 L 8 -1 L 8 1 L 1 1 L 1 8 L -1 8 L -1 1 L -8 1 z\"/></svg>');\r\n\t\t--zoom-in-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -1 -4 L -1 2 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\r\n\t\t--zoom-out-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"-10 -10 20 20\"><circle cx=\"-1\" cy=\"-1\" r=\"6\" stroke-width=\"2\" stroke=\"gray\" fill=\"none\"></circle><path stroke=\"gray\" stroke-width=\"2\" d=\"M 3 3 L 7 7 M -4 -1 L 2 -1\" fill=\"none\"></path></svg>');\r\n\t\t--undo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-undo.png\");\r\n\t\t--redo-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-redo.png\");\r\n\t\t--copy-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-copy.png\");\r\n\t\t--paste-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-paste.png\");\r\n\t\t--insert-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-insertChannel.png\");\r\n\t\t--delete-channel-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-deleteChannel.png\");\r\n\t\t--select-all-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-SelectAll.png\");\r\n\t\t--duplicate-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-duplicate.png\");\r\n\t\t--notes-up-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesUp.png\");\r\n\t\t--notes-down-symbol: url(\"https://choptop84.github.io/abyssbox-app/moveNotesDown.png\");\r\n\t\t--loop-bar-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-singleBarLoop.png\");\r\n\t\t--fullscreen-symbol: url(\"https://choptop84.github.io/abyssbox-app/icon-fullscreen.png\");\r\n\t\t--checkmark-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"26\" height=\"26\" viewBox=\"-13 -13 26 26\"><path fill=\"gray\" d=\"M -9 -2 L -8 -3 L -3 2 L 9 -8 L 10 -7 L -3 8 z\"/></svg>');\r\n\t\t--drum-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"40\" viewBox=\"0 0 32 40\"> \\\r\n\t\t\t\t<defs> \\\r\n\t\t\t\t\t<linearGradient id=\"gold1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t</linearGradient> \\\r\n\t\t\t\t\t<linearGradient id=\"gold2\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"15%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"65%\" stop-color=\"%23fffba9\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23faaf7d\"/> \\\r\n\t\t\t\t\t</linearGradient> \\\r\n\t\t\t\t\t<radialGradient id=\"gold3\" cx=\"0%\" cy=\"0%\" r=\"100%\"> \\\r\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23ffffe3\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"50%\" stop-color=\"%23ffec6b\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%237e3302\"/> \\\r\n\t\t\t\t\t</radialGradient> \\\r\n\t\t\t\t\t<linearGradient id=\"red\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"40%\" stop-color=\"%23cd2c2c\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23641919\"/> \\\r\n\t\t\t\t\t</linearGradient> \\\r\n\t\t\t\t\t<radialGradient id=\"membrane\"> \\\r\n\t\t\t\t\t\t<stop offset=\"10%\" stop-color=\"%23cccccc\" /> \\\r\n\t\t\t\t\t\t<stop offset=\"90%\" stop-color=\"%23f6f6f7\" /> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"%23999\" /> \\\r\n\t\t\t\t\t</radialGradient> \\\r\n\t\t\t\t</defs> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"26\" rx=\"16\" ry=\"14\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"25\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t\t<rect x=\"0\" y=\"23\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"23\" rx=\"15\" ry=\"13\" fill=\"url(%23red)\"/> \\\r\n\t\t\t\t<rect x=\"1\" y=\"17\" width=\"30\" height=\"6\" fill=\"url(%23red)\"/> \\\r\n\t\t\t\t<rect x=\"5\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t<rect x=\"15\" y=\"31\" width=\"2\" height=\"5\" rx=\"1\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t<rect x=\"26\" y=\"27\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t<rect x=\"5\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t\t<rect x=\"15\" y=\"30\" width=\"2\" height=\"5\" rx=\"1\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t\t<rect x=\"26\" y=\"26\" width=\"1\" height=\"5\" rx=\"0.5\" fill=\"url(%23gold3)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"18\" rx=\"15\" ry=\"13\" fill=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"16\" rx=\"16\" ry=\"14\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t\t<rect x=\"0\" y=\"14\" width=\"32\" height=\"2\" fill=\"url(%23gold1)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"16\" ry=\"14\" fill=\"url(%23gold2)\"/> \\\r\n\t\t\t\t<ellipse cx=\"16\" cy=\"14\" rx=\"15\" ry=\"13\" fill=\"url(%23membrane)\"/> \\\r\n\t\t\t</svg>');\r\n\t\t--piano-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"15\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 15\"> \\\r\n\t\t\t\t<defs> \\\r\n\t\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.5)\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t\t</linearGradient> \\\r\n\t\t\t\t</defs> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.4)\"/> \\\r\n\t\t\t\t<path d=\"M -1 11 L 30 11 L 30 2 L 33 -1 L 33 14 L -1 14 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"15\" fill=\"url(%23shadow)\"/> \\\r\n\t\t\t</svg>');\r\n\t--mod-key-symbol: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"80\" preserveAspectRatio=\"none\" viewBox=\"0 -1 32 80\"> \\\r\n\t\t\t\t<defs> \\\r\n\t\t\t\t\t<linearGradient id=\"shadow\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"> \\\r\n\t\t\t\t\t\t<stop offset=\"0%\" stop-color=\"rgba(0,0,0,0.4)\"/> \\\r\n\t\t\t\t\t\t<stop offset=\"100%\" stop-color=\"transparent\"/> \\\r\n\t\t\t\t\t</linearGradient> \\\r\n\t\t\t\t</defs> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"1\" width=\"31\" height=\"1\" rx=\"0.6\" fill=\"rgba(255,255,255,0.2)\"/> \\\r\n\t\t\t\t<path d=\"M -1 76 L 30 76 L 30 1 L 33 -1 L 33 80 L -1 80 z\" fill=\"rgba(0,0,0,0.7)\"/> \\\r\n\t\t\t\t<rect x=\"-1\" y=\"-1\" width=\"19\" height=\"80\" fill=\"url(%23shadow)\"/> \\\r\n\t\t\t</svg>');\r\n\t}\r\n\r\n\tbody {\r\n\t\tcolor: ${ColorConfig.primaryText};\r\n\t\tbackground: ${ColorConfig.songPlayerMargin};\r\n\t}\r\n\t.songPlayerContainer {\r\n\t\tdisplay:flex; \r\n\t\tflex-direction: column;\r\n\t\theight: 100%;\r\n\t}\r\n\t.piano {\r\n\tdisplay: none;\r\n\tmin-height = 0px;\r\n\t}\r\n\t.layout-option {\r\n\t\twidth: 25%;\r\n\t}\r\n\t.timeline-bar-progress {\r\n\t\tbackground: var(--progress-bar, var(--text-selection, rgb(0, 255, 0)));\r\n\t}\r\n\t.layout-option input:checked ~ * {\r\n\t\tcolor:var(--primary-text) !important;\r\n\t}\r\n\th1 {\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 14px;\r\n\t\tline-height: 22px;\r\n\t\ttext-align: initial;\r\n\t\tmargin: 0;\r\n\t}\r\n\tbutton.closePrompt::before {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\twidth: 32px;\r\n\t\theight: 32px;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t\tpointer-events: none;\r\n\t\tbackground: currentColor;\r\n\t\tmask-image: var(--close-symbol);\r\n\t\tmask-repeat: no-repeat;\r\n\t\tmask-position: center;\r\n\t\t-webkit-mask-image: var(--close-symbol);\r\n\t\t-webkit-mask-repeat: no-repeat;\r\n\t\t-webkit-mask-position: center;\r\n\t}\r\n\ta {\r\n\t\tfont-weight: bold;\r\n\t\tfont-size: 12px;\r\n\t\tline-height: 22px;\r\n\t\twhite-space: nowrap;\r\n\t\tcolor: ${ColorConfig.linkAccent};\r\n\t}\r\n\tbutton {\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\tposition: relative;\r\n\t\tborder: none;\r\n\t\tborder-radius: 5px;\r\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\t\tcolor: ${ColorConfig.primaryText};\r\n\t\tcursor: pointer;\r\n\t\tfont-size: 14px;\r\n\t\tfont-family: inherit;\r\n\t}\r\n\tbutton:hover, button:focus {\r\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\t}\r\n\t.playButton, .pauseButton {\r\n\t\tpadding-left: 24px;\r\n\t\tpadding-right: 6px;\r\n\t}\r\n\t.playButton::before {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\tleft: 6px;\r\n\t\ttop: 50%;\r\n\t\tmargin-top: -6px;\r\n\t\twidth: 12px;\r\n\t\theight: 12px;\r\n\t\tpointer-events: none;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><path d=\"M 6 0 L -5 6 L -5 -6 z\" fill=\"gray\"/></svg>');\r\n\t\t-webkit-mask-repeat: no-repeat;\r\n\t\t-webkit-mask-position: center;\r\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><path d=\"M 6 0 L -5 6 L -5 -6 z\" fill=\"gray\"/></svg>');\r\n\t\tmask-repeat: no-repeat;\r\n\t\tmask-position: center;\r\n\t}\r\n\t.pauseButton::before {\r\n\t\tcontent: \"\";\r\n\t\tposition: absolute;\r\n\t\tleft: 6px;\r\n\t\ttop: 50%;\r\n\t\tmargin-top: -6px;\r\n\t\twidth: 12px;\r\n\t\theight: 12px;\r\n\t\tpointer-events: none;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\t-webkit-mask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><rect x=\"-5\" y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/><rect x=\"2\"  y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/></svg>');\r\n\t\t-webkit-mask-repeat: no-repeat;\r\n\t\t-webkit-mask-position: center;\r\n\t\tmask-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"-6 -6 12 12\"><rect x=\"-5\" y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/><rect x=\"2\"  y=\"-6\" width=\"3\" height=\"12\" fill=\"gray\"/></svg>');\r\n\t\tmask-repeat: no-repeat;\r\n\t\tmask-position: center;\r\n\t}\r\n\t\r\n\tinput[type=range] {\r\n\t\t-webkit-appearance: none;\r\n\t\tappearance: none;\r\n\t\theight: 16px;\r\n\t\tmargin: 0;\r\n\t\tcursor: pointer;\r\n\t\tbackground-color: ${ColorConfig.editorBackground};\r\n\t\ttouch-action: pan-y;\r\n\t}\r\n\tinput[type=range]:focus {\r\n\t\toutline: none;\r\n\t}\r\n\tinput[type=range]::-webkit-slider-runnable-track {\r\n\t\twidth: 100%;\r\n\t\theight: 4px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\tinput[type=range]::-webkit-slider-thumb {\r\n\t\theight: 16px;\r\n\t\twidth: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\tcursor: pointer;\r\n\t\t-webkit-appearance: none;\r\n\t\tmargin-top: -6px;\r\n\t}\r\n\tinput[type=range]:focus::-webkit-slider-runnable-track, input[type=range]:hover::-webkit-slider-runnable-track {\r\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\t}\r\n\tinput[type=range]::-moz-range-track {\r\n\t\twidth: 100%;\r\n\t\theight: 4px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\t}\r\n\tinput[type=range]:focus::-moz-range-track, input[type=range]:hover::-moz-range-track  {\r\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\t}\r\n\tinput[type=range]::-moz-range-thumb {\r\n\t\theight: 16px;\r\n\t\twidth: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tborder: none;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\tcursor: pointer;\r\n\t}\r\n\tinput[type=range]::-ms-track {\r\n\t\twidth: 100%;\r\n\t\theight: 4px;\r\n\t\tcursor: pointer;\r\n\t\tbackground: ${ColorConfig.uiWidgetBackground};\r\n\t\tborder-color: transparent;\r\n\t}\r\n\tinput[type=range]:focus::-ms-track, input[type=range]:hover::-ms-track {\r\n\t\tbackground: ${ColorConfig.uiWidgetFocus};\r\n\t}\r\n\tinput[type=range]::-ms-thumb {\r\n\t\theight: 16px;\r\n\t\twidth: 4px;\r\n\t\tborder-radius: 2px;\r\n\t\tbackground: ${ColorConfig.primaryText};\r\n\t\tcursor: pointer;\r\n\t}\r\n`)); ","import { HTML } from \"imperative-html/dist/esm/elements-strict\";\r\n\r\nexport class SongPlayerLayout {\r\n    public static layoutLookup: Map<number, SongPlayerLayout> = new Map<number, SongPlayerLayout>();\r\n    private static readonly _spLayoutMap: {[K: string]: string} = { \r\n        \"classic\": `\r\n        .songPlayerContainer {\r\n            display: flex;\r\n            flex-direction: column;\r\n            height: 100%;\r\n        }\r\n        .piano {\r\n        height: 0;\r\n        display: none;\r\n        }\r\n        div.visualizer {\r\n            transform: scale(1);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(0);\r\n        } \r\n        `,\r\n        \"top\": `\r\n        .songPlayerContainer {\r\n            display: flex;\r\n            flex-direction: column-reverse;\r\n            height: 100%;\r\n        }\r\n        .piano {\r\n        height: 0;\r\n        display: none;\r\n        }\r\n        div.visualizer {\r\n            transform: scale(1);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(0);\r\n        }    \r\n        `,\r\n        \"shitbox4\": `\r\n        .songPlayerContainer {\r\n            display: flex;\r\n            flex-direction: column;\r\n            height: 100%;\r\n        }\r\n        .piano {\r\n        height: 0;\r\n        display: none;\r\n        }\r\n        div.visualizer {\r\n            transform: skew(30deg,20deg) scale(0.5);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(0);\r\n        }    \r\n        `,\r\n        \"boxbeep\": `\r\n        .songPlayerContainer {\r\n            display: flex;\r\n            flex-direction: column;\r\n            height: 100%;\r\n        }\r\n        .piano {\r\n        height: 0;\r\n        display: none;\r\n        }\r\n        div.visualizer {\r\n            transform: scale(-1);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(0);\r\n        }\r\n        `,\r\n        \"piano\": `\r\n        .songPlayerContainer {\r\n            display: flex;\r\n            flex-direction: column;\r\n            height: 100%;\r\n        }\r\n        div.visualizer {\r\n            transform: scale(1);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(0);\r\n        }\r\n        `,\r\n        \"vertical\": `\r\n        .songPlayerContainer {\r\n            display: flex;\r\n            flex-direction: column;\r\n            height: 100%;\r\n        }\r\n        .piano {\r\n        min-height: 140px;\r\n        display: flex;\r\n        }\r\n        div.visualizer {\r\n            transform: scale(1);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(0);\r\n        }\r\n        `,\r\n        \"middle\": `\r\n        .songPlayerContainer {\r\n            display: flex;\r\n            flex-direction: column;\r\n            height: 100%;\r\n        }\r\n        .piano {\r\n        height: 0;\r\n        display: none;\r\n        }\r\n        div.visualizer {\r\n            transform: scale(1);\r\n            }\r\n        .timelineContainer {\r\n            transform: translateX(50vw);\r\n        }\r\n        `,\r\n    }\r\n\r\n    private static readonly _styleElement: HTMLStyleElement = document.head.appendChild(HTML.style({type: \"text/css\"}));\r\n\r\n    public static setLayout(layout: string): void {\r\n\t\tthis._styleElement.textContent = this._spLayoutMap[layout];\r\n\t}\r\n}\r\n","// Copyright (c) 2012-2022 John Nesky and contributing authors, distributed under the MIT license, see accompanying the LICENSE.md file.\r\n\r\nimport { Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config } from \"../synth/SynthConfig\";\r\nimport { ColorConfig } from \"../editor/ColorConfig\";\r\nimport { NotePin, Note, Pattern, Instrument, Channel, Synth, Song } from \"../synth/synth\";\r\nimport \"./style\";\r\nimport { oscilascopeCanvas } from \"../global/Oscilascope\";\r\nimport { HTML, SVG } from \"imperative-html/dist/esm/elements-strict\";\r\nimport { SongPlayerLayout } from \"./Layout\";\r\n\r\n\tconst {a, button, div, h1, input, canvas, form, label,h2} = HTML;\r\n\tconst {svg, circle, rect, path} = SVG;\r\n\r\n\tconst isMobile: boolean = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini|android|ipad|playbook|silk/i.test(navigator.userAgent);\r\n\r\n\tconst colorTheme: string | null = getLocalStorage(\"colorTheme\");\r\n\tconst setSpLayout: string | null = getLocalStorage(\"spLayout\");\r\n\tSongPlayerLayout.setLayout(setSpLayout === null ? \"classic\" : setSpLayout);\r\n\r\n\tlet prevHash: string | null = null;\r\n\tlet id: string = ((Math.random() * 0xffffffff) >>> 0).toString(16);\r\n\tlet pauseButtonDisplayed: boolean = false;\r\n\tlet animationRequest: number | null;\r\n\tlet zoomEnabled: boolean = false;\r\n\tlet timelineWidth: number = 1;\r\n\tlet outVolumeHistoricTimer: number = 0;\r\n\tlet outVolumeHistoricCap: number = 0;\r\n\r\n\tconst synth: Synth = new Synth();\r\n\tconst oscilascope: oscilascopeCanvas = new oscilascopeCanvas(canvas({ width: isMobile? 144:288, height: isMobile?32:64, style: `border:2px solid ${ColorConfig.uiWidgetBackground}; overflow: hidden;` , id: \"oscilascopeAll\" }), isMobile?1:2);\r\n\tconst showOscilloscope: boolean = getLocalStorage(\"showOscilloscope\") != \"false\";\r\n\tif (!showOscilloscope) {\r\n\t\toscilascope.canvas.style.display = \"none\";\r\n\t\tsynth.oscEnabled = false;\r\n\t}\r\n\r\n\tconst closePrompt: HTMLButtonElement = button({class:\"closePrompt\",style:\"width: 32px; height: 32px; float: right; position: absolute;top: 8px;right: 8px;\"});\r\n\tconst _okayButton: HTMLButtonElement = button({class: \"okayButton\", style: \"width:45%; height: 32px;\"}, \"Okay\");\r\n\r\n\tconst _form: HTMLFormElement = form({style: \"display: flex; gap: 10px; flex-wrap: wrap; justify-content: center;\"},\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"classic\",style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"3\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"23\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"11\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"2\" y=\"5\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"7\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"9\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Classic\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"top\",style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"8\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"9\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"23\" y=\"9\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"16\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"10\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"12\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"14\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Top\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"shitbox4\", style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"2\"  width=\"22\" height=\"1\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"3\"  width=\"1\"  height=\"5\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\r\n\t\t\t\t\t\t<rect x=\"23\" y=\"3\" width=\"1\" height=\"5\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"8\"  width=\"22\" height=\"1\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\r\n\t\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"6\" width=\"22\" height=\"1\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\r\n\t\t\t\t\t\t<rect x=\"2\" y=\"4\" width=\"22\" height=\"1\" fill=\"currentColor\" style=\"transform: skew(0.1deg,10deg);\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"shitBox4\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"boxbeep\", style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"3\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"23\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"11\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"2\" y=\"5\" width=\"18\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"7\" width=\"18\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"9\" width=\"18\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"21\" y=\"5\" width=\"1\" height=\"5\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"BoxBeep\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"piano\", style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t<rect x=\"4\" y=\"3\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"3\" width=\"1\" height=\"9\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"23\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"4\" y=\"11\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"4\" y=\"5\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"4\" y=\"7\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"4\" y=\"9\" width=\"20\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Music Box\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"vertical\", style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"3\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"23\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"2\" y=\"11\" width=\"22\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"5\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"8\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"12\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"16\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\t\t\t\t\t<rect x=\"20\" y=\"4\" width=\"1\" height=\"7\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Vertical\"),\r\n\t\t\t),\r\n\t\t\tlabel({class: \"layout-option\",style:\"width:90px; color: var(--secondary-text)\"},\r\n\t\t\t\tinput({type: \"radio\", name: \"spLayout\", value: \"middle\", style:\"display:none;\"}),\r\n\t\t\t\tSVG(`\\\r\n\t\t\t\t<svg viewBox=\"-1 -1 28 22\">\r\n\t\t\t\t<rect x=\"0\" y=\"0\" width=\"26\" height=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1\"/>\r\n\t\t\t\t<rect x=\"4\" y=\"3\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t<rect x=\"2\" y=\"3\" width=\"1\" height=\"9\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t<rect x=\"13\" y=\"3\" width=\"1\" height=\"9\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t<rect x=\"23\" y=\"3\" width=\"1\" height=\"9\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t<rect x=\"4\" y=\"11\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"4\" y=\"5\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"4\" y=\"7\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"4\" y=\"9\" width=\"8\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t<rect x=\"15\" y=\"3\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"15\" y=\"11\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"15\" y=\"5\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"15\" y=\"7\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\r\n\t\t\t\t<rect x=\"15\" y=\"9\" width=\"7\" height=\"1\" fill=\"currentColor\"/>\r\n\r\n\t\t\t\t<rect x=\"2\" y=\"15\" width=\"22\" height=\"3\" fill=\"currentColor\"/>\r\n\t\t\t\t\t</svg>\r\n\t\t\t\t`),\r\n\t\t\t\tdiv(\"Middle\"),\r\n\t\t\t),\r\n\t\t);\r\n\r\n\t\tconst layoutContainer: HTMLDivElement = div({class: \"prompt noSelection\", style: \"width: 300px; margin: auto;text-align: center;background: var(--editor-background);border-radius: 15px;border: 4px solid var(--ui-widget-background);color: var(--primary-text);padding: 20px;display: flex;flex-direction: column;position: relative;box-shadow: 5px 5px 20px 10px rgba(0,0,0,0.5);\"},\r\n\t\t\tdiv({class:\"promptTitle\"}, h2({class:\"layoutExt\",style:\"text-align: inherit;\"}, \"\"), h2({class:\"layoutTitle\"}, \"Layout\")),\r\n\t\t\t\t_form,\r\n\t\t\t\tdiv({style: \"margin-top: 1em;\"},\r\n\t\t\t\t_okayButton,\r\n\t\t\t\t),\r\n\t\t\t\tclosePrompt,\r\n\t\t);\r\n\r\n\tlet titleText: HTMLHeadingElement = h1({class:\"songTitle\", style: \"flex-grow: 1; margin: 0 1px; margin-left: 10px; overflow: hidden;\" }, \"\");\r\n\t\tlet layoutStuffs: HTMLButtonElement = button({class:\"songPlayerLayoutsButton\", style: \"margin: 0 4px; height: 42px; width: 90px;\"}, \"Layouts\");\r\n\t\tlet editLink: HTMLAnchorElement = a({target: \"_top\", style: \"margin: 0 4px;\"}, \"✎ Edit\");\r\n\t\tlet copyLink: HTMLAnchorElement = a({href: \"javascript:void(0)\", style: \"margin: 0 4px;\"}, \"⎘ Copy URL\");\r\n\t\tlet shareLink: HTMLAnchorElement = a({href: \"javascript:void(0)\", style: \"margin: 0 4px;\"}, \"⤳ Share\");\r\n\t\tlet fullscreenLink: HTMLAnchorElement = a({target: \"_top\", class:\"fullscreenLink\", style: \"margin: 0 4px;\"}, \"⇱ Fullscreen\");\r\n\t\tlet shortenSongLink: HTMLAnchorElement = a({ href:\"javascript:void(0)\", target: \"_top\", class:\"shortUrlLink\", style: \"margin: 0 4px;\"}, \"… Shorten URL\");\r\n\t\t//let hideUrlButton: HTMLAnchorElement = a({ href:\"javascript:void(0)\", target: \"_top\", style: \"margin: 0 4px;\"}, \"Hide URL\");\r\n\r\n\t\r\n\r\n\tlet draggingPlayhead: boolean = false;\r\n\t\tconst playButton: HTMLButtonElement = button({style: \"width: 100%; height: 100%; max-height: 50px;\"});\r\n\t\tconst playButtonContainer: HTMLDivElement = div({class: \"playButtonContainer\",style: \"flex-shrink: 0; display: flex; padding: 2px; width: 80px; height: 100%; box-sizing: border-box; align-items: center;\"},\r\n\t\tplayButton,\r\n\t);\r\n\t\tconst loopIcon: SVGPathElement = path({d: \"M 4 2 L 4 0 L 7 3 L 4 6 L 4 4 Q 2 4 2 6 Q 2 8 4 8 L 4 10 Q 0 10 0 6 Q 0 2 4 2 M 8 10 L 8 12 L 5 9 L 8 6 L 8 8 Q 10 8 10 6 Q 10 4 8 4 L 8 2 Q 12 2 12 6 Q 12 10 8 10 z\"});\r\n\t\tconst loopButton: HTMLButtonElement = button({title: \"loop\", class:\"spIcon loopIcon\", style: \"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;\"}, svg({width: 12, height: 12, viewBox: \"0 0 12 12\"},\r\n\t\tloopIcon,\r\n\t));\r\n\t\r\n\r\n\t\tconst volumeIcon: SVGSVGElement = svg({class:\"spIcon volumeIcon\", style: \"flex: 0 0 12px; margin: 0 1px; width: 12px; height: 12px;\", viewBox: \"0 0 12 12\"},\r\n\t\t\tpath({fill: ColorConfig.uiWidgetBackground, d: \"M 1 9 L 1 3 L 4 3 L 7 0 L 7 12 L 4 9 L 1 9 M 9 3 Q 12 6 9 9 L 8 8 Q 10.5 6 8 4 L 9 3 z\"}),\r\n\t);\r\n\t\t\r\n\tconst volumeSlider: HTMLInputElement = input({ title: \"volume\", type: \"range\", value: 75, min: 0, max: 75, step: 1, style: \"width: 12vw; max-width: 100px; margin: 0 1px;\" });\r\n\t\r\n\t\tconst zoomIcon: SVGSVGElement = svg({class:\"spIcon zoomIcon\", width: 12, height: 12, viewBox: \"0 0 12 12\"},\r\n\t\t\tcircle({cx: \"5\", cy: \"5\", r: \"4.5\", \"stroke-width\": \"1\", stroke: \"currentColor\", fill: \"none\"}),\r\n\t\t\tpath({stroke: \"currentColor\", \"stroke-width\": \"2\", d: \"M 8 8 L 11 11 M 5 2 L 5 8 M 2 5 L 8 5\", fill: \"none\"}),\r\n\t);\r\n\t\tconst zoomButton2: HTMLButtonElement = button({title: \"zoom\", style: \"background: #581b3e; width: 100%; height: 100%; display: none;\"}, \"Zoom\");\r\n\t\tconst zoomButton: HTMLButtonElement = button({title: \"zoom\", style: \"background: none; flex: 0 0 12px; margin: 0 3px; width: 12px; height: 12px; display: flex;\"},\r\n\t\tzoomIcon,\r\n\t\tzoomButton2,\r\n\t);\r\n\t\r\n\t\tconst timeline: SVGSVGElement = svg({class: \"timeline\",style: \"min-width: 0; min-height: 0; touch-action: pan-y pinch-zoom;\"});\r\n\t\tconst playhead: HTMLDivElement = div({class: \"playhead\",style: `position: absolute; left: 0; top: 0; width: 2px; height: 100%; background: ${ColorConfig.playhead}; pointer-events: none;`});\r\n\t\tconst piano = svg({ style: \"pointer-events: none; display: block; margin: 0 auto;\" });\r\n\t    const pianoContainer = div({ class: \"piano\", style: \"grid-area: piano;\" }, piano);\r\n\t\tconst timelineContainer: HTMLDivElement = div({class: \"timelineContainer\",style: \"display: flex; flex-grow: 1; flex-shrink: 1; position: relative;\"}, timeline, playhead);\r\n\t\tconst visualizationContainer: HTMLDivElement = div({class: \"visualizer\",style: \"display: flex; flex-grow: 1; flex-shrink: 1; position: relative; align-items: center; overflow: hidden; grid-area: visualizer;\"}, timelineContainer);\r\n\t\tlet noteFlashElementsPerBar: (SVGPathElement[])[];\r\n\t\tlet currentNoteFlashElements: SVGPathElement[] = [];\r\n\t\tlet currentNoteFlashBar: number = -1;\r\n\t\tconst notesFlashWhenPlayed: boolean = getLocalStorage(\"notesFlashWhenPlayed\") == \"true\";\r\n\t\r\n\tconst outVolumeBarBg: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"90%\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetBackground });\r\n\tconst outVolumeBar: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", height: \"50%\", width: \"0%\", x: \"5%\", y: \"25%\", fill: \"url('#volumeGrad2')\" });\r\n\tconst outVolumeCap: SVGRectElement = SVG.rect({ \"pointer-events\": \"none\", width: \"2px\", height: \"50%\", x: \"5%\", y: \"25%\", fill: ColorConfig.uiWidgetFocus });\r\n\tconst stop1: SVGStopElement = SVG.stop({ \"stop-color\": \"lime\", offset: \"60%\" });\r\n\tconst stop2: SVGStopElement = SVG.stop({ \"stop-color\": \"orange\", offset: \"90%\" });\r\n\tconst stop3: SVGStopElement = SVG.stop({ \"stop-color\": \"red\", offset: \"100%\" });\r\n\tconst gradient: SVGGradientElement = SVG.linearGradient({ id: \"volumeGrad2\", gradientUnits: \"userSpaceOnUse\" }, stop1, stop2, stop3);\r\n\tconst defs: SVGDefsElement = SVG.defs({}, gradient);\r\n\tconst volumeBarContainer: SVGSVGElement = SVG.svg({ style: `touch-action: none; overflow: hidden; margin: auto;`, width: \"160px\", height: \"10px\", preserveAspectRatio: \"none\" },\r\n\t\tdefs,\r\n\t\toutVolumeBarBg,\r\n\t\toutVolumeBar,\r\n\t\toutVolumeCap,\r\n\t);\r\n\tconst timelineBarProgress: HTMLDivElement = div({ class:`timeline-bar-progress`, style: `pointer-events: none; overflow: hidden; width: 5%; height: 100%; z-index: 5;`});\r\n\tconst timelineBar: HTMLDivElement = div({ style:  `overflow: hidden; margin: auto; width: 90%; height: 50%; background: var(--ui-widget-background);`},timelineBarProgress);\r\n\tconst timelineBarContainer: HTMLDivElement = div({ style: `pointer-events: none; overflow: hidden; margin: auto; width: 160px; height: 10px; `}, timelineBar);\r\n\tconst volumeBarContainerDiv: HTMLDivElement = div({class:`volBarContainer`, style:\"display:flex; flex-direction:column;\"}, volumeBarContainer, timelineBarContainer);\r\n\tconst promptContainer: HTMLDivElement = div({class:\"promptContainer\",style:\"display:none; backdrop-filter: saturate(1.5) blur(4px); width: 100%; height: 100%; position: fixed; z-index: 999; display: flex; justify-content: center; align-items: center;\"});\r\n\tpromptContainer.style.display = \"none\";\r\n\tconst songPlayerContainer: HTMLDivElement = div({class:\"songPlayerContainer\"});\r\n\tsongPlayerContainer.appendChild(visualizationContainer);\r\n\tsongPlayerContainer.appendChild(pianoContainer);\r\n\tsongPlayerContainer.appendChild(\r\n\t\t\tdiv({class: \"control-center\",id: \"control-center\",style: `flex-shrink: 0; height: 20vh; min-height: 22px; max-height: 70px; display: flex; align-items: center; grid-area: control-center;`},\r\n\t\t\t\tdiv({class: \"control-center row\",id:\"row1\",style: `display: flex; align-items: center;`},\r\n\t\t\t\t\tplayButtonContainer,\r\n\t\t\t\t\tloopButton,\r\n\t\t\t\t\tvolumeIcon,\r\n\t\t\t\t\tvolumeSlider,\r\n\t\t\t\t\tzoomButton,\r\n\t\t\t\t\tvolumeBarContainerDiv,\r\n\t\t\t\t\toscilascope.canvas, //make it auto remove itself later\r\n\t\t\t\t\t),\r\n\t\t\t\t\tdiv({class: \"control-center row\",id:\"row2\",style: `display: flex; align-items: center;`},\r\n\t\t\t\t\ttitleText,\r\n\t\t\t\t\tlayoutStuffs,\r\n\t\t\t\t\teditLink,\r\n\t\t\t\t\tcopyLink,\r\n\t\t\t\t\tshareLink,\r\n\t\t\t\t\tshortenSongLink,\r\n\t\t\t\t),\r\n\t\t\t\t\tdiv({class: \"control-center row\",id:\"row3\",style: `display: flex; align-items: center;`},\r\n\t\t\t\t\t),\r\n\t\t\t),\r\n\t);\r\n\tdocument.body.appendChild(songPlayerContainer);\r\n\tsongPlayerContainer.appendChild(promptContainer);\r\n\tpromptContainer.appendChild(layoutContainer);\r\n\t\r\n\tif (isMobile) {\r\n\t\tconst controlCenterId = document.getElementById('control-center');\r\n\t\tconst controlCenterRow3 = document.getElementById('row3');\r\n\t\toscilascope.canvas.style.display = 'none';\r\n\t\tcopyLink.style.display = \"none\";\r\n\t\tcontrolCenterId!.style.flexDirection = \"column\";\r\n\t\tlayoutStuffs.style.height = \"24px\";\r\n\t\tzoomButton2.style.display = \"unset\";\r\n\t\tzoomIcon.style.display = \"none\";\r\n\t\tzoomButton.style.width = \"48px\";\r\n\t\tzoomButton.style.height = \"19px\";\r\n\t\tzoomButton.style.flex = \"unset\";\r\n\t\tcontrolCenterRow3?.appendChild(titleText);\r\n\t} else {\r\n\t\tconst controlCenterId = document.getElementById('control-center');\r\n\t\tconst controlCenterRow1 = document.getElementById('row1');\r\n\t\tconst controlCenterRow3 = document.getElementById('row3');\r\n\t\tcontrolCenterId!.style.alignItems = \"unset\";\r\n\t\tcontrolCenterId!.style.justifyContent = \"space-between\";\r\n\t\tcontrolCenterRow1?.appendChild(titleText);\r\n\t\tcontrolCenterRow3!.style.display = \"none\";\r\n\t}\r\n\r\n\t// Some browsers have an option to \"block third-party cookies\" (it's enabled by\r\n\t// default in icognito Chrome windows) that throws an error on trying to access\r\n\t// localStorage from cross-domain iframe such as this song player, so wrap the\r\n\t// access in a try-catch block to ignore the error instead of interrupting\r\n\t// execution.\r\n\tfunction setLocalStorage(key: string, value: string): void {\r\n\t\ttry {\r\n\t\t\tlocalStorage.setItem(key, value);\r\n\t\t} catch (error) {\r\n\t\t\t// Ignore the error since we can't fix it.\r\n\t\t}\r\n\t}\r\n\tfunction getLocalStorage(key: string): string | null {\r\n\t\ttry {\r\n\t\t\treturn localStorage.getItem(key);\r\n\t\t} catch (error) {\r\n\t\t\t// Ignore the error since we can't fix it.\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction removeFromUnorderedArray<T>(array: T[], index: number): void {\r\n\t\tif (array.length < 1) {\r\n\t\t\t// Don't need to do anything when `array` is empty.\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (index === array.length - 1) {\r\n\t\t\t// Trivial case.\r\n\t\t\tarray.pop();\r\n\t\t} else if (index >= 0 && index < array.length - 1) {\r\n\t\t\t// The idea here is that we want to remove an element from the array\r\n\t\t\t// quickly, and the fastest way to do that is to use `array.pop()`. As\r\n\t\t\t// the name of this function says, we assume `array` to be unordered,\r\n\t\t\t// so this trick is okay to do.\r\n\t\t\tconst lastElement: T = array.pop()!;\r\n\t\t\tarray[index] = lastElement;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loadSong(songString: string, reuseParams: boolean): void {\r\n\t\tsynth.setSong(songString);\r\n\t\tsynth.snapToStart();\r\n\t\tconst updatedSongString: string = synth.song!.toBase64String();\r\n\t\teditLink.href = \"../#\" + updatedSongString;\r\n\t\t//@jummbus - these lines convert old url vers loaded into the player to the new url ver. The problem is, if special chars are included,\r\n\t\t// they appear to get double-encoded (e.g. the '%' in %20 is encoded again), which breaks the link. Disabled for now until I have a chance\r\n\t\t// to look into it more.\r\n\t\t//const hashQueryParams = new URLSearchParams(reuseParams ? location.hash.slice(1) : \"\");\r\n\t\t//hashQueryParams.set(\"song\", updatedSongString);\r\n\t\t//location.hash = hashQueryParams.toString();\r\n\t}\r\n\t\r\n\tfunction hashUpdatedExternally(): void {\r\n\t\tlet myHash: string = location.hash;\r\n\t\tif (prevHash == myHash || myHash == \"\") return;\r\n\t\t\t\r\n\t\tprevHash = myHash;\r\n\t\t\t\r\n\t\tif (myHash.charAt(0) == \"#\") {\r\n\t\t\tmyHash = myHash.substring(1);\r\n\t\t}\r\n\t\t\t\r\n\t\t\r\n\t\tfullscreenLink.href = location.href;\r\n\t\t\t\r\n\t\t\t// @TODO: This can be moved back into splitting merely on & once samples\r\n\t\t\t// are reworked so that the URLs don't clash with the overall URL syntax\r\n\t\t\t// that's assumed to be respected here (and probably elsewhere...)\r\n\t\tfor (const parameter of myHash.split(/&(?=[a-z]+=)/g)) {\r\n\t\t\tlet equalsIndex: number = parameter.indexOf(\"=\");\r\n\t\t\tif (equalsIndex != -1) {\r\n\t\t\t\tlet paramName: string = parameter.substring(0, equalsIndex);\r\n\t\t\t\tlet value: string = parameter.substring(equalsIndex + 1);\r\n\t\t\t\tswitch (paramName) {\r\n\t\t\t\t\tcase \"song\":\r\n\t\t\t\t\t\tloadSong(value, true);\r\n\t\t\t\t\t\tif (synth.song) {\r\n\t\t\t\t\t\t\ttitleText.textContent = synth.song.title;\r\n\t\t\t\t\t\t\tif (synth.song != null) {\r\n\t\t\t\t\t\t\t\tif (synth.song.setSongTheme != null) {\r\n\t\t\t\t\t\t\t\tif (synth.song?.setSongTheme == \"none\") {\r\n\t\t\t\t\t\t\t\t\tColorConfig.setTheme(colorTheme === null ? \"AbyssBox Classic\" : colorTheme); } else {\r\n\t\t\t\t\t\t\t\t\tColorConfig.setTheme(synth.song.setSongTheme);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tColorConfig.setTheme(colorTheme === null ? \"AbyssBox Classic\" : colorTheme); \r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t//case \"title\":\r\n\t\t\t\t\t//\ttitleText.textContent = decodeURIComponent(value);\r\n\t\t\t\t\t//\tbreak;\r\n\t\t\t\t\tcase \"loop\":\r\n\t\t\t\t\t\tsynth.loopRepeatCount = (value != \"1\") ? 0 : -1;\r\n\t\t\t\t\t\trenderLoopIcon();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tloadSong(myHash, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\t\r\n\t\trenderTimeline();\r\n\t}\r\n\t\r\n\tfunction onWindowResize(): void {\r\n\t\tpiano.style.width = \"0\";\r\n\t\trenderTimeline();\r\n\t}\r\n\r\n\tfunction shortenSongPlayerUrl(): void {\r\n\t\tlet shortenerStrategy: string = \"https://tinyurl.com/api-create.php?url=\";\r\n\t\twindow.open(shortenerStrategy + encodeURIComponent(new URL(\"#song=\" + synth.song!.toBase64String(), location.href).href));\r\n\t}\r\n\t\r\n\tlet pauseIfAnotherPlayerStartsHandle: ReturnType<typeof setInterval> | null = null;\r\n\tfunction pauseIfAnotherPlayerStarts(): void {\r\n\t\tif (!synth.playing) {\r\n\t\t\tclearInterval(pauseIfAnotherPlayerStartsHandle!);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\r\n\t\tconst storedPlayerId: string | null = getLocalStorage(\"playerId\");\r\n\t\tif (storedPlayerId != null && storedPlayerId != id) {\r\n\t\t\tonTogglePlay();\r\n\t\t\trenderPlayhead();\r\n\t\t\tclearInterval(pauseIfAnotherPlayerStartsHandle!);\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction animate(): void {\r\n\t\tif (synth.playing) {\r\n\t\t\tanimationRequest = requestAnimationFrame(animate);\r\n\t\t\trenderPlayhead();\r\n\t\r\n\t\t\tvolumeUpdate();\r\n\t\t}\r\n\t\tif (pauseButtonDisplayed != synth.playing) {\r\n\t\t\trenderPlayButton();\r\n\t\t}\r\n\t\r\n\t}\r\n\t\r\n\tfunction volumeUpdate(): void {\r\n\t\tif (synth.song == null) {\r\n\t\t\toutVolumeCap.setAttribute(\"x\", \"5%\");\r\n\t\t\toutVolumeBar.setAttribute(\"width\", \"0%\");\r\n\t\t\treturn;\r\n\t}\r\n\t\toutVolumeHistoricTimer--;\r\n\t\tif (outVolumeHistoricTimer <= 0) {\r\n\t\t\toutVolumeHistoricCap -= 0.03;\r\n\t\t}\r\n\t\tif (synth.song.outVolumeCap > outVolumeHistoricCap) {\r\n\t\t\toutVolumeHistoricCap = synth.song.outVolumeCap;\r\n\t\t\toutVolumeHistoricTimer = 50;\r\n\t\t}\r\n\t\r\n\t\tanimateVolume(synth.song.outVolumeCap, outVolumeHistoricCap);\r\n\t\r\n\t\tif (!synth.playing) {\r\n\t\t\toutVolumeCap.setAttribute(\"x\", \"5%\");\r\n\t\t\toutVolumeBar.setAttribute(\"width\", \"0%\");\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction animateVolume(useOutVolumeCap: number, historicOutCap: number): void {\r\n\t\toutVolumeBar.setAttribute(\"width\", \"\" + Math.min(144, useOutVolumeCap * 144));\r\n\t\toutVolumeCap.setAttribute(\"x\", \"\" + (8 + Math.min(144, historicOutCap * 144)));\r\n\t}\r\n\r\n\tfunction onTogglePlay(): void {\r\n\t\tif (synth.song != null) {\r\n\t\t\tif (animationRequest != null) cancelAnimationFrame(animationRequest);\r\n\t\t\tanimationRequest = null;\r\n\t\t\tif (synth.playing) {\r\n\t\t\t\tsynth.pause();\r\n\t\t\t\tvolumeUpdate();\r\n\t\t\t} else {\r\n\t\t\t\tsynth.play();\r\n\t\t\t\tsetLocalStorage(\"playerId\", id);\r\n\t\t\t\tanimate();\r\n\t\t\t\tclearInterval(pauseIfAnotherPlayerStartsHandle!);\r\n\t\t\t\tpauseIfAnotherPlayerStartsHandle = setInterval(pauseIfAnotherPlayerStarts, 100);\r\n\t\t\t}\r\n\t\t}\r\n\t\trenderPlayButton();\r\n\t}\r\n\t\r\n\t\t\t// I know you're blind so I'll put comments before and after these events so you can easily spot them later. No you don't need to thank me :eeheehee:\r\n\r\n\tfunction onLayoutButton(): void {\r\n\t\tpromptContainer.style.display = \"flex\";\r\n\t}\r\n\r\n\tfunction onExitButton(): void {\r\n\t\tpromptContainer.style.display = \"none\";\r\n\t}\r\n\t\r\n\tfunction onLayoutPicked(): void {\r\n\t\tSongPlayerLayout.setLayout((<any> _form.elements)[\"spLayout\"].value);\r\n\t\tpromptContainer.style.display = \"none\";\r\n\t\twindow.localStorage.setItem(\"spLayout\", (<any> _form.elements)[\"spLayout\"].value);\r\n\t\trenderTimeline();\r\n\t}\r\n\r\n\t\t// The end of the layout event code.\r\n\r\n\tfunction onToggleLoop(): void {\r\n\t\tif (synth.loopRepeatCount == -1) {\r\n\t\t\tsynth.loopRepeatCount = 0;\r\n\t\t} else {\r\n\t\t\tsynth.loopRepeatCount = -1;\r\n\t\t}\r\n\t\trenderLoopIcon();\r\n\t}\r\n\t\r\n\tfunction onVolumeChange(): void {\r\n\t\tsetLocalStorage(\"volume\", volumeSlider.value);\r\n\t\tsetSynthVolume();\r\n\t}\r\n\t\r\n\tfunction onToggleZoom(): void {\r\n\t\tzoomEnabled = !zoomEnabled;\r\n\t\trenderZoomIcon();\r\n\t\trenderTimeline();\r\n\t}\r\n\t\r\n\tfunction onTimelineMouseDown(event: MouseEvent): void {\r\n\t\tdraggingPlayhead = true;\r\n\t\tonTimelineMouseMove(event);\r\n\t}\r\n\t\r\n\tfunction onTimelineMouseMove(event: MouseEvent): void {\r\n\t\tif (!draggingPlayhead) return;\r\n\t\tevent.preventDefault();\r\n\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\r\n\t\tif (useVertical) {\r\n\t\tonTimelineCursorMove(event.clientY || event.pageY); \r\n\t\t} else {\r\n\t\tonTimelineCursorMove(event.clientX || event.pageX);\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction onTimelineTouchDown(event: TouchEvent): void {\r\n\t\tdraggingPlayhead = true;\r\n\t\tonTimelineTouchMove(event);\r\n\t}\r\n\t\r\n\tfunction onTimelineTouchMove(event: TouchEvent): void {\r\n\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\r\n\t\tif (useVertical) {\r\n\t\tonTimelineCursorMove(event.touches[0].clientY); }\r\n\t\telse {\r\n\t\tonTimelineCursorMove(event.touches[0].clientX); }\r\n\t}\r\n\t\r\n\tfunction onTimelineCursorMove(mouseX: number): void {\r\n\t\tif (draggingPlayhead && synth.song != null) {\r\n\t\t\t\r\n\t\t\tconst boundingRect: DOMRect = visualizationContainer.getBoundingClientRect();\r\n\t\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\r\n\t\t\tconst useBoxBeep = ((<any> _form.elements)[\"spLayout\"].value == \"boxbeep\") || (window.localStorage.getItem(\"spLayout\") == \"boxbeep\");\r\n\t\t\tif (!useVertical && !useBoxBeep) {\r\n\t\t\t\tsynth.playhead = synth.song.barCount * (mouseX - boundingRect.left) / (boundingRect.right - boundingRect.left); \r\n\t\t\t} else if (useVertical) {\r\n\t\t\t\tsynth.playhead = synth.song.barCount * (mouseX - boundingRect.bottom) / (boundingRect.top - boundingRect.bottom);\t\r\n\t\t\t} else if (useBoxBeep) {\r\n\t\t\t\tsynth.playhead = synth.song.barCount * (mouseX - boundingRect.right) / (boundingRect.left - boundingRect.right);\t\r\n\t\t\t}\r\n\t\t\tsynth.computeLatestModValues();\r\n\t\t\trenderPlayhead();\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction onTimelineCursorUp(): void {\r\n\t\tdraggingPlayhead = false;\r\n\t}\r\n\t\r\n\tfunction setSynthVolume(): void {\r\n\t\tconst volume: number = +volumeSlider.value;\r\n\t\tsynth.volume = Math.min(1.0, Math.pow(volume / 50.0, 0.5)) * Math.pow(2.0, (volume - 75.0) / 25.0);\r\n\t}\r\n\t\r\n\tfunction renderPlayhead(): void {\r\n\r\n\t\t\tconst maxPer = 144;\r\n\r\n\t\t\tif (synth.song != null) {\r\n\t\t\t\tlet pos: number = synth.playhead / synth.song.barCount;\r\n\r\n\t\t\t\ttimelineBarProgress.style.width = Math.round((maxPer*pos/maxPer)*100)+\"%\";\r\n\r\n\t\t\t\tconst usePiano = ((<any> _form.elements)[\"spLayout\"].value == \"piano\") || (window.localStorage.getItem(\"spLayout\") == \"piano\");\r\n\t\t\t\tconst useMiddle = ((<any> _form.elements)[\"spLayout\"].value == \"middle\") || (window.localStorage.getItem(\"spLayout\") == \"middle\");\r\n\t\t\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\r\n\t\t\t\tif (usePiano) {\r\n\t\t\t\t\tplayhead.style.left = (timelineWidth * pos) + \"px\"; \r\n\t\t\t\t\ttimelineContainer.style.left = \"-\"+(timelineWidth * pos) + \"px\"; \r\n\t\t\t\t\ttimelineContainer.style.bottom = \"0\";\r\n\t\t\t\t\ttimelineContainer.style.top = \"0\";\r\n\t\t\t\t} else if (useMiddle) {\r\n\t\t\t\t\tplayhead.style.left = (timelineWidth * pos) + \"px\"; \r\n\t\t\t\t\ttimelineContainer.style.left = \"-\"+(timelineWidth * pos) + \"px\"; \r\n\t\t\t\t\ttimelineContainer.style.bottom = \"0\";\r\n\t\t\t\t\ttimelineContainer.style.top = \"0\";\r\n\t\t\t\t} else if (useVertical) {\r\n\t\t\t\t\tconst boundingRect = visualizationContainer.getBoundingClientRect();\r\n                \tconst o = boundingRect.height / 2;\r\n                 \tplayhead.style.left = (timelineWidth * pos) + \"px\";\r\n                \ttimelineContainer.style.bottom = \"-\" + (timelineWidth * pos) + \"px\";\r\n\t               \ttimelineContainer.style.top = (timelineWidth * pos + o) + \"px\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\tplayhead.style.left = (timelineWidth * pos) + \"px\"; \r\n\t\t\t\t\ttimelineContainer.style.left = \"0\";\r\n\t\t\t\t\ttimelineContainer.style.bottom = \"0\";\r\n\t\t\t\t\ttimelineContainer.style.top = \"0\";\r\n\t\t\t\t\t\r\n\t\t\t\t\tconst boundingRect: DOMRect = visualizationContainer.getBoundingClientRect();\r\n\t\t\t\t\t\tvisualizationContainer.scrollLeft = pos * (timelineWidth - boundingRect.width); \r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// this is note flash shit so don't worry bout it\r\n\t\t\t\tif (notesFlashWhenPlayed) {\r\n\t\t\t\t\tconst playheadBar: number = Math.floor(synth.playhead);\r\n\t\t\t\t\tconst modPlayhead: number = synth.playhead - playheadBar;\r\n\t\t\t\t\tconst partsPerBar: number = synth.song.beatsPerBar * Config.partsPerBeat;\r\n\t\t\t\t\tconst noteFlashElementsForThisBar: SVGPathElement[] = noteFlashElementsPerBar[playheadBar];\r\n\t\t\r\n\t\t\t\t\tif (noteFlashElementsForThisBar != null && playheadBar !== currentNoteFlashBar) {\r\n\t\t\t\t\t\tfor (var i = currentNoteFlashElements.length - 1; i >= 0; i--) {\r\n\t\t\t\t\t\t\tvar element: SVGPathElement = currentNoteFlashElements[i];\r\n\t\t\t\t\t\t\tconst outsideOfCurrentBar = Number(element.getAttribute(\"note-bar\")) !== playheadBar;\r\n\t\t\t\t\t\t\tconst isInvisible: boolean = element.style.opacity === \"0\";\r\n\t\t\t\t\t\t\tif (outsideOfCurrentBar && isInvisible) {\r\n\t\t\t\t\t\t\t\tremoveFromUnorderedArray(currentNoteFlashElements, i);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor (var i = 0; i < noteFlashElementsForThisBar.length; i++) {\r\n\t\t\t\t\t\t\tvar element: SVGPathElement = noteFlashElementsForThisBar[i];\r\n\t\t\t\t\t\t\tcurrentNoteFlashElements.push(element);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst kc = piano.children.length;\r\n\t\t\t\t\t\tfor (let i = 0; i < kc; i++) {\r\n\t\t\t\t\t\t\tconst k = piano.children[i];\r\n\t\t\t\t\t\t\tconst kf = k.getAttribute(\"original-fill\");\r\n\t\t\t\t\t\t\tk.setAttribute(\"fill\", kf!);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\tif (currentNoteFlashElements != null) {\r\n\t\t\t\t\t\tfor (var i = 0; i < currentNoteFlashElements.length; i++) {\r\n\t\t\t\t\t\t\tvar element: SVGPathElement = currentNoteFlashElements[i];\r\n\t\t\t\t\t\t\tconst noteStart: number = Number(element.getAttribute(\"note-start\")) / partsPerBar;\r\n\t\t\t\t\t\t\tconst noteEnd: number = Number(element.getAttribute(\"note-end\")) / partsPerBar;\r\n\t\t\t\t\t\t\tconst noteBar: number = Number(element.getAttribute(\"note-bar\"));const p = Number(element.getAttribute(\"note-pitch\"));\r\n\t\t\t\t\t\t\tconst isNoise = element.getAttribute(\"note-noise\") === \"true\";\r\n\t\t\t\t\t\t\tconst k = piano.children[p];\r\n\t\t\t\t\t\t\t//const kf = k?.getAttribute(\"original-fill\");\r\n\t\t\t\t\t\t\tconst kf2 = element.getAttribute(\"note-color\")\r\n\t\t\t\t\t\t\tif ((modPlayhead >= noteStart) && (noteBar == playheadBar)) {\r\n\t\t\t\t\t\t\t\tconst dist: number = noteEnd - noteStart;\r\n\t\t\t\t\t\t\t\tconst opacity = (1 - (((modPlayhead - noteStart) - (dist / 2)) / (dist / 2)));\r\n\t                            element.style.opacity = String(opacity);\r\n                            if (!isNoise) if (opacity > 0.05) k?.setAttribute(\"fill\", kf2!);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\telement.style.opacity = \"0\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcurrentNoteFlashBar = playheadBar;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t}\r\n\r\n\tfunction renderTimeline(): void {\r\n\t\ttimeline.innerHTML = \"\";\r\n\t\tif (synth.song == null) return;\r\n\t\t\r\n\t\tconst boundingRect: DOMRect = visualizationContainer.getBoundingClientRect();\r\n\t\t\t\r\n\t\tlet timelineHeight: number;\r\n\t\tlet windowOctaves: number;\r\n\t\tlet windowPitchCount: number;\r\n\t\tconst useVertical = ((<any> _form.elements)[\"spLayout\"].value == \"vertical\") || (window.localStorage.getItem(\"spLayout\") == \"vertical\");\r\n\r\n\r\n\t\t\t\tif (zoomEnabled) {\r\n\t\t\t\t\ttimelineHeight = useVertical ? boundingRect.width : boundingRect.height;\r\n\t\t\t\t\twindowOctaves = Math.max(1, Math.min(Config.pitchOctaves, Math.round(timelineHeight / (12 * 2))));\r\n\t\t\t\t\twindowPitchCount = windowOctaves * 12 + 1;\r\n\t\t\t\t\tconst semitoneHeight: number = (timelineHeight - 1) / windowPitchCount;\r\n\t\t\t\t\tconst targetBeatWidth: number = Math.max(8, semitoneHeight * 4);\r\n\t\t\t\t\ttimelineWidth = Math.max(boundingRect.width, targetBeatWidth * synth.song.barCount * synth.song.beatsPerBar);\r\n\t\t\t\t\tif (useVertical) {\r\n\t\t\t\t\t\ttimelineContainer.style.transform = `translateX(-${timelineWidth / 2}px) rotate(-90deg) translateX(${timelineWidth / 2}px) translateY(${timelineHeight / 2}px) scaleY(-1)`; \r\n\t\t\t\t\t\tpianoContainer.style.minHeight = \"140px\";\r\n\t\t\t\t\t\tif (isMobile) {\r\n\t\t\t\t\t\t\tpianoContainer.style.display = \"none\";\r\n\t\t\t\t\t\t\tpianoContainer.style.minHeight = \"0px\";\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\ttimelineContainer.style.left = \"0px\";\r\n\t\t\t\t\t } else {\r\n\t\t\t\t\t\ttimelineContainer.style.transform = '';\r\n\t\t\t\t\t\tpianoContainer.style.minHeight = \"0px\";\r\n\t\t\t\t\t }\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttimelineWidth = boundingRect.width;\r\n\t\t\t\t\tconst targetSemitoneHeight: number = Math.max(1, timelineWidth / (synth.song.barCount * synth.song.beatsPerBar) / 6.0);\r\n\t\t\t\t\ttimelineHeight = Math.min(boundingRect.height, targetSemitoneHeight * (Config.maxPitch + 1) + 1);\r\n\t\t\t\t\twindowOctaves = Math.max(3, Math.min(Config.pitchOctaves, Math.round(timelineHeight / (12 * targetSemitoneHeight))));\r\n\t\t\t\t\twindowPitchCount = windowOctaves * 12 + 1;\r\n\t\t\t\t\tif (useVertical) {\r\n\t\t\t\t\t\ttimelineContainer.style.transform = `translateX(-${timelineWidth / 2}px) rotate(-90deg) translateX(${timelineWidth / 2}px) translateY(${timelineWidth / 2}px) scaleY(-1)`;\r\n\t\t\t\t\t\tpianoContainer.style.height = \"0\";\r\n\t\t\t\t\t\tpianoContainer.style.minHeight = \"0\";\r\n\t\t\t\t\t\tif (isMobile) {\r\n\t\t\t\t\t\t\tpianoContainer.style.display = \"none\";\r\n\t\t\t\t\t\t\tpianoContainer.style.minHeight = \"0px\";\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\ttimelineContainer.style.left = \"0px\";\r\n\t\t\t\t\t } else {\r\n\t\t\t\t\t\tpianoContainer.style.minHeight = \"0px\";\r\n\t\t\t\t\t\ttimelineContainer.style.transform = '';\r\n\t\t\t\t\t }\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttimelineContainer.style.width = timelineWidth + \"px\";\r\n\t\t\t\ttimelineContainer.style.height = timelineHeight + \"px\";\r\n\t\t\t\ttimeline.style.width = timelineWidth + \"px\";\r\n\t\t\t\ttimeline.style.height = timelineHeight + \"px\";\r\n\t\t\t\t\t\r\n\t\t\t\tconst barWidth: number = timelineWidth / synth.song.barCount;\r\n\t\t\t\tconst partWidth: number = barWidth / (synth.song.beatsPerBar * Config.partsPerBeat);\r\n\t\t\t\r\n\t\t\t\t\tconst wavePitchHeight: number = (timelineHeight-1) / windowPitchCount;\r\n\t\t\t\t\tconst drumPitchHeight: number =  (timelineHeight-1) / Config.drumCount;\r\n\r\n\t\t\t\tfor (let bar: number = 0; bar < synth.song.barCount + 1; bar++) {\r\n\t\t\t\t\tconst color: string = (bar == synth.song.loopStart || bar == synth.song.loopStart + synth.song.loopLength) ? ColorConfig.loopAccent : ColorConfig.uiWidgetBackground;\r\n\t\t\t\t\t\ttimeline.appendChild(rect({x: bar * barWidth - 1, y: 0, width: 2, height: timelineHeight, fill: color}));\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\tfor (let octave: number = 0; octave <= windowOctaves; octave++) {\r\n\t\t\t\t\ttimeline.appendChild(rect({x: 0, y: octave * 12 * wavePitchHeight, width: timelineWidth, height: wavePitchHeight + 1, fill: ColorConfig.tonic, opacity: 0.75}));\r\n\t\t\t\t} \r\n\t\t\t\t// note flash colors\r\n\t\t\tlet noteFlashColor: string = \"#ffffff\";\r\n\t\t\tlet noteFlashColorSecondary: string = \"#ffffff77\";\r\n\t\t\tif (notesFlashWhenPlayed) {\r\n\t\t\t\tnoteFlashColor = ColorConfig.getComputed(\"--note-flash\") !== \"\" ? \"var(--note-flash)\" : \"#ffffff\";\r\n\t\t\t\tnoteFlashColorSecondary = ColorConfig.getComputed(\"--note-flash-secondary\") !== \"\" ? \"var(--note-flash-secondary)\" : \"#ffffff77\";\r\n\t\t\t}\r\n\r\n\t\t\tif (notesFlashWhenPlayed) {\r\n\t\t\t\tnoteFlashElementsPerBar = [];\r\n\t\t\t\tfor (let bar: number = 0; bar < synth.song.barCount; bar++) {\r\n\t\t\t\t\tnoteFlashElementsPerBar.push([]);\r\n\t\t\t\t}\r\n\t\t\t\tcurrentNoteFlashBar = -1;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let channel: number = synth.song.channels.length - 1 - synth.song.modChannelCount; channel >= 0; channel--) {\r\n\r\n\t\t\t\tconst isNoise: boolean = synth.song.getChannelIsNoise(channel);\r\n\t\t\t\tconst pitchHeight: number = isNoise ? drumPitchHeight : wavePitchHeight;\r\n\t\t\t\t\t\r\n\t\t\t\tconst configuredOctaveScroll: number = synth.song.channels[channel].octave;\r\n\t\t\t\tconst newOctaveScroll: number = Math.max(0, Math.min(Config.pitchOctaves - windowOctaves, Math.ceil(configuredOctaveScroll - windowOctaves * 0.5)));\r\n\t\t\t\t\t\r\n\t\t\t\tconst offsetY: number = newOctaveScroll * pitchHeight * 12 + timelineHeight - pitchHeight * 0.5 - 0.5;\r\n\t\t\t\t\r\n\r\n\t\t\t\tfor (let bar: number = 0; bar < synth.song.barCount; bar++) {\r\n\t\t\t\t\tconst pattern: Pattern | null = synth.song.getPattern(channel, bar);\r\n\t\t\t\t\tif (pattern == null) continue;\r\n\t\t\t\t\tconst offsetX: number = bar * barWidth;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tfor (let i: number = 0; i < pattern.notes.length; i++) {\r\n\t\t\t\t\t\tconst note: Note = pattern.notes[i];\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (const pitch of note.pitches) {\r\n\t\t\t\t\t\t\tconst d: string = drawNote(pitch, note.start, note.pins, (pitchHeight + 1) / 2, offsetX, offsetY, partWidth, pitchHeight);\r\n\t\t\t\t\t\t\t\tconst noteElement: SVGPathElement = path({d: d, fill: ColorConfig.getChannelColor(synth.song, channel).primaryChannel});\r\n\t\t\t\t\t\t\tif (isNoise) noteElement.style.opacity = String(0.6);\r\n\t\t\t\t\t\t\ttimeline.appendChild(noteElement);\r\n\r\n\t\t\t\t\t\t\t\tif (notesFlashWhenPlayed) {\r\n\t\t\t\t\t\t\t\tconst dflash: string = drawNote(pitch, note.start, note.pins, (pitchHeight + 1) / 2, offsetX, offsetY, partWidth, pitchHeight);\r\n\t\t\t\t\t\t\t\t//const noteFlashColorSecondary = ColorConfig.getComputed(\"--note-flash-secondary\") !== \"\" ? \"var(--note-flash-secondary)\" : \"#ffffff77\";\r\n\t\t\t\t\t\t\t\t//const noteFlashColor = ColorConfig.getComputed(\"--note-flash\") !== \"\" ? \"var(--note-flash)\" : \"#ffffff77\";\r\n\t\t\t\t\t\t\t\tconst noteFlashElement: SVGPathElement = path({d: dflash, fill: (isNoise ? noteFlashColorSecondary : noteFlashColor)});\r\n\t\t\t\t\t\t\t\tnoteFlashElement.style.opacity = \"0\";\r\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-start', String(note.start));\r\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-end', String(\r\n\t\t\t\t\t\t\t\t\tnote.end\r\n\t\t\t\t\t\t\t\t\t));\r\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-pitch', String(pitch));\r\n\t                           \tnoteFlashElement.setAttribute('note-noise', String(isNoise));\r\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-bar', String(bar));\r\n\t\t\t\t\t\t\t\tnoteFlashElement.setAttribute('note-color', String(noteElement.getAttribute(\"fill\")));\r\n\t\t\t\t\t\t\t\ttimeline.appendChild(noteFlashElement);\r\n\t\t\t\t\t\t\t\tconst noteFlashElementsForThisBar: SVGPathElement[] = noteFlashElementsPerBar[bar];\r\n\t\t\t\t\t\t\t\tnoteFlashElementsForThisBar.push(noteFlashElement);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t}\r\n\t\r\n\t\trenderPlayhead();\r\n\t\tconst pianoContainerBoundingRect = pianoContainer.getBoundingClientRect();\r\n\t\trenderPiano(piano, timelineHeight, pianoContainerBoundingRect.height, windowOctaves, synth.song);\r\n\t}\r\n\t\r\n\tfunction drawNote(pitch: number, start: number, pins: NotePin[], radius: number, offsetX: number, offsetY: number, partWidth: number, pitchHeight: number): string {\r\n\t\tlet d: string = `M ${offsetX + partWidth * (start + pins[0].time)} ${offsetY - pitch * pitchHeight + radius * (pins[0].size / Config.noteSizeMax)} `; \r\n\t\tfor (let i: number = 0; i < pins.length; i++) {\r\n\t\t\tconst pin: NotePin = pins[i];\r\n\t\t\t\tconst x:   number = offsetX + partWidth * (start + pin.time);\r\n\t\t\tconst y: number = offsetY - pitchHeight * (pitch + pin.interval);\r\n\t\t\tconst expression: number = pin.size / Config.noteSizeMax;\r\n\t\t\td += `L ${x} ${y - radius * expression} `;\r\n\t\t}\r\n\t\tfor (let i: number = pins.length - 1; i >= 0; i--) {\r\n\t\t\tconst pin: NotePin = pins[i];\r\n\t\t\t\tconst x:   number = offsetX + partWidth * (start + pin.time);\r\n\t\t\tconst y: number = offsetY - pitchHeight * (pitch + pin.interval);\r\n\t\t\tconst expression: number = pin.size / Config.noteSizeMax;\r\n\t\t\td += `L ${x} ${y + radius * expression} `;\r\n\t\t}\r\n\t\treturn d;\r\n\t}\r\n\t\r\n\tfunction renderPiano(element: SVGSVGElement, width: number, height: number, octaves: number, song: Song): void {\r\n\t\tif (song == null) return;\r\n\t\telement.innerHTML = \"\";\r\n\t\telement.style.width = width + \"px\";\r\n\t\telement.style.height = height + \"px\";\r\n\t\tconst kc = octaves * 12 + 1;\r\n\t\tconst kw = width / kc;\r\n\t\tconst kh = height;\r\n\t\tfor (let i = 0; i < kc; i++) {\r\n\t\t\tconst pitchNameIndex = (i + Config.keys[song.key].basePitch) % Config.pitchesPerOctave;\r\n\t\t\tconst isWhiteKey = Config.keys[pitchNameIndex].isWhiteKey;\r\n\t\t\tconst color = isWhiteKey ? \"white\" : \"black\";\r\n\t\t\telement.appendChild(rect({\r\n\t\t\t\tx: i / kc * width,\r\n\t\t\t\ty: 0,\r\n\t\t\t\twidth: kw,\r\n\t\t\t\theight: kh,\r\n\t\t\t\tstroke: \"rgba(0, 0, 0, 0.5)\",\r\n\t\t\t\t\"stroke-width\": 2,\r\n\t\t\t\t\"original-fill\": color,\r\n\t\t\t\tfill: color,\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction renderPlayButton(): void {\r\n\t\tif (synth.playing) {\r\n\t\t\tplayButton.classList.remove(\"playButton\");\r\n\t\t\tplayButton.classList.add(\"pauseButton\");\r\n\t\t\tplayButton.title = \"Pause (Space)\";\r\n\t\t\tplayButton.textContent = \"Pause\";\r\n\t\t} else {\r\n\t\t\tplayButton.classList.remove(\"pauseButton\");\r\n\t\t\tplayButton.classList.add(\"playButton\");\r\n\t\t\tplayButton.title = \"Play (Space)\";\r\n\t\t\tplayButton.textContent = \"Play\";\r\n\t\t}\r\n\t\tpauseButtonDisplayed = synth.playing;\r\n\t}\r\n\t\r\n\tfunction renderLoopIcon(): void {\r\n\t\tloopIcon.setAttribute(\"fill\", (synth.loopRepeatCount == -1) ? ColorConfig.linkAccent : ColorConfig.uiWidgetBackground);\r\n\t}\r\n\t\r\n\tfunction renderZoomIcon(): void {\r\n\t\tzoomIcon.style.color = zoomEnabled ? ColorConfig.linkAccent : ColorConfig.uiWidgetBackground;\r\n\t}\r\n\t\r\n\tfunction onKeyPressed(event: KeyboardEvent): void {\r\n\t\tswitch (event.keyCode) {\r\n\t\t\tcase 70: // first bar\r\n\t\t\t\tsynth.playhead = 0;\r\n\t\t\t\tsynth.computeLatestModValues();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 32: // space\r\n\t\t\t\tonTogglePlay();\r\n\t\t\t\tsynth.computeLatestModValues();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 219: // left brace\r\n\t\t\t\tsynth.goToPrevBar();\r\n\t\t\t\tsynth.computeLatestModValues();\r\n\t\t\t\trenderPlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 221: // right brace\r\n\t\t\t\tsynth.goToNextBar();\r\n\t\t\t\tsynth.computeLatestModValues();\r\n\t\t\t\trenderPlayhead();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t\tbreak;\r\n\t\t\t\tcase 80: // p\r\n\t\t\tif (event.shiftKey) {\r\n\t\t\t\thashUpdatedExternally();\r\n\t\t\t\tlocation.href =\"../#\" + synth.song!.toBase64String();\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t}\r\n\t\t\tbreak;\t\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction onCopyClicked(): void {\r\n\t\t// Set as any to allow compilation without clipboard types (since, uh, I didn't write this bit and don't know the proper types library) -jummbus\r\n\t\tlet nav: any;\r\n\t\tnav = navigator;\r\n\t\r\n\t\tif (nav.clipboard && nav.clipboard.writeText) {\r\n\t\t\tnav.clipboard.writeText(location.href).catch(() => {\r\n\t\t\t\twindow.prompt(\"Copy to clipboard:\", location.href);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst textField: HTMLTextAreaElement = document.createElement(\"textarea\");\r\n\t\ttextField.textContent = location.href;\r\n\t\tdocument.body.appendChild(textField);\r\n\t\ttextField.select();\r\n\t\tconst succeeded: boolean = document.execCommand(\"copy\");\r\n\t\ttextField.remove();\r\n\t\tif (!succeeded) window.prompt(\"Copy this:\", location.href);\r\n\t}\r\n\t\r\n\tfunction onShareClicked(): void {\r\n\t\t(<any>navigator).share({ url: location.href });\r\n\t}\r\n\t\r\n\t\tif ( top !== self ) {\r\n\t\t// In an iframe.\r\n\t\tcopyLink.style.display = \"none\";\r\n\t\tshareLink.style.display = \"none\";\r\n\t} else {\r\n\t\t// Fullscreen.\r\n\t\tfullscreenLink.style.display = \"none\";\r\n\t\tif (!(\"share\" in navigator)) shareLink.style.display = \"none\";\r\n\t}\r\n\t\r\n\tif (getLocalStorage(\"volume\") != null) {\r\n\t\tvolumeSlider.value = getLocalStorage(\"volume\")!;\r\n\t}\r\n\tsetSynthVolume();\r\n\t\r\n\twindow.addEventListener(\"resize\", onWindowResize);\r\n\twindow.addEventListener(\"keydown\", onKeyPressed);\r\n\t\r\n\ttimeline.addEventListener(\"mousedown\", onTimelineMouseDown);\r\n\twindow.addEventListener(\"mousemove\", onTimelineMouseMove);\r\n\twindow.addEventListener(\"mouseup\", onTimelineCursorUp);\r\n\ttimeline.addEventListener(\"touchstart\", onTimelineTouchDown);\r\n\ttimeline.addEventListener(\"touchmove\", onTimelineTouchMove);\r\n\ttimeline.addEventListener(\"touchend\", onTimelineCursorUp);\r\n\ttimeline.addEventListener(\"touchcancel\", onTimelineCursorUp);\r\n\r\n\tdocument.addEventListener('visibilitychange', e=>{\r\n\t\tif (document.visibilityState === 'visible') {\r\n\t\t\tif (getLocalStorage(\"spLayout\") != (<any> _form.elements)[\"spLayout\"].value) {\r\n\t\t\t\t(<any> _form.elements)[\"spLayout\"].value = getLocalStorage(\"spLayout\");\r\n\t\t\t\tSongPlayerLayout.setLayout((<any> _form.elements)[\"spLayout\"].value);\r\n\t\t\t\trenderTimeline();\r\n\t\t\t}\r\n\t   } else {\r\n\t   }  \r\n   })\r\n\r\n\tlayoutStuffs.addEventListener(\"click\", onLayoutButton);\r\n\tclosePrompt.addEventListener(\"click\", onExitButton);\r\n\t_okayButton.addEventListener(\"click\", onLayoutPicked);\r\n\tplayButton.addEventListener(\"click\", onTogglePlay);\r\n\tloopButton.addEventListener(\"click\", onToggleLoop);\r\n\tvolumeSlider.addEventListener(\"input\", onVolumeChange);\r\n\tzoomButton.addEventListener(\"click\", onToggleZoom);\r\n\tcopyLink.addEventListener(\"click\", onCopyClicked);\r\n\tshareLink.addEventListener(\"click\", onShareClicked);\r\n\twindow.addEventListener(\"hashchange\", hashUpdatedExternally);\r\n\tshortenSongLink.addEventListener(\"click\", shortenSongPlayerUrl);\r\n\t\r\n\thashUpdatedExternally();\r\n\trenderLoopIcon();\r\n\trenderZoomIcon();\r\n\trenderPlayButton();\r\n\r\n\r\n\r\n\t// When compiling synth.ts as a standalone module named \"beepbox\", expose these classes as members to JavaScript:\r\n\t\texport {Dictionary, DictionaryArray, EnvelopeType, InstrumentType, Transition, Chord, Envelope, Config, NotePin, Note, Pattern, Instrument, Channel, Synth};","import { ColorConfig } from \"../editor/ColorConfig\";\nimport { events } from \"./Events\";\n\nexport class oscilascopeCanvas {\n    public _EventUpdateCanvas:Function;\n\n    constructor(public readonly canvas: HTMLCanvasElement, readonly scale: number = 1) {\n        this._EventUpdateCanvas = function(directlinkL: Float32Array, directlinkR ?: Float32Array): void {\n            if(directlinkR) {\n                var ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n\n                ctx.fillStyle = ColorConfig.getComputed(\"--editor-background\");\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-L\") !== \"\" ? ColorConfig.getComputed(\"--oscilloscope-line-L\") : ColorConfig.getComputed(\"--primary-text\");\n                for (let i: number = directlinkL.length - 1; i >= directlinkL.length - 1 - (canvas.width/scale); i--) {\n                    let x = i - (directlinkL.length - 1) + (canvas.width/scale);\n                    let yl = (directlinkL[i] * (canvas.height/scale / 2) + (canvas.height/scale / 2));\n\n                    ctx.fillRect((x - 1)*scale, (yl - 1)*scale, 1*scale, 1.5*scale);\n                    if (x == 0) break;\n                }\n                ctx.fillStyle = ColorConfig.getComputed(\"--oscilloscope-line-R\") !== \"\" ? ColorConfig.getComputed(\"--oscilloscope-line-R\") : ColorConfig.getComputed(\"--text-selection\"); //less ctx style calls = less expensive??? also avoiding uncached colors\n                for (let i: number = directlinkR.length - 1; i >= directlinkR.length - 1 - (canvas.width/scale); i--) {\n                    let x = i - (directlinkR.length - 1) + (canvas.width/scale);\n                    let yr = (directlinkR[i] * (canvas.height/scale / 2) + (canvas.height/scale / 2));\n                    \n                    ctx.fillRect((x - 1)*scale, (yr - 1)*scale, 1*scale, 1.5*scale);\n                    if (x == 0) break;\n                }\n            }\n        };\n        events.listen(\"oscillascopeUpdate\", this._EventUpdateCanvas);\n    }\n\n    \n}\n"],"mappings":"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AO,CAAEjC,eAAkB,UAAWiC,SAAY,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEjC,eAAkB,UAAWiC,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEjC,eAAkB,UAAWiC,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEjC,eAAkB,UAAWiC,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEjC,eAAkB,UAAWiC,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEjC,eAAkB,UAAWiC,SAAY,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,KAAO,CAAEjC,eAAkB,UAAWiC,SAAY,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GA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IAAK,IAAItlD,EAAY,EAAGA,EAAIimD,EAAkB1tD,OAAQyH,IAAK,CACvD,MAAM+sC,EAAwBkZ,EAAkBjmD,GAChD,GAAiC,SAA7B+sC,EAAuB,KAGvB,SAEJ,GAAgC,MAA5BA,EAAuB,KAGvB,SAEJ,MAAMmZ,EAAmBnZ,EAAuB,KAE1CoZ,EAAkB,CACpB,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAGEC,EAAqB,CACvB,oBACA,qBACA,sBACA,mBACA,yBACA,uBACA,yBACA,4BACA,gCACA,qBACA,2BACA,uBACA,qBACA,+BACA,qBACA,6BACA,8BACA,0BACA,gCACA,+BACA,oBACA,6BACA,4BACA,6BACA,2BACA,yBACA,yBACA,2BACA,uBACA,yBACA,uBACA,yBACA,2BACA,6BACA,6BACA,2BACA,0BACA,uCACA,6BACA,gCACA,+BACA,0BACA,qBACA,0BACA,yBACA,wBACA,0BACA,mCACA,wCACA,kCACA,wCACA,kCACA,2BACA,4BACA,4BACA,4BACA,2BACA,4BACA,wCACA,yCACA,+BACA,8BACA,qCACA,0CACA,mCACA,uCACA,oCACA,4BACA,kCACA,4BAGEC,EAAyB,CAC3B,OACA,QACA,SACA,MACA,YACA,UACA,YACA,eACA,mBACA,QACA,cACA,UACA,QACA,kBACA,QACA,gBACA,iBACA,aACA,mBACA,kBACA,OACA,gBACA,eACA,gBACA,cACA,YACA,YAC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"}